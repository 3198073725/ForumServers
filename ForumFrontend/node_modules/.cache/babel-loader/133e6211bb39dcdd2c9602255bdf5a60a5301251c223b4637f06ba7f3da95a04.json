{"ast":null,"code":"import \"H:\\\\ForumServers\\\\ForumFrontend\\\\node_modules\\\\core-js\\\\modules\\\\es.array.iterator.js\";\nimport \"H:\\\\ForumServers\\\\ForumFrontend\\\\node_modules\\\\core-js\\\\modules\\\\es.promise.js\";\nimport \"H:\\\\ForumServers\\\\ForumFrontend\\\\node_modules\\\\core-js\\\\modules\\\\es.object.assign.js\";\nimport \"H:\\\\ForumServers\\\\ForumFrontend\\\\node_modules\\\\core-js\\\\modules\\\\es.promise.finally.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nimport ElementPlus, { ElMessage } from 'element-plus';\nimport 'element-plus/dist/index.css';\nimport axios from 'axios';\n\n// 配置axios基础URL\naxios.defaults.baseURL = 'http://localhost:8000/api/v1';\n\n// 添加请求拦截器，在请求头中加token\naxios.interceptors.request.use(function (config) {\n  var token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = \"Bearer \".concat(token);\n  }\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\n\n// 添加响应拦截器\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  if (error.response) {\n    if (error.response.status === 401) {\n      // 未授权，清除token并跳转到登录页\n      localStorage.removeItem('token');\n      router.push('/login');\n    }\n  }\n  return Promise.reject(error);\n});\n\n// 重写ElMessage的success方法，拦截“操作成功”消息\nvar originalSuccess = ElMessage.success;\nElMessage.success = function (options) {\n  // 如果是字符串参数\n  if (typeof options === 'string') {\n    if (options === '操作成功') {\n      console.log('全局拦截“操作成功”消息，不显示');\n      return;\n    }\n  }\n  // 如果是对象参数\n  else if (options && options.message === '操作成功') {\n    console.log('全局拦截“操作成功”消息，不显示');\n    return;\n  }\n\n  // 如果当前路径是发帖页面，则不显示成功消息\n  var currentPath = window.location.pathname;\n  if (currentPath.includes('/post/create') || currentPath.includes('/post/edit')) {\n    console.log('当前路径是发帖页面，不显示成功消息');\n    return;\n  }\n\n  // 其他情况下正常显示\n  return originalSuccess(options);\n};\nvar app = createApp(App);\napp.use(store);\napp.use(router);\napp.use(ElementPlus);\n\n// 全局挂载axios\napp.config.globalProperties.$axios = axios;\napp.mount('#app');","map":{"version":3,"names":["createApp","App","router","store","ElementPlus","ElMessage","axios","defaults","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","concat","error","Promise","reject","response","status","removeItem","push","originalSuccess","success","options","console","log","message","currentPath","window","location","pathname","includes","app","globalProperties","$axios","mount"],"sources":["H:/ForumServers/ForumFrontend/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport ElementPlus, { ElMessage } from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport axios from 'axios'\n\n// 配置axios基础URL\naxios.defaults.baseURL = 'http://localhost:8000/api/v1'\n\n// 添加请求拦截器，在请求头中加token\naxios.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`\n    }\n    return config\n  },\n  error => {\n    return Promise.reject(error)\n  }\n)\n\n// 添加响应拦截器\naxios.interceptors.response.use(\n  response => {\n    return response\n  },\n  error => {\n    if (error.response) {\n      if (error.response.status === 401) {\n        // 未授权，清除token并跳转到登录页\n        localStorage.removeItem('token')\n        router.push('/login')\n      }\n    }\n    return Promise.reject(error)\n  }\n)\n\n// 重写ElMessage的success方法，拦截“操作成功”消息\nconst originalSuccess = ElMessage.success\nElMessage.success = function(options) {\n  // 如果是字符串参数\n  if (typeof options === 'string') {\n    if (options === '操作成功') {\n      console.log('全局拦截“操作成功”消息，不显示')\n      return\n    }\n  }\n  // 如果是对象参数\n  else if (options && options.message === '操作成功') {\n    console.log('全局拦截“操作成功”消息，不显示')\n    return\n  }\n\n  // 如果当前路径是发帖页面，则不显示成功消息\n  const currentPath = window.location.pathname\n  if (currentPath.includes('/post/create') || currentPath.includes('/post/edit')) {\n    console.log('当前路径是发帖页面，不显示成功消息')\n    return\n  }\n\n  // 其他情况下正常显示\n  return originalSuccess(options)\n}\n\nconst app = createApp(App)\n\napp.use(store)\napp.use(router)\napp.use(ElementPlus)\n\n// 全局挂载axios\napp.config.globalProperties.$axios = axios\n\napp.mount('#app')\n"],"mappings":";;;;;;;;AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,WAAW,IAAIC,SAAS,QAAQ,cAAc;AACrD,OAAO,6BAA6B;AACpC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACAA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,8BAA8B;;AAEvD;AACAF,KAAK,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAC5B,UAAAC,MAAM,EAAI;EACR,IAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,aAAAC,MAAA,CAAaL,KAAK,CAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACD,UAAAO,KAAK,EAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAb,KAAK,CAACG,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC7B,UAAAW,QAAQ,EAAI;EACV,OAAOA,QAAQ;AACjB,CAAC,EACD,UAAAH,KAAK,EAAI;EACP,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAClB,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACjC;MACAT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;MAChCtB,MAAM,CAACuB,IAAI,CAAC,QAAQ,CAAC;IACvB;EACF;EACA,OAAOL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,IAAMO,eAAe,GAAGrB,SAAS,CAACsB,OAAO;AACzCtB,SAAS,CAACsB,OAAO,GAAG,UAASC,OAAO,EAAE;EACpC;EACA,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;IAC/B,IAAIA,OAAO,KAAK,MAAM,EAAE;MACtBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/B;IACF;EACF;EACA;EAAA,KACK,IAAIF,OAAO,IAAIA,OAAO,CAACG,OAAO,KAAK,MAAM,EAAE;IAC9CF,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/B;EACF;;EAEA;EACA,IAAME,WAAW,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ;EAC5C,IAAIH,WAAW,CAACI,QAAQ,CAAC,cAAc,CAAC,IAAIJ,WAAW,CAACI,QAAQ,CAAC,YAAY,CAAC,EAAE;IAC9EP,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC;EACF;;EAEA;EACA,OAAOJ,eAAe,CAACE,OAAO,CAAC;AACjC,CAAC;AAED,IAAMS,GAAG,GAAGrC,SAAS,CAACC,GAAG,CAAC;AAE1BoC,GAAG,CAAC1B,GAAG,CAACR,KAAK,CAAC;AACdkC,GAAG,CAAC1B,GAAG,CAACT,MAAM,CAAC;AACfmC,GAAG,CAAC1B,GAAG,CAACP,WAAW,CAAC;;AAEpB;AACAiC,GAAG,CAACzB,MAAM,CAAC0B,gBAAgB,CAACC,MAAM,GAAGjC,KAAK;AAE1C+B,GAAG,CAACG,KAAK,CAAC,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}