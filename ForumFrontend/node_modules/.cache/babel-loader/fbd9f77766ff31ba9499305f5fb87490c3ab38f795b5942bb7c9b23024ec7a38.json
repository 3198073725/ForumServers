{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"notification-bell\"\n};\nvar _hoisted_2 = {\n  \"class\": \"notification-header\"\n};\nvar _hoisted_3 = {\n  key: 0,\n  \"class\": \"notification-loading\"\n};\nvar _hoisted_4 = {\n  key: 0,\n  \"class\": \"no-notification\"\n};\nvar _hoisted_5 = {\n  \"class\": \"notification-item\"\n};\nvar _hoisted_6 = {\n  \"class\": \"notification-title\"\n};\nvar _hoisted_7 = {\n  key: 0,\n  \"class\": \"unread-dot\"\n};\nvar _hoisted_8 = {\n  \"class\": \"notification-content\"\n};\nvar _hoisted_9 = {\n  \"class\": \"notification-time\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_divider = _resolveComponent(\"el-divider\");\n  var _component_Loading = _resolveComponent(\"Loading\");\n  var _component_el_icon = _resolveComponent(\"el-icon\");\n  var _component_el_dropdown_item = _resolveComponent(\"el-dropdown-item\");\n  var _component_el_dropdown_menu = _resolveComponent(\"el-dropdown-menu\");\n  var _component_el_dropdown = _resolveComponent(\"el-dropdown\");\n  var _component_el_badge = _resolveComponent(\"el-badge\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_badge, {\n    value: $setup.unreadCount,\n    max: 99,\n    hidden: $setup.unreadCount <= 0,\n    \"class\": \"notification-badge\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_dropdown, {\n        trigger: \"click\",\n        onCommand: $setup.handleCommand\n      }, {\n        dropdown: _withCtx(function () {\n          return [_createVNode(_component_el_dropdown_menu, {\n            \"class\": \"notification-dropdown\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createElementVNode(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"span\", null, \"消息通知\", -1 /* HOISTED */)), $setup.hasUnread ? (_openBlock(), _createBlock(_component_el_button, {\n                key: 0,\n                type: \"text\",\n                onClick: $setup.markAllAsRead\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[0] || (_cache[0] = [_createTextVNode(\"全部已读\")]);\n                }),\n                _: 1 /* STABLE */,\n                __: [0]\n              }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]), _createVNode(_component_el_divider), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_icon, {\n                \"class\": \"is-loading\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_Loading)];\n                }),\n                _: 1 /* STABLE */\n              }), _cache[2] || (_cache[2] = _createElementVNode(\"span\", null, \"加载中...\", -1 /* HOISTED */))])) : (_openBlock(), _createElementBlock(_Fragment, {\n                key: 1\n              }, [$setup.notifications.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \" 暂无通知 \")) : (_openBlock(), _createElementBlock(_Fragment, {\n                key: 1\n              }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.notifications.slice(0, 5), function (notification) {\n                return _openBlock(), _createBlock(_component_el_dropdown_item, {\n                  key: notification.id,\n                  \"class\": _normalizeClass({\n                    'notification-unread': !notification.is_read\n                  }),\n                  command: {\n                    type: 'view',\n                    id: notification.id\n                  }\n                }, {\n                  \"default\": _withCtx(function () {\n                    return [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createTextVNode(_toDisplayString(notification.title) + \" \", 1 /* TEXT */), !notification.is_read ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_8, _toDisplayString(notification.content), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_9, _toDisplayString($setup.formatTime(notification.created_at)), 1 /* TEXT */)])];\n                  }),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"class\", \"command\"]);\n              }), 128 /* KEYED_FRAGMENT */)), $setup.notifications.length > 5 ? (_openBlock(), _createBlock(_component_el_divider, {\n                key: 0\n              })) : _createCommentVNode(\"v-if\", true), $setup.notifications.length > 5 ? (_openBlock(), _createBlock(_component_el_dropdown_item, {\n                key: 1,\n                command: \"viewAll\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[3] || (_cache[3] = [_createElementVNode(\"div\", {\n                    \"class\": \"view-all\"\n                  }, \"查看全部\", -1 /* HOISTED */)]);\n                }),\n                _: 1 /* STABLE */,\n                __: [3]\n              })) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */))], 64 /* STABLE_FRAGMENT */))];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_button, {\n            \"class\": \"bell-button\",\n            icon: $setup.Bell,\n            circle: \"\"\n          }, null, 8 /* PROPS */, [\"icon\"])];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onCommand\"])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"value\", \"hidden\"])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createVNode","_component_el_badge","value","$setup","unreadCount","max","hidden","_withCtx","_component_el_dropdown","trigger","onCommand","handleCommand","dropdown","_component_el_dropdown_menu","_createElementVNode","_hoisted_2","hasUnread","_createBlock","_component_el_button","type","onClick","markAllAsRead","_cache","_createTextVNode","_","__","_createCommentVNode","_component_el_divider","loading","_hoisted_3","_component_el_icon","_component_Loading","_Fragment","notifications","length","_hoisted_4","_renderList","slice","notification","_component_el_dropdown_item","id","_normalizeClass","is_read","command","_hoisted_5","_hoisted_6","_toDisplayString","title","_hoisted_7","_hoisted_8","content","_hoisted_9","formatTime","created_at","icon","Bell","circle"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\components\\NotificationBell.vue"],"sourcesContent":["<template>\r\n  <div class=\"notification-bell\">\r\n    <el-badge :value=\"unreadCount\" :max=\"99\" :hidden=\"unreadCount <= 0\" class=\"notification-badge\">\r\n      <el-dropdown trigger=\"click\" @command=\"handleCommand\">\r\n        <el-button class=\"bell-button\" :icon=\"Bell\" circle />\r\n        <template #dropdown>\r\n          <el-dropdown-menu class=\"notification-dropdown\">\r\n            <div class=\"notification-header\">\r\n              <span>消息通知</span>\r\n              <el-button v-if=\"hasUnread\" type=\"text\" @click=\"markAllAsRead\">全部已读</el-button>\r\n            </div>\r\n            <el-divider />\r\n            <div v-if=\"loading\" class=\"notification-loading\">\r\n              <el-icon class=\"is-loading\"><Loading /></el-icon>\r\n              <span>加载中...</span>\r\n            </div>\r\n            <template v-else>\r\n              <div v-if=\"notifications.length === 0\" class=\"no-notification\">\r\n                暂无通知\r\n              </div>\r\n              <template v-else>\r\n                <el-dropdown-item \r\n                  v-for=\"notification in notifications.slice(0, 5)\" \r\n                  :key=\"notification.id\"\r\n                  :class=\"{ 'notification-unread': !notification.is_read }\"\r\n                  :command=\"{ type: 'view', id: notification.id }\"\r\n                >\r\n                  <div class=\"notification-item\">\r\n                    <div class=\"notification-title\">\r\n                      {{ notification.title }}\r\n                      <span v-if=\"!notification.is_read\" class=\"unread-dot\"></span>\r\n                    </div>\r\n                    <div class=\"notification-content\">{{ notification.content }}</div>\r\n                    <div class=\"notification-time\">{{ formatTime(notification.created_at) }}</div>\r\n                  </div>\r\n                </el-dropdown-item>\r\n                <el-divider v-if=\"notifications.length > 5\" />\r\n                <el-dropdown-item v-if=\"notifications.length > 5\" command=\"viewAll\">\r\n                  <div class=\"view-all\">查看全部</div>\r\n                </el-dropdown-item>\r\n              </template>\r\n            </template>\r\n          </el-dropdown-menu>\r\n        </template>\r\n      </el-dropdown>\r\n    </el-badge>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { computed, onMounted, ref } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\nimport { Bell, Loading } from '@element-plus/icons-vue'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'NotificationBell',\r\n  components: {\r\n    Loading\r\n  },\r\n  setup() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const loading = ref(false)\r\n    \r\n    // 从Vuex获取通知数据，添加初始化空数组保证安全\r\n    const notifications = computed(() => store.state.notifications?.notifications || [])\r\n    const unreadCount = computed(() => store.state.notifications?.unreadCount || 0)\r\n    const hasUnread = computed(() => unreadCount.value > 0)\r\n    \r\n    // 初始化时获取通知\r\n    onMounted(async () => {\r\n      if (store.getters.isLoggedIn) {\r\n        loading.value = true\r\n        try {\r\n          // 检查store中是否有notifications模块\r\n          if (store.state.notifications) {\r\n            await store.dispatch('notifications/fetchNotifications')\r\n          } else {\r\n            console.warn('通知模块未注册到Vuex store中')\r\n          }\r\n        } catch (error) {\r\n          console.error('获取通知失败:', error)\r\n          // 只在非网络错误时显示错误消息\r\n          if (error.message !== 'Network Error') {\r\n            ElMessage.error('获取通知失败')\r\n          }\r\n        } finally {\r\n          loading.value = false\r\n        }\r\n      }\r\n    })\r\n    \r\n    // 处理下拉菜单命令\r\n    const handleCommand = (command) => {\r\n      if (command === 'viewAll') {\r\n        router.push('/notifications')\r\n      } else if (command.type === 'view') {\r\n        // 标记为已读\r\n        store.dispatch('notifications/markAsRead', command.id)\r\n        \r\n        // 根据通知类型跳转到不同页面\r\n        const notification = notifications.value.find(n => n.id === command.id)\r\n        if (notification) {\r\n          navigateByNotification(notification)\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 根据通知类型导航\r\n    const navigateByNotification = (notification) => {\r\n      if (notification.target_type === 'post' && notification.target_id) {\r\n        router.push(`/posts/${notification.target_id}`)\r\n      } else if (notification.target_type === 'comment' && notification.target_id) {\r\n        // 评论通知可能需要先获取评论所属的帖子ID\r\n        router.push(`/comments/${notification.target_id}`)\r\n      } else {\r\n        // 默认跳转到通知列表页\r\n        router.push('/notifications')\r\n      }\r\n    }\r\n    \r\n    // 标记所有通知为已读\r\n    const markAllAsRead = (event) => {\r\n      event.stopPropagation()\r\n      store.dispatch('notifications/markAllAsRead')\r\n    }\r\n    \r\n    // 格式化时间\r\n    const formatTime = (timestamp) => {\r\n      const date = new Date(timestamp)\r\n      const now = new Date()\r\n      const diff = now - date\r\n      \r\n      // 小于1分钟\r\n      if (diff < 60000) {\r\n        return '刚刚'\r\n      }\r\n      // 小于1小时\r\n      else if (diff < 3600000) {\r\n        return `${Math.floor(diff / 60000)}分钟前`\r\n      }\r\n      // 小于24小时\r\n      else if (diff < 86400000) {\r\n        return `${Math.floor(diff / 3600000)}小时前`\r\n      }\r\n      // 小于30天\r\n      else if (diff < 2592000000) {\r\n        return `${Math.floor(diff / 86400000)}天前`\r\n      }\r\n      // 其他情况显示完整日期\r\n      else {\r\n        return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`\r\n      }\r\n    }\r\n    \r\n    return {\r\n      Bell,\r\n      Loading,\r\n      loading,\r\n      notifications,\r\n      unreadCount,\r\n      hasUnread,\r\n      handleCommand,\r\n      markAllAsRead,\r\n      formatTime\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.notification-bell {\r\n  display: inline-block;\r\n}\r\n\r\n.notification-badge {\r\n  margin-right: 10px;\r\n}\r\n\r\n.bell-button {\r\n  font-size: 18px;\r\n  padding: 8px;\r\n}\r\n\r\n.notification-dropdown {\r\n  width: 320px;\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.notification-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 15px;\r\n  font-weight: bold;\r\n}\r\n\r\n.notification-loading {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100px;\r\n}\r\n\r\n.notification-loading span {\r\n  margin-left: 10px;\r\n}\r\n\r\n.no-notification {\r\n  text-align: center;\r\n  color: #909399;\r\n  padding: 20px 0;\r\n}\r\n\r\n.notification-item {\r\n  padding: 5px 0;\r\n}\r\n\r\n.notification-title {\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.notification-content {\r\n  color: #606266;\r\n  font-size: 13px;\r\n  margin-bottom: 5px;\r\n  white-space: normal;\r\n  word-break: break-all;\r\n  line-height: 1.4;\r\n}\r\n\r\n.notification-time {\r\n  color: #909399;\r\n  font-size: 12px;\r\n  text-align: right;\r\n}\r\n\r\n.notification-unread {\r\n  background-color: #f0f9ff;\r\n}\r\n\r\n.unread-dot {\r\n  width: 8px;\r\n  height: 8px;\r\n  border-radius: 50%;\r\n  background-color: #409EFF;\r\n  display: inline-block;\r\n}\r\n\r\n.view-all {\r\n  text-align: center;\r\n  color: #409EFF;\r\n}\r\n</style> "],"mappings":";;;EACO,SAAM;AAAmB;;EAMf,SAAM;AAAqB;;EAP5CA,GAAA;EAYgC,SAAM;;;EAZtCA,GAAA;EAiBqD,SAAM;;;EAUpC,SAAM;AAAmB;;EACvB,SAAM;AAAoB;;EA5BnDA,GAAA;EA8ByD,SAAM;;;EAEtC,SAAM;AAAsB;;EAC5B,SAAM;AAAmB;;;;;;;;;;uBAhChDC,mBAAA,CA6CM,OA7CNC,UA6CM,GA5CJC,YAAA,CA2CWC,mBAAA;IA3CAC,KAAK,EAAEC,MAAA,CAAAC,WAAW;IAAGC,GAAG,EAAE,EAAE;IAAGC,MAAM,EAAEH,MAAA,CAAAC,WAAW;IAAO,SAAM;;IAF9E,WAAAG,QAAA,CAGM;MAAA,OAyCc,CAzCdP,YAAA,CAyCcQ,sBAAA;QAzCDC,OAAO,EAAC,OAAO;QAAEC,SAAO,EAAEP,MAAA,CAAAQ;;QAE1BC,QAAQ,EAAAL,QAAA,CACjB;UAAA,OAoCmB,CApCnBP,YAAA,CAoCmBa,2BAAA;YApCD,SAAM;UAAuB;YANzD,WAAAN,QAAA,CAOY;cAAA,OAGM,CAHNO,mBAAA,CAGM,OAHNC,UAGM,G,0BAFJD,mBAAA,CAAiB,cAAX,MAAI,sBACOX,MAAA,CAAAa,SAAS,I,cAA1BC,YAAA,CAA+EC,oBAAA;gBAT7FrB,GAAA;gBAS0CsB,IAAI,EAAC,MAAM;gBAAEC,OAAK,EAAEjB,MAAA,CAAAkB;;gBAT9D,WAAAd,QAAA,CAS6E;kBAAA,OAAIe,MAAA,QAAAA,MAAA,OATjFC,gBAAA,CAS6E,MAAI,E;;gBATjFC,CAAA;gBAAAC,EAAA;gDAAAC,mBAAA,e,GAWY1B,YAAA,CAAc2B,qBAAA,GACHxB,MAAA,CAAAyB,OAAO,I,cAAlB9B,mBAAA,CAGM,OAHN+B,UAGM,GAFJ7B,YAAA,CAAiD8B,kBAAA;gBAAxC,SAAM;cAAY;gBAbzC,WAAAvB,QAAA,CAa0C;kBAAA,OAAW,CAAXP,YAAA,CAAW+B,kBAAA,E;;gBAbrDP,CAAA;4CAccV,mBAAA,CAAmB,cAAb,QAAM,qB,oBAEdhB,mBAAA,CAyBWkC,SAAA;gBAzCvBnC,GAAA;cAAA,IAiByBM,MAAA,CAAA8B,aAAa,CAACC,MAAM,U,cAA/BpC,mBAAA,CAEM,OAFNqC,UAEM,EAFyD,QAE/D,M,cACArC,mBAAA,CAoBWkC,SAAA;gBAxCzBnC,GAAA;cAAA,K,kBAqBgBC,mBAAA,CAcmBkC,SAAA,QAnCnCI,WAAA,CAsByCjC,MAAA,CAAA8B,aAAa,CAACI,KAAK,QAtB5D,UAsByBC,YAAY;qCADrBrB,YAAA,CAcmBsB,2BAAA;kBAZhB1C,GAAG,EAAEyC,YAAY,CAACE,EAAE;kBACpB,SAxBnBC,eAAA;oBAAA,wBAwBoDH,YAAY,CAACI;kBAAO;kBACrDC,OAAO;oBAAAxB,IAAA;oBAAAqB,EAAA,EAAsBF,YAAY,CAACE;kBAAE;;kBAzB/D,WAAAjC,QAAA,CA2BkB;oBAAA,OAOM,CAPNO,mBAAA,CAOM,OAPN8B,UAOM,GANJ9B,mBAAA,CAGM,OAHN+B,UAGM,GA/B1BtB,gBAAA,CAAAuB,gBAAA,CA6ByBR,YAAY,CAACS,KAAK,IAAG,GACxB,iB,CAAaT,YAAY,CAACI,OAAO,I,cAAjC5C,mBAAA,CAA6D,QAA7DkD,UAA6D,KA9BnFtB,mBAAA,e,GAgCoBZ,mBAAA,CAAkE,OAAlEmC,UAAkE,EAAAH,gBAAA,CAA7BR,YAAY,CAACY,OAAO,kBACzDpC,mBAAA,CAA8E,OAA9EqC,UAA8E,EAAAL,gBAAA,CAA5C3C,MAAA,CAAAiD,UAAU,CAACd,YAAY,CAACe,UAAU,kB;;kBAjCxF7B,CAAA;;8CAoCkCrB,MAAA,CAAA8B,aAAa,CAACC,MAAM,Q,cAAtCjB,YAAA,CAA8CU,qBAAA;gBApC9D9B,GAAA;cAAA,MAAA6B,mBAAA,gBAqCwCvB,MAAA,CAAA8B,aAAa,CAACC,MAAM,Q,cAA5CjB,YAAA,CAEmBsB,2BAAA;gBAvCnC1C,GAAA;gBAqCkE8C,OAAO,EAAC;;gBArC1E,WAAApC,QAAA,CAsCkB;kBAAA,OAAgCe,MAAA,QAAAA,MAAA,OAAhCR,mBAAA,CAAgC;oBAA3B,SAAM;kBAAU,GAAC,MAAI,oB;;gBAtC5CU,CAAA;gBAAAC,EAAA;oBAAAC,mBAAA,e;;YAAAF,CAAA;;;QAAA,WAAAjB,QAAA,CAIQ;UAAA,OAAqD,CAArDP,YAAA,CAAqDkB,oBAAA;YAA1C,SAAM,aAAa;YAAEoC,IAAI,EAAEnD,MAAA,CAAAoD,IAAI;YAAEC,MAAM,EAAN;;;QAJpDhC,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}