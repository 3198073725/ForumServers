{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/defineProperty.js\")[\"default\"];\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar core = require('@vueuse/core');\nvar index = require('../../badge/index.js');\nvar index$1 = require('../../icon/index.js');\nvar message = require('./message.js');\nvar instance = require('./instance.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar useGlobalConfig = require('../../config-provider/src/hooks/use-global-config.js');\nvar icon = require('../../../utils/vue/icon.js');\nvar aria = require('../../../constants/aria.js');\nvar __default__ = vue.defineComponent({\n  name: \"ElMessage\"\n});\nvar _sfc_main = /* @__PURE__ */vue.defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: message.messageProps,\n  emits: message.messageEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n      emit = _ref.emit;\n    var props = __props;\n    var Close = icon.TypeComponents.Close;\n    var isStartTransition = vue.ref(false);\n    var _useGlobalConfig$useG = useGlobalConfig.useGlobalComponentSettings(\"message\"),\n      ns = _useGlobalConfig$useG.ns,\n      zIndex = _useGlobalConfig$useG.zIndex;\n    var currentZIndex = zIndex.currentZIndex,\n      nextZIndex = zIndex.nextZIndex;\n    var messageRef = vue.ref();\n    var visible = vue.ref(false);\n    var height = vue.ref(0);\n    var stopTimer = void 0;\n    var badgeType = vue.computed(function () {\n      return props.type ? props.type === \"error\" ? \"danger\" : props.type : \"info\";\n    });\n    var typeClass = vue.computed(function () {\n      var type = props.type;\n      return _defineProperty({}, ns.bm(\"icon\", type), type && icon.TypeComponentsMap[type]);\n    });\n    var iconComponent = vue.computed(function () {\n      return props.icon || icon.TypeComponentsMap[props.type] || \"\";\n    });\n    var lastOffset = vue.computed(function () {\n      return instance.getLastOffset(props.id);\n    });\n    var offset = vue.computed(function () {\n      return instance.getOffsetOrSpace(props.id, props.offset) + lastOffset.value;\n    });\n    var bottom = vue.computed(function () {\n      return height.value + offset.value;\n    });\n    var customStyle = vue.computed(function () {\n      return {\n        top: \"\".concat(offset.value, \"px\"),\n        zIndex: currentZIndex.value\n      };\n    });\n    function startTimer() {\n      if (props.duration === 0) return;\n      var _core$useTimeoutFn = core.useTimeoutFn(function () {\n        close();\n      }, props.duration);\n      stopTimer = _core$useTimeoutFn.stop;\n    }\n    function clearTimer() {\n      stopTimer == null ? void 0 : stopTimer();\n    }\n    function close() {\n      visible.value = false;\n      vue.nextTick(function () {\n        var _a;\n        if (!isStartTransition.value) {\n          (_a = props.onClose) == null ? void 0 : _a.call(props);\n          emit(\"destroy\");\n        }\n      });\n    }\n    function keydown(_ref3) {\n      var code = _ref3.code;\n      if (code === aria.EVENT_CODE.esc) {\n        close();\n      }\n    }\n    vue.onMounted(function () {\n      startTimer();\n      nextZIndex();\n      visible.value = true;\n    });\n    vue.watch(function () {\n      return props.repeatNum;\n    }, function () {\n      clearTimer();\n      startTimer();\n    });\n    core.useEventListener(document, \"keydown\", keydown);\n    core.useResizeObserver(messageRef, function () {\n      height.value = messageRef.value.getBoundingClientRect().height;\n    });\n    expose({\n      visible: visible,\n      bottom: bottom,\n      close: close\n    });\n    return function (_ctx, _cache) {\n      return vue.openBlock(), vue.createBlock(vue.Transition, {\n        name: vue.unref(ns).b(\"fade\"),\n        onBeforeEnter: function onBeforeEnter($event) {\n          return isStartTransition.value = true;\n        },\n        onBeforeLeave: _ctx.onClose,\n        onAfterLeave: function onAfterLeave($event) {\n          return _ctx.$emit(\"destroy\");\n        },\n        persisted: \"\"\n      }, {\n        \"default\": vue.withCtx(function () {\n          return [vue.withDirectives(vue.createElementVNode(\"div\", {\n            id: _ctx.id,\n            ref_key: \"messageRef\",\n            ref: messageRef,\n            \"class\": vue.normalizeClass([vue.unref(ns).b(), _defineProperty({}, vue.unref(ns).m(_ctx.type), _ctx.type), vue.unref(ns).is(\"closable\", _ctx.showClose), vue.unref(ns).is(\"plain\", _ctx.plain), _ctx.customClass]),\n            style: vue.normalizeStyle(vue.unref(customStyle)),\n            role: \"alert\",\n            onMouseenter: clearTimer,\n            onMouseleave: startTimer\n          }, [_ctx.repeatNum > 1 ? (vue.openBlock(), vue.createBlock(vue.unref(index.ElBadge), {\n            key: 0,\n            value: _ctx.repeatNum,\n            type: vue.unref(badgeType),\n            \"class\": vue.normalizeClass(vue.unref(ns).e(\"badge\"))\n          }, null, 8, [\"value\", \"type\", \"class\"])) : vue.createCommentVNode(\"v-if\", true), vue.unref(iconComponent) ? (vue.openBlock(), vue.createBlock(vue.unref(index$1.ElIcon), {\n            key: 1,\n            \"class\": vue.normalizeClass([vue.unref(ns).e(\"icon\"), vue.unref(typeClass)])\n          }, {\n            \"default\": vue.withCtx(function () {\n              return [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(vue.unref(iconComponent))))];\n            }),\n            _: 1\n          }, 8, [\"class\"])) : vue.createCommentVNode(\"v-if\", true), vue.renderSlot(_ctx.$slots, \"default\", {}, function () {\n            return [!_ctx.dangerouslyUseHTMLString ? (vue.openBlock(), vue.createElementBlock(\"p\", {\n              key: 0,\n              \"class\": vue.normalizeClass(vue.unref(ns).e(\"content\"))\n            }, vue.toDisplayString(_ctx.message), 3)) : (vue.openBlock(), vue.createElementBlock(vue.Fragment, {\n              key: 1\n            }, [vue.createCommentVNode(\" Caution here, message could've been compromised, never use user's input as message \"), vue.createElementVNode(\"p\", {\n              \"class\": vue.normalizeClass(vue.unref(ns).e(\"content\")),\n              innerHTML: _ctx.message\n            }, null, 10, [\"innerHTML\"])], 2112))];\n          }), _ctx.showClose ? (vue.openBlock(), vue.createBlock(vue.unref(index$1.ElIcon), {\n            key: 2,\n            \"class\": vue.normalizeClass(vue.unref(ns).e(\"closeBtn\")),\n            onClick: vue.withModifiers(close, [\"stop\"])\n          }, {\n            \"default\": vue.withCtx(function () {\n              return [vue.createVNode(vue.unref(Close))];\n            }),\n            _: 1\n          }, 8, [\"class\", \"onClick\"])) : vue.createCommentVNode(\"v-if\", true)], 46, [\"id\"]), [[vue.vShow, visible.value]])];\n        }),\n        _: 3\n      }, 8, [\"name\", \"onBeforeEnter\", \"onBeforeLeave\", \"onAfterLeave\"]);\n    };\n  }\n}));\nvar MessageConstructor = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"message.vue\"]]);\nexports[\"default\"] = MessageConstructor;","map":{"version":3,"names":["name","Close","icon","TypeComponents","isStartTransition","vue","ref","_useGlobalConfig$useG","useGlobalConfig","useGlobalComponentSettings","ns","zIndex","currentZIndex","nextZIndex","messageRef","visible","height","stopTimer","badgeType","computed","props","type","typeClass","_defineProperty","bm","TypeComponentsMap","iconComponent","lastOffset","instance","getLastOffset","id","offset","getOffsetOrSpace","value","bottom","customStyle","top","concat","startTimer","duration","_core$useTimeoutFn","core","useTimeoutFn","close","stop","clearTimer","nextTick","_a","onClose","call","emit","keydown","_ref3","code","aria","EVENT_CODE","esc","onMounted","watch","repeatNum","useEventListener","document","useResizeObserver","getBoundingClientRect","expose","_ctx","_cache","openBlock","createBlock","Transition","unref","b","onBeforeEnter","$event","onBeforeLeave","onAfterLeave","$emit","persisted"],"sources":["../../../../../../packages/components/message/src/message.vue"],"sourcesContent":["<template>\n  <transition\n    :name=\"ns.b('fade')\"\n    @before-enter=\"isStartTransition = true\"\n    @before-leave=\"onClose\"\n    @after-leave=\"$emit('destroy')\"\n  >\n    <div\n      v-show=\"visible\"\n      :id=\"id\"\n      ref=\"messageRef\"\n      :class=\"[\n        ns.b(),\n        { [ns.m(type)]: type },\n        ns.is('closable', showClose),\n        ns.is('plain', plain),\n        customClass,\n      ]\"\n      :style=\"customStyle\"\n      role=\"alert\"\n      @mouseenter=\"clearTimer\"\n      @mouseleave=\"startTimer\"\n    >\n      <el-badge\n        v-if=\"repeatNum > 1\"\n        :value=\"repeatNum\"\n        :type=\"badgeType\"\n        :class=\"ns.e('badge')\"\n      />\n      <el-icon v-if=\"iconComponent\" :class=\"[ns.e('icon'), typeClass]\">\n        <component :is=\"iconComponent\" />\n      </el-icon>\n      <slot>\n        <p v-if=\"!dangerouslyUseHTMLString\" :class=\"ns.e('content')\">\n          {{ message }}\n        </p>\n        <!-- Caution here, message could've been compromised, never use user's input as message -->\n        <p v-else :class=\"ns.e('content')\" v-html=\"message\" />\n      </slot>\n      <el-icon v-if=\"showClose\" :class=\"ns.e('closeBtn')\" @click.stop=\"close\">\n        <Close />\n      </el-icon>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, nextTick, onMounted, ref, watch } from 'vue'\nimport { useEventListener, useResizeObserver, useTimeoutFn } from '@vueuse/core'\nimport { TypeComponents, TypeComponentsMap } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport ElBadge from '@element-plus/components/badge'\nimport { useGlobalComponentSettings } from '@element-plus/components/config-provider'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { messageEmits, messageProps } from './message'\nimport { getLastOffset, getOffsetOrSpace } from './instance'\nimport type { BadgeProps } from '@element-plus/components/badge'\nimport type { CSSProperties } from 'vue'\n\nconst { Close } = TypeComponents\n\ndefineOptions({\n  name: 'ElMessage',\n})\n\nconst props = defineProps(messageProps)\nconst emit = defineEmits(messageEmits)\n\nconst isStartTransition = ref(false)\n\nconst { ns, zIndex } = useGlobalComponentSettings('message')\nconst { currentZIndex, nextZIndex } = zIndex\n\nconst messageRef = ref<HTMLDivElement>()\nconst visible = ref(false)\nconst height = ref(0)\n\nlet stopTimer: (() => void) | undefined = undefined\n\nconst badgeType = computed<BadgeProps['type']>(() =>\n  props.type ? (props.type === 'error' ? 'danger' : props.type) : 'info'\n)\nconst typeClass = computed(() => {\n  const type = props.type\n  return { [ns.bm('icon', type)]: type && TypeComponentsMap[type] }\n})\nconst iconComponent = computed(\n  () => props.icon || TypeComponentsMap[props.type] || ''\n)\n\nconst lastOffset = computed(() => getLastOffset(props.id))\nconst offset = computed(\n  () => getOffsetOrSpace(props.id, props.offset) + lastOffset.value\n)\nconst bottom = computed(() => height.value + offset.value)\nconst customStyle = computed<CSSProperties>(() => ({\n  top: `${offset.value}px`,\n  zIndex: currentZIndex.value,\n}))\n\nfunction startTimer() {\n  if (props.duration === 0) return\n  ;({ stop: stopTimer } = useTimeoutFn(() => {\n    close()\n  }, props.duration))\n}\n\nfunction clearTimer() {\n  stopTimer?.()\n}\n\nfunction close() {\n  visible.value = false\n\n  // if the message has never started a transition, we can destroy it immediately\n  nextTick(() => {\n    if (!isStartTransition.value) {\n      props.onClose?.()\n      emit('destroy')\n    }\n  })\n}\n\nfunction keydown({ code }: KeyboardEvent) {\n  if (code === EVENT_CODE.esc) {\n    // press esc to close the message\n    close()\n  }\n}\n\nonMounted(() => {\n  startTimer()\n  nextZIndex()\n  visible.value = true\n})\n\nwatch(\n  () => props.repeatNum,\n  () => {\n    clearTimer()\n    startTimer()\n  }\n)\n\nuseEventListener(document, 'keydown', keydown)\n\nuseResizeObserver(messageRef, () => {\n  height.value = messageRef.value!.getBoundingClientRect().height\n})\n\ndefineExpose({\n  visible,\n  bottom,\n  close,\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}