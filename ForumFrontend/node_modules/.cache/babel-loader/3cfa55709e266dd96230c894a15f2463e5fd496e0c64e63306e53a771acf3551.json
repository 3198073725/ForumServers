{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"rich-text-editor\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_quill_editor = _resolveComponent(\"quill-editor\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_quill_editor, {\n    content: $setup.content,\n    \"onUpdate:content\": _cache[0] || (_cache[0] = function (val) {\n      return $setup.content = val;\n    }),\n    options: $setup.editorOption,\n    onTextChange: $setup.handleChange,\n    disabled: $props.disabled,\n    ref: \"quillEditor\"\n  }, null, 8 /* PROPS */, [\"content\", \"options\", \"onTextChange\", \"disabled\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createVNode","_component_quill_editor","content","$setup","_cache","val","options","editorOption","onTextChange","handleChange","disabled","$props","ref"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\components\\RichTextEditor.vue"],"sourcesContent":["<template>\n  <div class=\"rich-text-editor\">\n    <quill-editor\n      :content=\"content\"\n      @update:content=\"val => content = val\"\n      :options=\"editorOption\"\n      @textChange=\"handleChange\"\n      :disabled=\"disabled\"\n      ref=\"quillEditor\"\n    />\n  </div>\n</template>\n\n<script>\nimport { ref, watch, onMounted } from 'vue'\nimport { QuillEditor } from '@vueup/vue-quill'\nimport '@vueup/vue-quill/dist/vue-quill.snow.css'\n\nexport default {\n  name: 'RichTextEditor',\n  components: {\n    QuillEditor\n  },\n  props: {\n    modelValue: {\n      type: String,\n      default: ''\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['update:modelValue', 'change'],\n  setup(props, { emit }) {\n    const content = ref(props.modelValue)\n    const quillEditor = ref(null)\n\n    watch(() => props.modelValue, (newValue) => {\n      if (newValue !== content.value) {\n        content.value = newValue\n      }\n    })\n\n    const handleChange = (delta, oldDelta, source) => {\n      if (source === 'user') {\n        emit('update:modelValue', content.value)\n        emit('change', content.value)\n      }\n    }\n\n    const editorOption = {\n      theme: 'snow',\n      modules: {\n        toolbar: [\n          ['bold', 'italic', 'underline', 'strike'],\n          ['blockquote', 'code-block'],\n          [{ 'header': 1 }, { 'header': 2 }],\n          [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n          [{ 'script': 'sub' }, { 'script': 'super' }],\n          [{ 'indent': '-1' }, { 'indent': '+1' }],\n          [{ 'direction': 'rtl' }],\n          [{ 'size': ['small', false, 'large', 'huge'] }],\n          [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n          [{ 'color': [] }, { 'background': [] }],\n          [{ 'font': [] }],\n          [{ 'align': [] }],\n          ['clean'],\n          ['link', 'image']\n        ]\n      },\n      placeholder: '请输入内容...',\n      scrollingContainer: 'html',\n      bounds: document.body,\n      readOnly: props.disabled,\n      experimental: {\n        useModernScrollingApi: true\n      }\n    }\n\n    onMounted(() => {\n      // 初始化时设置内容\n      if (props.modelValue && quillEditor.value) {\n        quillEditor.value.setContents(props.modelValue)\n      }\n    })\n\n    return {\n      content,\n      editorOption,\n      handleChange,\n      quillEditor\n    }\n  }\n}\n</script>\n\n<style scoped>\n.rich-text-editor {\n  width: 100%;\n}\n\n:deep(.ql-container) {\n  min-height: 300px;\n  font-size: 16px;\n  line-height: 1.5;\n}\n\n:deep(.ql-editor) {\n  min-height: 300px;\n  padding: 12px 15px;\n}\n\n:deep(.ql-toolbar) {\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  background-color: #f8f9fa;\n}\n\n:deep(.ql-container) {\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n}\n\n:deep(.ql-editor p) {\n  margin-bottom: 1em;\n}\n\n:deep(.ql-editor img) {\n  max-width: 100%;\n  height: auto;\n}\n\n:deep(.ql-editor blockquote) {\n  border-left: 4px solid #ccc;\n  margin: 0;\n  padding-left: 16px;\n}\n\n:deep(.ql-editor pre.ql-syntax) {\n  background-color: #f8f9fa;\n  border-radius: 4px;\n  padding: 12px;\n  margin: 8px 0;\n}\n</style> "],"mappings":";;EACO,SAAM;AAAkB;;;uBAA7BA,mBAAA,CASM,OATNC,UASM,GARJC,YAAA,CAOEC,uBAAA;IANCC,OAAO,EAAEC,MAAA,CAAAD,OAAO;IAChB,kBAAc,EAAAE,MAAA,QAAAA,MAAA,MAAE,UAAAC,GAAG;MAAA,OAAIF,MAAA,CAAAD,OAAO,GAAGG,GAAG;IAAA;IACpCC,OAAO,EAAEH,MAAA,CAAAI,YAAY;IACrBC,YAAU,EAAEL,MAAA,CAAAM,YAAY;IACxBC,QAAQ,EAAEC,MAAA,CAAAD,QAAQ;IACnBE,GAAG,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}