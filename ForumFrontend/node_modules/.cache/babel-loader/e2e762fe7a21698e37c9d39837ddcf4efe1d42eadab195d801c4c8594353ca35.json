{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.symbol.js\");\nrequire(\"core-js/modules/es.symbol.description.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar dialogInjectionKey = Symbol(\"dialogInjectionKey\");\nexports.dialogInjectionKey = dialogInjectionKey;","map":{"version":3,"names":["dialogInjectionKey","Symbol"],"sources":["../../../../../../packages/components/dialog/src/constants.ts"],"sourcesContent":["import type { CSSProperties, ComputedRef, InjectionKey, Ref } from 'vue'\nimport type { UseNamespaceReturn } from '@element-plus/hooks'\n\nexport type DialogContext = {\n  dialogRef: Ref<HTMLElement | undefined>\n  headerRef: Ref<HTMLElement | undefined>\n  bodyId: Ref<string>\n  ns: UseNamespaceReturn\n  rendered: Ref<boolean>\n  style: ComputedRef<CSSProperties>\n}\n\nexport const dialogInjectionKey: InjectionKey<DialogContext> =\n  Symbol('dialogInjectionKey')\n"],"mappings":";;;;;;;;;AAAY,IAACA,kBAAkB,GAAGC,MAAM,CAAC,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}