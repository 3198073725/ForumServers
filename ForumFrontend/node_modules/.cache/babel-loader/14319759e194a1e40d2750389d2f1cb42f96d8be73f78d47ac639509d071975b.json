{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/defineProperty.js\")[\"default\"];\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nvar _inputEmits;\nrequire(\"core-js/modules/es.number.constructor.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar index = require('../../../hooks/use-size/index.js');\nvar icon = require('../../../utils/vue/icon.js');\nvar typescript = require('../../../utils/typescript.js');\nvar index$1 = require('../../../hooks/use-aria/index.js');\nvar event = require('../../../constants/event.js');\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar shared = require('@vue/shared');\nvar inputProps = runtime.buildProps(_objectSpread({\n  id: {\n    type: String,\n    \"default\": void 0\n  },\n  size: index.useSizeProp,\n  disabled: Boolean,\n  modelValue: {\n    type: runtime.definePropType([String, Number, Object]),\n    \"default\": \"\"\n  },\n  maxlength: {\n    type: [String, Number]\n  },\n  minlength: {\n    type: [String, Number]\n  },\n  type: {\n    type: String,\n    \"default\": \"text\"\n  },\n  resize: {\n    type: String,\n    values: [\"none\", \"both\", \"horizontal\", \"vertical\"]\n  },\n  autosize: {\n    type: runtime.definePropType([Boolean, Object]),\n    \"default\": false\n  },\n  autocomplete: {\n    type: String,\n    \"default\": \"off\"\n  },\n  formatter: {\n    type: Function\n  },\n  parser: {\n    type: Function\n  },\n  placeholder: {\n    type: String\n  },\n  form: {\n    type: String\n  },\n  readonly: Boolean,\n  clearable: Boolean,\n  showPassword: Boolean,\n  showWordLimit: Boolean,\n  suffixIcon: {\n    type: icon.iconPropType\n  },\n  prefixIcon: {\n    type: icon.iconPropType\n  },\n  containerRole: {\n    type: String,\n    \"default\": void 0\n  },\n  tabindex: {\n    type: [String, Number],\n    \"default\": 0\n  },\n  validateEvent: {\n    type: Boolean,\n    \"default\": true\n  },\n  inputStyle: {\n    type: runtime.definePropType([Object, Array, String]),\n    \"default\": function _default() {\n      return typescript.mutable({});\n    }\n  },\n  autofocus: Boolean,\n  rows: {\n    type: Number,\n    \"default\": 2\n  }\n}, index$1.useAriaProps([\"ariaLabel\"])));\nvar inputEmits = (_inputEmits = {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_inputEmits, event.UPDATE_MODEL_EVENT, function (value) {\n  return shared.isString(value);\n}), \"input\", function input(value) {\n  return shared.isString(value);\n}), \"change\", function change(value) {\n  return shared.isString(value);\n}), \"focus\", function focus(evt) {\n  return evt instanceof FocusEvent;\n}), \"blur\", function blur(evt) {\n  return evt instanceof FocusEvent;\n}), \"clear\", function clear() {\n  return true;\n}), \"mouseleave\", function mouseleave(evt) {\n  return evt instanceof MouseEvent;\n}), \"mouseenter\", function mouseenter(evt) {\n  return evt instanceof MouseEvent;\n}), \"keydown\", function keydown(evt) {\n  return evt instanceof Event;\n}), \"compositionstart\", function compositionstart(evt) {\n  return evt instanceof CompositionEvent;\n}), _defineProperty(_defineProperty(_inputEmits, \"compositionupdate\", function compositionupdate(evt) {\n  return evt instanceof CompositionEvent;\n}), \"compositionend\", function compositionend(evt) {\n  return evt instanceof CompositionEvent;\n}));\nexports.inputEmits = inputEmits;\nexports.inputProps = inputProps;","map":{"version":3,"names":["inputProps","runtime","buildProps","_objectSpread","id","type","String","size","index","useSizeProp","disabled","Boolean","modelValue","definePropType","Number","Object","maxlength","minlength","resize","values","autosize","autocomplete","formatter","Function","parser","placeholder","form","readonly","clearable","showPassword","showWordLimit","suffixIcon","icon","iconPropType","prefixIcon","containerRole","tabindex","validateEvent","inputStyle","Array","default","typescript","mutable","autofocus","rows","index$1","useAriaProps","inputEmits","_inputEmits","_defineProperty","event","UPDATE_MODEL_EVENT","value","shared","isString","input","change","focus","evt","FocusEvent","blur","clear","mouseleave","MouseEvent","mouseenter","keydown","Event","compositionstart","CompositionEvent","compositionupdate","compositionend"],"sources":["../../../../../../packages/components/input/src/input.ts"],"sourcesContent":["import {\n  buildProps,\n  definePropType,\n  iconPropType,\n  isString,\n  mutable,\n} from '@element-plus/utils'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { useAriaProps, useSizeProp } from '@element-plus/hooks'\nimport type { ExtractPropTypes, StyleValue } from 'vue'\n\nexport type InputAutoSize = { minRows?: number; maxRows?: number } | boolean\n\nexport const inputProps = buildProps({\n  /**\n   * @description native input id\n   */\n  id: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description input box size\n   */\n  size: useSizeProp,\n  /**\n   * @description whether to disable\n   */\n  disabled: Boolean,\n  /**\n   * @description binding value\n   */\n  modelValue: {\n    type: definePropType<string | number | null | undefined>([\n      String,\n      Number,\n      Object,\n    ]),\n    default: '',\n  },\n  /**\n   * @description same as `maxlength` in native input\n   */\n  maxlength: {\n    type: [String, Number],\n  },\n  /**\n   * @description same as `minlength` in native input\n   */\n  minlength: {\n    type: [String, Number],\n  },\n  /**\n   * @description type of input\n   */\n  type: {\n    type: String,\n    default: 'text',\n  },\n  /**\n   * @description control the resizability\n   */\n  resize: {\n    type: String,\n    values: ['none', 'both', 'horizontal', 'vertical'],\n  },\n  /**\n   * @description whether textarea has an adaptive height\n   */\n  autosize: {\n    type: definePropType<InputAutoSize>([Boolean, Object]),\n    default: false,\n  },\n  /**\n   * @description native input autocomplete\n   */\n  autocomplete: {\n    type: String,\n    default: 'off',\n  },\n  /**\n   * @description format content\n   */\n  formatter: {\n    type: Function,\n  },\n  /**\n   * @description parse content\n   */\n  parser: {\n    type: Function,\n  },\n  /**\n   * @description placeholder\n   */\n  placeholder: {\n    type: String,\n  },\n  /**\n   * @description native input form\n   */\n  form: {\n    type: String,\n  },\n  /**\n   * @description native input readonly\n   */\n  readonly: Boolean,\n  /**\n   * @description native input readonly\n   */\n  clearable: Boolean,\n  /**\n   * @description toggleable password input\n   */\n  showPassword: Boolean,\n  /**\n   * @description word count\n   */\n  showWordLimit: Boolean,\n  /**\n   * @description suffix icon\n   */\n  suffixIcon: {\n    type: iconPropType,\n  },\n  /**\n   * @description prefix icon\n   */\n  prefixIcon: {\n    type: iconPropType,\n  },\n  /**\n   * @description container role, internal properties provided for use by the picker component\n   */\n  containerRole: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description input tabindex\n   */\n  tabindex: {\n    type: [String, Number],\n    default: 0,\n  },\n  /**\n   * @description whether to trigger form validation\n   */\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description input or textarea element style\n   */\n  inputStyle: {\n    type: definePropType<StyleValue>([Object, Array, String]),\n    default: () => mutable({} as const),\n  },\n  /**\n   * @description native input autofocus\n   */\n  autofocus: Boolean,\n  rows: {\n    type: Number,\n    default: 2,\n  },\n  ...useAriaProps(['ariaLabel']),\n} as const)\nexport type InputProps = ExtractPropTypes<typeof inputProps>\n\nexport const inputEmits = {\n  [UPDATE_MODEL_EVENT]: (value: string) => isString(value),\n  input: (value: string) => isString(value),\n  change: (value: string) => isString(value),\n  focus: (evt: FocusEvent) => evt instanceof FocusEvent,\n  blur: (evt: FocusEvent) => evt instanceof FocusEvent,\n  clear: () => true,\n  mouseleave: (evt: MouseEvent) => evt instanceof MouseEvent,\n  mouseenter: (evt: MouseEvent) => evt instanceof MouseEvent,\n  // NOTE: when autofill by browser, the keydown event is instanceof Event, not KeyboardEvent\n  // relative bug report https://github.com/element-plus/element-plus/issues/6665\n  keydown: (evt: KeyboardEvent | Event) => evt instanceof Event,\n  compositionstart: (evt: CompositionEvent) => evt instanceof CompositionEvent,\n  compositionupdate: (evt: CompositionEvent) => evt instanceof CompositionEvent,\n  compositionend: (evt: CompositionEvent) => evt instanceof CompositionEvent,\n}\nexport type InputEmits = typeof inputEmits\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}