{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/defineProperty.js\")[\"default\"];\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar index$2 = require('../../icon/index.js');\nvar constants = require('./constants.js');\nvar dialogContent = require('./dialog-content.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar tokens = require('../../focus-trap/src/tokens.js');\nvar index$1 = require('../../../hooks/use-draggable/index.js');\nvar icon = require('../../../utils/vue/icon.js');\nvar refs = require('../../../utils/vue/refs.js');\nvar index = require('../../../hooks/use-locale/index.js');\nvar __default__ = vue.defineComponent({\n  name: \"ElDialogContent\"\n});\nvar _sfc_main = /* @__PURE__ */vue.defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: dialogContent.dialogContentProps,\n  emits: dialogContent.dialogContentEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var _index$useLocale = index.useLocale(),\n      t = _index$useLocale.t;\n    var Close = icon.CloseComponents.Close;\n    var _vue$inject = vue.inject(constants.dialogInjectionKey),\n      dialogRef = _vue$inject.dialogRef,\n      headerRef = _vue$inject.headerRef,\n      bodyId = _vue$inject.bodyId,\n      ns = _vue$inject.ns,\n      style = _vue$inject.style;\n    var _vue$inject2 = vue.inject(tokens.FOCUS_TRAP_INJECTION_KEY),\n      focusTrapRef = _vue$inject2.focusTrapRef;\n    var dialogKls = vue.computed(function () {\n      return [ns.b(), ns.is(\"fullscreen\", props.fullscreen), ns.is(\"draggable\", props.draggable), ns.is(\"align-center\", props.alignCenter), _defineProperty({}, ns.m(\"center\"), props.center)];\n    });\n    var composedDialogRef = refs.composeRefs(focusTrapRef, dialogRef);\n    var draggable = vue.computed(function () {\n      return props.draggable;\n    });\n    var overflow = vue.computed(function () {\n      return props.overflow;\n    });\n    var _index$1$useDraggable = index$1.useDraggable(dialogRef, headerRef, draggable, overflow),\n      resetPosition = _index$1$useDraggable.resetPosition,\n      updatePosition = _index$1$useDraggable.updatePosition;\n    expose({\n      resetPosition: resetPosition,\n      updatePosition: updatePosition\n    });\n    return function (_ctx, _cache) {\n      return vue.openBlock(), vue.createElementBlock(\"div\", {\n        ref: vue.unref(composedDialogRef),\n        \"class\": vue.normalizeClass(vue.unref(dialogKls)),\n        style: vue.normalizeStyle(vue.unref(style)),\n        tabindex: \"-1\"\n      }, [vue.createElementVNode(\"header\", {\n        ref_key: \"headerRef\",\n        ref: headerRef,\n        \"class\": vue.normalizeClass([vue.unref(ns).e(\"header\"), _ctx.headerClass, {\n          \"show-close\": _ctx.showClose\n        }])\n      }, [vue.renderSlot(_ctx.$slots, \"header\", {}, function () {\n        return [vue.createElementVNode(\"span\", {\n          role: \"heading\",\n          \"aria-level\": _ctx.ariaLevel,\n          \"class\": vue.normalizeClass(vue.unref(ns).e(\"title\"))\n        }, vue.toDisplayString(_ctx.title), 11, [\"aria-level\"])];\n      }), _ctx.showClose ? (vue.openBlock(), vue.createElementBlock(\"button\", {\n        key: 0,\n        \"aria-label\": vue.unref(t)(\"el.dialog.close\"),\n        \"class\": vue.normalizeClass(vue.unref(ns).e(\"headerbtn\")),\n        type: \"button\",\n        onClick: function onClick($event) {\n          return _ctx.$emit(\"close\");\n        }\n      }, [vue.createVNode(vue.unref(index$2.ElIcon), {\n        \"class\": vue.normalizeClass(vue.unref(ns).e(\"close\"))\n      }, {\n        \"default\": vue.withCtx(function () {\n          return [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.closeIcon || vue.unref(Close))))];\n        }),\n        _: 1\n      }, 8, [\"class\"])], 10, [\"aria-label\", \"onClick\"])) : vue.createCommentVNode(\"v-if\", true)], 2), vue.createElementVNode(\"div\", {\n        id: vue.unref(bodyId),\n        \"class\": vue.normalizeClass([vue.unref(ns).e(\"body\"), _ctx.bodyClass])\n      }, [vue.renderSlot(_ctx.$slots, \"default\")], 10, [\"id\"]), _ctx.$slots.footer ? (vue.openBlock(), vue.createElementBlock(\"footer\", {\n        key: 0,\n        \"class\": vue.normalizeClass([vue.unref(ns).e(\"footer\"), _ctx.footerClass])\n      }, [vue.renderSlot(_ctx.$slots, \"footer\")], 2)) : vue.createCommentVNode(\"v-if\", true)], 6);\n    };\n  }\n}));\nvar ElDialogContent = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"dialog-content.vue\"]]);\nexports[\"default\"] = ElDialogContent;","map":{"version":3,"names":["name","_index$useLocale","index","useLocale","t","Close","icon","CloseComponents","_vue$inject","vue","inject","constants","dialogInjectionKey","dialogRef","headerRef","bodyId","ns","style","_vue$inject2","tokens","FOCUS_TRAP_INJECTION_KEY","focusTrapRef","dialogKls","computed","b","is","props","fullscreen","draggable","alignCenter","_defineProperty","m","center","composedDialogRef","refs","composeRefs","overflow","_index$1$useDraggable","index$1","useDraggable","resetPosition","updatePosition","expose","_ctx","_cache","openBlock","createElementBlock","ref","unref","normalizeClass","normalizeStyle"],"sources":["../../../../../../packages/components/dialog/src/dialog-content.vue"],"sourcesContent":["<template>\n  <div :ref=\"composedDialogRef\" :class=\"dialogKls\" :style=\"style\" tabindex=\"-1\">\n    <header\n      ref=\"headerRef\"\n      :class=\"[ns.e('header'), headerClass, { 'show-close': showClose }]\"\n    >\n      <slot name=\"header\">\n        <span role=\"heading\" :aria-level=\"ariaLevel\" :class=\"ns.e('title')\">\n          {{ title }}\n        </span>\n      </slot>\n      <button\n        v-if=\"showClose\"\n        :aria-label=\"t('el.dialog.close')\"\n        :class=\"ns.e('headerbtn')\"\n        type=\"button\"\n        @click=\"$emit('close')\"\n      >\n        <el-icon :class=\"ns.e('close')\">\n          <component :is=\"closeIcon || Close\" />\n        </el-icon>\n      </button>\n    </header>\n    <div :id=\"bodyId\" :class=\"[ns.e('body'), bodyClass]\">\n      <slot />\n    </div>\n    <footer v-if=\"$slots.footer\" :class=\"[ns.e('footer'), footerClass]\">\n      <slot name=\"footer\" />\n    </footer>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, inject } from 'vue'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { FOCUS_TRAP_INJECTION_KEY } from '@element-plus/components/focus-trap'\nimport { useDraggable, useLocale } from '@element-plus/hooks'\nimport { CloseComponents, composeRefs } from '@element-plus/utils'\nimport { dialogInjectionKey } from './constants'\nimport { dialogContentEmits, dialogContentProps } from './dialog-content'\n\nconst { t } = useLocale()\nconst { Close } = CloseComponents\n\ndefineOptions({ name: 'ElDialogContent' })\nconst props = defineProps(dialogContentProps)\ndefineEmits(dialogContentEmits)\n\nconst { dialogRef, headerRef, bodyId, ns, style } = inject(dialogInjectionKey)!\nconst { focusTrapRef } = inject(FOCUS_TRAP_INJECTION_KEY)!\n\nconst dialogKls = computed(() => [\n  ns.b(),\n  ns.is('fullscreen', props.fullscreen),\n  ns.is('draggable', props.draggable),\n  ns.is('align-center', props.alignCenter),\n  { [ns.m('center')]: props.center },\n])\n\nconst composedDialogRef = composeRefs(focusTrapRef, dialogRef)\n\nconst draggable = computed(() => props.draggable)\nconst overflow = computed(() => props.overflow)\nconst { resetPosition, updatePosition } = useDraggable(\n  dialogRef,\n  headerRef,\n  draggable,\n  overflow\n)\n\ndefineExpose({\n  resetPosition,\n  updatePosition,\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;;;qCA4Cc;EAAEA,IAAM;AAAA,CAAkB;;;;;;;IAHlC,IAAAC,gBAAA,GAAQC,KAAA,CAAAC,SAAU;MAAhBC,CAAE,GAAAH,gBAAA,CAAFG,CAAE;IACJ,IAAEC,KAAA,GAAUC,IAAA,CAAAC,eAAA,CAAVF,KAAA;IAMF,IAAAG,WAAA,GAA8CC,GAAA,CAAAC,MAAA,CAAOC,SAAA,CAAAC,kBAAkB;MAArEC,SAAA,GAAAL,WAAA,CAAAK,SAAA;MAAWC,SAAW,GAAAN,WAAA,CAAXM,SAAW;MAAAC,MAAA,GAAAP,WAAA,CAAAO,MAAA;MAAQC,EAAA,GAAAR,WAAA,CAAAQ,EAAA;MAAIC,KAAM,GAAAT,WAAA,CAANS,KAAM;IAChD,IAAAC,YAAA,GAAyBT,GAAA,CAAAC,MAAA,CAAOS,MAAA,CAAAC,wBAAwB;MAAhDC,YAAA,GAAAH,YAAA,CAAAG,YAAA;IAEF,IAAAC,SAAA,GAAYb,GAAA,CAAAc,QAAA,CAAS;MAAA,OAAM,CAC/BP,EAAA,CAAGQ,CAAE,IACLR,EAAG,CAAAS,EAAA,CAAG,YAAc,EAAAC,KAAA,CAAMC,UAAU,GACpCX,EAAG,CAAAS,EAAA,CAAG,WAAa,EAAAC,KAAA,CAAME,SAAS,GAClCZ,EAAG,CAAAS,EAAA,CAAG,cAAgB,EAAAC,KAAA,CAAMG,WAAW,GAAAC,eAAA,KACpCd,EAAG,CAAAe,CAAA,CAAE,QAAQ,CAAC,EAAGL,KAAA,CAAMM,MAAO,EAClC;IAAA;IAEK,IAAAC,iBAAA,GAAoBC,IAAA,CAAAC,WAAY,CAAAd,YAAA,EAAcR,SAAS;IAE7D,IAAMe,SAAY,GAAAnB,GAAA,CAAAc,QAAA,CAAS;MAAA,OAAMG,KAAA,CAAME,SAAS;IAAA;IAChD,IAAMQ,QAAW,GAAA3B,GAAA,CAAAc,QAAA,CAAS;MAAA,OAAMG,KAAA,CAAMU,QAAQ;IAAA;IACxC,IAAAC,qBAAA,GAAoCC,OAAA,CAAAC,YAAA,CAAA1B,SAAA,EAAAC,SAAA,EAAAc,SAAA,EAAAQ,QAAA;MAAlCI,aAAe,GAAAH,qBAAA,CAAfG,aAAe;MAAAC,cAAA,GAAAJ,qBAAA,CAAAI,cAAA;IACrBC,MAAA;MACAF,aAAA,EAAAA,aAAA;MACAC,cAAA,EAAAA;IAAA,CACA;IACF,iBAAAE,IAAA,EAAAC,MAAA;MAEa,OAAAnC,GAAA,CAAAoC,SAAA,IAAApC,GAAA,CAAAqC,kBAAA;QACXC,GAAA,EAAAtC,GAAA,CAAAuC,KAAA,CAAAf,iBAAA;QACA,SAAAxB,GAAA,CAAAwC,cAAA,CAAAxC,GAAA,CAAAuC,KAAA,CAAA1B,SAAA;QACDL,KAAA,EAAAR,GAAA,CAAAyC,cAAA,CAAAzC,GAAA,CAAAuC,KAAA,CAAA/B,KAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}