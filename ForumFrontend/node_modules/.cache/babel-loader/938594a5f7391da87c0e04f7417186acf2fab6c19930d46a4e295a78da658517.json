{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/toConsumableArray.js\")[\"default\"];\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.array.concat.js\");\nrequire(\"core-js/modules/es.array.filter.js\");\nrequire(\"core-js/modules/es.array.for-each.js\");\nrequire(\"core-js/modules/es.array.map.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.array.slice.js\");\nrequire(\"core-js/modules/es.iterator.constructor.js\");\nrequire(\"core-js/modules/es.iterator.filter.js\");\nrequire(\"core-js/modules/es.iterator.for-each.js\");\nrequire(\"core-js/modules/es.iterator.map.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar lodashUnified = require('lodash-unified');\nvar menu = require('./menu.js');\nvar store = require('./store.js');\nvar node = require('./node.js');\nvar config = require('./config.js');\nvar utils = require('./utils.js');\nvar types = require('./types.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar arrays = require('../../../utils/arrays.js');\nvar scroll = require('../../../utils/dom/scroll.js');\nvar aria$1 = require('../../../utils/dom/aria.js');\nvar event = require('../../../constants/event.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar types$1 = require('../../../utils/types.js');\nvar core = require('@vueuse/core');\nvar aria = require('../../../constants/aria.js');\nvar _sfc_main = vue.defineComponent({\n  name: \"ElCascaderPanel\",\n  components: {\n    ElCascaderMenu: menu[\"default\"]\n  },\n  props: _objectSpread(_objectSpread({}, config.CommonProps), {}, {\n    border: {\n      type: Boolean,\n      \"default\": true\n    },\n    renderLabel: Function\n  }),\n  emits: [event.UPDATE_MODEL_EVENT, event.CHANGE_EVENT, \"close\", \"expand-change\"],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit,\n      slots = _ref.slots;\n    var manualChecked = false;\n    var ns = index.useNamespace(\"cascader\");\n    var config$1 = config.useCascaderConfig(props);\n    var store$1 = null;\n    var initialLoaded = vue.ref(true);\n    var menuList = vue.ref([]);\n    var checkedValue = vue.ref(null);\n    var menus = vue.ref([]);\n    var expandingNode = vue.ref(null);\n    var checkedNodes = vue.ref([]);\n    var isHoverMenu = vue.computed(function () {\n      return config$1.value.expandTrigger === \"hover\";\n    });\n    var renderLabelFn = vue.computed(function () {\n      return props.renderLabel || slots[\"default\"];\n    });\n    var initStore = function initStore() {\n      var options = props.options;\n      var cfg = config$1.value;\n      manualChecked = false;\n      store$1 = new store[\"default\"](options, cfg);\n      menus.value = [store$1.getNodes()];\n      if (cfg.lazy && types$1.isEmpty(props.options)) {\n        initialLoaded.value = false;\n        lazyLoad(void 0, function (list) {\n          if (list) {\n            store$1 = new store[\"default\"](list, cfg);\n            menus.value = [store$1.getNodes()];\n          }\n          initialLoaded.value = true;\n          _syncCheckedValue(false, true);\n        });\n      } else {\n        _syncCheckedValue(false, true);\n      }\n    };\n    var lazyLoad = function lazyLoad(node$1, cb) {\n      var cfg = config$1.value;\n      node$1 = node$1 || new node[\"default\"]({}, cfg, void 0, true);\n      node$1.loading = true;\n      var resolve = function resolve(dataList) {\n        var _node = node$1;\n        var parent = _node.root ? null : _node;\n        dataList && (store$1 == null ? void 0 : store$1.appendNodes(dataList, parent));\n        _node.loading = false;\n        _node.loaded = true;\n        _node.childrenData = _node.childrenData || [];\n        cb && cb(dataList);\n      };\n      cfg.lazyLoad(node$1, resolve);\n    };\n    var expandNode = function expandNode(node, silent) {\n      var _a;\n      var level = node.level;\n      var newMenus = menus.value.slice(0, level);\n      var newExpandingNode;\n      if (node.isLeaf) {\n        newExpandingNode = node.pathNodes[level - 2];\n      } else {\n        newExpandingNode = node;\n        newMenus.push(node.children);\n      }\n      if (((_a = expandingNode.value) == null ? void 0 : _a.uid) !== (newExpandingNode == null ? void 0 : newExpandingNode.uid)) {\n        expandingNode.value = node;\n        menus.value = newMenus;\n        !silent && emit(\"expand-change\", (node == null ? void 0 : node.pathValues) || []);\n      }\n    };\n    var handleCheckChange = function handleCheckChange(node, checked) {\n      var emitClose = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var _config$1$value = config$1.value,\n        checkStrictly = _config$1$value.checkStrictly,\n        multiple = _config$1$value.multiple;\n      var oldNode = checkedNodes.value[0];\n      manualChecked = true;\n      !multiple && (oldNode == null ? void 0 : oldNode.doCheck(false));\n      node.doCheck(checked);\n      calculateCheckedValue();\n      emitClose && !multiple && !checkStrictly && emit(\"close\");\n      !emitClose && !multiple && !checkStrictly && _expandParentNode(node);\n    };\n    var _expandParentNode = function expandParentNode(node) {\n      if (!node) return;\n      node = node.parent;\n      _expandParentNode(node);\n      node && expandNode(node);\n    };\n    var getFlattedNodes = function getFlattedNodes(leafOnly) {\n      return store$1 == null ? void 0 : store$1.getFlattedNodes(leafOnly);\n    };\n    var getCheckedNodes = function getCheckedNodes(leafOnly) {\n      var _a;\n      return (_a = getFlattedNodes(leafOnly)) == null ? void 0 : _a.filter(function (node) {\n        return node.checked !== false;\n      });\n    };\n    var clearCheckedNodes = function clearCheckedNodes() {\n      checkedNodes.value.forEach(function (node) {\n        return node.doCheck(false);\n      });\n      calculateCheckedValue();\n      menus.value = menus.value.slice(0, 1);\n      expandingNode.value = null;\n      emit(\"expand-change\", []);\n    };\n    var calculateCheckedValue = function calculateCheckedValue() {\n      var _a;\n      var _config$1$value2 = config$1.value,\n        checkStrictly = _config$1$value2.checkStrictly,\n        multiple = _config$1$value2.multiple;\n      var oldNodes = checkedNodes.value;\n      var newNodes = getCheckedNodes(!checkStrictly);\n      var nodes = utils.sortByOriginalOrder(oldNodes, newNodes);\n      var values = nodes.map(function (node) {\n        return node.valueByOption;\n      });\n      checkedNodes.value = nodes;\n      checkedValue.value = multiple ? values : (_a = values[0]) != null ? _a : null;\n    };\n    var _syncCheckedValue = function syncCheckedValue() {\n      var loaded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var forced = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var modelValue = props.modelValue;\n      var _config$1$value3 = config$1.value,\n        lazy = _config$1$value3.lazy,\n        multiple = _config$1$value3.multiple,\n        checkStrictly = _config$1$value3.checkStrictly;\n      var leafOnly = !checkStrictly;\n      if (!initialLoaded.value || manualChecked || !forced && lodashUnified.isEqual(modelValue, checkedValue.value)) return;\n      if (lazy && !loaded) {\n        var values = arrays.unique(lodashUnified.flattenDeep(arrays.castArray(modelValue)));\n        var nodes = values.map(function (val) {\n          return store$1 == null ? void 0 : store$1.getNodeByValue(val);\n        }).filter(function (node) {\n          return !!node && !node.loaded && !node.loading;\n        });\n        if (nodes.length) {\n          nodes.forEach(function (node) {\n            lazyLoad(node, function () {\n              return _syncCheckedValue(false, forced);\n            });\n          });\n        } else {\n          _syncCheckedValue(true, forced);\n        }\n      } else {\n        var _values = multiple ? arrays.castArray(modelValue) : [modelValue];\n        var _nodes = arrays.unique(_values.map(function (val) {\n          return store$1 == null ? void 0 : store$1.getNodeByValue(val, leafOnly);\n        }));\n        syncMenuState(_nodes, forced);\n        checkedValue.value = lodashUnified.cloneDeep(modelValue);\n      }\n    };\n    var syncMenuState = function syncMenuState(newCheckedNodes) {\n      var reserveExpandingState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var checkStrictly = config$1.value.checkStrictly;\n      var oldNodes = checkedNodes.value;\n      var newNodes = newCheckedNodes.filter(function (node) {\n        return !!node && (checkStrictly || node.isLeaf);\n      });\n      var oldExpandingNode = store$1 == null ? void 0 : store$1.getSameNode(expandingNode.value);\n      var newExpandingNode = reserveExpandingState && oldExpandingNode || newNodes[0];\n      if (newExpandingNode) {\n        newExpandingNode.pathNodes.forEach(function (node) {\n          return expandNode(node, true);\n        });\n      } else {\n        expandingNode.value = null;\n      }\n      oldNodes.forEach(function (node) {\n        return node.doCheck(false);\n      });\n      vue.reactive(newNodes).forEach(function (node) {\n        return node.doCheck(true);\n      });\n      checkedNodes.value = newNodes;\n      vue.nextTick(scrollToExpandingNode);\n    };\n    var scrollToExpandingNode = function scrollToExpandingNode() {\n      if (!core.isClient) return;\n      menuList.value.forEach(function (menu) {\n        var menuElement = menu == null ? void 0 : menu.$el;\n        if (menuElement) {\n          var container = menuElement.querySelector(\".\".concat(ns.namespace.value, \"-scrollbar__wrap\"));\n          var activeNode = menuElement.querySelector(\".\".concat(ns.b(\"node\"), \".\").concat(ns.is(\"active\"))) || menuElement.querySelector(\".\".concat(ns.b(\"node\"), \".in-active-path\"));\n          scroll.scrollIntoView(container, activeNode);\n        }\n      });\n    };\n    var handleKeyDown = function handleKeyDown(e) {\n      var target = e.target;\n      var code = e.code;\n      switch (code) {\n        case aria.EVENT_CODE.up:\n        case aria.EVENT_CODE.down:\n          {\n            e.preventDefault();\n            var distance = code === aria.EVENT_CODE.up ? -1 : 1;\n            aria$1.focusNode(aria$1.getSibling(target, distance, \".\".concat(ns.b(\"node\"), \"[tabindex=\\\"-1\\\"]\")));\n            break;\n          }\n        case aria.EVENT_CODE.left:\n          {\n            e.preventDefault();\n            var preMenu = menuList.value[utils.getMenuIndex(target) - 1];\n            var expandedNode = preMenu == null ? void 0 : preMenu.$el.querySelector(\".\".concat(ns.b(\"node\"), \"[aria-expanded=\\\"true\\\"]\"));\n            aria$1.focusNode(expandedNode);\n            break;\n          }\n        case aria.EVENT_CODE.right:\n          {\n            e.preventDefault();\n            var nextMenu = menuList.value[utils.getMenuIndex(target) + 1];\n            var firstNode = nextMenu == null ? void 0 : nextMenu.$el.querySelector(\".\".concat(ns.b(\"node\"), \"[tabindex=\\\"-1\\\"]\"));\n            aria$1.focusNode(firstNode);\n            break;\n          }\n        case aria.EVENT_CODE.enter:\n        case aria.EVENT_CODE.numpadEnter:\n          utils.checkNode(target);\n          break;\n      }\n    };\n    vue.provide(types.CASCADER_PANEL_INJECTION_KEY, vue.reactive({\n      config: config$1,\n      expandingNode: expandingNode,\n      checkedNodes: checkedNodes,\n      isHoverMenu: isHoverMenu,\n      initialLoaded: initialLoaded,\n      renderLabelFn: renderLabelFn,\n      lazyLoad: lazyLoad,\n      expandNode: expandNode,\n      handleCheckChange: handleCheckChange\n    }));\n    vue.watch([config$1, function () {\n      return props.options;\n    }], initStore, {\n      deep: true,\n      immediate: true\n    });\n    vue.watch(function () {\n      return props.modelValue;\n    }, function () {\n      manualChecked = false;\n      _syncCheckedValue();\n    }, {\n      deep: true\n    });\n    vue.watch(function () {\n      return checkedValue.value;\n    }, function (val) {\n      if (!lodashUnified.isEqual(val, props.modelValue)) {\n        emit(event.UPDATE_MODEL_EVENT, val);\n        emit(event.CHANGE_EVENT, val);\n      }\n    });\n    vue.onBeforeUpdate(function () {\n      return menuList.value = [];\n    });\n    vue.onMounted(function () {\n      return !types$1.isEmpty(props.modelValue) && _syncCheckedValue();\n    });\n    return {\n      ns: ns,\n      menuList: menuList,\n      menus: menus,\n      checkedNodes: checkedNodes,\n      handleKeyDown: handleKeyDown,\n      handleCheckChange: handleCheckChange,\n      getFlattedNodes: getFlattedNodes,\n      getCheckedNodes: getCheckedNodes,\n      clearCheckedNodes: clearCheckedNodes,\n      calculateCheckedValue: calculateCheckedValue,\n      scrollToExpandingNode: scrollToExpandingNode\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_cascader_menu = vue.resolveComponent(\"el-cascader-menu\");\n  return vue.openBlock(), vue.createElementBlock(\"div\", {\n    \"class\": vue.normalizeClass([_ctx.ns.b(\"panel\"), _ctx.ns.is(\"bordered\", _ctx.border)]),\n    onKeydown: _ctx.handleKeyDown\n  }, [(vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(_ctx.menus, function (menu, index) {\n    return vue.openBlock(), vue.createBlock(_component_el_cascader_menu, {\n      key: index,\n      ref_for: true,\n      ref: function ref(item) {\n        return _ctx.menuList[index] = item;\n      },\n      index: index,\n      nodes: _toConsumableArray(menu)\n    }, {\n      empty: vue.withCtx(function () {\n        return [vue.renderSlot(_ctx.$slots, \"empty\")];\n      }),\n      _: 2\n    }, 1032, [\"index\", \"nodes\"]);\n  }), 128))], 42, [\"onKeydown\"]);\n}\nvar CascaderPanel = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"index.vue\"]]);\nexports[\"default\"] = CascaderPanel;","map":{"version":3,"names":["_sfc_main","vue","defineComponent","name","components","ElCascaderMenu","menu","props","_objectSpread","config","CommonProps","border","type","Boolean","renderLabel","Function","emits","event","UPDATE_MODEL_EVENT","CHANGE_EVENT","setup","_ref","emit","slots","manualChecked","ns","index","useNamespace","config$1","useCascaderConfig","store$1","initialLoaded","ref","menuList","checkedValue","menus","expandingNode","checkedNodes","isHoverMenu","computed","value","expandTrigger","renderLabelFn","initStore","options","cfg","store","getNodes","lazy","types$1","isEmpty","lazyLoad","list","syncCheckedValue","node$1","cb","node","loading","resolve","dataList","_node","parent","root","appendNodes","loaded","childrenData","expandNode","silent","_a","level","newMenus","slice","newExpandingNode","isLeaf","pathNodes","push","children","uid","pathValues","handleCheckChange","checked","emitClose","arguments","length","undefined","_config$1$value","checkStrictly","multiple","oldNode","doCheck","calculateCheckedValue","expandParentNode","getFlattedNodes","leafOnly","getCheckedNodes","filter","clearCheckedNodes","forEach","_config$1$value2","oldNodes","newNodes","nodes","utils","sortByOriginalOrder","values","map","valueByOption","forced","modelValue","_config$1$value3","lodashUnified","isEqual","arrays","unique","flattenDeep","castArray","val","getNodeByValue","syncMenuState","cloneDeep","newCheckedNodes","reserveExpandingState","oldExpandingNode","getSameNode","reactive","nextTick","scrollToExpandingNode","core","isClient","menuElement","$el","container","querySelector","concat","namespace","activeNode","b","is","scroll","scrollIntoView","handleKeyDown","e","target","code","aria","EVENT_CODE","up","down","preventDefault","distance","aria$1","focusNode","getSibling","left","preMenu","getMenuIndex","expandedNode","right","nextMenu","firstNode","enter","numpadEnter","checkNode","provide","types","CASCADER_PANEL_INJECTION_KEY","watch","deep","immediate","onBeforeUpdate","onMounted","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_component_el_cascader_menu","resolveComponent","openBlock","createElementBlock","normalizeClass","onKeydown","Fragment","renderList","createBlock","key","ref_for","item","_toConsumableArray","empty","withCtx","renderSlot","$slots","_","CascaderPanel","pluginVue_exportHelper"],"sources":["../../../../../../packages/components/cascader-panel/src/index.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"[ns.b('panel'), ns.is('bordered', border)]\"\n    @keydown=\"handleKeyDown\"\n  >\n    <el-cascader-menu\n      v-for=\"(menu, index) in menus\"\n      :key=\"index\"\n      :ref=\"(item) => (menuList[index] = item)\"\n      :index=\"index\"\n      :nodes=\"[...menu]\"\n    >\n      <template #empty>\n        <slot name=\"empty\" />\n      </template>\n    </el-cascader-menu>\n  </div>\n</template>\n\n<script lang=\"ts\">\n// @ts-nocheck\nimport {\n  computed,\n  defineComponent,\n  nextTick,\n  onBeforeUpdate,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  watch,\n} from 'vue'\nimport { cloneDeep, flattenDeep, isEqual } from 'lodash-unified'\nimport {\n  castArray,\n  focusNode,\n  getSibling,\n  isClient,\n  isEmpty,\n  scrollIntoView,\n  unique,\n} from '@element-plus/utils'\nimport {\n  CHANGE_EVENT,\n  EVENT_CODE,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { useNamespace } from '@element-plus/hooks'\n\nimport ElCascaderMenu from './menu.vue'\nimport Store from './store'\nimport Node from './node'\nimport { CommonProps, useCascaderConfig } from './config'\nimport { checkNode, getMenuIndex, sortByOriginalOrder } from './utils'\nimport { CASCADER_PANEL_INJECTION_KEY } from './types'\n\nimport type { PropType } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\nimport type {\n  default as CascaderNode,\n  CascaderNodeValue,\n  CascaderOption,\n  CascaderValue,\n  RenderLabel,\n} from './node'\n\nimport type { ElCascaderPanelContext } from './types'\n\nexport default defineComponent({\n  name: 'ElCascaderPanel',\n\n  components: {\n    ElCascaderMenu,\n  },\n\n  props: {\n    ...CommonProps,\n    border: {\n      type: Boolean,\n      default: true,\n    },\n    renderLabel: Function as PropType<RenderLabel>,\n  },\n\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, 'close', 'expand-change'],\n\n  setup(props, { emit, slots }) {\n    // for interrupt sync check status in lazy mode\n    let manualChecked = false\n\n    const ns = useNamespace('cascader')\n    const config = useCascaderConfig(props)\n\n    let store: Nullable<Store> = null\n    const initialLoaded = ref(true)\n    const menuList = ref<any[]>([])\n    const checkedValue = ref<Nullable<CascaderValue>>(null)\n    const menus = ref<CascaderNode[][]>([])\n    const expandingNode = ref<Nullable<CascaderNode>>(null)\n    const checkedNodes = ref<CascaderNode[]>([])\n\n    const isHoverMenu = computed(() => config.value.expandTrigger === 'hover')\n    const renderLabelFn = computed(() => props.renderLabel || slots.default)\n\n    const initStore = () => {\n      const { options } = props\n      const cfg = config.value\n\n      manualChecked = false\n      store = new Store(options, cfg)\n      menus.value = [store.getNodes()]\n\n      if (cfg.lazy && isEmpty(props.options)) {\n        initialLoaded.value = false\n        lazyLoad(undefined, (list) => {\n          if (list) {\n            store = new Store(list, cfg)\n            menus.value = [store.getNodes()]\n          }\n          initialLoaded.value = true\n          syncCheckedValue(false, true)\n        })\n      } else {\n        syncCheckedValue(false, true)\n      }\n    }\n\n    const lazyLoad: ElCascaderPanelContext['lazyLoad'] = (node, cb) => {\n      const cfg = config.value\n      node! = node || new Node({}, cfg, undefined, true)\n      node.loading = true\n\n      const resolve = (dataList: CascaderOption[]) => {\n        const _node = node as Node\n        const parent = _node.root ? null : _node\n        dataList && store?.appendNodes(dataList, parent as any)\n        _node.loading = false\n        _node.loaded = true\n        _node.childrenData = _node.childrenData || []\n        cb && cb(dataList)\n      }\n\n      cfg.lazyLoad(node, resolve as any)\n    }\n\n    const expandNode: ElCascaderPanelContext['expandNode'] = (node, silent) => {\n      const { level } = node\n      const newMenus = menus.value.slice(0, level)\n      let newExpandingNode: Nullable<CascaderNode>\n\n      if (node.isLeaf) {\n        newExpandingNode = node.pathNodes[level - 2]\n      } else {\n        newExpandingNode = node\n        newMenus.push(node.children)\n      }\n\n      if (expandingNode.value?.uid !== newExpandingNode?.uid) {\n        expandingNode.value = node\n        menus.value = newMenus\n        !silent && emit('expand-change', node?.pathValues || [])\n      }\n    }\n\n    const handleCheckChange: ElCascaderPanelContext['handleCheckChange'] = (\n      node,\n      checked,\n      emitClose = true\n    ) => {\n      const { checkStrictly, multiple } = config.value\n      const oldNode = checkedNodes.value[0]\n      manualChecked = true\n\n      !multiple && oldNode?.doCheck(false)\n      node.doCheck(checked)\n      calculateCheckedValue()\n      emitClose && !multiple && !checkStrictly && emit('close')\n      !emitClose && !multiple && !checkStrictly && expandParentNode(node)\n    }\n\n    const expandParentNode = (node) => {\n      if (!node) return\n      node = node.parent\n      expandParentNode(node)\n      node && expandNode(node)\n    }\n\n    const getFlattedNodes = (leafOnly: boolean) => {\n      return store?.getFlattedNodes(leafOnly)\n    }\n\n    const getCheckedNodes = (leafOnly: boolean) => {\n      return getFlattedNodes(leafOnly)?.filter((node) => node.checked !== false)\n    }\n\n    const clearCheckedNodes = () => {\n      checkedNodes.value.forEach((node) => node.doCheck(false))\n      calculateCheckedValue()\n      menus.value = menus.value.slice(0, 1)\n      expandingNode.value = null\n      emit('expand-change', [])\n    }\n\n    const calculateCheckedValue = () => {\n      const { checkStrictly, multiple } = config.value\n      const oldNodes = checkedNodes.value\n      const newNodes = getCheckedNodes(!checkStrictly)!\n      // ensure the original order\n      const nodes = sortByOriginalOrder(oldNodes, newNodes)\n      const values = nodes.map((node) => node.valueByOption)\n      checkedNodes.value = nodes\n      checkedValue.value = multiple ? values : values[0] ?? null\n    }\n\n    const syncCheckedValue = (loaded = false, forced = false) => {\n      const { modelValue } = props\n      const { lazy, multiple, checkStrictly } = config.value\n      const leafOnly = !checkStrictly\n\n      if (\n        !initialLoaded.value ||\n        manualChecked ||\n        (!forced && isEqual(modelValue, checkedValue.value))\n      )\n        return\n\n      if (lazy && !loaded) {\n        const values: CascaderNodeValue[] = unique(\n          flattenDeep(castArray(modelValue))\n        )\n        const nodes = values\n          .map((val) => store?.getNodeByValue(val))\n          .filter((node) => !!node && !node.loaded && !node.loading) as Node[]\n\n        if (nodes.length) {\n          nodes.forEach((node) => {\n            lazyLoad(node, () => syncCheckedValue(false, forced))\n          })\n        } else {\n          syncCheckedValue(true, forced)\n        }\n      } else {\n        const values = multiple ? castArray(modelValue) : [modelValue]\n        const nodes = unique(\n          values.map((val) => store?.getNodeByValue(val, leafOnly))\n        ) as Node[]\n        syncMenuState(nodes, forced)\n        checkedValue.value = cloneDeep(modelValue)\n      }\n    }\n\n    const syncMenuState = (\n      newCheckedNodes: CascaderNode[],\n      reserveExpandingState = true\n    ) => {\n      const { checkStrictly } = config.value\n      const oldNodes = checkedNodes.value\n      const newNodes = newCheckedNodes.filter(\n        (node) => !!node && (checkStrictly || node.isLeaf)\n      )\n      const oldExpandingNode = store?.getSameNode(expandingNode.value!)\n      const newExpandingNode =\n        (reserveExpandingState && oldExpandingNode) || newNodes[0]\n\n      if (newExpandingNode) {\n        newExpandingNode.pathNodes.forEach((node) => expandNode(node, true))\n      } else {\n        expandingNode.value = null\n      }\n\n      oldNodes.forEach((node) => node.doCheck(false))\n      reactive(newNodes).forEach((node) => node.doCheck(true))\n      checkedNodes.value = newNodes\n      nextTick(scrollToExpandingNode)\n    }\n\n    const scrollToExpandingNode = () => {\n      if (!isClient) return\n\n      menuList.value.forEach((menu) => {\n        const menuElement = menu?.$el\n        if (menuElement) {\n          const container = menuElement.querySelector(\n            `.${ns.namespace.value}-scrollbar__wrap`\n          )\n          const activeNode =\n            menuElement.querySelector(`.${ns.b('node')}.${ns.is('active')}`) ||\n            menuElement.querySelector(`.${ns.b('node')}.in-active-path`)\n          scrollIntoView(container, activeNode)\n        }\n      })\n    }\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const target = e.target as HTMLElement\n      const { code } = e\n\n      switch (code) {\n        case EVENT_CODE.up:\n        case EVENT_CODE.down: {\n          e.preventDefault()\n          const distance = code === EVENT_CODE.up ? -1 : 1\n          focusNode(\n            getSibling(target, distance, `.${ns.b('node')}[tabindex=\"-1\"]`)\n          )\n          break\n        }\n        case EVENT_CODE.left: {\n          e.preventDefault()\n          const preMenu = menuList.value[getMenuIndex(target) - 1]\n          const expandedNode = preMenu?.$el.querySelector(\n            `.${ns.b('node')}[aria-expanded=\"true\"]`\n          )\n          focusNode(expandedNode)\n          break\n        }\n        case EVENT_CODE.right: {\n          e.preventDefault()\n          const nextMenu = menuList.value[getMenuIndex(target) + 1]\n          const firstNode = nextMenu?.$el.querySelector(\n            `.${ns.b('node')}[tabindex=\"-1\"]`\n          )\n          focusNode(firstNode)\n          break\n        }\n        case EVENT_CODE.enter:\n        case EVENT_CODE.numpadEnter:\n          checkNode(target)\n          break\n      }\n    }\n\n    provide(\n      CASCADER_PANEL_INJECTION_KEY,\n      reactive({\n        config,\n        expandingNode,\n        checkedNodes,\n        isHoverMenu,\n        initialLoaded,\n        renderLabelFn,\n        lazyLoad,\n        expandNode,\n        handleCheckChange,\n      })\n    )\n\n    watch([config, () => props.options], initStore, {\n      deep: true,\n      immediate: true,\n    })\n\n    watch(\n      () => props.modelValue,\n      () => {\n        manualChecked = false\n        syncCheckedValue()\n      },\n      {\n        deep: true,\n      }\n    )\n\n    watch(\n      () => checkedValue.value,\n      (val) => {\n        if (!isEqual(val, props.modelValue)) {\n          emit(UPDATE_MODEL_EVENT, val)\n          emit(CHANGE_EVENT, val)\n        }\n      }\n    )\n\n    onBeforeUpdate(() => (menuList.value = []))\n\n    onMounted(() => !isEmpty(props.modelValue) && syncCheckedValue())\n\n    return {\n      ns,\n      menuList,\n      menus,\n      checkedNodes,\n      handleKeyDown,\n      handleCheckChange,\n      getFlattedNodes,\n      /**\n       * @description get an array of currently selected node,(leafOnly) whether only return the leaf checked nodes, default is `false`\n       */\n      getCheckedNodes,\n      /**\n       * @description clear checked nodes\n       */\n      clearCheckedNodes,\n      calculateCheckedValue,\n      scrollToExpandingNode,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}