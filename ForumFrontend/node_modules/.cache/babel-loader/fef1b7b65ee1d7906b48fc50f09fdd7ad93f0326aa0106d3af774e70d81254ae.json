{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nimport ElementPlus from 'element-plus';\nimport 'element-plus/dist/index.css';\nimport axios from 'axios';\n\n// 配置axios基础URL\naxios.defaults.baseURL = 'http://localhost:8000/api/v1';\n\n// 添加请求拦截器，在请求头中加token\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 添加响应拦截器\naxios.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response) {\n    if (error.response.status === 401) {\n      // 未授权，清除token并跳转到登录页\n      localStorage.removeItem('token');\n      router.push('/login');\n    }\n  }\n  return Promise.reject(error);\n});\nconst app = createApp(App);\napp.use(store);\napp.use(router);\napp.use(ElementPlus);\n\n// 全局挂载axios\napp.config.globalProperties.$axios = axios;\napp.mount('#app');","map":{"version":3,"names":["createApp","App","router","store","ElementPlus","axios","defaults","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","status","removeItem","push","app","globalProperties","$axios","mount"],"sources":["H:/ForumServers/ForumFrontend/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport axios from 'axios'\n\n// 配置axios基础URL\naxios.defaults.baseURL = 'http://localhost:8000/api/v1'\n\n// 添加请求拦截器，在请求头中加token\naxios.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`\n    }\n    return config\n  },\n  error => {\n    return Promise.reject(error)\n  }\n)\n\n// 添加响应拦截器\naxios.interceptors.response.use(\n  response => {\n    return response\n  },\n  error => {\n    if (error.response) {\n      if (error.response.status === 401) {\n        // 未授权，清除token并跳转到登录页\n        localStorage.removeItem('token')\n        router.push('/login')\n      }\n    }\n    return Promise.reject(error)\n  }\n)\n\nconst app = createApp(App)\n\napp.use(store)\napp.use(router)\napp.use(ElementPlus)\n\n// 全局挂载axios\napp.config.globalProperties.$axios = axios\n\napp.mount('#app')\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAO,6BAA6B;AACpC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACAA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,8BAA8B;;AAEvD;AACAF,KAAK,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAC5BC,MAAM,IAAI;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACDM,KAAK,IAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,KAAK,CAACG,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC7BU,QAAQ,IAAI;EACV,OAAOA,QAAQ;AACjB,CAAC,EACDH,KAAK,IAAI;EACP,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAClB,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACjC;MACAR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;MAChCpB,MAAM,CAACqB,IAAI,CAAC,QAAQ,CAAC;IACvB;EACF;EACA,OAAOL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,MAAMO,GAAG,GAAGxB,SAAS,CAACC,GAAG,CAAC;AAE1BuB,GAAG,CAACd,GAAG,CAACP,KAAK,CAAC;AACdqB,GAAG,CAACd,GAAG,CAACR,MAAM,CAAC;AACfsB,GAAG,CAACd,GAAG,CAACN,WAAW,CAAC;;AAEpB;AACAoB,GAAG,CAACb,MAAM,CAACc,gBAAgB,CAACC,MAAM,GAAGrB,KAAK;AAE1CmB,GAAG,CAACG,KAAK,CAAC,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}