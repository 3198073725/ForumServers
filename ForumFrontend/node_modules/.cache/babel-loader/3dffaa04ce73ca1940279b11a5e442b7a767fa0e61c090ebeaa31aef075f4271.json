{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nvar _toConsumableArray = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/toConsumableArray.js\")[\"default\"];\nrequire(\"core-js/modules/es.array.for-each.js\");\nrequire(\"core-js/modules/es.array.index-of.js\");\nrequire(\"core-js/modules/es.array.map.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.array.splice.js\");\nrequire(\"core-js/modules/es.iterator.constructor.js\");\nrequire(\"core-js/modules/es.iterator.for-each.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar lodashUnified = require('lodash-unified');\nvar constants = require('../constants.js');\nvar types = require('../../../../utils/types.js');\nvar useRow = function useRow(props, _ref) {\n  var mainTableRef = _ref.mainTableRef,\n    leftTableRef = _ref.leftTableRef,\n    rightTableRef = _ref.rightTableRef,\n    tableInstance = _ref.tableInstance,\n    ns = _ref.ns,\n    isScrolling = _ref.isScrolling;\n  var vm = vue.getCurrentInstance();\n  var emit = vm.emit;\n  var isResetting = vue.shallowRef(false);\n  var expandedRowKeys = vue.ref(props.defaultExpandedRowKeys || []);\n  var lastRenderedRowIndex = vue.ref(-1);\n  var resetIndex = vue.shallowRef(null);\n  var rowHeights = vue.ref({});\n  var pendingRowHeights = vue.ref({});\n  var leftTableHeights = vue.shallowRef({});\n  var mainTableHeights = vue.shallowRef({});\n  var rightTableHeights = vue.shallowRef({});\n  var isDynamic = vue.computed(function () {\n    return types.isNumber(props.estimatedRowHeight);\n  });\n  function onRowsRendered(params) {\n    var _a;\n    (_a = props.onRowsRendered) == null ? void 0 : _a.call(props, params);\n    if (params.rowCacheEnd > vue.unref(lastRenderedRowIndex)) {\n      lastRenderedRowIndex.value = params.rowCacheEnd;\n    }\n  }\n  function onRowHovered(_ref2) {\n    var hovered = _ref2.hovered,\n      rowKey = _ref2.rowKey;\n    if (isScrolling.value) {\n      return;\n    }\n    var tableRoot = tableInstance.vnode.el;\n    var rows = tableRoot.querySelectorAll(\"[rowkey=\\\"\".concat(String(rowKey), \"\\\"]\"));\n    rows.forEach(function (row) {\n      if (hovered) {\n        row.classList.add(ns.is(\"hovered\"));\n      } else {\n        row.classList.remove(ns.is(\"hovered\"));\n      }\n    });\n  }\n  function onRowExpanded(_ref3) {\n    var expanded = _ref3.expanded,\n      rowData = _ref3.rowData,\n      rowIndex = _ref3.rowIndex,\n      rowKey = _ref3.rowKey;\n    var _a, _b;\n    var _expandedRowKeys = _toConsumableArray(vue.unref(expandedRowKeys));\n    var currentKeyIndex = _expandedRowKeys.indexOf(rowKey);\n    if (expanded) {\n      if (currentKeyIndex === -1) _expandedRowKeys.push(rowKey);\n    } else {\n      if (currentKeyIndex > -1) _expandedRowKeys.splice(currentKeyIndex, 1);\n    }\n    expandedRowKeys.value = _expandedRowKeys;\n    emit(\"update:expandedRowKeys\", _expandedRowKeys);\n    (_a = props.onRowExpand) == null ? void 0 : _a.call(props, {\n      expanded: expanded,\n      rowData: rowData,\n      rowIndex: rowIndex,\n      rowKey: rowKey\n    });\n    (_b = props.onExpandedRowsChange) == null ? void 0 : _b.call(props, _expandedRowKeys);\n  }\n  var flushingRowHeights = lodashUnified.debounce(function () {\n    var _a, _b, _c, _d;\n    isResetting.value = true;\n    rowHeights.value = _objectSpread(_objectSpread({}, vue.unref(rowHeights)), vue.unref(pendingRowHeights));\n    resetAfterIndex(vue.unref(resetIndex), false);\n    pendingRowHeights.value = {};\n    resetIndex.value = null;\n    (_a = mainTableRef.value) == null ? void 0 : _a.forceUpdate();\n    (_b = leftTableRef.value) == null ? void 0 : _b.forceUpdate();\n    (_c = rightTableRef.value) == null ? void 0 : _c.forceUpdate();\n    (_d = vm.proxy) == null ? void 0 : _d.$forceUpdate();\n    isResetting.value = false;\n  }, 0);\n  function resetAfterIndex(index) {\n    var forceUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!vue.unref(isDynamic)) return;\n    [mainTableRef, leftTableRef, rightTableRef].forEach(function (tableRef) {\n      var table = vue.unref(tableRef);\n      if (table) table.resetAfterRowIndex(index, forceUpdate);\n    });\n  }\n  function resetHeights(rowKey, height, rowIdx) {\n    var resetIdx = vue.unref(resetIndex);\n    if (resetIdx === null) {\n      resetIndex.value = rowIdx;\n    } else {\n      if (resetIdx > rowIdx) {\n        resetIndex.value = rowIdx;\n      }\n    }\n    pendingRowHeights.value[rowKey] = height;\n  }\n  function onRowHeightChange(_ref4, fixedDir) {\n    var rowKey = _ref4.rowKey,\n      height = _ref4.height,\n      rowIndex = _ref4.rowIndex;\n    if (!fixedDir) {\n      mainTableHeights.value[rowKey] = height;\n    } else {\n      if (fixedDir === constants.FixedDir.RIGHT) {\n        rightTableHeights.value[rowKey] = height;\n      } else {\n        leftTableHeights.value[rowKey] = height;\n      }\n    }\n    var maximumHeight = Math.max.apply(Math, _toConsumableArray([leftTableHeights, rightTableHeights, mainTableHeights].map(function (records) {\n      return records.value[rowKey] || 0;\n    })));\n    if (vue.unref(rowHeights)[rowKey] !== maximumHeight) {\n      resetHeights(rowKey, maximumHeight, rowIndex);\n      flushingRowHeights();\n    }\n  }\n  return {\n    expandedRowKeys: expandedRowKeys,\n    lastRenderedRowIndex: lastRenderedRowIndex,\n    isDynamic: isDynamic,\n    isResetting: isResetting,\n    rowHeights: rowHeights,\n    resetAfterIndex: resetAfterIndex,\n    onRowExpanded: onRowExpanded,\n    onRowHovered: onRowHovered,\n    onRowsRendered: onRowsRendered,\n    onRowHeightChange: onRowHeightChange\n  };\n};\nexports.useRow = useRow;","map":{"version":3,"names":["useRow","props","_ref","mainTableRef","leftTableRef","rightTableRef","tableInstance","ns","isScrolling","vm","vue","getCurrentInstance","emit","isResetting","shallowRef","expandedRowKeys","ref","defaultExpandedRowKeys","lastRenderedRowIndex","resetIndex","rowHeights","pendingRowHeights","leftTableHeights","mainTableHeights","rightTableHeights","isDynamic","computed","types","isNumber","estimatedRowHeight","onRowsRendered","params","_a","call","rowCacheEnd","unref","value","onRowHovered","_ref2","hovered","rowKey","tableRoot","vnode","el","rows","querySelectorAll","concat","String","forEach","row","classList","add","is","remove","onRowExpanded","_ref3","expanded","rowData","rowIndex","_b","_expandedRowKeys","_toConsumableArray","currentKeyIndex","indexOf","push","splice","onRowExpand","onExpandedRowsChange","flushingRowHeights","lodashUnified","debounce","_c","_d","_objectSpread","resetAfterIndex","forceUpdate","proxy","$forceUpdate","index","arguments","length","undefined","tableRef","table","resetAfterRowIndex","resetHeights","height","rowIdx","resetIdx","onRowHeightChange","_ref4","fixedDir","constants","FixedDir","RIGHT","maximumHeight","Math","max","apply","map","records"],"sources":["../../../../../../../packages/components/table-v2/src/composables/use-row.ts"],"sourcesContent":["import { computed, getCurrentInstance, ref, shallowRef, unref } from 'vue'\nimport { debounce } from 'lodash-unified'\nimport { isNumber } from '@element-plus/utils'\nimport { FixedDir } from '../constants'\n\nimport type { ComponentInternalInstance, Ref, ShallowRef } from 'vue'\nimport type { TableV2Props } from '../table'\nimport type {\n  RowExpandParams,\n  RowHeightChangedParams,\n  RowHoverParams,\n} from '../row'\nimport type { FixedDirection, KeyType } from '../types'\nimport type { onRowRenderedParams } from '../grid'\nimport type { TableGridInstance } from '../table-grid'\nimport type { UseNamespaceReturn } from '@element-plus/hooks'\n\ntype Heights = Record<KeyType, number>\ntype GridInstanceRef = Ref<TableGridInstance | undefined>\n\ntype UseRowProps = {\n  mainTableRef: GridInstanceRef\n  leftTableRef: GridInstanceRef\n  rightTableRef: GridInstanceRef\n  tableInstance: ComponentInternalInstance\n  ns: UseNamespaceReturn\n  isScrolling: ShallowRef<boolean>\n}\n\nexport const useRow = (\n  props: TableV2Props,\n  {\n    mainTableRef,\n    leftTableRef,\n    rightTableRef,\n    tableInstance,\n    ns,\n    isScrolling,\n  }: UseRowProps\n) => {\n  const vm = getCurrentInstance()!\n  const { emit } = vm\n  const isResetting = shallowRef(false)\n  const expandedRowKeys = ref<KeyType[]>(props.defaultExpandedRowKeys || [])\n  const lastRenderedRowIndex = ref(-1)\n  const resetIndex = shallowRef<number | null>(null)\n  const rowHeights = ref<Heights>({})\n  const pendingRowHeights = ref<Heights>({})\n  const leftTableHeights = shallowRef<Heights>({})\n  const mainTableHeights = shallowRef<Heights>({})\n  const rightTableHeights = shallowRef<Heights>({})\n  const isDynamic = computed(() => isNumber(props.estimatedRowHeight))\n\n  function onRowsRendered(params: onRowRenderedParams) {\n    props.onRowsRendered?.(params)\n\n    if (params.rowCacheEnd > unref(lastRenderedRowIndex)) {\n      lastRenderedRowIndex.value = params.rowCacheEnd\n    }\n  }\n\n  function onRowHovered({ hovered, rowKey }: RowHoverParams) {\n    if (isScrolling.value) {\n      return\n    }\n    const tableRoot = tableInstance!.vnode.el as HTMLElement\n    const rows = tableRoot.querySelectorAll(`[rowkey=\"${String(rowKey)}\"]`)\n    rows.forEach((row) => {\n      if (hovered) {\n        row.classList.add(ns.is('hovered'))\n      } else {\n        row.classList.remove(ns.is('hovered'))\n      }\n    })\n  }\n\n  function onRowExpanded({\n    expanded,\n    rowData,\n    rowIndex,\n    rowKey,\n  }: RowExpandParams) {\n    const _expandedRowKeys = [...unref(expandedRowKeys)]\n    const currentKeyIndex = _expandedRowKeys.indexOf(rowKey)\n    if (expanded) {\n      if (currentKeyIndex === -1) _expandedRowKeys.push(rowKey)\n    } else {\n      if (currentKeyIndex > -1) _expandedRowKeys.splice(currentKeyIndex, 1)\n    }\n    expandedRowKeys.value = _expandedRowKeys\n\n    emit('update:expandedRowKeys', _expandedRowKeys)\n    props.onRowExpand?.({\n      expanded,\n      rowData,\n      rowIndex,\n      rowKey,\n    })\n    // If this is not controlled, then use this to notify changes\n    props.onExpandedRowsChange?.(_expandedRowKeys)\n  }\n\n  const flushingRowHeights = debounce(() => {\n    isResetting.value = true\n    rowHeights.value = { ...unref(rowHeights), ...unref(pendingRowHeights) }\n    resetAfterIndex(unref(resetIndex)!, false)\n    pendingRowHeights.value = {}\n    // force update\n    resetIndex.value = null\n    mainTableRef.value?.forceUpdate()\n    leftTableRef.value?.forceUpdate()\n    rightTableRef.value?.forceUpdate()\n    vm.proxy?.$forceUpdate()\n    isResetting.value = false\n  }, 0)\n\n  function resetAfterIndex(index: number, forceUpdate = false) {\n    if (!unref(isDynamic)) return\n    ;[mainTableRef, leftTableRef, rightTableRef].forEach((tableRef) => {\n      const table = unref(tableRef)\n      if (table) table.resetAfterRowIndex(index, forceUpdate)\n    })\n  }\n\n  function resetHeights(rowKey: KeyType, height: number, rowIdx: number) {\n    const resetIdx = unref(resetIndex)\n    if (resetIdx === null) {\n      resetIndex.value = rowIdx\n    } else {\n      if (resetIdx > rowIdx) {\n        resetIndex.value = rowIdx\n      }\n    }\n\n    pendingRowHeights.value[rowKey] = height\n  }\n\n  function onRowHeightChange(\n    { rowKey, height, rowIndex }: RowHeightChangedParams,\n    fixedDir: FixedDirection\n  ) {\n    if (!fixedDir) {\n      mainTableHeights.value[rowKey] = height\n    } else {\n      if (fixedDir === FixedDir.RIGHT) {\n        rightTableHeights.value[rowKey] = height\n      } else {\n        leftTableHeights.value[rowKey] = height\n      }\n    }\n\n    const maximumHeight = Math.max(\n      ...[leftTableHeights, rightTableHeights, mainTableHeights].map(\n        (records) => records.value[rowKey] || 0\n      )\n    )\n\n    if (unref(rowHeights)[rowKey] !== maximumHeight) {\n      resetHeights(rowKey, maximumHeight, rowIndex)\n      flushingRowHeights()\n    }\n  }\n\n  return {\n    expandedRowKeys,\n    lastRenderedRowIndex,\n    isDynamic,\n    isResetting,\n    rowHeights,\n\n    resetAfterIndex,\n    onRowExpanded,\n    onRowHovered,\n    onRowsRendered,\n    onRowHeightChange,\n  }\n}\n\nexport type UseRowReturn = ReturnType<typeof useRow>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}