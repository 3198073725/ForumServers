{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar iconsVue = require('@element-plus/icons-vue');\nvar index$4 = require('../../overlay/index.js');\nvar focusTrap = require('../../focus-trap/src/focus-trap.js');\nvar index$3 = require('../../teleport/index.js');\nvar index$5 = require('../../icon/index.js');\nvar drawer = require('./drawer2.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar useDialog = require('../../dialog/src/use-dialog.js');\nvar index = require('../../../hooks/use-deprecated/index.js');\nvar index$1 = require('../../../hooks/use-namespace/index.js');\nvar index$2 = require('../../../hooks/use-locale/index.js');\nvar style = require('../../../utils/dom/style.js');\nvar __default__ = vue.defineComponent({\n  name: \"ElDrawer\",\n  inheritAttrs: false\n});\nvar _sfc_main = /* @__PURE__ */vue.defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: drawer.drawerProps,\n  emits: drawer.drawerEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var slots = vue.useSlots();\n    index.useDeprecated({\n      scope: \"el-drawer\",\n      from: \"the title slot\",\n      replacement: \"the header slot\",\n      version: \"3.0.0\",\n      ref: \"https://element-plus.org/en-US/component/drawer.html#slots\"\n    }, vue.computed(function () {\n      return !!slots.title;\n    }));\n    var drawerRef = vue.ref();\n    var focusStartRef = vue.ref();\n    var ns = index$1.useNamespace(\"drawer\");\n    var _index$2$useLocale = index$2.useLocale(),\n      t = _index$2$useLocale.t;\n    var _useDialog$useDialog = useDialog.useDialog(props, drawerRef),\n      afterEnter = _useDialog$useDialog.afterEnter,\n      afterLeave = _useDialog$useDialog.afterLeave,\n      beforeLeave = _useDialog$useDialog.beforeLeave,\n      visible = _useDialog$useDialog.visible,\n      rendered = _useDialog$useDialog.rendered,\n      titleId = _useDialog$useDialog.titleId,\n      bodyId = _useDialog$useDialog.bodyId,\n      zIndex = _useDialog$useDialog.zIndex,\n      onModalClick = _useDialog$useDialog.onModalClick,\n      onOpenAutoFocus = _useDialog$useDialog.onOpenAutoFocus,\n      onCloseAutoFocus = _useDialog$useDialog.onCloseAutoFocus,\n      onFocusoutPrevented = _useDialog$useDialog.onFocusoutPrevented,\n      onCloseRequested = _useDialog$useDialog.onCloseRequested,\n      handleClose = _useDialog$useDialog.handleClose;\n    var isHorizontal = vue.computed(function () {\n      return props.direction === \"rtl\" || props.direction === \"ltr\";\n    });\n    var drawerSize = vue.computed(function () {\n      return style.addUnit(props.size);\n    });\n    expose({\n      handleClose: handleClose,\n      afterEnter: afterEnter,\n      afterLeave: afterLeave\n    });\n    return function (_ctx, _cache) {\n      return vue.openBlock(), vue.createBlock(vue.unref(index$3.ElTeleport), {\n        to: _ctx.appendTo,\n        disabled: _ctx.appendTo !== \"body\" ? false : !_ctx.appendToBody\n      }, {\n        \"default\": vue.withCtx(function () {\n          return [vue.createVNode(vue.Transition, {\n            name: vue.unref(ns).b(\"fade\"),\n            onAfterEnter: vue.unref(afterEnter),\n            onAfterLeave: vue.unref(afterLeave),\n            onBeforeLeave: vue.unref(beforeLeave),\n            persisted: \"\"\n          }, {\n            \"default\": vue.withCtx(function () {\n              return [vue.withDirectives(vue.createVNode(vue.unref(index$4.ElOverlay), {\n                mask: _ctx.modal,\n                \"overlay-class\": _ctx.modalClass,\n                \"z-index\": vue.unref(zIndex),\n                onClick: vue.unref(onModalClick)\n              }, {\n                \"default\": vue.withCtx(function () {\n                  return [vue.createVNode(vue.unref(focusTrap[\"default\"]), {\n                    loop: \"\",\n                    trapped: vue.unref(visible),\n                    \"focus-trap-el\": drawerRef.value,\n                    \"focus-start-el\": focusStartRef.value,\n                    onFocusAfterTrapped: vue.unref(onOpenAutoFocus),\n                    onFocusAfterReleased: vue.unref(onCloseAutoFocus),\n                    onFocusoutPrevented: vue.unref(onFocusoutPrevented),\n                    onReleaseRequested: vue.unref(onCloseRequested)\n                  }, {\n                    \"default\": vue.withCtx(function () {\n                      return [vue.createElementVNode(\"div\", vue.mergeProps({\n                        ref_key: \"drawerRef\",\n                        ref: drawerRef,\n                        \"aria-modal\": \"true\",\n                        \"aria-label\": _ctx.title || void 0,\n                        \"aria-labelledby\": !_ctx.title ? vue.unref(titleId) : void 0,\n                        \"aria-describedby\": vue.unref(bodyId)\n                      }, _ctx.$attrs, {\n                        \"class\": [vue.unref(ns).b(), _ctx.direction, vue.unref(visible) && \"open\"],\n                        style: vue.unref(isHorizontal) ? \"width: \" + vue.unref(drawerSize) : \"height: \" + vue.unref(drawerSize),\n                        role: \"dialog\",\n                        onClick: vue.withModifiers(function () {}, [\"stop\"])\n                      }), [vue.createElementVNode(\"span\", {\n                        ref_key: \"focusStartRef\",\n                        ref: focusStartRef,\n                        \"class\": vue.normalizeClass(vue.unref(ns).e(\"sr-focus\")),\n                        tabindex: \"-1\"\n                      }, null, 2), _ctx.withHeader ? (vue.openBlock(), vue.createElementBlock(\"header\", {\n                        key: 0,\n                        \"class\": vue.normalizeClass([vue.unref(ns).e(\"header\"), _ctx.headerClass])\n                      }, [!_ctx.$slots.title ? vue.renderSlot(_ctx.$slots, \"header\", {\n                        key: 0,\n                        close: vue.unref(handleClose),\n                        titleId: vue.unref(titleId),\n                        titleClass: vue.unref(ns).e(\"title\")\n                      }, function () {\n                        return [!_ctx.$slots.title ? (vue.openBlock(), vue.createElementBlock(\"span\", {\n                          key: 0,\n                          id: vue.unref(titleId),\n                          role: \"heading\",\n                          \"aria-level\": _ctx.headerAriaLevel,\n                          \"class\": vue.normalizeClass(vue.unref(ns).e(\"title\"))\n                        }, vue.toDisplayString(_ctx.title), 11, [\"id\", \"aria-level\"])) : vue.createCommentVNode(\"v-if\", true)];\n                      }) : vue.renderSlot(_ctx.$slots, \"title\", {\n                        key: 1\n                      }, function () {\n                        return [vue.createCommentVNode(\" DEPRECATED SLOT \")];\n                      }), _ctx.showClose ? (vue.openBlock(), vue.createElementBlock(\"button\", {\n                        key: 2,\n                        \"aria-label\": vue.unref(t)(\"el.drawer.close\"),\n                        \"class\": vue.normalizeClass(vue.unref(ns).e(\"close-btn\")),\n                        type: \"button\",\n                        onClick: vue.unref(handleClose)\n                      }, [vue.createVNode(vue.unref(index$5.ElIcon), {\n                        \"class\": vue.normalizeClass(vue.unref(ns).e(\"close\"))\n                      }, {\n                        \"default\": vue.withCtx(function () {\n                          return [vue.createVNode(vue.unref(iconsVue.Close))];\n                        }),\n                        _: 1\n                      }, 8, [\"class\"])], 10, [\"aria-label\", \"onClick\"])) : vue.createCommentVNode(\"v-if\", true)], 2)) : vue.createCommentVNode(\"v-if\", true), vue.unref(rendered) ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n                        key: 1,\n                        id: vue.unref(bodyId),\n                        \"class\": vue.normalizeClass([vue.unref(ns).e(\"body\"), _ctx.bodyClass])\n                      }, [vue.renderSlot(_ctx.$slots, \"default\")], 10, [\"id\"])) : vue.createCommentVNode(\"v-if\", true), _ctx.$slots.footer ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n                        key: 2,\n                        \"class\": vue.normalizeClass([vue.unref(ns).e(\"footer\"), _ctx.footerClass])\n                      }, [vue.renderSlot(_ctx.$slots, \"footer\")], 2)) : vue.createCommentVNode(\"v-if\", true)], 16, [\"aria-label\", \"aria-labelledby\", \"aria-describedby\", \"onClick\"])];\n                    }),\n                    _: 3\n                  }, 8, [\"trapped\", \"focus-trap-el\", \"focus-start-el\", \"onFocusAfterTrapped\", \"onFocusAfterReleased\", \"onFocusoutPrevented\", \"onReleaseRequested\"])];\n                }),\n                _: 3\n              }, 8, [\"mask\", \"overlay-class\", \"z-index\", \"onClick\"]), [[vue.vShow, vue.unref(visible)]])];\n            }),\n            _: 3\n          }, 8, [\"name\", \"onAfterEnter\", \"onAfterLeave\", \"onBeforeLeave\"])];\n        }),\n        _: 3\n      }, 8, [\"to\", \"disabled\"]);\n    };\n  }\n}));\nvar Drawer = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"drawer.vue\"]]);\nexports[\"default\"] = Drawer;","map":{"version":3,"names":["name","inheritAttrs","slots","vue","useSlots","index","useDeprecated","scope","from","replacement","version","ref","computed","title","drawerRef","focusStartRef","ns","index$1","useNamespace","_index$2$useLocale","index$2","useLocale","t","_useDialog$useDialog","useDialog","props","afterEnter","afterLeave","beforeLeave","visible","rendered","titleId","bodyId","zIndex","onModalClick","onOpenAutoFocus","onCloseAutoFocus","onFocusoutPrevented","onCloseRequested","handleClose","isHorizontal","direction","drawerSize","style","addUnit","size","expose","_ctx","_cache","openBlock","createBlock","unref","index$3","ElTeleport","to","appendTo","disabled","appendToBody"],"sources":["../../../../../../packages/components/drawer/src/drawer.vue"],"sourcesContent":["<template>\n  <el-teleport\n    :to=\"appendTo\"\n    :disabled=\"appendTo !== 'body' ? false : !appendToBody\"\n  >\n    <transition\n      :name=\"ns.b('fade')\"\n      @after-enter=\"afterEnter\"\n      @after-leave=\"afterLeave\"\n      @before-leave=\"beforeLeave\"\n    >\n      <el-overlay\n        v-show=\"visible\"\n        :mask=\"modal\"\n        :overlay-class=\"modalClass\"\n        :z-index=\"zIndex\"\n        @click=\"onModalClick\"\n      >\n        <el-focus-trap\n          loop\n          :trapped=\"visible\"\n          :focus-trap-el=\"drawerRef\"\n          :focus-start-el=\"focusStartRef\"\n          @focus-after-trapped=\"onOpenAutoFocus\"\n          @focus-after-released=\"onCloseAutoFocus\"\n          @focusout-prevented=\"onFocusoutPrevented\"\n          @release-requested=\"onCloseRequested\"\n        >\n          <div\n            ref=\"drawerRef\"\n            aria-modal=\"true\"\n            :aria-label=\"title || undefined\"\n            :aria-labelledby=\"!title ? titleId : undefined\"\n            :aria-describedby=\"bodyId\"\n            v-bind=\"$attrs\"\n            :class=\"[ns.b(), direction, visible && 'open']\"\n            :style=\"\n              isHorizontal ? 'width: ' + drawerSize : 'height: ' + drawerSize\n            \"\n            role=\"dialog\"\n            @click.stop\n          >\n            <span ref=\"focusStartRef\" :class=\"ns.e('sr-focus')\" tabindex=\"-1\" />\n            <header v-if=\"withHeader\" :class=\"[ns.e('header'), headerClass]\">\n              <slot\n                v-if=\"!$slots.title\"\n                name=\"header\"\n                :close=\"handleClose\"\n                :title-id=\"titleId\"\n                :title-class=\"ns.e('title')\"\n              >\n                <span\n                  v-if=\"!$slots.title\"\n                  :id=\"titleId\"\n                  role=\"heading\"\n                  :aria-level=\"headerAriaLevel\"\n                  :class=\"ns.e('title')\"\n                >\n                  {{ title }}\n                </span>\n              </slot>\n              <slot v-else name=\"title\">\n                <!-- DEPRECATED SLOT -->\n              </slot>\n              <button\n                v-if=\"showClose\"\n                :aria-label=\"t('el.drawer.close')\"\n                :class=\"ns.e('close-btn')\"\n                type=\"button\"\n                @click=\"handleClose\"\n              >\n                <el-icon :class=\"ns.e('close')\">\n                  <close />\n                </el-icon>\n              </button>\n            </header>\n            <template v-if=\"rendered\">\n              <div :id=\"bodyId\" :class=\"[ns.e('body'), bodyClass]\">\n                <slot />\n              </div>\n            </template>\n            <div v-if=\"$slots.footer\" :class=\"[ns.e('footer'), footerClass]\">\n              <slot name=\"footer\" />\n            </div>\n          </div>\n        </el-focus-trap>\n      </el-overlay>\n    </transition>\n  </el-teleport>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, ref, useSlots } from 'vue'\nimport { Close } from '@element-plus/icons-vue'\n\nimport { ElOverlay } from '@element-plus/components/overlay'\nimport ElFocusTrap from '@element-plus/components/focus-trap'\nimport ElTeleport from '@element-plus/components/teleport'\nimport { useDialog } from '@element-plus/components/dialog'\nimport { addUnit } from '@element-plus/utils'\nimport ElIcon from '@element-plus/components/icon'\nimport { useDeprecated, useLocale, useNamespace } from '@element-plus/hooks'\nimport { drawerEmits, drawerProps } from './drawer'\n\ndefineOptions({\n  name: 'ElDrawer',\n  inheritAttrs: false,\n})\n\nconst props = defineProps(drawerProps)\ndefineEmits(drawerEmits)\nconst slots = useSlots()\n\nuseDeprecated(\n  {\n    scope: 'el-drawer',\n    from: 'the title slot',\n    replacement: 'the header slot',\n    version: '3.0.0',\n    ref: 'https://element-plus.org/en-US/component/drawer.html#slots',\n  },\n  computed(() => !!slots.title)\n)\n\nconst drawerRef = ref<HTMLElement>()\nconst focusStartRef = ref<HTMLElement>()\nconst ns = useNamespace('drawer')\nconst { t } = useLocale()\nconst {\n  afterEnter,\n  afterLeave,\n  beforeLeave,\n  visible,\n  rendered,\n  titleId,\n  bodyId,\n  zIndex,\n  onModalClick,\n  onOpenAutoFocus,\n  onCloseAutoFocus,\n  onFocusoutPrevented,\n  onCloseRequested,\n  handleClose,\n} = useDialog(props, drawerRef)\n\nconst isHorizontal = computed(\n  () => props.direction === 'rtl' || props.direction === 'ltr'\n)\nconst drawerSize = computed(() => addUnit(props.size))\n\ndefineExpose({\n  handleClose,\n  afterEnter,\n  afterLeave,\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;qCAwGc;EACZA,IAAM;EACNC,YAAc;AAChB;;;;;;;IAIA,IAAMC,KAAA,GAAQC,GAAA,CAAAC,QAAS;IAEvBC,KAAA,CAAAC,aAAA;MACEC,KAAA;MAAAC,IACS;MAAAC,WACD;MAAAC,OACO;MAAAC,GACJ;IAAA,GAAAR,GAAA,CAAAS,QACJ;MAAA,SAAAV,KAAA,CAAAW,KAAA;IAAA;IACP,IAAAC,SAAA,GAAAX,GAAA,CAAAQ,GAAA;IAAA,IACSI,aAAQ,GAAAZ,GAAA,CAAAQ,GAAM,EAAK;IAC9B,IAAAK,EAAA,GAAAC,OAAA,CAAAC,YAAA;IAEA,IAAAC,kBAAA,GAAMC,OAAA,CAAAC,SAA6B;MAA7BC,CAAA,GAAAH,kBAAA,CAAAG,CAAA;IACN,IAAAC,oBAAA,GAeEC,SAAA,CAAAA,SAAA,CAAAC,KAAA,EAAAX,SAAA;MAdIY,UAAA,GAAAH,oBAAA,CAAAG,UAAA;MACAC,UAAI,GAAAJ,oBAAA,CAAJI,UAAI;MACJC,WAAA,GAAAL,oBAAA,CAAAK,WAAA;MACJC,OAAA,GAAAN,oBAAA,CAAAM,OAAA;MACAC,QAAA,GAAAP,oBAAA,CAAAO,QAAA;MACAC,OAAA,GAAAR,oBAAA,CAAAQ,OAAA;MACAC,MAAA,GAAAT,oBAAA,CAAAS,MAAA;MACAC,MAAA,GAAAV,oBAAA,CAAAU,MAAA;MACAC,YAAA,GAAAX,oBAAA,CAAAW,YAAA;MACAC,eAAA,GAAAZ,oBAAA,CAAAY,eAAA;MACAC,gBAAA,GAAAb,oBAAA,CAAAa,gBAAA;MACAC,mBAAA,GAAAd,oBAAA,CAAAc,mBAAA;MACAC,gBAAA,GAAAf,oBAAA,CAAAe,gBAAA;MACAC,WAAA,GAAAhB,oBAAA,CAAAgB,WAAA;IAEA,IAAAC,YAAA,GAAArC,GAAA,CAAAS,QAAA;MAAA,OAAAa,KAAA,CAAAgB,SAAA,cAAAhB,KAAA,CAAAgB,SAAA;IAAA;IACA,IAAAC,UAAA,GAAAvC,GAAA,CAAAS,QAAA;MAAA,OAAA+B,KAAA,CAAAC,OAAA,CAAAnB,KAAA,CAAAoB,IAAA;IAAA;IACFC,MAAc;MAEdP,WAAqB,EAArBA,WAAqB;MACnBb,UAAM,EAANA,UAAM;MACRC,UAAA,EAAAA;IACA;IAEa,iBAAAoB,IAAA,EAAAC,MAAA;MACX,OAAA7C,GAAA,CAAA8C,SAAA,IAAA9C,GAAA,CAAA+C,WAAA,CAAA/C,GAAA,CAAAgD,KAAA,CAAAC,OAAA,CAAAC,UAAA;QACAC,EAAA,EAAAP,IAAA,CAAAQ,QAAA;QACAC,QAAA,EAAAT,IAAA,CAAAQ,QAAA,uBAAAR,IAAA,CAAAU;MAAA,CACD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}