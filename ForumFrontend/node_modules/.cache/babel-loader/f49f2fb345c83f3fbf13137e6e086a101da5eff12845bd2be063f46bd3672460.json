{"ast":null,"code":"import \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\n\n// 路由懒加载\nvar Home = function Home() {\n  return import('../views/Home.vue');\n};\nvar Login = function Login() {\n  return import('../views/Login.vue');\n};\nvar Register = function Register() {\n  return import('../views/Register.vue');\n};\n// 不再需要单独的邮箱验证注册页面\nvar ResetPassword = function ResetPassword() {\n  return import('../views/ResetPassword.vue');\n};\nvar NotFound = function NotFound() {\n  return import('../views/NotFound.vue');\n};\n\n// 板块相关页面\nvar BoardList = function BoardList() {\n  return import('../views/board/BoardList.vue');\n};\nvar BoardDetail = function BoardDetail() {\n  return import('../views/board/BoardDetail.vue');\n};\n\n// 帖子相关页面\nvar PostList = function PostList() {\n  return import('../views/post/PostList.vue');\n};\nvar PostDetail = function PostDetail() {\n  return import('../views/post/PostDetail.vue');\n};\nvar PostCreate = function PostCreate() {\n  return import('../views/post/PostCreate.vue');\n};\n\n// 用户中心相关页面\nvar UserProfile = function UserProfile() {\n  return import('../views/user/Profile.vue');\n};\nvar ChangePassword = function ChangePassword() {\n  return import('../views/user/ChangePassword.vue');\n};\nvar routes = [{\n  path: '/',\n  name: 'Home',\n  component: Home,\n  meta: {\n    title: '首页 - 论坛系统'\n  }\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login,\n  meta: {\n    title: '登录 - 论坛系统'\n  }\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register,\n  meta: {\n    title: '注册 - 论坛系统'\n  }\n},\n// 移除单独的邮箱验证注册路由，直接使用主注册页面\n{\n  path: '/reset-password',\n  name: 'ResetPassword',\n  component: ResetPassword,\n  meta: {\n    title: '重置密码 - 论坛系统'\n  }\n},\n// 板块相关路由\n{\n  path: '/boards',\n  name: 'BoardList',\n  component: BoardList,\n  meta: {\n    title: '板块列表 - 论坛系统'\n  }\n}, {\n  path: '/boards/:id',\n  name: 'BoardDetail',\n  component: BoardDetail,\n  meta: {\n    title: '板块详情 - 论坛系统'\n  }\n},\n// 帖子相关路由\n{\n  path: '/posts',\n  name: 'PostList',\n  component: PostList,\n  meta: {\n    title: '帖子列表 - 论坛系统'\n  }\n}, {\n  path: '/posts/:id',\n  name: 'PostDetail',\n  component: PostDetail,\n  meta: {\n    title: '帖子详情 - 论坛系统'\n  }\n}, {\n  path: '/post/create',\n  name: 'PostCreate',\n  component: PostCreate,\n  meta: {\n    title: '发布帖子 - 论坛系统',\n    requiresAuth: true\n  }\n}, {\n  path: '/post/edit/:id',\n  name: 'PostEdit',\n  component: PostCreate,\n  meta: {\n    title: '编辑帖子 - 论坛系统',\n    requiresAuth: true\n  }\n}, {\n  path: '/:pathMatch(.*)*',\n  name: 'NotFound',\n  component: NotFound,\n  meta: {\n    title: '页面未找到 - 论坛系统'\n  }\n}];\nvar router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes: routes\n});\n\n// 全局前置守卫，设置页面标题和权限检查\nrouter.beforeEach(function (to, from, next) {\n  // 设置页面标题\n  document.title = to.meta.title || '论坛系统';\n\n  // 检查是否需要登录\n  var requiresAuth = to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  });\n  var isLoggedIn = localStorage.getItem('token');\n  if (requiresAuth && !isLoggedIn) {\n    next({\n      path: '/login',\n      query: {\n        redirect: to.fullPath\n      }\n    });\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Home","Login","Register","ResetPassword","NotFound","BoardList","BoardDetail","PostList","PostDetail","PostCreate","UserProfile","ChangePassword","routes","path","name","component","meta","title","requiresAuth","router","history","process","env","BASE_URL","beforeEach","to","from","next","document","matched","some","record","isLoggedIn","localStorage","getItem","query","redirect","fullPath"],"sources":["H:/ForumServers/ForumFrontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\n\n// 路由懒加载\nconst Home = () => import('../views/Home.vue')\nconst Login = () => import('../views/Login.vue')\nconst Register = () => import('../views/Register.vue')\n// 不再需要单独的邮箱验证注册页面\nconst ResetPassword = () => import('../views/ResetPassword.vue')\nconst NotFound = () => import('../views/NotFound.vue')\n\n// 板块相关页面\nconst BoardList = () => import('../views/board/BoardList.vue')\nconst BoardDetail = () => import('../views/board/BoardDetail.vue')\n\n// 帖子相关页面\nconst PostList = () => import('../views/post/PostList.vue')\nconst PostDetail = () => import('../views/post/PostDetail.vue')\nconst PostCreate = () => import('../views/post/PostCreate.vue')\n\n// 用户中心相关页面\nconst UserProfile = () => import('../views/user/Profile.vue')\nconst ChangePassword = () => import('../views/user/ChangePassword.vue')\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    component: Home,\n    meta: {\n      title: '首页 - 论坛系统'\n    }\n  },\n  {\n    path: '/login',\n    name: 'Login',\n    component: Login,\n    meta: {\n      title: '登录 - 论坛系统'\n    }\n  },\n  {\n    path: '/register',\n    name: 'Register',\n    component: Register,\n    meta: {\n      title: '注册 - 论坛系统'\n    }\n  },\n  // 移除单独的邮箱验证注册路由，直接使用主注册页面\n  {\n    path: '/reset-password',\n    name: 'ResetPassword',\n    component: ResetPassword,\n    meta: {\n      title: '重置密码 - 论坛系统'\n    }\n  },\n  // 板块相关路由\n  {\n    path: '/boards',\n    name: 'BoardList',\n    component: BoardList,\n    meta: {\n      title: '板块列表 - 论坛系统'\n    }\n  },\n  {\n    path: '/boards/:id',\n    name: 'BoardDetail',\n    component: BoardDetail,\n    meta: {\n      title: '板块详情 - 论坛系统'\n    }\n  },\n  // 帖子相关路由\n  {\n    path: '/posts',\n    name: 'PostList',\n    component: PostList,\n    meta: {\n      title: '帖子列表 - 论坛系统'\n    }\n  },\n  {\n    path: '/posts/:id',\n    name: 'PostDetail',\n    component: PostDetail,\n    meta: {\n      title: '帖子详情 - 论坛系统'\n    }\n  },\n  {\n    path: '/post/create',\n    name: 'PostCreate',\n    component: PostCreate,\n    meta: {\n      title: '发布帖子 - 论坛系统',\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/post/edit/:id',\n    name: 'PostEdit',\n    component: PostCreate,\n    meta: {\n      title: '编辑帖子 - 论坛系统',\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/:pathMatch(.*)*',\n    name: 'NotFound',\n    component: NotFound,\n    meta: {\n      title: '页面未找到 - 论坛系统'\n    }\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\n// 全局前置守卫，设置页面标题和权限检查\nrouter.beforeEach((to, from, next) => {\n  // 设置页面标题\n  document.title = to.meta.title || '论坛系统'\n\n  // 检查是否需要登录\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth)\n  const isLoggedIn = localStorage.getItem('token')\n\n  if (requiresAuth && !isLoggedIn) {\n    next({\n      path: '/login',\n      query: { redirect: to.fullPath }\n    })\n  } else {\n    next()\n  }\n})\n\nexport default router\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}