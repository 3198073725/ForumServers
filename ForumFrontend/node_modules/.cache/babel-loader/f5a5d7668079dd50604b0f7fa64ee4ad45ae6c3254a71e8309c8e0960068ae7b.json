{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.regexp.exec.js\");\nrequire(\"core-js/modules/es.string.replace.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar index$1 = require('../../icon/index.js');\nvar constants = require('./constants.js');\nvar breadcrumbItem = require('./breadcrumb-item.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar __default__ = vue.defineComponent({\n  name: \"ElBreadcrumbItem\"\n});\nvar _sfc_main = /* @__PURE__ */vue.defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: breadcrumbItem.breadcrumbItemProps,\n  setup: function setup(__props) {\n    var props = __props;\n    var instance = vue.getCurrentInstance();\n    var breadcrumbContext = vue.inject(constants.breadcrumbKey, void 0);\n    var ns = index.useNamespace(\"breadcrumb\");\n    var router = instance.appContext.config.globalProperties.$router;\n    var link = vue.ref();\n    var onClick = function onClick() {\n      if (!props.to || !router) return;\n      props.replace ? router.replace(props.to) : router.push(props.to);\n    };\n    return function (_ctx, _cache) {\n      var _a, _b;\n      return vue.openBlock(), vue.createElementBlock(\"span\", {\n        \"class\": vue.normalizeClass(vue.unref(ns).e(\"item\"))\n      }, [vue.createElementVNode(\"span\", {\n        ref_key: \"link\",\n        ref: link,\n        \"class\": vue.normalizeClass([vue.unref(ns).e(\"inner\"), vue.unref(ns).is(\"link\", !!_ctx.to)]),\n        role: \"link\",\n        onClick: onClick\n      }, [vue.renderSlot(_ctx.$slots, \"default\")], 2), ((_a = vue.unref(breadcrumbContext)) == null ? void 0 : _a.separatorIcon) ? (vue.openBlock(), vue.createBlock(vue.unref(index$1.ElIcon), {\n        key: 0,\n        \"class\": vue.normalizeClass(vue.unref(ns).e(\"separator\"))\n      }, {\n        \"default\": vue.withCtx(function () {\n          return [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(vue.unref(breadcrumbContext).separatorIcon)))];\n        }),\n        _: 1\n      }, 8, [\"class\"])) : (vue.openBlock(), vue.createElementBlock(\"span\", {\n        key: 1,\n        \"class\": vue.normalizeClass(vue.unref(ns).e(\"separator\")),\n        role: \"presentation\"\n      }, vue.toDisplayString((_b = vue.unref(breadcrumbContext)) == null ? void 0 : _b.separator), 3))], 2);\n    };\n  }\n}));\nvar BreadcrumbItem = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"breadcrumb-item.vue\"]]);\nexports[\"default\"] = BreadcrumbItem;","map":{"version":3,"names":["name","instance","vue","getCurrentInstance","breadcrumbContext","inject","constants","breadcrumbKey","ns","index","useNamespace","router","appContext","config","globalProperties","$router","link","ref","onClick","props","to","replace","push"],"sources":["../../../../../../packages/components/breadcrumb/src/breadcrumb-item.vue"],"sourcesContent":["<template>\n  <span :class=\"ns.e('item')\">\n    <span\n      ref=\"link\"\n      :class=\"[ns.e('inner'), ns.is('link', !!to)]\"\n      role=\"link\"\n      @click=\"onClick\"\n    >\n      <slot />\n    </span>\n    <el-icon v-if=\"breadcrumbContext?.separatorIcon\" :class=\"ns.e('separator')\">\n      <component :is=\"breadcrumbContext.separatorIcon\" />\n    </el-icon>\n    <span v-else :class=\"ns.e('separator')\" role=\"presentation\">\n      {{ breadcrumbContext?.separator }}\n    </span>\n  </span>\n</template>\n\n<script lang=\"ts\" setup>\nimport { getCurrentInstance, inject, ref } from 'vue'\nimport ElIcon from '@element-plus/components/icon'\nimport { useNamespace } from '@element-plus/hooks'\nimport { breadcrumbKey } from './constants'\nimport { breadcrumbItemProps } from './breadcrumb-item'\n\nimport type { Router } from 'vue-router'\n\ndefineOptions({\n  name: 'ElBreadcrumbItem',\n})\n\nconst props = defineProps(breadcrumbItemProps)\n\nconst instance = getCurrentInstance()!\nconst breadcrumbContext = inject(breadcrumbKey, undefined)\nconst ns = useNamespace('breadcrumb')\n\nconst router = instance.appContext.config.globalProperties.$router as Router\n\nconst link = ref<HTMLSpanElement>()\n\nconst onClick = () => {\n  if (!props.to || !router) return\n  props.replace ? router.replace(props.to) : router.push(props.to)\n}\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;qCA4Bc;EACZA,IAAM;AACR;;;;;IAIA,IAAMC,QAAA,GAAWC,GAAA,CAAAC,kBAAmB;IAC9B,IAAAC,iBAAA,GAAoBF,GAAA,CAAAG,MAAO,CAAAC,SAAA,CAAAC,aAAA,EAAe,KAAS;IACnD,IAAAC,EAAA,GAAKC,KAAA,CAAAC,YAAA,CAAa,YAAY;IAEpC,IAAMC,MAAS,GAAAV,QAAA,CAASW,UAAW,CAAAC,MAAA,CAAOC,gBAAiB,CAAAC,OAAA;IAE3D,IAAMC,IAAA,GAAOd,GAAA,CAAAe,GAAqB;IAElC,IAAMC,OAAA,GAAU,SAAVA,QAAA,EAAgB;MACpB,IAAI,CAACC,KAAA,CAAMC,EAAM,KAACT,MAAQ,EACpB;MACRQ,KAAA,CAAAE,OAAA,GAAAV,MAAA,CAAAU,OAAA,CAAAF,KAAA,CAAAC,EAAA,IAAAT,MAAA,CAAAW,IAAA,CAAAH,KAAA,CAAAC,EAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}