{"ast":null,"code":"import _regeneratorRuntime from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport { ref, onMounted } from 'vue';\nimport { ElIcon, ElAvatar, ElBadge, ElCard, ElScrollbar } from 'element-plus';\nimport { Loading } from '@element-plus/icons-vue';\nimport { getChatList } from '@/api/messages';\nexport default {\n  name: 'UserMessages',\n  components: {\n    ElIcon: ElIcon,\n    ElAvatar: ElAvatar,\n    ElBadge: ElBadge,\n    ElCard: ElCard,\n    ElScrollbar: ElScrollbar,\n    Loading: Loading\n  },\n  setup: function setup() {\n    var loading = ref(true);\n    var chatList = ref([]);\n    var loadChatList = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              loading.value = true;\n              _context.prev = 1;\n              _context.next = 4;\n              return getChatList();\n            case 4:\n              response = _context.sent;\n              if (response && response.data) {\n                chatList.value = response.data;\n              }\n              _context.next = 11;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('获取私信列表失败:', _context.t0);\n            case 11:\n              _context.prev = 11;\n              loading.value = false;\n              return _context.finish(11);\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 8, 11, 14]]);\n      }));\n      return function loadChatList() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    var openChat = function openChat(userId) {\n      var _window$chatManager;\n      // 在父页面打开聊天窗口\n      (_window$chatManager = window.chatManager) === null || _window$chatManager === void 0 || _window$chatManager.openChat(userId);\n    };\n    var formatTime = function formatTime(timestamp) {\n      if (!timestamp) return '';\n      var date = new Date(timestamp);\n      var now = new Date();\n      var diff = now - date;\n\n      // 小于1分钟\n      if (diff < 60000) {\n        return '刚刚';\n      }\n      // 小于1小时\n      else if (diff < 3600000) {\n        return \"\".concat(Math.floor(diff / 60000), \"\\u5206\\u949F\\u524D\");\n      }\n      // 小于24小时\n      else if (diff < 86400000) {\n        return \"\".concat(Math.floor(diff / 3600000), \"\\u5C0F\\u65F6\\u524D\");\n      }\n      // 小于7天\n      else if (diff < 604800000) {\n        return \"\".concat(Math.floor(diff / 86400000), \"\\u5929\\u524D\");\n      }\n      // 今年内\n      else if (date.getFullYear() === now.getFullYear()) {\n        return \"\".concat(date.getMonth() + 1, \"\\u6708\").concat(date.getDate(), \"\\u65E5\");\n      }\n      // 超过一年\n      else {\n        return \"\".concat(date.getFullYear(), \"\\u5E74\").concat(date.getMonth() + 1, \"\\u6708\").concat(date.getDate(), \"\\u65E5\");\n      }\n    };\n    onMounted(function () {\n      loadChatList();\n    });\n    return {\n      loading: loading,\n      chatList: chatList,\n      openChat: openChat,\n      formatTime: formatTime\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","ElIcon","ElAvatar","ElBadge","ElCard","ElScrollbar","Loading","getChatList","name","components","setup","loading","chatList","loadChatList","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","value","sent","data","t0","console","error","finish","stop","apply","arguments","openChat","userId","_window$chatManager","window","chatManager","formatTime","timestamp","date","Date","now","diff","concat","Math","floor","getFullYear","getMonth","getDate"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\user\\Messages.vue"],"sourcesContent":["<template>\r\n  <div class=\"messages-container\">\r\n    <h1>我的私信</h1>\r\n    <el-card shadow=\"never\">\r\n      <div v-if=\"loading\" class=\"loading\">\r\n        <el-icon class=\"is-loading\"><Loading /></el-icon>\r\n        <span>加载中...</span>\r\n      </div>\r\n      <div v-else-if=\"chatList.length === 0\" class=\"empty-state\">\r\n        暂无私信\r\n      </div>\r\n      <div v-else>\r\n        <el-scrollbar height=\"400px\">\r\n          <div\r\n            v-for=\"chat in chatList\"\r\n            :key=\"chat.userId\"\r\n            @click=\"openChat(chat.userId)\"\r\n            class=\"chat-item\"\r\n          >\r\n            <div class=\"chat-avatar\">\r\n              <el-avatar :size=\"40\" :src=\"chat.avatar\">\r\n                {{ chat.username.substring(0, 1).toUpperCase() }}\r\n              </el-avatar>\r\n            </div>\r\n            <div class=\"chat-info\">\r\n              <div class=\"chat-header\">\r\n                <span class=\"username\">{{ chat.nickname || chat.username }}</span>\r\n                <span class=\"time\">{{ formatTime(chat.lastMessageTime) }}</span>\r\n              </div>\r\n              <div class=\"last-message\">\r\n                {{ chat.lastMessage }}\r\n                <el-badge v-if=\"chat.unreadCount > 0\" :value=\"chat.unreadCount\" class=\"unread-badge\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </el-scrollbar>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport { ElIcon, ElAvatar, ElBadge, ElCard, ElScrollbar } from 'element-plus';\r\nimport { Loading } from '@element-plus/icons-vue';\r\nimport { getChatList } from '@/api/messages';\r\n\r\nexport default {\r\n  name: 'UserMessages',\r\n  components: {\r\n    ElIcon,\r\n    ElAvatar,\r\n    ElBadge,\r\n    ElCard,\r\n    ElScrollbar,\r\n    Loading\r\n  },\r\n  setup() {\r\n    const loading = ref(true);\r\n    const chatList = ref([]);\r\n    \r\n    const loadChatList = async () => {\r\n      loading.value = true;\r\n      try {\r\n        const response = await getChatList();\r\n        if (response && response.data) {\r\n          chatList.value = response.data;\r\n        }\r\n      } catch (error) {\r\n        console.error('获取私信列表失败:', error);\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    const openChat = (userId) => {\r\n      // 在父页面打开聊天窗口\r\n      window.chatManager?.openChat(userId);\r\n    };\r\n    \r\n    const formatTime = (timestamp) => {\r\n      if (!timestamp) return '';\r\n      \r\n      const date = new Date(timestamp);\r\n      const now = new Date();\r\n      const diff = now - date;\r\n      \r\n      // 小于1分钟\r\n      if (diff < 60000) {\r\n        return '刚刚';\r\n      }\r\n      // 小于1小时\r\n      else if (diff < 3600000) {\r\n        return `${Math.floor(diff / 60000)}分钟前`;\r\n      }\r\n      // 小于24小时\r\n      else if (diff < 86400000) {\r\n        return `${Math.floor(diff / 3600000)}小时前`;\r\n      }\r\n      // 小于7天\r\n      else if (diff < 604800000) {\r\n        return `${Math.floor(diff / 86400000)}天前`;\r\n      }\r\n      // 今年内\r\n      else if (date.getFullYear() === now.getFullYear()) {\r\n        return `${date.getMonth() + 1}月${date.getDate()}日`;\r\n      }\r\n      // 超过一年\r\n      else {\r\n        return `${date.getFullYear()}年${date.getMonth() + 1}月${date.getDate()}日`;\r\n      }\r\n    };\r\n    \r\n    onMounted(() => {\r\n      loadChatList();\r\n    });\r\n    \r\n    return {\r\n      loading,\r\n      chatList,\r\n      openChat,\r\n      formatTime\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.messages-container {\r\n  padding: 20px;\r\n}\r\n\r\nh1 {\r\n  margin-bottom: 20px;\r\n  font-size: 24px;\r\n  color: #303133;\r\n}\r\n\r\n.loading {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100px;\r\n}\r\n\r\n.loading span {\r\n  margin-left: 10px;\r\n}\r\n\r\n.empty-state {\r\n  text-align: center;\r\n  color: #909399;\r\n  padding: 40px 0;\r\n}\r\n\r\n.chat-item {\r\n  cursor: pointer;\r\n  padding: 15px;\r\n  border-bottom: 1px solid #EBEEF5;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.chat-item:hover {\r\n  background-color: #F5F7FA;\r\n}\r\n\r\n.chat-avatar {\r\n  margin-right: 15px;\r\n}\r\n\r\n.chat-info {\r\n  flex: 1;\r\n  overflow: hidden;\r\n}\r\n\r\n.chat-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.username {\r\n  font-weight: bold;\r\n  color: #303133;\r\n}\r\n\r\n.time {\r\n  color: #909399;\r\n  font-size: 12px;\r\n}\r\n\r\n.last-message {\r\n  color: #606266;\r\n  font-size: 13px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.unread-badge {\r\n  margin-left: auto;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}