{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\")[\"default\"];\nvar _asyncToGenerator = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\")[\"default\"];\nvar _typeof = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"];\nrequire(\"core-js/modules/es.array.concat.js\");\nrequire(\"core-js/modules/es.array.every.js\");\nrequire(\"core-js/modules/es.array.filter.js\");\nrequire(\"core-js/modules/es.array.find-index.js\");\nrequire(\"core-js/modules/es.array.map.js\");\nrequire(\"core-js/modules/es.iterator.constructor.js\");\nrequire(\"core-js/modules/es.iterator.every.js\");\nrequire(\"core-js/modules/es.iterator.filter.js\");\nrequire(\"core-js/modules/es.iterator.map.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar dayjs = require('dayjs');\nvar basicYearTable = require('../props/basic-year-table.js');\nvar utils$1 = require('../utils.js');\nvar basicCellRender = require('./basic-cell-render.js');\nvar pluginVue_exportHelper = require('../../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../../hooks/use-namespace/index.js');\nvar index$1 = require('../../../../hooks/use-locale/index.js');\nvar arrays = require('../../../../utils/arrays.js');\nvar utils = require('../../../time-picker/src/utils.js');\nvar style = require('../../../../utils/dom/style.js');\nfunction _interopDefaultLegacy(e) {\n  return e && _typeof(e) === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);\nvar _sfc_main = /* @__PURE__ */vue.defineComponent({\n  __name: \"basic-year-table\",\n  props: basicYearTable.basicYearTableProps,\n  emits: [\"changerange\", \"pick\", \"select\"],\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n      emit = _ref.emit;\n    var props = __props;\n    var datesInYear = function datesInYear(year, lang2) {\n      var firstDay = dayjs__default[\"default\"](String(year)).locale(lang2).startOf(\"year\");\n      var lastDay = firstDay.endOf(\"year\");\n      var numOfDays = lastDay.dayOfYear();\n      return utils.rangeArr(numOfDays).map(function (n) {\n        return firstDay.add(n, \"day\").toDate();\n      });\n    };\n    var ns = index.useNamespace(\"year-table\");\n    var _index$1$useLocale = index$1.useLocale(),\n      t = _index$1$useLocale.t,\n      lang = _index$1$useLocale.lang;\n    var tbodyRef = vue.ref();\n    var currentCellRef = vue.ref();\n    var startYear = vue.computed(function () {\n      return Math.floor(props.date.year() / 10) * 10;\n    });\n    var tableRows = vue.ref([[], [], []]);\n    var lastRow = vue.ref();\n    var lastColumn = vue.ref();\n    var rows = vue.computed(function () {\n      var _a;\n      var rows2 = tableRows.value;\n      var now = dayjs__default[\"default\"]().locale(lang.value).startOf(\"year\");\n      for (var i = 0; i < 3; i++) {\n        var row = rows2[i];\n        for (var j = 0; j < 4; j++) {\n          if (i * 4 + j >= 10) {\n            break;\n          }\n          var cell = row[j];\n          if (!cell) {\n            cell = {\n              row: i,\n              column: j,\n              type: \"normal\",\n              inRange: false,\n              start: false,\n              end: false,\n              text: -1,\n              disabled: false\n            };\n          }\n          cell.type = \"normal\";\n          var _index = i * 4 + j + startYear.value;\n          var calTime = dayjs__default[\"default\"]().year(_index);\n          var calEndDate = props.rangeState.endDate || props.maxDate || props.rangeState.selecting && props.minDate || null;\n          cell.inRange = !!(props.minDate && calTime.isSameOrAfter(props.minDate, \"year\") && calEndDate && calTime.isSameOrBefore(calEndDate, \"year\")) || !!(props.minDate && calTime.isSameOrBefore(props.minDate, \"year\") && calEndDate && calTime.isSameOrAfter(calEndDate, \"year\"));\n          if ((_a = props.minDate) == null ? void 0 : _a.isSameOrAfter(calEndDate)) {\n            cell.start = !!(calEndDate && calTime.isSame(calEndDate, \"year\"));\n            cell.end = !!(props.minDate && calTime.isSame(props.minDate, \"year\"));\n          } else {\n            cell.start = !!(props.minDate && calTime.isSame(props.minDate, \"year\"));\n            cell.end = !!(calEndDate && calTime.isSame(calEndDate, \"year\"));\n          }\n          var isToday = now.isSame(calTime);\n          if (isToday) {\n            cell.type = \"today\";\n          }\n          cell.text = _index;\n          var cellDate = calTime.toDate();\n          cell.disabled = props.disabledDate && props.disabledDate(cellDate) || false;\n          row[j] = cell;\n        }\n      }\n      return rows2;\n    });\n    var focus = function focus() {\n      var _a;\n      (_a = currentCellRef.value) == null ? void 0 : _a.focus();\n    };\n    var getCellKls = function getCellKls(cell) {\n      var kls = {};\n      var today = dayjs__default[\"default\"]().locale(lang.value);\n      var year = cell.text;\n      kls.disabled = props.disabledDate ? datesInYear(year, lang.value).every(props.disabledDate) : false;\n      kls.today = today.year() === year;\n      kls.current = arrays.castArray(props.parsedValue).findIndex(function (d) {\n        return d.year() === year;\n      }) >= 0;\n      if (cell.inRange) {\n        kls[\"in-range\"] = true;\n        if (cell.start) {\n          kls[\"start-date\"] = true;\n        }\n        if (cell.end) {\n          kls[\"end-date\"] = true;\n        }\n      }\n      return kls;\n    };\n    var isSelectedCell = function isSelectedCell(cell) {\n      var year = cell.text;\n      return arrays.castArray(props.date).findIndex(function (date) {\n        return date.year() === year;\n      }) >= 0;\n    };\n    var handleYearTableClick = function handleYearTableClick(event) {\n      var _a;\n      var target = (_a = event.target) == null ? void 0 : _a.closest(\"td\");\n      if (!target || !target.textContent || style.hasClass(target, \"disabled\")) return;\n      var column = target.cellIndex;\n      var row = target.parentNode.rowIndex;\n      var selectedYear = row * 4 + column + startYear.value;\n      var newDate = dayjs__default[\"default\"]().year(selectedYear);\n      if (props.selectionMode === \"range\") {\n        if (!props.rangeState.selecting) {\n          emit(\"pick\", {\n            minDate: newDate,\n            maxDate: null\n          });\n          emit(\"select\", true);\n        } else {\n          if (props.minDate && newDate >= props.minDate) {\n            emit(\"pick\", {\n              minDate: props.minDate,\n              maxDate: newDate\n            });\n          } else {\n            emit(\"pick\", {\n              minDate: newDate,\n              maxDate: props.minDate\n            });\n          }\n          emit(\"select\", false);\n        }\n      } else if (props.selectionMode === \"years\") {\n        if (event.type === \"keydown\") {\n          emit(\"pick\", arrays.castArray(props.parsedValue), false);\n          return;\n        }\n        var vaildYear = utils$1.getValidDateOfYear(newDate.startOf(\"year\"), lang.value, props.disabledDate);\n        var newValue = style.hasClass(target, \"current\") ? arrays.castArray(props.parsedValue).filter(function (d) {\n          return (d == null ? void 0 : d.year()) !== selectedYear;\n        }) : arrays.castArray(props.parsedValue).concat([vaildYear]);\n        emit(\"pick\", newValue);\n      } else {\n        emit(\"pick\", selectedYear);\n      }\n    };\n    var handleMouseMove = function handleMouseMove(event) {\n      var _a;\n      if (!props.rangeState.selecting) return;\n      var target = (_a = event.target) == null ? void 0 : _a.closest(\"td\");\n      if (!target) return;\n      var row = target.parentNode.rowIndex;\n      var column = target.cellIndex;\n      if (rows.value[row][column].disabled) return;\n      if (row !== lastRow.value || column !== lastColumn.value) {\n        lastRow.value = row;\n        lastColumn.value = column;\n        emit(\"changerange\", {\n          selecting: true,\n          endDate: dayjs__default[\"default\"]().year(startYear.value).add(row * 4 + column, \"year\")\n        });\n      }\n    };\n    vue.watch(function () {\n      return props.date;\n    }, /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _a, _b;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!((_a = tbodyRef.value) == null ? void 0 : _a.contains(document.activeElement))) {\n              _context.next = 4;\n              break;\n            }\n            _context.next = 3;\n            return vue.nextTick();\n          case 3:\n            (_b = currentCellRef.value) == null ? void 0 : _b.focus();\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    })));\n    expose({\n      focus: focus\n    });\n    return function (_ctx, _cache) {\n      return vue.openBlock(), vue.createElementBlock(\"table\", {\n        role: \"grid\",\n        \"aria-label\": vue.unref(t)(\"el.datepicker.yearTablePrompt\"),\n        \"class\": vue.normalizeClass(vue.unref(ns).b()),\n        onClick: handleYearTableClick,\n        onMousemove: handleMouseMove\n      }, [vue.createElementVNode(\"tbody\", {\n        ref_key: \"tbodyRef\",\n        ref: tbodyRef\n      }, [(vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(vue.unref(rows), function (row, rowKey) {\n        return vue.openBlock(), vue.createElementBlock(\"tr\", {\n          key: rowKey\n        }, [(vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(row, function (cell, cellKey) {\n          return vue.openBlock(), vue.createElementBlock(\"td\", {\n            key: \"\".concat(rowKey, \"_\").concat(cellKey),\n            ref_for: true,\n            ref: function ref(el) {\n              return isSelectedCell(cell) && (currentCellRef.value = el);\n            },\n            \"class\": vue.normalizeClass([\"available\", getCellKls(cell)]),\n            \"aria-selected\": isSelectedCell(cell),\n            \"aria-label\": String(cell.text),\n            tabindex: isSelectedCell(cell) ? 0 : -1,\n            onKeydown: [vue.withKeys(vue.withModifiers(handleYearTableClick, [\"prevent\", \"stop\"]), [\"space\"]), vue.withKeys(vue.withModifiers(handleYearTableClick, [\"prevent\", \"stop\"]), [\"enter\"])]\n          }, [vue.createVNode(vue.unref(basicCellRender[\"default\"]), {\n            cell: cell\n          }, null, 8, [\"cell\"])], 42, [\"aria-selected\", \"aria-label\", \"tabindex\", \"onKeydown\"]);\n        }), 128))]);\n      }), 128))], 512)], 42, [\"aria-label\"]);\n    };\n  }\n});\nvar YearTable = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"basic-year-table.vue\"]]);\nexports[\"default\"] = YearTable;","map":{"version":3,"names":["datesInYear","year","lang2","firstDay","dayjs__default","String","locale","startOf","lastDay","endOf","numOfDays","dayOfYear","utils","rangeArr","map","n","add","toDate","ns","index","useNamespace","_index$1$useLocale","index$1","useLocale","t","lang","tbodyRef","vue","ref","currentCellRef","startYear","computed","Math","floor","props","date","tableRows","lastRow","lastColumn","rows","_a","rows2","value","now","i","row","j","cell","column","type","inRange","start","end","text","disabled","calTime","calEndDate","rangeState","endDate","maxDate","selecting","minDate","isSameOrAfter","isSameOrBefore","isSame","isToday","cellDate","disabledDate","focus","getCellKls","kls","today","every","current","arrays","castArray","parsedValue","findIndex","d","isSelectedCell","handleYearTableClick","event","target","closest","textContent","style","hasClass","cellIndex","parentNode","rowIndex","selectedYear","newDate","selectionMode","emit","vaildYear","utils$1","getValidDateOfYear","newValue","filter","concat","handleMouseMove","watch","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_b","wrap","_callee$","_context","prev","next","contains","document","activeElement","nextTick","stop","expose","_ctx","_cache","openBlock","createElementBlock","role","unref","normalizeClass","b"],"sources":["../../../../../../../packages/components/date-picker/src/date-picker-com/basic-year-table.vue"],"sourcesContent":["<template>\n  <table\n    role=\"grid\"\n    :aria-label=\"t('el.datepicker.yearTablePrompt')\"\n    :class=\"ns.b()\"\n    @click=\"handleYearTableClick\"\n    @mousemove=\"handleMouseMove\"\n  >\n    <tbody ref=\"tbodyRef\">\n      <tr v-for=\"(row, rowKey) in rows\" :key=\"rowKey\">\n        <td\n          v-for=\"(cell, cellKey) in row\"\n          :key=\"`${rowKey}_${cellKey}`\"\n          :ref=\"(el) => isSelectedCell(cell) && (currentCellRef = el as HTMLElement)\"\n          class=\"available\"\n          :class=\"getCellKls(cell)\"\n          :aria-selected=\"isSelectedCell(cell)\"\n          :aria-label=\"String(cell.text)\"\n          :tabindex=\"isSelectedCell(cell) ? 0 : -1\"\n          @keydown.space.prevent.stop=\"handleYearTableClick\"\n          @keydown.enter.prevent.stop=\"handleYearTableClick\"\n        >\n          <el-date-picker-cell :cell=\"cell\" />\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, nextTick, ref, watch } from 'vue'\nimport dayjs from 'dayjs'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { rangeArr } from '@element-plus/components/time-picker'\nimport { castArray, hasClass } from '@element-plus/utils'\nimport { basicYearTableProps } from '../props/basic-year-table'\nimport { getValidDateOfYear } from '../utils'\nimport ElDatePickerCell from './basic-cell-render'\n\ntype YearCell = {\n  column: number\n  row: number\n  disabled: boolean\n  start: boolean\n  end: boolean\n  text: number\n  type: 'normal' | 'today'\n  inRange: boolean\n}\n\nconst datesInYear = (year: number, lang: string) => {\n  const firstDay = dayjs(String(year)).locale(lang).startOf('year')\n  const lastDay = firstDay.endOf('year')\n  const numOfDays = lastDay.dayOfYear()\n  return rangeArr(numOfDays).map((n) => firstDay.add(n, 'day').toDate())\n}\n\nconst props = defineProps(basicYearTableProps)\nconst emit = defineEmits(['changerange', 'pick', 'select'])\n\nconst ns = useNamespace('year-table')\n\nconst { t, lang } = useLocale()\nconst tbodyRef = ref<HTMLElement>()\nconst currentCellRef = ref<HTMLElement>()\nconst startYear = computed(() => {\n  return Math.floor(props.date.year() / 10) * 10\n})\n\nconst tableRows = ref<YearCell[][]>([[], [], []])\nconst lastRow = ref<number>()\nconst lastColumn = ref<number>()\nconst rows = computed(() => {\n  const rows = tableRows.value\n  const now = dayjs().locale(lang.value).startOf('year')\n\n  for (let i = 0; i < 3; i++) {\n    const row = rows[i]\n    for (let j = 0; j < 4; j++) {\n      if (i * 4 + j >= 10) {\n        break\n      }\n      let cell = row[j]\n      if (!cell) {\n        cell = {\n          row: i,\n          column: j,\n          type: 'normal',\n          inRange: false,\n          start: false,\n          end: false,\n          text: -1,\n          disabled: false,\n        }\n      }\n      cell.type = 'normal'\n      const index = i * 4 + j + startYear.value\n      const calTime = dayjs().year(index)\n\n      const calEndDate =\n        props.rangeState.endDate ||\n        props.maxDate ||\n        (props.rangeState.selecting && props.minDate) ||\n        null\n\n      cell.inRange =\n        !!(\n          props.minDate &&\n          calTime.isSameOrAfter(props.minDate, 'year') &&\n          calEndDate &&\n          calTime.isSameOrBefore(calEndDate, 'year')\n        ) ||\n        !!(\n          props.minDate &&\n          calTime.isSameOrBefore(props.minDate, 'year') &&\n          calEndDate &&\n          calTime.isSameOrAfter(calEndDate, 'year')\n        )\n\n      if (props.minDate?.isSameOrAfter(calEndDate)) {\n        cell.start = !!(calEndDate && calTime.isSame(calEndDate, 'year'))\n        cell.end = !!(props.minDate && calTime.isSame(props.minDate, 'year'))\n      } else {\n        cell.start = !!(props.minDate && calTime.isSame(props.minDate, 'year'))\n        cell.end = !!(calEndDate && calTime.isSame(calEndDate, 'year'))\n      }\n\n      const isToday = now.isSame(calTime)\n      if (isToday) {\n        cell.type = 'today'\n      }\n      cell.text = index\n      const cellDate = calTime.toDate()\n      cell.disabled =\n        (props.disabledDate && props.disabledDate(cellDate)) || false\n      row[j] = cell\n    }\n  }\n  return rows\n})\n\nconst focus = () => {\n  currentCellRef.value?.focus()\n}\n\nconst getCellKls = (cell: YearCell) => {\n  const kls: Record<string, boolean> = {}\n  const today = dayjs().locale(lang.value)\n  const year = cell.text\n\n  kls.disabled = props.disabledDate\n    ? datesInYear(year, lang.value).every(props.disabledDate)\n    : false\n\n  kls.today = today.year() === year\n  kls.current =\n    castArray(props.parsedValue).findIndex((d) => d!.year() === year) >= 0\n\n  if (cell.inRange) {\n    kls['in-range'] = true\n\n    if (cell.start) {\n      kls['start-date'] = true\n    }\n\n    if (cell.end) {\n      kls['end-date'] = true\n    }\n  }\n  return kls\n}\n\nconst isSelectedCell = (cell: YearCell) => {\n  const year = cell.text\n  return castArray(props.date).findIndex((date) => date.year() === year) >= 0\n}\n\nconst handleYearTableClick = (event: MouseEvent | KeyboardEvent) => {\n  const target = (event.target as HTMLElement)?.closest(\n    'td'\n  ) as HTMLTableCellElement\n  if (!target || !target.textContent || hasClass(target, 'disabled')) return\n\n  const column = target.cellIndex\n  const row = (target.parentNode as HTMLTableRowElement).rowIndex\n  const selectedYear = row * 4 + column + startYear.value\n  const newDate = dayjs().year(selectedYear)\n  if (props.selectionMode === 'range') {\n    if (!props.rangeState.selecting) {\n      emit('pick', { minDate: newDate, maxDate: null })\n      emit('select', true)\n    } else {\n      if (props.minDate && newDate >= props.minDate) {\n        emit('pick', { minDate: props.minDate, maxDate: newDate })\n      } else {\n        emit('pick', { minDate: newDate, maxDate: props.minDate })\n      }\n      emit('select', false)\n    }\n  } else if (props.selectionMode === 'years') {\n    if (event.type === 'keydown') {\n      emit('pick', castArray(props.parsedValue), false)\n      return\n    }\n    const vaildYear = getValidDateOfYear(\n      newDate.startOf('year'),\n      lang.value,\n      props.disabledDate\n    )\n    const newValue = hasClass(target, 'current')\n      ? castArray(props.parsedValue).filter((d) => d?.year() !== selectedYear)\n      : castArray(props.parsedValue).concat([vaildYear])\n    emit('pick', newValue)\n  } else {\n    emit('pick', selectedYear)\n  }\n}\n\nconst handleMouseMove = (event: MouseEvent) => {\n  if (!props.rangeState.selecting) return\n  const target = (event.target as HTMLElement)?.closest(\n    'td'\n  ) as HTMLTableCellElement\n  if (!target) return\n\n  const row = (target.parentNode as HTMLTableRowElement).rowIndex\n  const column = (target as HTMLTableCellElement).cellIndex\n\n  // can not select disabled date\n  if (rows.value[row][column].disabled) return\n\n  // only update rangeState when mouse moves to a new cell\n  // this avoids frequent Date object creation and improves performance\n  if (row !== lastRow.value || column !== lastColumn.value) {\n    lastRow.value = row\n    lastColumn.value = column\n    emit('changerange', {\n      selecting: true,\n      endDate: dayjs()\n        .year(startYear.value)\n        .add(row * 4 + column, 'year'),\n    })\n  }\n}\n\nwatch(\n  () => props.date,\n  async () => {\n    if (tbodyRef.value?.contains(document.activeElement)) {\n      await nextTick()\n      currentCellRef.value?.focus()\n    }\n  }\n)\n\ndefineExpose({\n  /**\n   * @description focus on the current cell\n   */\n  focus,\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}