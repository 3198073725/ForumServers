{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/toConsumableArray.js\")[\"default\"];\nrequire(\"core-js/modules/es.array.concat.js\");\nrequire(\"core-js/modules/es.array.every.js\");\nrequire(\"core-js/modules/es.array.for-each.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.array.reduce.js\");\nrequire(\"core-js/modules/es.iterator.constructor.js\");\nrequire(\"core-js/modules/es.iterator.every.js\");\nrequire(\"core-js/modules/es.iterator.for-each.js\");\nrequire(\"core-js/modules/es.iterator.reduce.js\");\nrequire(\"core-js/modules/es.number.constructor.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar item = require('./item.js');\nvar useSpace = require('./use-space.js');\nvar vnode = require('../../../utils/vue/vnode.js');\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar types = require('../../../utils/types.js');\nvar shared = require('@vue/shared');\nvar size = require('../../../constants/size.js');\nvar spaceProps = runtime.buildProps({\n  direction: {\n    type: String,\n    values: [\"horizontal\", \"vertical\"],\n    \"default\": \"horizontal\"\n  },\n  \"class\": {\n    type: runtime.definePropType([String, Object, Array]),\n    \"default\": \"\"\n  },\n  style: {\n    type: runtime.definePropType([String, Array, Object]),\n    \"default\": \"\"\n  },\n  alignment: {\n    type: runtime.definePropType(String),\n    \"default\": \"center\"\n  },\n  prefixCls: {\n    type: String\n  },\n  spacer: {\n    type: runtime.definePropType([Object, String, Number, Array]),\n    \"default\": null,\n    validator: function validator(val) {\n      return vue.isVNode(val) || types.isNumber(val) || shared.isString(val);\n    }\n  },\n  wrap: Boolean,\n  fill: Boolean,\n  fillRatio: {\n    type: Number,\n    \"default\": 100\n  },\n  size: {\n    type: [String, Array, Number],\n    values: size.componentSizes,\n    validator: function validator(val) {\n      return types.isNumber(val) || shared.isArray(val) && val.length === 2 && val.every(types.isNumber);\n    }\n  }\n});\nvar Space = vue.defineComponent({\n  name: \"ElSpace\",\n  props: spaceProps,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var _useSpace$useSpace = useSpace.useSpace(props),\n      classes = _useSpace$useSpace.classes,\n      containerStyle = _useSpace$useSpace.containerStyle,\n      itemStyle = _useSpace$useSpace.itemStyle;\n    function extractChildren(children) {\n      var parentKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n      var extractedChildren = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var prefixCls = props.prefixCls;\n      children.forEach(function (child, loopKey) {\n        if (vnode.isFragment(child)) {\n          if (shared.isArray(child.children)) {\n            child.children.forEach(function (nested, key) {\n              if (vnode.isFragment(nested) && shared.isArray(nested.children)) {\n                extractChildren(nested.children, \"\".concat(parentKey + key, \"-\"), extractedChildren);\n              } else {\n                extractedChildren.push(vue.createVNode(item[\"default\"], {\n                  style: itemStyle.value,\n                  prefixCls: prefixCls,\n                  key: \"nested-\".concat(parentKey + key)\n                }, {\n                  \"default\": function _default() {\n                    return [nested];\n                  }\n                }, vnode.PatchFlags.PROPS | vnode.PatchFlags.STYLE, [\"style\", \"prefixCls\"]));\n              }\n            });\n          }\n        } else if (vnode.isValidElementNode(child)) {\n          extractedChildren.push(vue.createVNode(item[\"default\"], {\n            style: itemStyle.value,\n            prefixCls: prefixCls,\n            key: \"LoopKey\".concat(parentKey + loopKey)\n          }, {\n            \"default\": function _default() {\n              return [child];\n            }\n          }, vnode.PatchFlags.PROPS | vnode.PatchFlags.STYLE, [\"style\", \"prefixCls\"]));\n        }\n      });\n      return extractedChildren;\n    }\n    return function () {\n      var _a;\n      var spacer = props.spacer,\n        direction = props.direction;\n      var children = vue.renderSlot(slots, \"default\", {\n        key: 0\n      }, function () {\n        return [];\n      });\n      if (((_a = children.children) != null ? _a : []).length === 0) return null;\n      if (shared.isArray(children.children)) {\n        var extractedChildren = extractChildren(children.children);\n        if (spacer) {\n          var len = extractedChildren.length - 1;\n          extractedChildren = extractedChildren.reduce(function (acc, child, idx) {\n            var children2 = [].concat(_toConsumableArray(acc), [child]);\n            if (idx !== len) {\n              children2.push(vue.createVNode(\"span\", {\n                style: [itemStyle.value, direction === \"vertical\" ? \"width: 100%\" : null],\n                key: idx\n              }, [vue.isVNode(spacer) ? spacer : vue.createTextVNode(spacer, vnode.PatchFlags.TEXT)], vnode.PatchFlags.STYLE));\n            }\n            return children2;\n          }, []);\n        }\n        return vue.createVNode(\"div\", {\n          \"class\": classes.value,\n          style: containerStyle.value\n        }, extractedChildren, vnode.PatchFlags.STYLE | vnode.PatchFlags.CLASS);\n      }\n      return children.children;\n    };\n  }\n});\nexports[\"default\"] = Space;\nexports.spaceProps = spaceProps;","map":{"version":3,"names":["spaceProps","runtime","buildProps","direction","type","String","values","definePropType","Object","Array","style","alignment","prefixCls","spacer","Number","validator","val","vue","isVNode","types","isNumber","shared","isString","wrap","Boolean","fill","fillRatio","size","componentSizes","isArray","length","every","Space","defineComponent","name","props","setup","_ref","slots","_useSpace$useSpace","useSpace","classes","containerStyle","itemStyle","extractChildren","children","parentKey","arguments","undefined","extractedChildren","forEach","child","loopKey","vnode","isFragment","nested","key","concat","push","createVNode","item","value","default","PatchFlags","PROPS","STYLE","isValidElementNode","_a","renderSlot","len","reduce","acc","idx","children2","_toConsumableArray","createTextVNode","TEXT","CLASS"],"sources":["../../../../../../packages/components/space/src/space.ts"],"sourcesContent":["import {\n  createTextVNode,\n  createVNode,\n  defineComponent,\n  isVNode,\n  renderSlot,\n} from 'vue'\nimport {\n  PatchFlags,\n  buildProps,\n  definePropType,\n  isArray,\n  isFragment,\n  isNumber,\n  isString,\n  isValidElementNode,\n} from '@element-plus/utils'\nimport { componentSizes } from '@element-plus/constants'\nimport Item from './item'\nimport { useSpace } from './use-space'\n\nimport type {\n  ExtractPropTypes,\n  StyleValue,\n  VNode,\n  VNodeArrayChildren,\n  VNodeChild,\n} from 'vue'\nimport type { Arrayable } from '@element-plus/utils'\nimport type { AlignItemsProperty } from 'csstype'\n\nexport const spaceProps = buildProps({\n  /**\n   * @description Placement direction\n   */\n  direction: {\n    type: String,\n    values: ['horizontal', 'vertical'],\n    default: 'horizontal',\n  },\n  /**\n   * @description Classname\n   */\n  class: {\n    type: definePropType<Arrayable<Record<string, boolean> | string>>([\n      String,\n      Object,\n      Array,\n    ]),\n    default: '',\n  },\n  /**\n   * @description Extra style rules\n   */\n  style: {\n    type: definePropType<StyleValue>([String, Array, Object]),\n    default: '',\n  },\n  /**\n   * @description Controls the alignment of items\n   */\n  alignment: {\n    type: definePropType<AlignItemsProperty>(String),\n    default: 'center',\n  },\n  /**\n   * @description Prefix for space-items\n   */\n  prefixCls: {\n    type: String,\n  },\n  /**\n   * @description Spacer\n   */\n  spacer: {\n    type: definePropType<VNodeChild>([Object, String, Number, Array]),\n    default: null,\n    validator: (val: unknown) => isVNode(val) || isNumber(val) || isString(val),\n  },\n  /**\n   * @description Auto wrapping\n   */\n  wrap: Boolean,\n  /**\n   * @description Whether to fill the container\n   */\n  fill: Boolean,\n  /**\n   * @description Ratio of fill\n   */\n  fillRatio: {\n    type: Number,\n    default: 100,\n  },\n  /**\n   * @description Spacing size\n   */\n  size: {\n    type: [String, Array, Number],\n    values: componentSizes,\n    validator: (val: unknown): val is [number, number] | number => {\n      return (\n        isNumber(val) ||\n        (isArray(val) && val.length === 2 && val.every(isNumber))\n      )\n    },\n  },\n} as const)\nexport type SpaceProps = ExtractPropTypes<typeof spaceProps>\n\nconst Space = defineComponent({\n  name: 'ElSpace',\n\n  props: spaceProps,\n\n  setup(props, { slots }) {\n    const { classes, containerStyle, itemStyle } = useSpace(props)\n\n    // retrieve the children out via a simple for loop\n    // the edge case here is that when users uses directives like <v-for>, <v-if>\n    // we need to go deeper until the child is not the Fragment type\n    function extractChildren(\n      children: VNodeArrayChildren,\n      parentKey = '',\n      extractedChildren: VNode[] = []\n    ) {\n      const { prefixCls } = props\n      children.forEach((child, loopKey) => {\n        if (isFragment(child)) {\n          if (isArray(child.children)) {\n            child.children.forEach((nested, key) => {\n              if (isFragment(nested) && isArray(nested.children)) {\n                extractChildren(\n                  nested.children,\n                  `${parentKey + key}-`,\n                  extractedChildren\n                )\n              } else {\n                extractedChildren.push(\n                  createVNode(\n                    Item,\n                    {\n                      style: itemStyle.value,\n                      prefixCls,\n                      key: `nested-${parentKey + key}`,\n                    },\n                    {\n                      default: () => [nested],\n                    },\n                    PatchFlags.PROPS | PatchFlags.STYLE,\n                    ['style', 'prefixCls']\n                  )\n                )\n              }\n            })\n          }\n          // if the current child is valid vnode, then append this current vnode\n          // to item as child node.\n        } else if (isValidElementNode(child)) {\n          extractedChildren.push(\n            createVNode(\n              Item,\n              {\n                style: itemStyle.value,\n                prefixCls,\n                key: `LoopKey${parentKey + loopKey}`,\n              },\n              {\n                default: () => [child],\n              },\n              PatchFlags.PROPS | PatchFlags.STYLE,\n              ['style', 'prefixCls']\n            )\n          )\n        }\n      })\n\n      return extractedChildren\n    }\n\n    return () => {\n      const { spacer, direction } = props\n\n      const children = renderSlot(slots, 'default', { key: 0 }, () => [])\n\n      if ((children.children ?? []).length === 0) return null\n      // loop the children, if current children is rendered via `renderList` or `<v-for>`\n      if (isArray(children.children)) {\n        let extractedChildren = extractChildren(children.children)\n\n        if (spacer) {\n          // track the current rendering index, when encounters the last element\n          // then no need to add a spacer after it.\n          const len = extractedChildren.length - 1\n          extractedChildren = extractedChildren.reduce<VNode[]>(\n            (acc, child, idx) => {\n              const children = [...acc, child]\n              if (idx !== len) {\n                children.push(\n                  createVNode(\n                    'span',\n                    // adding width 100% for vertical alignment,\n                    // when the spacer inherit the width from the\n                    // parent, this span's width was not set, so space\n                    // might disappear\n                    {\n                      style: [\n                        itemStyle.value,\n                        direction === 'vertical' ? 'width: 100%' : null,\n                      ],\n                      key: idx,\n                    },\n                    [\n                      // if spacer is already a valid vnode, then append it to the current\n                      // span element.\n                      // otherwise, treat it as string.\n                      isVNode(spacer)\n                        ? spacer\n                        : createTextVNode(spacer as string, PatchFlags.TEXT),\n                    ],\n                    PatchFlags.STYLE\n                  )\n                )\n              }\n              return children\n            },\n            []\n          )\n        }\n\n        // spacer container.\n        return createVNode(\n          'div',\n          {\n            class: classes.value,\n            style: containerStyle.value,\n          },\n          extractedChildren,\n          PatchFlags.STYLE | PatchFlags.CLASS\n        )\n      }\n\n      return children.children\n    }\n  },\n})\n\nexport type SpaceInstance = InstanceType<typeof Space> & unknown\n\nexport default Space\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}