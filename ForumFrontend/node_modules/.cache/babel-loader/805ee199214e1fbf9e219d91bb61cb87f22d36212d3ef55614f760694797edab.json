{"ast":null,"code":"import _typeof from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"H:\\\\ForumServers\\\\ForumFrontend\\\\node_modules\\\\core-js\\\\modules\\\\es.array.iterator.js\";\nimport \"H:\\\\ForumServers\\\\ForumFrontend\\\\node_modules\\\\core-js\\\\modules\\\\es.promise.js\";\nimport \"H:\\\\ForumServers\\\\ForumFrontend\\\\node_modules\\\\core-js\\\\modules\\\\es.object.assign.js\";\nimport \"H:\\\\ForumServers\\\\ForumFrontend\\\\node_modules\\\\core-js\\\\modules\\\\es.promise.finally.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.string.includes.js\";\n// 在最开始设置 Quill 的默认配置\nif (typeof window !== 'undefined') {\n  window.Quill = window.Quill || {};\n  window.Quill.DEFAULTS = window.Quill.DEFAULTS || {};\n  window.Quill.DEFAULTS.experimental = {\n    useModernScrollingApi: true,\n    useMutationObserver: true\n  };\n}\nimport { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nimport ElementPlus from 'element-plus';\nimport 'element-plus/dist/index.css';\nimport service from './utils/request';\nimport BackButton from './components/BackButton.vue';\nimport { QuillEditor } from '@vueup/vue-quill';\nimport '@vueup/vue-quill/dist/vue-quill.snow.css';\nimport { initQuill } from './utils/quill-config';\n\n// 是否启用调试日志\nvar DEBUG = false;\n\n// 自定义日志函数，可以通过DEBUG开关控制\nvar log = function log() {\n  if (DEBUG) {\n    var _console;\n    (_console = console).log.apply(_console, arguments);\n  }\n};\n\n// 全局挂载日志函数\nif (typeof window !== 'undefined') {\n  window.appLog = log;\n}\n\n// 在导入Quill之前设置警告拦截器\n/**\n * 控制台警告过滤器\n * \n * 这个过滤器用于减少控制台输出，过滤掉以下类型的警告：\n * 1. Quill编辑器相关的DOMNodeInserted弃用警告\n * 2. Vue组件渲染时的属性访问警告\n * 3. Element Plus的按钮type=\"text\"弃用警告\n * 4. 其他常见的非关键警告\n * \n * 这样可以保持控制台的整洁，只显示真正需要关注的警告信息\n */\nvar originalWarn = console.warn;\nconsole.warn = function (msg) {\n  // 如果是对象，转换为字符串以便进行过滤\n  var msgStr = msg;\n  if (_typeof(msg) === 'object') {\n    try {\n      msgStr = JSON.stringify(msg);\n    } catch (e) {\n      msgStr = String(msg);\n    }\n  }\n\n  // 过滤掉不需要的警告\n  if (msg && (\n  // Quill相关警告\n  typeof msgStr === 'string' && (msgStr.includes('DOMNodeInserted') || msgStr.includes('Listener added for a') || msgStr.includes('mutation event') || msgStr.includes('[Deprecation]') || msgStr.includes('Support for this event type has been removed')) ||\n  // Vue警告\n  typeof msgStr === 'string' && (msgStr.includes('Property') && msgStr.includes('was accessed during render but is not defined') || msgStr.includes('Template ref') && msgStr.includes('used on a non-ref value')) ||\n  // Element Plus警告\n  typeof msgStr === 'string' && (msgStr.includes('ElementPlusError') || msgStr.includes('type.text is about to be deprecated') || msgStr.includes('please use link instead')))) {\n    // 忽略这些警告\n    return;\n  }\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  originalWarn.call.apply(originalWarn, [console, msg].concat(args));\n};\n\n// 拦截错误日志\nvar originalError = console.error;\nconsole.error = function (msg) {\n  // 过滤掉特定的错误信息\n  if (msg && typeof msg === 'string' && (msg.includes('Failed to load resource') || msg.includes('NetworkError') || msg.includes('404 (Not Found)') || msg.includes('Error loading'))) {\n    return;\n  }\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n  originalError.call.apply(originalError, [console, msg].concat(args));\n};\n\n// 拦截普通日志\nvar originalLog = console.log;\nconsole.log = function (msg) {\n  // 过滤掉API相关的调试日志\n  if (msg && typeof msg === 'string' && (msg.includes('API') || msg.includes('api') || msg.includes('请求') || msg.includes('响应') || msg.includes('帖子列表') || msg.includes('板块列表') || msg.includes('处理'))) {\n    return;\n  }\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n  originalLog.call.apply(originalLog, [console, msg].concat(args));\n};\n\n// 初始化 Quill\ninitQuill();\nvar app = createApp(App);\napp.use(store);\napp.use(router);\napp.use(ElementPlus);\n\n// 全局挂载axios\napp.config.globalProperties.$axios = service;\n\n// 全局注册组件\napp.component('BackButton', BackButton);\napp.component('QuillEditor', QuillEditor);\n\n// 全局挂载日志函数\napp.config.globalProperties.$log = log;\n\n// 在路由准备就绪后挂载应用\nrouter.isReady().then(function () {\n  app.mount('#app');\n});","map":{"version":3,"names":["window","Quill","DEFAULTS","experimental","useModernScrollingApi","useMutationObserver","createApp","App","router","store","ElementPlus","service","BackButton","QuillEditor","initQuill","DEBUG","log","_console","console","apply","arguments","appLog","originalWarn","warn","msg","msgStr","_typeof","JSON","stringify","e","String","includes","_len","length","args","Array","_key","call","concat","originalError","error","_len2","_key2","originalLog","_len3","_key3","app","use","config","globalProperties","$axios","component","$log","isReady","then","mount"],"sources":["H:/ForumServers/ForumFrontend/src/main.js"],"sourcesContent":["// 在最开始设置 Quill 的默认配置\nif (typeof window !== 'undefined') {\n  window.Quill = window.Quill || {};\n  window.Quill.DEFAULTS = window.Quill.DEFAULTS || {};\n  window.Quill.DEFAULTS.experimental = {\n    useModernScrollingApi: true,\n    useMutationObserver: true\n  };\n}\n\nimport { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport service from './utils/request'\nimport BackButton from './components/BackButton.vue'\nimport { QuillEditor } from '@vueup/vue-quill'\nimport '@vueup/vue-quill/dist/vue-quill.snow.css'\nimport { initQuill } from './utils/quill-config'\n\n// 是否启用调试日志\nconst DEBUG = false;\n\n// 自定义日志函数，可以通过DEBUG开关控制\nconst log = (...args) => {\n  if (DEBUG) {\n    console.log(...args);\n  }\n};\n\n// 全局挂载日志函数\nif (typeof window !== 'undefined') {\n  window.appLog = log;\n}\n\n// 在导入Quill之前设置警告拦截器\n/**\n * 控制台警告过滤器\n * \n * 这个过滤器用于减少控制台输出，过滤掉以下类型的警告：\n * 1. Quill编辑器相关的DOMNodeInserted弃用警告\n * 2. Vue组件渲染时的属性访问警告\n * 3. Element Plus的按钮type=\"text\"弃用警告\n * 4. 其他常见的非关键警告\n * \n * 这样可以保持控制台的整洁，只显示真正需要关注的警告信息\n */\nconst originalWarn = console.warn;\nconsole.warn = function(msg, ...args) {\n  // 如果是对象，转换为字符串以便进行过滤\n  let msgStr = msg;\n  if (typeof msg === 'object') {\n    try {\n      msgStr = JSON.stringify(msg);\n    } catch (e) {\n      msgStr = String(msg);\n    }\n  }\n\n  // 过滤掉不需要的警告\n  if (msg && (\n      // Quill相关警告\n      (typeof msgStr === 'string' && (\n        msgStr.includes('DOMNodeInserted') || \n        msgStr.includes('Listener added for a') ||\n        msgStr.includes('mutation event') ||\n        msgStr.includes('[Deprecation]') ||\n        msgStr.includes('Support for this event type has been removed')\n      )) ||\n      // Vue警告\n      (typeof msgStr === 'string' && \n        ((msgStr.includes('Property') && msgStr.includes('was accessed during render but is not defined')) ||\n         msgStr.includes('Template ref') && msgStr.includes('used on a non-ref value'))) ||\n      // Element Plus警告\n      (typeof msgStr === 'string' && \n        (msgStr.includes('ElementPlusError') || \n         msgStr.includes('type.text is about to be deprecated') ||\n         msgStr.includes('please use link instead')))\n  )) {\n    // 忽略这些警告\n    return;\n  }\n  originalWarn.call(console, msg, ...args);\n};\n\n// 拦截错误日志\nconst originalError = console.error;\nconsole.error = function(msg, ...args) {\n  // 过滤掉特定的错误信息\n  if (msg && typeof msg === 'string' && (\n      msg.includes('Failed to load resource') ||\n      msg.includes('NetworkError') ||\n      msg.includes('404 (Not Found)') ||\n      msg.includes('Error loading')\n  )) {\n    return;\n  }\n  originalError.call(console, msg, ...args);\n};\n\n// 拦截普通日志\nconst originalLog = console.log;\nconsole.log = function(msg, ...args) {\n  // 过滤掉API相关的调试日志\n  if (msg && typeof msg === 'string' && (\n      msg.includes('API') || \n      msg.includes('api') ||\n      msg.includes('请求') ||\n      msg.includes('响应') ||\n      msg.includes('帖子列表') ||\n      msg.includes('板块列表') ||\n      msg.includes('处理')\n  )) {\n    return;\n  }\n  originalLog.call(console, msg, ...args);\n};\n\n// 初始化 Quill\ninitQuill();\n\nconst app = createApp(App)\n\napp.use(store)\napp.use(router)\napp.use(ElementPlus)\n\n// 全局挂载axios\napp.config.globalProperties.$axios = service\n\n// 全局注册组件\napp.component('BackButton', BackButton)\napp.component('QuillEditor', QuillEditor)\n\n// 全局挂载日志函数\napp.config.globalProperties.$log = log;\n\n// 在路由准备就绪后挂载应用\nrouter.isReady().then(() => {\n  app.mount('#app')\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}