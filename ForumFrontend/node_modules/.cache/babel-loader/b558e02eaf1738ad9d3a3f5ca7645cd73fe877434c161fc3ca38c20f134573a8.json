{"ast":null,"code":"import _toConsumableArray from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"post-detail-container\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_3 = {\n  key: 1\n};\nvar _hoisted_4 = {\n  \"class\": \"post-header\"\n};\nvar _hoisted_5 = {\n  \"class\": \"post-title\"\n};\nvar _hoisted_6 = {\n  \"class\": \"post-meta\"\n};\nvar _hoisted_7 = {\n  \"class\": \"post-author\"\n};\nvar _hoisted_8 = {\n  \"class\": \"author-info\"\n};\nvar _hoisted_9 = {\n  \"class\": \"author-name\"\n};\nvar _hoisted_10 = {\n  \"class\": \"post-time\"\n};\nvar _hoisted_11 = {\n  \"class\": \"post-content\"\n};\nvar _hoisted_12 = {\n  \"class\": \"post-footer\"\n};\nvar _hoisted_13 = {\n  \"class\": \"post-stats\"\n};\nvar _hoisted_14 = {\n  \"class\": \"post-actions\"\n};\nvar _hoisted_15 = {\n  slot: \"header\",\n  \"class\": \"clearfix\"\n};\nvar _hoisted_16 = {\n  \"class\": \"comment-form\"\n};\nvar _hoisted_17 = {\n  \"class\": \"comment-form-footer\"\n};\nvar _hoisted_18 = {\n  key: 0,\n  \"class\": \"login-tip\"\n};\nvar _hoisted_19 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_20 = {\n  key: 1,\n  \"class\": \"empty-comments\"\n};\nvar _hoisted_21 = {\n  key: 2,\n  \"class\": \"comments-list\"\n};\nvar _hoisted_22 = {\n  \"class\": \"comment-header\"\n};\nvar _hoisted_23 = {\n  \"class\": \"comment-author\"\n};\nvar _hoisted_24 = {\n  \"class\": \"author-info\"\n};\nvar _hoisted_25 = {\n  \"class\": \"author-name\"\n};\nvar _hoisted_26 = {\n  \"class\": \"comment-time\"\n};\nvar _hoisted_27 = {\n  \"class\": \"comment-actions\"\n};\nvar _hoisted_28 = {\n  \"class\": \"comment-content\"\n};\nvar _hoisted_29 = {\n  key: 0,\n  \"class\": \"reply-form\"\n};\nvar _hoisted_30 = {\n  \"class\": \"reply-form-footer\"\n};\nvar _hoisted_31 = {\n  key: 1,\n  \"class\": \"replies-list\"\n};\nvar _hoisted_32 = {\n  \"class\": \"reply-header\"\n};\nvar _hoisted_33 = {\n  \"class\": \"reply-author\"\n};\nvar _hoisted_34 = {\n  \"class\": \"author-info\"\n};\nvar _hoisted_35 = {\n  \"class\": \"author-name\"\n};\nvar _hoisted_36 = {\n  \"class\": \"reply-time\"\n};\nvar _hoisted_37 = {\n  \"class\": \"reply-actions\"\n};\nvar _hoisted_38 = {\n  \"class\": \"reply-content\"\n};\nvar _hoisted_39 = {\n  key: 3,\n  \"class\": \"pagination-container\"\n};\nvar _hoisted_40 = {\n  \"class\": \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_el_avatar = _resolveComponent(\"el-avatar\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_dropdown_item = _resolveComponent(\"el-dropdown-item\");\n  var _component_el_dropdown_menu = _resolveComponent(\"el-dropdown-menu\");\n  var _component_el_dropdown = _resolveComponent(\"el-dropdown\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_router_link = _resolveComponent(\"router-link\");\n  var _component_el_pagination = _resolveComponent(\"el-pagination\");\n  var _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 帖子详情卡片 \"), _createVNode(_component_el_card, {\n    \"class\": \"post-detail-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      var _$data$post$user, _$data$post$user4, _$data$post$user5, _$data$post$board;\n      return [$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_skeleton, {\n        rows: 10,\n        animated: \"\"\n      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h1\", _hoisted_5, [$data.post.is_pinned ? (_openBlock(), _createBlock(_component_el_tag, {\n        key: 0,\n        size: \"medium\",\n        type: \"danger\"\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[8] || (_cache[8] = [_createTextVNode(\"置顶\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [8]\n      })) : _createCommentVNode(\"v-if\", true), $data.post.is_featured ? (_openBlock(), _createBlock(_component_el_tag, {\n        key: 1,\n        size: \"medium\",\n        type: \"success\"\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[9] || (_cache[9] = [_createTextVNode(\"精华\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [9]\n      })) : _createCommentVNode(\"v-if\", true), _createTextVNode(\" \" + _toDisplayString($data.post.title), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_el_avatar, {\n        size: 40,\n        src: ((_$data$post$user = $data.post.user) === null || _$data$post$user === void 0 ? void 0 : _$data$post$user.avatar_url) || ''\n      }, {\n        \"default\": _withCtx(function () {\n          var _$data$post$user2, _$data$post$user3;\n          return [_createTextVNode(_toDisplayString(((_$data$post$user2 = $data.post.user) === null || _$data$post$user2 === void 0 || (_$data$post$user2 = _$data$post$user2.nickname) === null || _$data$post$user2 === void 0 ? void 0 : _$data$post$user2.charAt(0)) || ((_$data$post$user3 = $data.post.user) === null || _$data$post$user3 === void 0 || (_$data$post$user3 = _$data$post$user3.username) === null || _$data$post$user3 === void 0 ? void 0 : _$data$post$user3.charAt(0)) || 'U'), 1 /* TEXT */)];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"src\"]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, _toDisplayString(((_$data$post$user4 = $data.post.user) === null || _$data$post$user4 === void 0 ? void 0 : _$data$post$user4.nickname) || ((_$data$post$user5 = $data.post.user) === null || _$data$post$user5 === void 0 ? void 0 : _$data$post$user5.username)), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_10, \"发布于 \" + _toDisplayString($options.formatDate($data.post.created_at)), 1 /* TEXT */)])]), _createElementVNode(\"div\", {\n        \"class\": \"post-board\",\n        onClick: _cache[0] || (_cache[0] = function () {\n          return $options.goToBoard && $options.goToBoard.apply($options, arguments);\n        })\n      }, [_cache[10] || (_cache[10] = _createElementVNode(\"i\", {\n        \"class\": \"el-icon-s-grid\"\n      }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, _toDisplayString((_$data$post$board = $data.post.board) === null || _$data$post$board === void 0 ? void 0 : _$data$post$board.name), 1 /* TEXT */)])])]), _createElementVNode(\"div\", _hoisted_11, _toDisplayString($data.post.content), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"span\", null, [_cache[11] || (_cache[11] = _createElementVNode(\"i\", {\n        \"class\": \"el-icon-view\"\n      }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.post.views), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_cache[12] || (_cache[12] = _createElementVNode(\"i\", {\n        \"class\": \"el-icon-star-on\"\n      }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.post.likes_count), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_cache[13] || (_cache[13] = _createElementVNode(\"i\", {\n        \"class\": \"el-icon-chat-dot-round\"\n      }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.post.comments_count), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_14, [_createVNode(_component_el_button, {\n        type: $data.isLiked ? 'primary' : 'default',\n        size: \"small\",\n        icon: \"el-icon-star-on\",\n        onClick: $options.handleLike\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createTextVNode(_toDisplayString($data.isLiked ? '已点赞' : '点赞'), 1 /* TEXT */)];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"type\", \"onClick\"]), _createVNode(_component_el_button, {\n        type: $data.isFavorited ? 'warning' : 'default',\n        size: \"small\",\n        icon: \"el-icon-collection-tag\",\n        onClick: $options.handleFavorite\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createTextVNode(_toDisplayString($data.isFavorited ? '已收藏' : '收藏'), 1 /* TEXT */)];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"type\", \"onClick\"]), _createCommentVNode(\" 删除帖子按钮 \"), $options.canManagePost ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 0,\n        type: \"danger\",\n        size: \"small\",\n        icon: \"el-icon-delete\",\n        onClick: $options.handleDeletePost\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[14] || (_cache[14] = [_createTextVNode(\" 删除 \")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [14]\n      }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 编辑帖子按钮 \"), $options.canManagePost ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 1,\n        type: \"primary\",\n        size: \"small\",\n        icon: \"el-icon-edit\",\n        onClick: _cache[1] || (_cache[1] = function ($event) {\n          return _ctx.$router.push({\n            name: 'PostEdit',\n            params: {\n              id: $data.post.id\n            }\n          });\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[15] || (_cache[15] = [_createTextVNode(\" 编辑 \")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [15]\n      })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 管理员操作下拉菜单 \"), _ctx.isAdmin ? (_openBlock(), _createBlock(_component_el_dropdown, {\n        key: 2,\n        trigger: \"click\",\n        onCommand: $options.handleCommand\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_button, {\n            size: \"small\",\n            icon: \"el-icon-setting\"\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[16] || (_cache[16] = [_createTextVNode(\" 管理 \")]);\n            }),\n            _: 1 /* STABLE */,\n            __: [16]\n          }), _createVNode(_component_el_dropdown_menu, {\n            slot: \"dropdown\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_dropdown_item, {\n                command: \"pin\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString($data.post.is_pinned ? '取消置顶' : '置顶'), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_dropdown_item, {\n                command: \"feature\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString($data.post.is_featured ? '取消加精' : '加精'), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onCommand\"])) : _createCommentVNode(\"v-if\", true)])])]))];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 评论区 \"), _createVNode(_component_el_card, {\n    \"class\": \"comments-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"span\", null, \"评论区 (\" + _toDisplayString($data.post.comments_count || 0) + \")\", 1 /* TEXT */)]), _createCommentVNode(\" 发表评论 \"), _createElementVNode(\"div\", _hoisted_16, [_createVNode(_component_el_input, {\n        modelValue: $data.commentContent,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n          return $data.commentContent = $event;\n        }),\n        type: \"textarea\",\n        rows: 3,\n        placeholder: \"发表你的评论...\",\n        disabled: !$options.isLogin\n      }, null, 8 /* PROPS */, [\"modelValue\", \"disabled\"]), _createElementVNode(\"div\", _hoisted_17, [_createVNode(_component_el_button, {\n        type: \"primary\",\n        disabled: !$options.isLogin || !$data.commentContent.trim(),\n        onClick: $options.submitComment\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[17] || (_cache[17] = [_createTextVNode(\" 发表评论 \")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [17]\n      }, 8 /* PROPS */, [\"disabled\", \"onClick\"]), !$options.isLogin ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_cache[19] || (_cache[19] = _createTextVNode(\" 请先 \")), _createVNode(_component_router_link, {\n        to: {\n          name: 'Login',\n          query: {\n            redirect: _ctx.$route.fullPath\n          }\n        }\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[18] || (_cache[18] = [_createTextVNode(\"登录\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [18]\n      }, 8 /* PROPS */, [\"to\"]), _cache[20] || (_cache[20] = _createTextVNode(\" 后发表评论 \"))])) : _createCommentVNode(\"v-if\", true)])]), _createCommentVNode(\" 评论列表 \"), $data.commentsLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_createVNode(_component_el_skeleton, {\n        rows: 5,\n        animated: \"\"\n      })])) : $data.comments.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, _cache[21] || (_cache[21] = [_createElementVNode(\"i\", {\n        \"class\": \"el-icon-chat-dot-round\"\n      }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"暂无评论，快来发表第一条评论吧！\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, function (comment) {\n        var _comment$user, _comment$user4, _comment$user5;\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: comment.id,\n          \"class\": \"comment-item\"\n        }, [_createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, [_createVNode(_component_el_avatar, {\n          size: 32,\n          src: ((_comment$user = comment.user) === null || _comment$user === void 0 ? void 0 : _comment$user.avatar_url) || ''\n        }, {\n          \"default\": _withCtx(function () {\n            var _comment$user2, _comment$user3;\n            return [_createTextVNode(_toDisplayString(((_comment$user2 = comment.user) === null || _comment$user2 === void 0 || (_comment$user2 = _comment$user2.nickname) === null || _comment$user2 === void 0 ? void 0 : _comment$user2.charAt(0)) || ((_comment$user3 = comment.user) === null || _comment$user3 === void 0 || (_comment$user3 = _comment$user3.username) === null || _comment$user3 === void 0 ? void 0 : _comment$user3.charAt(0)) || 'U'), 1 /* TEXT */)];\n          }),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"src\"]), _createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, _toDisplayString(((_comment$user4 = comment.user) === null || _comment$user4 === void 0 ? void 0 : _comment$user4.nickname) || ((_comment$user5 = comment.user) === null || _comment$user5 === void 0 ? void 0 : _comment$user5.username)), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_26, _toDisplayString($options.formatDate(comment.created_at)), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_27, [_createVNode(_component_el_button, {\n          text: \"\",\n          size: \"small\",\n          onClick: function onClick($event) {\n            return $options.handleReply(comment);\n          }\n        }, {\n          \"default\": _withCtx(function () {\n            return _toConsumableArray(_cache[22] || (_cache[22] = [_createTextVNode(\"回复\")]));\n          }),\n          _: 2 /* DYNAMIC */,\n          __: [22]\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createCommentVNode(\" 删除评论按钮 \"), $options.canManageComment(comment) ? (_openBlock(), _createBlock(_component_el_button, {\n          key: 0,\n          text: \"\",\n          type: \"danger\",\n          size: \"small\",\n          icon: \"el-icon-delete\",\n          onClick: function onClick($event) {\n            return $options.handleDeleteComment(comment);\n          }\n        }, {\n          \"default\": _withCtx(function () {\n            return _toConsumableArray(_cache[23] || (_cache[23] = [_createTextVNode(\"删除\")]));\n          }),\n          _: 2 /* DYNAMIC */,\n          __: [23]\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 编辑评论按钮 \"), $options.canManageComment(comment) ? (_openBlock(), _createBlock(_component_el_button, {\n          key: 1,\n          text: \"\",\n          type: \"primary\",\n          size: \"small\",\n          icon: \"el-icon-edit\",\n          onClick: function onClick($event) {\n            return $options.handleEditComment(comment);\n          }\n        }, {\n          \"default\": _withCtx(function () {\n            return _toConsumableArray(_cache[24] || (_cache[24] = [_createTextVNode(\"编辑\")]));\n          }),\n          _: 2 /* DYNAMIC */,\n          __: [24]\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_28, _toDisplayString(comment.content), 1 /* TEXT */), _createCommentVNode(\" 回复表单 \"), $data.replyingTo === comment.id ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [_createVNode(_component_el_input, {\n          modelValue: $data.replyContent,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n            return $data.replyContent = $event;\n          }),\n          type: \"textarea\",\n          rows: 2,\n          placeholder: \"回复评论...\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"div\", _hoisted_30, [_createVNode(_component_el_button, {\n          size: \"small\",\n          onClick: $options.cancelReply\n        }, {\n          \"default\": _withCtx(function () {\n            return _toConsumableArray(_cache[25] || (_cache[25] = [_createTextVNode(\"取消\")]));\n          }),\n          _: 1 /* STABLE */,\n          __: [25]\n        }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n          type: \"primary\",\n          size: \"small\",\n          disabled: !$data.replyContent.trim(),\n          onClick: function onClick($event) {\n            return $options.submitReply(comment);\n          }\n        }, {\n          \"default\": _withCtx(function () {\n            return _toConsumableArray(_cache[26] || (_cache[26] = [_createTextVNode(\" 回复 \")]));\n          }),\n          _: 2 /* DYNAMIC */,\n          __: [26]\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"disabled\", \"onClick\"])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 回复列表 \"), comment.replies && comment.replies.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_31, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(comment.replies, function (reply) {\n          var _reply$user, _reply$user4, _reply$user5;\n          return _openBlock(), _createElementBlock(\"div\", {\n            key: reply.id,\n            \"class\": \"reply-item\"\n          }, [_createElementVNode(\"div\", _hoisted_32, [_createElementVNode(\"div\", _hoisted_33, [_createVNode(_component_el_avatar, {\n            size: 24,\n            src: ((_reply$user = reply.user) === null || _reply$user === void 0 ? void 0 : _reply$user.avatar_url) || ''\n          }, {\n            \"default\": _withCtx(function () {\n              var _reply$user2, _reply$user3;\n              return [_createTextVNode(_toDisplayString(((_reply$user2 = reply.user) === null || _reply$user2 === void 0 || (_reply$user2 = _reply$user2.nickname) === null || _reply$user2 === void 0 ? void 0 : _reply$user2.charAt(0)) || ((_reply$user3 = reply.user) === null || _reply$user3 === void 0 || (_reply$user3 = _reply$user3.username) === null || _reply$user3 === void 0 ? void 0 : _reply$user3.charAt(0)) || 'U'), 1 /* TEXT */)];\n            }),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"src\"]), _createElementVNode(\"div\", _hoisted_34, [_createElementVNode(\"div\", _hoisted_35, _toDisplayString(((_reply$user4 = reply.user) === null || _reply$user4 === void 0 ? void 0 : _reply$user4.nickname) || ((_reply$user5 = reply.user) === null || _reply$user5 === void 0 ? void 0 : _reply$user5.username)), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_36, _toDisplayString($options.formatDate(reply.created_at)), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_37, [_createVNode(_component_el_button, {\n            text: \"\",\n            size: \"small\",\n            onClick: function onClick($event) {\n              return $options.handleReply(comment, reply);\n            }\n          }, {\n            \"default\": _withCtx(function () {\n              return _toConsumableArray(_cache[27] || (_cache[27] = [_createTextVNode(\"回复\")]));\n            }),\n            _: 2 /* DYNAMIC */,\n            __: [27]\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createCommentVNode(\" 删除回复按钮 \"), $options.canManageComment(reply) ? (_openBlock(), _createBlock(_component_el_button, {\n            key: 0,\n            text: \"\",\n            type: \"danger\",\n            size: \"small\",\n            icon: \"el-icon-delete\",\n            onClick: function onClick($event) {\n              return $options.handleDeleteComment(reply);\n            }\n          }, {\n            \"default\": _withCtx(function () {\n              return _toConsumableArray(_cache[28] || (_cache[28] = [_createTextVNode(\"删除\")]));\n            }),\n            _: 2 /* DYNAMIC */,\n            __: [28]\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 编辑回复按钮 \"), $options.canManageComment(reply) ? (_openBlock(), _createBlock(_component_el_button, {\n            key: 1,\n            text: \"\",\n            type: \"primary\",\n            size: \"small\",\n            icon: \"el-icon-edit\",\n            onClick: function onClick($event) {\n              return $options.handleEditComment(reply);\n            }\n          }, {\n            \"default\": _withCtx(function () {\n              return _toConsumableArray(_cache[29] || (_cache[29] = [_createTextVNode(\"编辑\")]));\n            }),\n            _: 2 /* DYNAMIC */,\n            __: [29]\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_38, _toDisplayString(reply.content), 1 /* TEXT */)]);\n        }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]);\n      }), 128 /* KEYED_FRAGMENT */))])), _createCommentVNode(\" 评论分页 \"), $data.comments.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_39, [_createVNode(_component_el_pagination, {\n        background: \"\",\n        layout: \"prev, pager, next\",\n        total: $data.commentsTotal,\n        \"page-size\": $data.commentsQuery.limit,\n        \"current-page\": $data.commentsQuery.page,\n        \"onUpdate:currentPage\": _cache[4] || (_cache[4] = function ($event) {\n          return $data.commentsQuery.page = $event;\n        }),\n        onCurrentChange: $options.handleCommentsPageChange\n      }, null, 8 /* PROPS */, [\"total\", \"page-size\", \"current-page\", \"onCurrentChange\"])])) : _createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 编辑评论对话框 \"), _createVNode(_component_el_dialog, {\n    title: \"编辑评论\",\n    visible: $data.editCommentDialogVisible,\n    \"onUpdate:visible\": _cache[7] || (_cache[7] = function ($event) {\n      return $data.editCommentDialogVisible = $event;\n    }),\n    width: \"500px\"\n  }, {\n    footer: _withCtx(function () {\n      return [_createElementVNode(\"span\", _hoisted_40, [_createVNode(_component_el_button, {\n        onClick: _cache[6] || (_cache[6] = function ($event) {\n          return $data.editCommentDialogVisible = false;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[30] || (_cache[30] = [_createTextVNode(\"取 消\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [30]\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.submitEditComment\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[31] || (_cache[31] = [_createTextVNode(\"确 定\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [31]\n      }, 8 /* PROPS */, [\"onClick\"])])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_input, {\n        modelValue: $data.editCommentContent,\n        \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n          return $data.editCommentContent = $event;\n        }),\n        type: \"textarea\",\n        rows: 4,\n        placeholder: \"请输入评论内容\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\"])]);\n}","map":{"version":3,"names":["key","slot","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_el_card","_withCtx","_$data$post$user","_$data$post$user4","_$data$post$user5","_$data$post$board","$data","loading","_hoisted_2","_component_el_skeleton","rows","animated","_hoisted_3","_createElementVNode","_hoisted_4","_hoisted_5","post","is_pinned","_createBlock","_component_el_tag","size","type","_cache","_createTextVNode","_","__","is_featured","_toDisplayString","title","_hoisted_6","_hoisted_7","_component_el_avatar","src","user","avatar_url","_$data$post$user2","_$data$post$user3","nickname","charAt","username","_hoisted_8","_hoisted_9","_hoisted_10","$options","formatDate","created_at","onClick","goToBoard","apply","arguments","board","name","_hoisted_11","content","_hoisted_12","_hoisted_13","views","likes_count","comments_count","_hoisted_14","_component_el_button","isLiked","icon","handleLike","isFavorited","handleFavorite","canManagePost","handleDeletePost","$event","_ctx","$router","push","params","id","isAdmin","_component_el_dropdown","trigger","onCommand","handleCommand","_component_el_dropdown_menu","_component_el_dropdown_item","command","_hoisted_15","_hoisted_16","_component_el_input","modelValue","commentContent","placeholder","disabled","isLogin","_hoisted_17","trim","submitComment","_hoisted_18","_component_router_link","to","query","redirect","$route","fullPath","commentsLoading","_hoisted_19","comments","length","_hoisted_20","_hoisted_21","_Fragment","_renderList","comment","_comment$user","_comment$user4","_comment$user5","_hoisted_22","_hoisted_23","_comment$user2","_comment$user3","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","text","handleReply","_toConsumableArray","canManageComment","handleDeleteComment","handleEditComment","_hoisted_28","replyingTo","_hoisted_29","replyContent","_hoisted_30","cancelReply","submitReply","replies","_hoisted_31","reply","_reply$user","_reply$user4","_reply$user5","_hoisted_32","_hoisted_33","_reply$user2","_reply$user3","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_component_el_pagination","background","layout","total","commentsTotal","commentsQuery","limit","page","onCurrentChange","handleCommentsPageChange","_component_el_dialog","visible","editCommentDialogVisible","width","footer","_hoisted_40","submitEditComment","editCommentContent"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\post\\PostDetail.vue"],"sourcesContent":["<template>\n  <div class=\"post-detail-container\">\n    <!-- 帖子详情卡片 -->\n    <el-card class=\"post-detail-card\">\n      <div v-if=\"loading\" class=\"loading-container\">\n        <el-skeleton :rows=\"10\" animated />\n      </div>\n      <div v-else>\n        <div class=\"post-header\">\n          <h1 class=\"post-title\">\n            <el-tag v-if=\"post.is_pinned\" size=\"medium\" type=\"danger\">置顶</el-tag>\n            <el-tag v-if=\"post.is_featured\" size=\"medium\" type=\"success\">精华</el-tag>\n            {{ post.title }}\n          </h1>\n          <div class=\"post-meta\">\n            <div class=\"post-author\">\n              <el-avatar :size=\"40\" :src=\"post.user?.avatar_url || ''\">\n                {{ post.user?.nickname?.charAt(0) || post.user?.username?.charAt(0) || 'U' }}\n              </el-avatar>\n              <div class=\"author-info\">\n                <div class=\"author-name\">{{ post.user?.nickname || post.user?.username }}</div>\n                <div class=\"post-time\">发布于 {{ formatDate(post.created_at) }}</div>\n              </div>\n            </div>\n            <div class=\"post-board\" @click=\"goToBoard\">\n              <i class=\"el-icon-s-grid\"></i>\n              <span>{{ post.board?.name }}</span>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"post-content\">\n          {{ post.content }}\n        </div>\n\n        <div class=\"post-footer\">\n          <div class=\"post-stats\">\n            <span><i class=\"el-icon-view\"></i> {{ post.views }}</span>\n            <span><i class=\"el-icon-star-on\"></i> {{ post.likes_count }}</span>\n            <span><i class=\"el-icon-chat-dot-round\"></i> {{ post.comments_count }}</span>\n          </div>\n          <div class=\"post-actions\">\n            <el-button\n              :type=\"isLiked ? 'primary' : 'default'\"\n              size=\"small\"\n              icon=\"el-icon-star-on\"\n              @click=\"handleLike\"\n            >\n              {{ isLiked ? '已点赞' : '点赞' }}\n            </el-button>\n            <el-button\n              :type=\"isFavorited ? 'warning' : 'default'\"\n              size=\"small\"\n              icon=\"el-icon-collection-tag\"\n              @click=\"handleFavorite\"\n            >\n              {{ isFavorited ? '已收藏' : '收藏' }}\n            </el-button>\n            <!-- 删除帖子按钮 -->\n            <el-button\n              v-if=\"canManagePost\"\n              type=\"danger\"\n              size=\"small\"\n              icon=\"el-icon-delete\"\n              @click=\"handleDeletePost\"\n            >\n              删除\n            </el-button>\n            <!-- 编辑帖子按钮 -->\n            <el-button\n              v-if=\"canManagePost\"\n              type=\"primary\"\n              size=\"small\"\n              icon=\"el-icon-edit\"\n              @click=\"$router.push({ name: 'PostEdit', params: { id: post.id } })\"\n            >\n              编辑\n            </el-button>\n            <!-- 管理员操作下拉菜单 -->\n            <el-dropdown v-if=\"isAdmin\" trigger=\"click\" @command=\"handleCommand\">\n              <el-button size=\"small\" icon=\"el-icon-setting\">\n                管理\n              </el-button>\n              <el-dropdown-menu slot=\"dropdown\">\n                <el-dropdown-item command=\"pin\">\n                  {{ post.is_pinned ? '取消置顶' : '置顶' }}\n                </el-dropdown-item>\n                <el-dropdown-item command=\"feature\">\n                  {{ post.is_featured ? '取消加精' : '加精' }}\n                </el-dropdown-item>\n              </el-dropdown-menu>\n            </el-dropdown>\n          </div>\n        </div>\n      </div>\n    </el-card>\n\n    <!-- 评论区 -->\n    <el-card class=\"comments-card\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span>评论区 ({{ post.comments_count || 0 }})</span>\n      </div>\n\n      <!-- 发表评论 -->\n      <div class=\"comment-form\">\n        <el-input\n          v-model=\"commentContent\"\n          type=\"textarea\"\n          :rows=\"3\"\n          placeholder=\"发表你的评论...\"\n          :disabled=\"!isLogin\"\n        ></el-input>\n        <div class=\"comment-form-footer\">\n          <el-button\n            type=\"primary\"\n            :disabled=\"!isLogin || !commentContent.trim()\"\n            @click=\"submitComment\"\n          >\n            发表评论\n          </el-button>\n          <div v-if=\"!isLogin\" class=\"login-tip\">\n            请先 <router-link :to=\"{ name: 'Login', query: { redirect: $route.fullPath } }\">登录</router-link> 后发表评论\n          </div>\n        </div>\n      </div>\n\n      <!-- 评论列表 -->\n      <div v-if=\"commentsLoading\" class=\"loading-container\">\n        <el-skeleton :rows=\"5\" animated />\n      </div>\n      <div v-else-if=\"comments.length === 0\" class=\"empty-comments\">\n        <i class=\"el-icon-chat-dot-round\"></i>\n        <p>暂无评论，快来发表第一条评论吧！</p>\n      </div>\n      <div v-else class=\"comments-list\">\n        <div\n          v-for=\"comment in comments\"\n          :key=\"comment.id\"\n          class=\"comment-item\"\n        >\n          <div class=\"comment-header\">\n            <div class=\"comment-author\">\n              <el-avatar :size=\"32\" :src=\"comment.user?.avatar_url || ''\">\n                {{ comment.user?.nickname?.charAt(0) || comment.user?.username?.charAt(0) || 'U' }}\n              </el-avatar>\n              <div class=\"author-info\">\n                <div class=\"author-name\">{{ comment.user?.nickname || comment.user?.username }}</div>\n                <div class=\"comment-time\">{{ formatDate(comment.created_at) }}</div>\n              </div>\n            </div>\n            <div class=\"comment-actions\">\n              <el-button text size=\"small\" @click=\"handleReply(comment)\">回复</el-button>\n              <!-- 删除评论按钮 -->\n              <el-button\n                v-if=\"canManageComment(comment)\"\n                text\n                type=\"danger\"\n                size=\"small\"\n                icon=\"el-icon-delete\"\n                @click=\"handleDeleteComment(comment)\"\n              >删除</el-button>\n              <!-- 编辑评论按钮 -->\n              <el-button\n                v-if=\"canManageComment(comment)\"\n                text\n                type=\"primary\"\n                size=\"small\"\n                icon=\"el-icon-edit\"\n                @click=\"handleEditComment(comment)\"\n              >编辑</el-button>\n            </div>\n          </div>\n\n          <div class=\"comment-content\">\n            {{ comment.content }}\n          </div>\n\n          <!-- 回复表单 -->\n          <div v-if=\"replyingTo === comment.id\" class=\"reply-form\">\n            <el-input\n              v-model=\"replyContent\"\n              type=\"textarea\"\n              :rows=\"2\"\n              placeholder=\"回复评论...\"\n            ></el-input>\n            <div class=\"reply-form-footer\">\n              <el-button size=\"small\" @click=\"cancelReply\">取消</el-button>\n              <el-button\n                type=\"primary\"\n                size=\"small\"\n                :disabled=\"!replyContent.trim()\"\n                @click=\"submitReply(comment)\"\n              >\n                回复\n              </el-button>\n            </div>\n          </div>\n\n          <!-- 回复列表 -->\n          <div v-if=\"comment.replies && comment.replies.length > 0\" class=\"replies-list\">\n            <div\n              v-for=\"reply in comment.replies\"\n              :key=\"reply.id\"\n              class=\"reply-item\"\n            >\n              <div class=\"reply-header\">\n                <div class=\"reply-author\">\n                  <el-avatar :size=\"24\" :src=\"reply.user?.avatar_url || ''\">\n                    {{ reply.user?.nickname?.charAt(0) || reply.user?.username?.charAt(0) || 'U' }}\n                  </el-avatar>\n                  <div class=\"author-info\">\n                    <div class=\"author-name\">{{ reply.user?.nickname || reply.user?.username }}</div>\n                    <div class=\"reply-time\">{{ formatDate(reply.created_at) }}</div>\n                  </div>\n                </div>\n                <div class=\"reply-actions\">\n                  <el-button text size=\"small\" @click=\"handleReply(comment, reply)\">回复</el-button>\n                  <!-- 删除回复按钮 -->\n                  <el-button\n                    v-if=\"canManageComment(reply)\"\n                    text\n                    type=\"danger\"\n                    size=\"small\"\n                    icon=\"el-icon-delete\"\n                    @click=\"handleDeleteComment(reply)\"\n                  >删除</el-button>\n                  <!-- 编辑回复按钮 -->\n                  <el-button\n                    v-if=\"canManageComment(reply)\"\n                    text\n                    type=\"primary\"\n                    size=\"small\"\n                    icon=\"el-icon-edit\"\n                    @click=\"handleEditComment(reply)\"\n                  >编辑</el-button>\n                </div>\n              </div>\n\n              <div class=\"reply-content\">\n                {{ reply.content }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 评论分页 -->\n      <div v-if=\"comments.length > 0\" class=\"pagination-container\">\n        <el-pagination\n          background\n          layout=\"prev, pager, next\"\n          :total=\"commentsTotal\"\n          :page-size=\"commentsQuery.limit\"\n          v-model:current-page=\"commentsQuery.page\"\n          @current-change=\"handleCommentsPageChange\"\n        >\n        </el-pagination>\n      </div>\n    </el-card>\n\n    <!-- 编辑评论对话框 -->\n    <el-dialog\n      title=\"编辑评论\"\n      v-model:visible=\"editCommentDialogVisible\"\n      width=\"500px\"\n    >\n      <el-input\n        v-model=\"editCommentContent\"\n        type=\"textarea\"\n        :rows=\"4\"\n        placeholder=\"请输入评论内容\"\n      ></el-input>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"editCommentDialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitEditComment\">确 定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { getPostDetail, likePost, favoritePost, pinPost, featurePost, deletePost } from '@/api/post'\nimport { getPostComments, createComment, replyComment, updateComment, deleteComment } from '@/api/comment'\nimport { formatDateTime } from '@/utils/index'\nimport { mapGetters } from 'vuex'\n\n// 格式化日期函数\nconst formatDate = (date) => {\n  return formatDateTime(date)\n}\n\nexport default {\n  name: 'PostDetail',\n  data() {\n    return {\n      loading: false,\n      commentsLoading: false,\n      post: {},\n      isLiked: false,\n      isFavorited: false,\n      comments: [],\n      commentsTotal: 0,\n      commentsQuery: {\n        page: 1,\n        limit: 10\n      },\n      commentContent: '',\n      replyingTo: null,\n      replyContent: '',\n      editCommentDialogVisible: false,\n      editCommentContent: '',\n      currentEditingComment: null,\n      _forceRefresh: false // 用于强制刷新评论列表的内部标志\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'isAuthenticated',\n      'isAdmin',\n      'userId'\n    ]),\n    isLogin() {\n      return this.isAuthenticated\n    },\n    canManagePost() {\n      return this.isLogin && (\n        this.isAdmin ||\n        (this.post.user && this.post.user.id === this.userId)\n      )\n    }\n  },\n  created() {\n    const postId = this.$route.params.id\n    if (postId) {\n      this.fetchPostDetail(postId)\n      this.fetchComments(postId)\n    } else {\n      this.$router.push({ name: 'PostList' })\n    }\n  },\n  methods: {\n    formatDate,\n\n    // 获取帖子详情\n    async fetchPostDetail(id) {\n      this.loading = true\n      try {\n        console.log('开始获取帖子详情, ID:', id)\n        const response = await getPostDetail(id)\n        console.log('帖子详情响应:', response)\n\n        if (response && response.code === 0 && response.data) {\n          console.log('使用code=0格式处理帖子详情数据')\n          this.post = response.data\n          // 检查是否已点赞和收藏\n          this.checkLikeAndFavorite()\n        } else if (response && response.status === 0 && response.data) {\n          console.log('使用status=0格式处理帖子详情数据')\n          this.post = response.data\n          // 检查是否已点赞和收藏\n          this.checkLikeAndFavorite()\n        } else {\n          console.error('获取帖子详情失败:', response ? response.msg : '未知错误')\n          this.$message.error(response?.msg || '获取帖子详情失败')\n\n          // 如果是从发帖页面跳转过来的，可能是因为帖子还未完全保存到数据库\n          // 添加延时重试\n          if (document.referrer.includes('/post/create') || document.referrer.includes('/post/edit')) {\n            console.log('检测到从发帖页面跳转，将在1秒后重试获取帖子详情')\n            setTimeout(() => {\n              this.fetchPostDetail(id)\n            }, 1000)\n          } else {\n            // 如果不是从发帖页面跳转，则返回帖子列表\n            setTimeout(() => {\n              this.$router.push({ name: 'PostList' })\n            }, 1500)\n          }\n        }\n      } catch (error) {\n        console.error('获取帖子详情失败:', error)\n        this.$message.error('获取帖子详情失败，请稍后再试')\n\n        // 添加延时重试\n        if (document.referrer.includes('/post/create') || document.referrer.includes('/post/edit')) {\n          console.log('检测到从发帖页面跳转，将在1秒后重试获取帖子详情')\n          setTimeout(() => {\n            this.fetchPostDetail(id)\n          }, 1000)\n        } else {\n          // 如果不是从发帖页面跳转，则返回帖子列表\n          setTimeout(() => {\n            this.$router.push({ name: 'PostList' })\n          }, 1500)\n        }\n      } finally {\n        this.loading = false\n      }\n    },\n\n    // 检查是否已点赞和收藏\n    checkLikeAndFavorite() {\n      // 这里需要调用后端API检查是否已点赞和收藏\n      // 由于我们没有实现这个API，这里先模拟一下\n      this.isLiked = false\n      this.isFavorited = false\n    },\n\n    // 获取评论列表\n    async fetchComments(postId) {\n      // 如果已经在加载中，则不重复加载\n      if (this.commentsLoading && !this._forceRefresh) {\n        return Promise.resolve()\n      }\n\n      this.commentsLoading = true\n\n      // 返回Promise以便调用者可以使用then/catch\n      return new Promise((resolve, reject) => {\n        getPostComments(postId)\n          .then(response => {\n            if (response.code === 0) {\n              this.comments = response.data.results || []\n              this.commentsTotal = response.data.count || 0\n\n              // 更新帖子评论数，确保与后端同步\n              if (this.post && typeof response.data.count === 'number') {\n                this.post.comments_count = response.data.count\n              }\n\n              resolve(response.data)\n            } else {\n              this.$message.error(response.msg || '获取评论列表失败')\n              reject(new Error(response.msg || '获取评论列表失败'))\n            }\n          })\n          .catch(error => {\n            console.error('获取评论列表失败:', error)\n            this.$message.error('获取评论列表失败')\n            reject(error)\n          })\n          .finally(() => {\n            this.commentsLoading = false\n            this._forceRefresh = false // 重置强制刷新标志\n          })\n      })\n    },\n\n    // 评论分页变化\n    handleCommentsPageChange(page) {\n      this.commentsQuery.page = page\n      this.fetchComments(this.post.id)\n    },\n\n    // 前往板块页面\n    goToBoard() {\n      if (this.post.board) {\n        this.$router.push({ name: 'BoardDetail', params: { id: this.post.board.id } })\n      }\n    },\n\n    // 点赞帖子\n    async handleLike() {\n      if (!this.isLogin) {\n        this.$message.warning('请先登录')\n        this.$router.push({ name: 'Login', query: { redirect: this.$route.fullPath } })\n        return\n      }\n\n      try {\n        const response = await likePost(this.post.id)\n        if (response.code === 0) {\n          this.isLiked = !this.isLiked\n          // 更新点赞数\n          if (this.isLiked) {\n            this.post.likes_count++\n          } else {\n            this.post.likes_count--\n          }\n          this.$message.success(response.msg || (this.isLiked ? '点赞成功' : '取消点赞成功'))\n        } else {\n          this.$message.error(response.msg || '操作失败')\n        }\n      } catch (error) {\n        console.error('点赞操作失败:', error)\n        this.$message.error('点赞操作失败')\n      }\n    },\n\n    // 收藏帖子\n    async handleFavorite() {\n      if (!this.isLogin) {\n        this.$message.warning('请先登录')\n        this.$router.push({ name: 'Login', query: { redirect: this.$route.fullPath } })\n        return\n      }\n\n      try {\n        const response = await favoritePost(this.post.id)\n        if (response.code === 0) {\n          this.isFavorited = !this.isFavorited\n          this.$message.success(response.msg || (this.isFavorited ? '收藏成功' : '取消收藏成功'))\n        } else {\n          this.$message.error(response.msg || '操作失败')\n        }\n      } catch (error) {\n        console.error('收藏操作失败:', error)\n        this.$message.error('收藏操作失败')\n      }\n    },\n\n    // 帖子管理操作\n    async handleCommand(command) {\n      switch (command) {\n        case 'pin':\n          this.handlePinPost()\n          break\n        case 'feature':\n          this.handleFeaturePost()\n          break\n      }\n    },\n\n    // 删除帖子\n    async handleDeletePost() {\n      try {\n        // 更详细的确认提示\n        await this.$confirm(\n          '确定要删除这篇帖子吗？删除后将无法恢复，帖子下的所有评论也将被删除。',\n          '删除确认',\n          {\n            confirmButtonText: '确定删除',\n            cancelButtonText: '取消',\n            type: 'warning',\n            distinguishCancelAndClose: true,\n            closeOnClickModal: false\n          }\n        )\n\n        // 显示加载状态\n        const loading = this.$loading({\n          lock: true,\n          text: '正在删除帖子...',\n          spinner: 'el-icon-loading',\n          background: 'rgba(0, 0, 0, 0.7)'\n        })\n\n        try {\n          const response = await deletePost(this.post.id)\n          loading.close() // 关闭加载状态\n\n          if (response.code === 0) {\n            this.$message({\n              type: 'success',\n              message: response.msg || '帖子删除成功',\n              duration: 2000,\n              showClose: true,\n              onClose: () => {\n                // 返回帖子列表页\n                this.$router.push({ name: 'PostList' })\n              }\n            })\n          } else {\n            this.$message.error(response.msg || '删除失败，请稍后重试')\n          }\n        } catch (err) {\n          loading.close() // 确保加载状态被关闭\n          console.error('删除帖子请求失败:', err)\n          this.$message.error('删除帖子失败，请检查网络连接')\n        }\n      } catch (error) {\n        // 用户取消删除，不做任何处理\n        if (error !== 'cancel') {\n          console.error('删除帖子操作异常:', error)\n          this.$message.error('操作异常，请刷新页面后重试')\n        }\n      }\n    },\n\n    // 置顶/取消置顶帖子\n    async handlePinPost() {\n      try {\n        const response = await pinPost(this.post.id)\n        if (response.code === 0) {\n          this.post.is_pinned = !this.post.is_pinned\n          this.$message.success(response.msg || (this.post.is_pinned ? '置顶成功' : '取消置顶成功'))\n        } else {\n          this.$message.error(response.msg || '操作失败')\n        }\n      } catch (error) {\n        console.error('置顶操作失败:', error)\n        this.$message.error('置顶操作失败')\n      }\n    },\n\n    // 加精/取消加精帖子\n    async handleFeaturePost() {\n      try {\n        const response = await featurePost(this.post.id)\n        if (response.code === 0) {\n          this.post.is_featured = !this.post.is_featured\n          this.$message.success(response.msg || (this.post.is_featured ? '加精成功' : '取消加精成功'))\n        } else {\n          this.$message.error(response.msg || '操作失败')\n        }\n      } catch (error) {\n        console.error('加精操作失败:', error)\n        this.$message.error('加精操作失败')\n      }\n    },\n\n    // 提交评论\n    async submitComment() {\n      if (!this.isLogin) {\n        this.$message.warning('请先登录')\n        this.$router.push({ name: 'Login', query: { redirect: this.$route.fullPath } })\n        return\n      }\n\n      if (!this.commentContent.trim()) {\n        this.$message.warning('评论内容不能为空')\n        return\n      }\n\n      try {\n        console.log('提交评论数据:', {\n          post: this.post.id,\n          content: this.commentContent\n        })\n\n        const response = await createComment({\n          post: this.post.id,\n          content: this.commentContent\n        })\n\n        console.log('评论提交响应:', response)\n\n        if (response && (response.code === 0 || response.status === 0)) {\n          // 不显示成功消息\n          console.log('评论发表成功，不显示成功消息')\n\n          // 清空评论内容\n          this.commentContent = ''\n\n          // 获取新评论数据并直接添加到评论列表\n          if (response.data) {\n            console.log('获取到新评论数据:', response.data)\n\n            // 获取当前用户信息\n            const userInfo = this.$store.getters.userInfo\n            console.log('当前用户信息:', userInfo)\n\n            // 构建评论对象\n            const newComment = {\n              ...response.data,\n              user: userInfo, // 使用当前用户信息\n              replies: [], // 初始化回复列表为空\n              created_at: response.data.created_at || new Date().toISOString() // 优先使用服务器返回的时间\n            };\n\n            console.log('构建的新评论对象:', newComment)\n\n            // 将新评论添加到评论列表的开头\n            this.comments.unshift(newComment);\n            console.log('更新后的评论列表:', this.comments)\n\n            // 更新评论总数\n            this.commentsTotal++;\n\n            // 更新帖子评论数\n            this.post.comments_count = (this.post.comments_count || 0) + 1;\n          } else {\n            // 如果没有返回评论数据，则刷新评论列表\n            console.log('未获取到评论数据，刷新评论列表')\n            this.fetchComments(this.post.id);\n          }\n        } else {\n          console.error('评论发表失败，响应:', response)\n          this.$message.error(response?.msg || '评论发表失败')\n        }\n      } catch (error) {\n        console.error('评论发表失败:', error)\n        this.$message.error('评论发表失败，请检查网络连接')\n      }\n    },\n\n    // 回复评论\n    handleReply(comment, reply = null) {\n      if (!this.isLogin) {\n        this.$message.warning('请先登录')\n        this.$router.push({ name: 'Login', query: { redirect: this.$route.fullPath } })\n        return\n      }\n\n      this.replyingTo = comment.id\n      this.replyContent = reply ? `@${reply.user.nickname || reply.user.username} ` : ''\n    },\n\n    // 取消回复\n    cancelReply() {\n      this.replyingTo = null\n      this.replyContent = ''\n    },\n\n    // 提交回复\n    async submitReply(comment) {\n      if (!this.isLogin) {\n        this.$message.warning('请先登录')\n        this.$router.push({ name: 'Login', query: { redirect: this.$route.fullPath } })\n        return\n      }\n\n      if (!this.replyContent.trim()) {\n        this.$message.warning('回复内容不能为空')\n        return\n      }\n\n      try {\n        console.log('提交回复数据:', {\n          post: this.post.id,\n          parent: comment.id,\n          content: this.replyContent\n        })\n\n        const response = await replyComment(\n          this.post.id,\n          comment.id,\n          this.replyContent\n        )\n\n        console.log('回复提交响应:', response)\n\n        if (response && (response.code === 0 || response.status === 0)) {\n          // 不显示成功消息\n          console.log('回复发表成功，不显示成功消息')\n\n          // 清空回复状态\n          this.replyingTo = null\n          this.replyContent = ''\n\n          // 获取新回复数据并直接添加到回复列表\n          if (response.data) {\n            console.log('获取到新回复数据:', response.data)\n\n            // 获取当前用户信息\n            const userInfo = this.$store.getters.userInfo\n            console.log('当前用户信息:', userInfo)\n\n            // 构建回复对象\n            const newReply = {\n              ...response.data,\n              user: userInfo, // 使用当前用户信息\n              created_at: response.data.created_at || new Date().toISOString() // 优先使用服务器返回的时间\n            };\n\n            console.log('构建的新回复对象:', newReply)\n\n            // 将新回复添加到对应评论的回复列表\n            if (!comment.replies) {\n              comment.replies = [];\n            }\n            comment.replies.push(newReply);\n            console.log('更新后的回复列表:', comment.replies)\n\n            // 更新帖子评论数\n            this.post.comments_count = (this.post.comments_count || 0) + 1;\n          } else {\n            // 如果没有返回回复数据，则刷新评论列表\n            console.log('未获取到回复数据，刷新评论列表')\n            this.fetchComments(this.post.id);\n          }\n        } else {\n          console.error('回复发表失败，响应:', response)\n          this.$message.error(response?.msg || '回复发表失败')\n        }\n      } catch (error) {\n        console.error('回复发表失败:', error)\n        this.$message.error('回复发表失败，请检查网络连接')\n      }\n    },\n\n    // 判断是否可以管理评论\n    canManageComment(comment) {\n      return this.isLogin && (\n        this.isAdmin ||\n        (comment.user && comment.user.id === this.userId)\n      )\n    },\n\n    // 评论操作方法已直接绑定到按钮上，不再需要此方法\n\n    // 编辑评论\n    handleEditComment(comment) {\n      this.currentEditingComment = comment\n      this.editCommentContent = comment.content\n      this.editCommentDialogVisible = true\n    },\n\n    // 提交编辑评论\n    async submitEditComment() {\n      if (!this.editCommentContent.trim()) {\n        this.$message.warning('评论内容不能为空')\n        return\n      }\n\n      try {\n        const response = await updateComment(this.currentEditingComment.id, {\n          content: this.editCommentContent\n        })\n\n        if (response.code === 0) {\n          this.$message.success(response.msg || '评论更新成功')\n          this.editCommentDialogVisible = false\n          // 刷新评论列表\n          this.fetchComments(this.post.id)\n        } else {\n          this.$message.error(response.msg || '评论更新失败')\n        }\n      } catch (error) {\n        console.error('评论更新失败:', error)\n        this.$message.error('评论更新失败')\n      }\n    },\n\n    // 删除评论\n    async handleDeleteComment(comment) {\n      try {\n        // 判断是否有回复，提供更详细的确认信息\n        const hasReplies = comment.replies && comment.replies.length > 0\n        const confirmMessage = hasReplies\n          ? `确定要删除这条评论吗？删除后将同时删除该评论下的 ${comment.replies.length} 条回复，且无法恢复。`\n          : '确定要删除这条评论吗？删除后将无法恢复。'\n\n        await this.$confirm(confirmMessage, '删除确认', {\n          confirmButtonText: '确定删除',\n          cancelButtonText: '取消',\n          type: 'warning',\n          distinguishCancelAndClose: true,\n          closeOnClickModal: false\n        })\n\n        // 显示加载状态\n        const loading = this.$loading({\n          lock: true,\n          text: '正在删除评论...',\n          spinner: 'el-icon-loading',\n          background: 'rgba(0, 0, 0, 0.7)'\n        })\n\n        try {\n          const response = await deleteComment(comment.id)\n          loading.close() // 关闭加载状态\n\n          if (response.code === 0) {\n            // 使用更简洁的通知，不显示弹窗\n            console.log('评论删除成功，正在刷新页面...')\n\n            // 计算需要减少的评论数\n            const commentsToDecrease = hasReplies ? (1 + comment.replies.length) : 1\n\n            // 更新帖子评论数\n            this.post.comments_count = Math.max(0, this.post.comments_count - commentsToDecrease)\n\n            // 标记为加载中，防止用户重复操作\n            this.commentsLoading = true\n\n            // 直接从前端状态中移除已删除的评论\n            if (comment.parent) {\n              // 如果是回复，从父评论的回复列表中移除\n              const parentComment = this.comments.find(c => c.id === comment.parent)\n              if (parentComment && parentComment.replies) {\n                parentComment.replies = parentComment.replies.filter(r => r.id !== comment.id)\n              }\n            } else {\n              // 如果是顶级评论，从评论列表中移除\n              this.comments = this.comments.filter(c => c.id !== comment.id)\n              // 更新评论总数\n              this.commentsTotal = Math.max(0, this.commentsTotal - commentsToDecrease)\n            }\n\n            // 增加延迟时间，确保后端有足够时间处理删除操作\n            // 并在回调中显示成功消息\n            setTimeout(() => {\n              // 强制刷新评论列表\n              this.fetchComments(this.post.id).then(() => {\n                // 刷新完成后显示成功消息\n                this.$message({\n                  type: 'success',\n                  message: '评论已成功删除',\n                  duration: 1500\n                })\n              }).catch(err => {\n                console.error('刷新评论列表失败:', err)\n              }).finally(() => {\n                this.commentsLoading = false\n              })\n            }, 500)\n          } else {\n            this.$message.error(response.msg || '删除失败，请稍后重试')\n          }\n        } catch (err) {\n          loading.close() // 确保加载状态被关闭\n          console.error('删除评论请求失败:', err)\n          this.$message.error('删除评论失败，请检查网络连接')\n        }\n      } catch (error) {\n        // 用户取消删除，不做任何处理\n        if (error !== 'cancel') {\n          console.error('删除评论操作异常:', error)\n          this.$message.error('操作异常，请刷新页面后重试')\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.post-detail-container {\n  padding: 20px;\n}\n\n.post-detail-card,\n.comments-card {\n  margin-bottom: 20px;\n}\n\n.loading-container {\n  padding: 20px 0;\n}\n\n.post-header {\n  margin-bottom: 20px;\n}\n\n.post-title {\n  font-size: 24px;\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n}\n\n.post-title .el-tag {\n  margin-right: 10px;\n}\n\n.post-meta {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.post-author {\n  display: flex;\n  align-items: center;\n}\n\n.author-info {\n  margin-left: 10px;\n}\n\n.author-name {\n  font-weight: bold;\n}\n\n.post-time,\n.comment-time,\n.reply-time {\n  font-size: 12px;\n  color: #909399;\n}\n\n.post-board {\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  color: #409EFF;\n}\n\n.post-board i {\n  margin-right: 5px;\n}\n\n.post-content {\n  line-height: 1.6;\n  margin-bottom: 20px;\n  white-space: pre-wrap;\n}\n\n.post-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 15px;\n  border-top: 1px solid #EBEEF5;\n}\n\n.post-stats {\n  display: flex;\n  color: #909399;\n}\n\n.post-stats span {\n  margin-right: 15px;\n  display: flex;\n  align-items: center;\n}\n\n.post-stats span i {\n  margin-right: 5px;\n}\n\n.post-actions {\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.post-actions .el-button {\n  margin-left: 0;\n}\n\n.comment-form {\n  margin-bottom: 20px;\n}\n\n.comment-form-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 10px;\n}\n\n.login-tip {\n  font-size: 14px;\n  color: #909399;\n}\n\n.login-tip a {\n  color: #409EFF;\n  text-decoration: none;\n}\n\n.empty-comments {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 40px 0;\n  color: #909399;\n}\n\n.empty-comments i {\n  font-size: 48px;\n  margin-bottom: 10px;\n}\n\n.comments-list {\n  margin-bottom: 20px;\n}\n\n.comment-item {\n  padding: 15px 0;\n  border-bottom: 1px solid #EBEEF5;\n}\n\n.comment-item:last-child {\n  border-bottom: none;\n}\n\n.comment-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.comment-author {\n  display: flex;\n  align-items: center;\n}\n\n.comment-actions {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.comment-content {\n  line-height: 1.6;\n  margin-bottom: 10px;\n  white-space: pre-wrap;\n}\n\n.reply-form {\n  margin: 10px 0 10px 40px;\n}\n\n.reply-form-footer {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 10px;\n}\n\n.replies-list {\n  margin-left: 40px;\n  margin-top: 10px;\n  padding: 10px;\n  background-color: #F5F7FA;\n  border-radius: 4px;\n}\n\n.reply-item {\n  padding: 10px 0;\n  border-bottom: 1px solid #EBEEF5;\n}\n\n.reply-item:last-child {\n  border-bottom: none;\n}\n\n.reply-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n}\n\n.reply-author {\n  display: flex;\n  align-items: center;\n}\n\n.reply-actions {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.reply-content {\n  line-height: 1.6;\n  white-space: pre-wrap;\n}\n\n.pagination-container {\n  text-align: center;\n  margin-top: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}