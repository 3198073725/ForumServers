{"ast":null,"code":"import \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport { ElMessage } from 'element-plus';\n\n// 路由懒加载\nvar Home = function Home() {\n  return import('../views/Home.vue');\n};\nvar Login = function Login() {\n  return import('../views/Login.vue');\n};\nvar Register = function Register() {\n  return import('../views/Register.vue');\n};\n// 不再需要单独的邮箱验证注册页面\nvar ResetPassword = function ResetPassword() {\n  return import('../views/ResetPassword.vue');\n};\nvar NotFound = function NotFound() {\n  return import('../views/NotFound.vue');\n};\n\n// 板块相关页面\nvar BoardList = function BoardList() {\n  return import('../views/board/BoardList.vue');\n};\nvar BoardDetail = function BoardDetail() {\n  return import('../views/board/BoardDetail.vue');\n};\n\n// 帖子相关页面\nvar PostList = function PostList() {\n  return import('../views/post/PostList.vue');\n};\nvar PostDetail = function PostDetail() {\n  return import('../views/post/PostDetail.vue');\n};\nvar PostCreate = function PostCreate() {\n  return import('../views/post/PostCreate.vue');\n};\n\n// 用户中心相关页面\nvar UserProfile = function UserProfile() {\n  return import('../views/user/Profile.vue');\n};\n\n// 管理员相关页面\nvar AdminDashboard = function AdminDashboard() {\n  return import('../views/admin/Dashboard.vue');\n};\nvar UserManagement = function UserManagement() {\n  return import('../views/admin/UserManagement.vue');\n};\n\n// 新增页面\nvar Ranking = function Ranking() {\n  return import('../views/Ranking.vue');\n};\nvar Complaints = function Complaints() {\n  return import('../views/Complaints.vue');\n};\nvar routes = [{\n  path: '/',\n  name: 'Home',\n  component: Home,\n  meta: {\n    title: '首页 - 论坛系统'\n  }\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login,\n  meta: {\n    title: '登录 - 论坛系统'\n  }\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register,\n  meta: {\n    title: '注册 - 论坛系统'\n  }\n},\n// 移除单独的邮箱验证注册路由，直接使用主注册页面\n{\n  path: '/reset-password',\n  name: 'ResetPassword',\n  component: ResetPassword,\n  meta: {\n    title: '重置密码 - 论坛系统'\n  }\n},\n// 板块相关路由\n{\n  path: '/boards',\n  name: 'BoardList',\n  component: BoardList,\n  meta: {\n    title: '板块列表 - 论坛系统'\n  }\n}, {\n  path: '/boards/:id',\n  name: 'BoardDetail',\n  component: BoardDetail,\n  meta: {\n    title: '板块详情 - 论坛系统'\n  }\n},\n// 帖子相关路由\n{\n  path: '/posts',\n  name: 'PostList',\n  component: PostList,\n  meta: {\n    title: '帖子列表 - 论坛系统'\n  }\n}, {\n  path: '/posts/:id',\n  name: 'PostDetail',\n  component: PostDetail,\n  meta: {\n    title: '帖子详情 - 论坛系统'\n  }\n}, {\n  path: '/post/create',\n  name: 'PostCreate',\n  component: PostCreate,\n  meta: {\n    title: '发布帖子 - 论坛系统',\n    requiresAuth: true\n  }\n}, {\n  path: '/post/edit/:id',\n  name: 'PostEdit',\n  component: PostCreate,\n  meta: {\n    title: '编辑帖子 - 论坛系统',\n    requiresAuth: true\n  }\n},\n// 用户中心相关路由\n{\n  path: '/profile/:id',\n  name: 'UserProfile',\n  component: UserProfile,\n  meta: {\n    title: '用户中心 - 论坛系统'\n  }\n},\n// 管理员相关路由\n{\n  path: '/admin/dashboard',\n  name: 'AdminDashboard',\n  component: AdminDashboard,\n  meta: {\n    title: '管理员仪表盘 - 论坛系统',\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}, {\n  path: '/admin/users',\n  name: 'UserManagement',\n  component: UserManagement,\n  meta: {\n    title: '用户管理 - 论坛系统',\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n},\n// 新增路由\n{\n  path: '/ranking',\n  name: 'Ranking',\n  component: Ranking,\n  meta: {\n    title: '排行榜 - 论坛系统'\n  }\n}, {\n  path: '/complaints',\n  name: 'Complaints',\n  component: Complaints,\n  meta: {\n    title: '投诉中心 - 论坛系统'\n  }\n}, {\n  path: '/:pathMatch(.*)*',\n  name: 'NotFound',\n  component: NotFound,\n  meta: {\n    title: '页面未找到 - 论坛系统'\n  }\n}];\nvar router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes: routes\n});\n\n// 全局前置守卫，设置页面标题和权限检查\nrouter.beforeEach(function (to, from, next) {\n  // 设置页面标题\n  document.title = to.meta.title || '论坛系统';\n\n  // 检查是否需要登录\n  var requiresAuth = to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  });\n  var requiresAdmin = to.matched.some(function (record) {\n    return record.meta.requiresAdmin;\n  });\n  var token = localStorage.getItem('token');\n\n  // 安全地解析userInfo\n  var userInfo = null;\n  try {\n    var userInfoStr = localStorage.getItem('userInfo');\n    if (userInfoStr) {\n      userInfo = JSON.parse(userInfoStr);\n    }\n  } catch (error) {\n    console.error('解析userInfo失败:', error);\n    localStorage.removeItem('userInfo'); // 清除无效的userInfo\n  }\n  console.log('路由检查:', {\n    path: to.path,\n    requiresAuth: requiresAuth,\n    requiresAdmin: requiresAdmin,\n    hasToken: !!token,\n    userInfo: userInfo\n  });\n  if (requiresAuth && !token) {\n    // 需要登录但未登录\n    console.log('需要登录权限，跳转到登录页');\n    // 将当前路径保存到查询参数中，登录成功后可以跳回\n    next({\n      path: '/login',\n      query: {\n        redirect: to.fullPath\n      }\n    });\n  } else if (requiresAdmin && (!userInfo || userInfo.role !== 'admin')) {\n    // 需要管理员权限但不是管理员\n    console.log('需要管理员权限，跳转到首页');\n    next({\n      path: '/'\n    });\n  } else {\n    next();\n  }\n});\n\n// 全局后置守卫，在路由跳转完成后执行\nrouter.afterEach(function (to) {\n  // 如果跳转到发帖页面，清除所有消息\n  if (to.name === 'PostCreate' || to.name === 'PostEdit') {\n    // 使用导入的 ElMessage 清除所有消息\n    console.log('路由跳转到发帖页面，清除所有消息');\n    ElMessage.closeAll();\n\n    // 添加延时清除，确保异步请求完成后也不会显示消息\n    setTimeout(function () {\n      console.log('延时清除消息');\n      ElMessage.closeAll();\n    }, 100);\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","ElMessage","Home","Login","Register","ResetPassword","NotFound","BoardList","BoardDetail","PostList","PostDetail","PostCreate","UserProfile","AdminDashboard","UserManagement","Ranking","Complaints","routes","path","name","component","meta","title","requiresAuth","requiresAdmin","router","history","process","env","BASE_URL","beforeEach","to","from","next","document","matched","some","record","token","localStorage","getItem","userInfo","userInfoStr","JSON","parse","error","console","removeItem","log","hasToken","query","redirect","fullPath","role","afterEach","closeAll","setTimeout"],"sources":["H:/ForumServers/ForumFrontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport { ElMessage } from 'element-plus'\n\n// 路由懒加载\nconst Home = () => import('../views/Home.vue')\nconst Login = () => import('../views/Login.vue')\nconst Register = () => import('../views/Register.vue')\n// 不再需要单独的邮箱验证注册页面\nconst ResetPassword = () => import('../views/ResetPassword.vue')\nconst NotFound = () => import('../views/NotFound.vue')\n\n// 板块相关页面\nconst BoardList = () => import('../views/board/BoardList.vue')\nconst BoardDetail = () => import('../views/board/BoardDetail.vue')\n\n// 帖子相关页面\nconst PostList = () => import('../views/post/PostList.vue')\nconst PostDetail = () => import('../views/post/PostDetail.vue')\nconst PostCreate = () => import('../views/post/PostCreate.vue')\n\n// 用户中心相关页面\nconst UserProfile = () => import('../views/user/Profile.vue')\n\n// 管理员相关页面\nconst AdminDashboard = () => import('../views/admin/Dashboard.vue')\nconst UserManagement = () => import('../views/admin/UserManagement.vue')\n\n// 新增页面\nconst Ranking = () => import('../views/Ranking.vue')\nconst Complaints = () => import('../views/Complaints.vue')\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    component: Home,\n    meta: {\n      title: '首页 - 论坛系统'\n    }\n  },\n  {\n    path: '/login',\n    name: 'Login',\n    component: Login,\n    meta: {\n      title: '登录 - 论坛系统'\n    }\n  },\n  {\n    path: '/register',\n    name: 'Register',\n    component: Register,\n    meta: {\n      title: '注册 - 论坛系统'\n    }\n  },\n  // 移除单独的邮箱验证注册路由，直接使用主注册页面\n  {\n    path: '/reset-password',\n    name: 'ResetPassword',\n    component: ResetPassword,\n    meta: {\n      title: '重置密码 - 论坛系统'\n    }\n  },\n  // 板块相关路由\n  {\n    path: '/boards',\n    name: 'BoardList',\n    component: BoardList,\n    meta: {\n      title: '板块列表 - 论坛系统'\n    }\n  },\n  {\n    path: '/boards/:id',\n    name: 'BoardDetail',\n    component: BoardDetail,\n    meta: {\n      title: '板块详情 - 论坛系统'\n    }\n  },\n  // 帖子相关路由\n  {\n    path: '/posts',\n    name: 'PostList',\n    component: PostList,\n    meta: {\n      title: '帖子列表 - 论坛系统'\n    }\n  },\n  {\n    path: '/posts/:id',\n    name: 'PostDetail',\n    component: PostDetail,\n    meta: {\n      title: '帖子详情 - 论坛系统'\n    }\n  },\n  {\n    path: '/post/create',\n    name: 'PostCreate',\n    component: PostCreate,\n    meta: {\n      title: '发布帖子 - 论坛系统',\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/post/edit/:id',\n    name: 'PostEdit',\n    component: PostCreate,\n    meta: {\n      title: '编辑帖子 - 论坛系统',\n      requiresAuth: true\n    }\n  },\n  // 用户中心相关路由\n  {\n    path: '/profile/:id',\n    name: 'UserProfile',\n    component: UserProfile,\n    meta: {\n      title: '用户中心 - 论坛系统'\n    }\n  },\n  // 管理员相关路由\n  {\n    path: '/admin/dashboard',\n    name: 'AdminDashboard',\n    component: AdminDashboard,\n    meta: {\n      title: '管理员仪表盘 - 论坛系统',\n      requiresAuth: true,\n      requiresAdmin: true\n    }\n  },\n  {\n    path: '/admin/users',\n    name: 'UserManagement',\n    component: UserManagement,\n    meta: {\n      title: '用户管理 - 论坛系统',\n      requiresAuth: true,\n      requiresAdmin: true\n    }\n  },\n  // 新增路由\n  {\n    path: '/ranking',\n    name: 'Ranking',\n    component: Ranking,\n    meta: {\n      title: '排行榜 - 论坛系统'\n    }\n  },\n  {\n    path: '/complaints',\n    name: 'Complaints',\n    component: Complaints,\n    meta: {\n      title: '投诉中心 - 论坛系统'\n    }\n  },\n  {\n    path: '/:pathMatch(.*)*',\n    name: 'NotFound',\n    component: NotFound,\n    meta: {\n      title: '页面未找到 - 论坛系统'\n    }\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\n// 全局前置守卫，设置页面标题和权限检查\nrouter.beforeEach((to, from, next) => {\n  // 设置页面标题\n  document.title = to.meta.title || '论坛系统'\n\n  // 检查是否需要登录\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth)\n  const requiresAdmin = to.matched.some(record => record.meta.requiresAdmin)\n  const token = localStorage.getItem('token')\n\n  // 安全地解析userInfo\n  let userInfo = null\n  try {\n    const userInfoStr = localStorage.getItem('userInfo')\n    if (userInfoStr) {\n      userInfo = JSON.parse(userInfoStr)\n    }\n  } catch (error) {\n    console.error('解析userInfo失败:', error)\n    localStorage.removeItem('userInfo') // 清除无效的userInfo\n  }\n\n  console.log('路由检查:', {\n    path: to.path,\n    requiresAuth,\n    requiresAdmin,\n    hasToken: !!token,\n    userInfo\n  })\n\n  if (requiresAuth && !token) {\n    // 需要登录但未登录\n    console.log('需要登录权限，跳转到登录页')\n    // 将当前路径保存到查询参数中，登录成功后可以跳回\n    next({\n      path: '/login',\n      query: { redirect: to.fullPath }\n    })\n  } else if (requiresAdmin && (!userInfo || userInfo.role !== 'admin')) {\n    // 需要管理员权限但不是管理员\n    console.log('需要管理员权限，跳转到首页')\n    next({ path: '/' })\n  } else {\n    next()\n  }\n})\n\n// 全局后置守卫，在路由跳转完成后执行\nrouter.afterEach((to) => {\n  // 如果跳转到发帖页面，清除所有消息\n  if (to.name === 'PostCreate' || to.name === 'PostEdit') {\n    // 使用导入的 ElMessage 清除所有消息\n    console.log('路由跳转到发帖页面，清除所有消息')\n    ElMessage.closeAll()\n\n    // 添加延时清除，确保异步请求完成后也不会显示消息\n    setTimeout(() => {\n      console.log('延时清除消息')\n      ElMessage.closeAll()\n    }, 100)\n  }\n})\n\nexport default router\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}