{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/slicedToArray.js\")[\"default\"];\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.array.for-each.js\");\nrequire(\"core-js/modules/es.iterator.constructor.js\");\nrequire(\"core-js/modules/es.iterator.for-each.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.entries.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar constants = require('./constants.js');\nvar forwardRef = require('./forward-ref.js');\nvar trigger = require('./trigger.js');\nvar common = require('./common.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar event = require('../../../utils/dom/event.js');\nvar __default__ = vue.defineComponent({\n  name: \"ElTooltipV2Trigger\"\n});\nvar _sfc_main = /* @__PURE__ */vue.defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: _objectSpread(_objectSpread({}, common.tooltipV2CommonProps), trigger.tooltipV2TriggerProps),\n  setup: function setup(__props) {\n    var props = __props;\n    var _vue$inject = vue.inject(constants.tooltipV2RootKey),\n      onClose = _vue$inject.onClose,\n      onOpen = _vue$inject.onOpen,\n      onDelayOpen = _vue$inject.onDelayOpen,\n      triggerRef = _vue$inject.triggerRef,\n      contentId = _vue$inject.contentId;\n    var isMousedown = false;\n    var setTriggerRef = function setTriggerRef(el) {\n      triggerRef.value = el;\n    };\n    var onMouseup = function onMouseup() {\n      isMousedown = false;\n    };\n    var onMouseenter = event.composeEventHandlers(props.onMouseEnter, onDelayOpen);\n    var onMouseleave = event.composeEventHandlers(props.onMouseLeave, onClose);\n    var onMousedown = event.composeEventHandlers(props.onMouseDown, function () {\n      onClose();\n      isMousedown = true;\n      document.addEventListener(\"mouseup\", onMouseup, {\n        once: true\n      });\n    });\n    var onFocus = event.composeEventHandlers(props.onFocus, function () {\n      if (!isMousedown) onOpen();\n    });\n    var onBlur = event.composeEventHandlers(props.onBlur, onClose);\n    var onClick = event.composeEventHandlers(props.onClick, function (e) {\n      if (e.detail === 0) onClose();\n    });\n    var events = {\n      blur: onBlur,\n      click: onClick,\n      focus: onFocus,\n      mousedown: onMousedown,\n      mouseenter: onMouseenter,\n      mouseleave: onMouseleave\n    };\n    var setEvents = function setEvents(el, events2, type) {\n      if (el) {\n        Object.entries(events2).forEach(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n            name = _ref2[0],\n            handler = _ref2[1];\n          el[type](name, handler);\n        });\n      }\n    };\n    vue.watch(triggerRef, function (triggerEl, previousTriggerEl) {\n      setEvents(triggerEl, events, \"addEventListener\");\n      setEvents(previousTriggerEl, events, \"removeEventListener\");\n      if (triggerEl) {\n        triggerEl.setAttribute(\"aria-describedby\", contentId.value);\n      }\n    });\n    vue.onBeforeUnmount(function () {\n      setEvents(triggerRef.value, events, \"removeEventListener\");\n      document.removeEventListener(\"mouseup\", onMouseup);\n    });\n    return function (_ctx, _cache) {\n      return _ctx.nowrap ? (vue.openBlock(), vue.createBlock(vue.unref(forwardRef[\"default\"]), {\n        key: 0,\n        \"set-ref\": setTriggerRef,\n        \"only-child\": \"\"\n      }, {\n        \"default\": vue.withCtx(function () {\n          return [vue.renderSlot(_ctx.$slots, \"default\")];\n        }),\n        _: 3\n      })) : (vue.openBlock(), vue.createElementBlock(\"button\", vue.mergeProps({\n        key: 1,\n        ref_key: \"triggerRef\",\n        ref: triggerRef\n      }, _ctx.$attrs), [vue.renderSlot(_ctx.$slots, \"default\")], 16));\n    };\n  }\n}));\nvar TooltipV2Trigger = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"trigger.vue\"]]);\nexports[\"default\"] = TooltipV2Trigger;","map":{"version":3,"names":["name","_vue$inject","vue","inject","constants","tooltipV2RootKey","onClose","onOpen","onDelayOpen","triggerRef","contentId","isMousedown","setTriggerRef","el","value","onMouseup","onMouseenter","event","composeEventHandlers","props","onMouseEnter","onMouseleave","onMouseLeave","onMousedown","onMouseDown","document","addEventListener","once","onFocus","onBlur","onClick","e","detail","events","blur","click","focus","mousedown","mouseenter","mouseleave","setEvents","events2","type","Object","entries","forEach","_ref","_ref2","_slicedToArray","handler","watch","triggerEl","previousTriggerEl","setAttribute","onBeforeUnmount"],"sources":["../../../../../../packages/components/tooltip-v2/src/trigger.vue"],"sourcesContent":["<template>\n  <forward-ref v-if=\"nowrap\" :set-ref=\"setTriggerRef\" only-child>\n    <slot />\n  </forward-ref>\n  <button v-else ref=\"triggerRef\" v-bind=\"$attrs\">\n    <slot />\n  </button>\n</template>\n\n<script setup lang=\"ts\">\nimport { inject, onBeforeUnmount, watch } from 'vue'\nimport { composeEventHandlers } from '@element-plus/utils'\nimport { tooltipV2RootKey } from './constants'\nimport ForwardRef from './forward-ref'\nimport { tooltipV2TriggerProps } from './trigger'\nimport { tooltipV2CommonProps } from './common'\n\ndefineOptions({\n  name: 'ElTooltipV2Trigger',\n})\n\nconst props = defineProps({\n  ...tooltipV2CommonProps,\n  ...tooltipV2TriggerProps,\n})\n\n/**\n * onOpen opens the tooltip instantly, onTrigger acts a lil bit differently,\n * it will check if delayDuration is set to greater than 0 and based on that result,\n * if true, it opens the tooltip after delayDuration, otherwise it opens it instantly.\n */\nconst { onClose, onOpen, onDelayOpen, triggerRef, contentId } =\n  inject(tooltipV2RootKey)!\n\nlet isMousedown = false\n\nconst setTriggerRef = (el: HTMLElement | null) => {\n  triggerRef.value = el\n}\n\nconst onMouseup = () => {\n  isMousedown = false\n}\n\nconst onMouseenter = composeEventHandlers(props.onMouseEnter, onDelayOpen)\n\nconst onMouseleave = composeEventHandlers(props.onMouseLeave, onClose)\n\nconst onMousedown = composeEventHandlers(props.onMouseDown, () => {\n  onClose()\n  isMousedown = true\n  document.addEventListener('mouseup', onMouseup, { once: true })\n})\n\nconst onFocus = composeEventHandlers(props.onFocus, () => {\n  if (!isMousedown) onOpen()\n})\n\nconst onBlur = composeEventHandlers(props.onBlur, onClose)\n\nconst onClick = composeEventHandlers(props.onClick, (e) => {\n  if ((e as MouseEvent).detail === 0) onClose()\n})\n\nconst events = {\n  blur: onBlur,\n  click: onClick,\n  focus: onFocus,\n  mousedown: onMousedown,\n  mouseenter: onMouseenter,\n  mouseleave: onMouseleave,\n}\n\nconst setEvents = <T extends (e: Event) => void>(\n  el: HTMLElement | null | undefined,\n  events: Record<string, T>,\n  type: 'addEventListener' | 'removeEventListener'\n) => {\n  if (el) {\n    Object.entries(events).forEach(([name, handler]) => {\n      el[type](name, handler)\n    })\n  }\n}\n\nwatch(triggerRef, (triggerEl, previousTriggerEl) => {\n  setEvents(triggerEl, events, 'addEventListener')\n  setEvents(previousTriggerEl, events, 'removeEventListener')\n\n  if (triggerEl) {\n    triggerEl.setAttribute('aria-describedby', contentId.value)\n  }\n})\n\nonBeforeUnmount(() => {\n  setEvents(triggerRef.value, events, 'removeEventListener')\n  document.removeEventListener('mouseup', onMouseup)\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;qCAiBc;EACZA,IAAM;AACR;;;;;IAYM,IAAAC,WAAA,GACJC,GAAA,CAAAC,MAAA,CAAOC,SAAA,CAAAC,gBAAgB;MADjBC,OAAA,GAAAL,WAAA,CAAAK,OAAA;MAASC,MAAQ,GAAAN,WAAA,CAARM,MAAQ;MAAAC,WAAA,GAAAP,WAAA,CAAAO,WAAA;MAAaC,UAAA,GAAAR,WAAA,CAAAQ,UAAA;MAAYC,SAAU,GAAAT,WAAA,CAAVS,SAAU;IAG5D,IAAIC,WAAc;IAEZ,IAAAC,aAAA,GAAgB,SAAhBA,cAAiBC,EAA2B;MAChDJ,UAAA,CAAWK,KAAQ,GAAAD,EAAA;IAAA,CACrB;IAEA,IAAME,SAAA,GAAY,SAAZA,UAAA,EAAkB;MACRJ,WAAA;IAAA,CAChB;IAEA,IAAMK,YAAe,GAAAC,KAAA,CAAAC,oBAAA,CAAqBC,KAAM,CAAAC,YAAA,EAAcZ,WAAW;IAEzE,IAAMa,YAAe,GAAAJ,KAAA,CAAAC,oBAAA,CAAqBC,KAAM,CAAAG,YAAA,EAAchB,OAAO;IAErE,IAAMiB,WAAc,GAAAN,KAAA,CAAAC,oBAAA,CAAqBC,KAAM,CAAAK,WAAA,EAAa,YAAM;MACxDlB,OAAA;MACMK,WAAA;MACdc,QAAA,CAASC,gBAAA,CAAiB,SAAW,EAAAX,SAAA,EAAW;QAAEY,IAAA,EAAM;MAAA,CAAM;IAAA,CAC/D;IAED,IAAMC,OAAU,GAAAX,KAAA,CAAAC,oBAAA,CAAqBC,KAAM,CAAAS,OAAA,EAAS,YAAM;MACpD,KAACjB,WAAA,EACNJ,MAAA;IAED;IAEA,IAAMsB,MAAU,GAAAZ,KAAA,CAAAC,oBAAA,CAAAC,KAA2B,CAAAU,MAAA,EAAAvB,OAAgB;IACpD,IAAAwB,OAA4B,GAAAb,KAAA,CAAAC,oBAAW,CAAAC,KAAA,CAAAW,OAAA,YAAAC,CAAA;MAC7C,IAAAA,CAAA,CAAAC,MAAA,QAED1B,OAAe;IAAA,EACb;IAAM,IACC2B,MAAA;MACPC,IAAO,EAAAL,MAAA;MACPM,KAAW,EAAAL,OAAA;MACXM,KAAY,EAAAR,OAAA;MACZS,SAAY,EAAAd,WAAA;MACde,UAAA,EAAAtB,YAAA;MAEAuB,UAAkB,EAAAlB;IAKhB;IACS,IAAAmB,SAAA,YAAAA,UAAQ3B,EAAA,EAAA4B,OAAQ,EAAAC,IAAQ,EAAE;MAC5B,IAAA7B,EAAA;QACL8B,MAAC,CAAAC,OAAA,CAAAH,OAAA,EAAAI,OAAA,WAAAC,IAAA;UAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,IAAA;YAAA9C,IAAA,GAAA+C,KAAA;YAAAE,OAAA,GAAAF,KAAA;UACHlC,EAAA,CAAA6B,IAAA,EAAA1C,IAAA,EAAAiD,OAAA;QAAA,CACF;MAEA;IACE,CAAU;IACA/C,GAAA,CAAAgD,KAAA,CAAAzC,UAAA,YAAA0C,SAAA,EAAAC,iBAAgD;MAE1DZ,SAAe,CAAAW,SAAA,EAAAlB,MAAA;MACHO,SAAA,CAAAY,iBAAiC,EAAAnB,MAAA,uBAAe;MAC5D,IAAAkB,SAAA;QACDA,SAAA,CAAAE,YAAA,qBAAA3C,SAAA,CAAAI,KAAA;MAED;IACE,CAAU;IACDZ,GAAA,CAAAoD,eAAA;MACVd,SAAA,CAAA/B,UAAA,CAAAK,KAAA,EAAAmB,MAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}