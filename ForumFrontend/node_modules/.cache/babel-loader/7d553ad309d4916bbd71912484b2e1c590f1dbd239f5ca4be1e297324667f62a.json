{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar draggable = require('../utils/draggable.js');\nvar pluginVue_exportHelper = require('../../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../../hooks/use-namespace/index.js');\nvar position = require('../../../../utils/dom/position.js');\nvar _sfc_main = vue.defineComponent({\n  name: \"ElColorHueSlider\",\n  props: {\n    color: {\n      type: Object,\n      required: true\n    },\n    vertical: Boolean\n  },\n  setup: function setup(props) {\n    var ns = index.useNamespace(\"color-hue-slider\");\n    var instance = vue.getCurrentInstance();\n    var thumb = vue.ref();\n    var bar = vue.ref();\n    var thumbLeft = vue.ref(0);\n    var thumbTop = vue.ref(0);\n    var hueValue = vue.computed(function () {\n      return props.color.get(\"hue\");\n    });\n    vue.watch(function () {\n      return hueValue.value;\n    }, function () {\n      update();\n    });\n    function handleClick(event) {\n      var target = event.target;\n      if (target !== thumb.value) {\n        handleDrag(event);\n      }\n    }\n    function handleDrag(event) {\n      if (!bar.value || !thumb.value) return;\n      var el = instance.vnode.el;\n      var rect = el.getBoundingClientRect();\n      var _position$getClientXY = position.getClientXY(event),\n        clientX = _position$getClientXY.clientX,\n        clientY = _position$getClientXY.clientY;\n      var hue;\n      if (!props.vertical) {\n        var left = clientX - rect.left;\n        left = Math.min(left, rect.width - thumb.value.offsetWidth / 2);\n        left = Math.max(thumb.value.offsetWidth / 2, left);\n        hue = Math.round((left - thumb.value.offsetWidth / 2) / (rect.width - thumb.value.offsetWidth) * 360);\n      } else {\n        var top = clientY - rect.top;\n        top = Math.min(top, rect.height - thumb.value.offsetHeight / 2);\n        top = Math.max(thumb.value.offsetHeight / 2, top);\n        hue = Math.round((top - thumb.value.offsetHeight / 2) / (rect.height - thumb.value.offsetHeight) * 360);\n      }\n      props.color.set(\"hue\", hue);\n    }\n    function getThumbLeft() {\n      if (!thumb.value) return 0;\n      var el = instance.vnode.el;\n      if (props.vertical) return 0;\n      var hue = props.color.get(\"hue\");\n      if (!el) return 0;\n      return Math.round(hue * (el.offsetWidth - thumb.value.offsetWidth / 2) / 360);\n    }\n    function getThumbTop() {\n      if (!thumb.value) return 0;\n      var el = instance.vnode.el;\n      if (!props.vertical) return 0;\n      var hue = props.color.get(\"hue\");\n      if (!el) return 0;\n      return Math.round(hue * (el.offsetHeight - thumb.value.offsetHeight / 2) / 360);\n    }\n    function update() {\n      thumbLeft.value = getThumbLeft();\n      thumbTop.value = getThumbTop();\n    }\n    vue.onMounted(function () {\n      if (!bar.value || !thumb.value) return;\n      var dragConfig = {\n        drag: function drag(event) {\n          handleDrag(event);\n        },\n        end: function end(event) {\n          handleDrag(event);\n        }\n      };\n      draggable.draggable(bar.value, dragConfig);\n      draggable.draggable(thumb.value, dragConfig);\n      update();\n    });\n    return {\n      bar: bar,\n      thumb: thumb,\n      thumbLeft: thumbLeft,\n      thumbTop: thumbTop,\n      hueValue: hueValue,\n      handleClick: handleClick,\n      update: update,\n      ns: ns\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return vue.openBlock(), vue.createElementBlock(\"div\", {\n    \"class\": vue.normalizeClass([_ctx.ns.b(), _ctx.ns.is(\"vertical\", _ctx.vertical)])\n  }, [vue.createElementVNode(\"div\", {\n    ref: \"bar\",\n    \"class\": vue.normalizeClass(_ctx.ns.e(\"bar\")),\n    onClick: _ctx.handleClick\n  }, null, 10, [\"onClick\"]), vue.createElementVNode(\"div\", {\n    ref: \"thumb\",\n    \"class\": vue.normalizeClass(_ctx.ns.e(\"thumb\")),\n    style: vue.normalizeStyle({\n      left: _ctx.thumbLeft + \"px\",\n      top: _ctx.thumbTop + \"px\"\n    })\n  }, null, 6)], 2);\n}\nvar HueSlider = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"hue-slider.vue\"]]);\nexports[\"default\"] = HueSlider;","map":{"version":3,"names":["_sfc_main","vue","defineComponent","name","props","color","type","Object","required","vertical","Boolean","setup","ns","index","useNamespace","instance","getCurrentInstance","thumb","ref","bar","thumbLeft","thumbTop","hueValue","computed","get","watch","value","update","handleClick","event","target","handleDrag","el","vnode","rect","getBoundingClientRect","_position$getClientXY","position","getClientXY","clientX","clientY","hue","left","Math","min","width","offsetWidth","max","round","top","height","offsetHeight","set","getThumbLeft","getThumbTop","onMounted","dragConfig","drag","end","draggable","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","openBlock","createElementBlock","createElementVNode","normalizeClass","e","onClick","style","normalizeStyle","HueSlider","pluginVue_exportHelper"],"sources":["../../../../../../../packages/components/color-picker/src/components/hue-slider.vue"],"sourcesContent":["<template>\n  <div :class=\"[ns.b(), ns.is('vertical', vertical)]\">\n    <div ref=\"bar\" :class=\"ns.e('bar')\" @click=\"handleClick\" />\n    <div\n      ref=\"thumb\"\n      :class=\"ns.e('thumb')\"\n      :style=\"{\n        left: thumbLeft + 'px',\n        top: thumbTop + 'px',\n      }\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  onMounted,\n  ref,\n  watch,\n} from 'vue'\nimport { getClientXY } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { draggable } from '../utils/draggable'\n\nimport type { PropType } from 'vue'\nimport type Color from '../utils/color'\n\nexport default defineComponent({\n  name: 'ElColorHueSlider',\n\n  props: {\n    color: {\n      type: Object as PropType<Color>,\n      required: true,\n    },\n\n    vertical: Boolean,\n  },\n  setup(props) {\n    const ns = useNamespace('color-hue-slider')\n    const instance = getCurrentInstance()!\n    // ref\n    const thumb = ref<HTMLElement>()\n    const bar = ref<HTMLElement>()\n    // data\n    const thumbLeft = ref(0)\n    const thumbTop = ref(0)\n    // computed\n    const hueValue = computed(() => {\n      return props.color.get('hue')\n    })\n    // watch\n    watch(\n      () => hueValue.value,\n      () => {\n        update()\n      }\n    )\n\n    // methods\n    function handleClick(event: MouseEvent | TouchEvent) {\n      const target = event.target\n\n      if (target !== thumb.value) {\n        handleDrag(event)\n      }\n    }\n\n    function handleDrag(event: MouseEvent | TouchEvent) {\n      if (!bar.value || !thumb.value) return\n\n      const el = instance.vnode.el as HTMLElement\n      const rect = el.getBoundingClientRect()\n      const { clientX, clientY } = getClientXY(event)\n      let hue\n\n      if (!props.vertical) {\n        let left = clientX - rect.left\n        left = Math.min(left, rect.width - thumb.value.offsetWidth / 2)\n        left = Math.max(thumb.value.offsetWidth / 2, left)\n\n        hue = Math.round(\n          ((left - thumb.value.offsetWidth / 2) /\n            (rect.width - thumb.value.offsetWidth)) *\n            360\n        )\n      } else {\n        let top = clientY - rect.top\n\n        top = Math.min(top, rect.height - thumb.value.offsetHeight / 2)\n        top = Math.max(thumb.value.offsetHeight / 2, top)\n        hue = Math.round(\n          ((top - thumb.value.offsetHeight / 2) /\n            (rect.height - thumb.value.offsetHeight)) *\n            360\n        )\n      }\n      props.color.set('hue', hue)\n    }\n\n    function getThumbLeft() {\n      if (!thumb.value) return 0\n\n      const el = instance.vnode.el\n\n      if (props.vertical) return 0\n      const hue = props.color.get('hue')\n\n      if (!el) return 0\n      return Math.round(\n        (hue * (el.offsetWidth - thumb.value.offsetWidth / 2)) / 360\n      )\n    }\n\n    function getThumbTop() {\n      if (!thumb.value) return 0\n\n      const el = instance.vnode.el as HTMLElement\n      if (!props.vertical) return 0\n      const hue = props.color.get('hue')\n\n      if (!el) return 0\n      return Math.round(\n        (hue * (el.offsetHeight - thumb.value.offsetHeight / 2)) / 360\n      )\n    }\n\n    function update() {\n      thumbLeft.value = getThumbLeft()\n      thumbTop.value = getThumbTop()\n    }\n\n    // mounded\n    onMounted(() => {\n      if (!bar.value || !thumb.value) return\n\n      const dragConfig = {\n        drag: (event: MouseEvent | TouchEvent) => {\n          handleDrag(event)\n        },\n        end: (event: MouseEvent | TouchEvent) => {\n          handleDrag(event)\n        },\n      }\n\n      draggable(bar.value, dragConfig)\n      draggable(thumb.value, dragConfig)\n      update()\n    })\n\n    return {\n      bar,\n      thumb,\n      thumbLeft,\n      thumbTop,\n      hueValue,\n      handleClick,\n      update,\n      ns,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}