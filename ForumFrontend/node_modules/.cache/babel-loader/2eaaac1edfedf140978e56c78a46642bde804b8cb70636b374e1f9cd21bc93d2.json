{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"register-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"register-box\"\n};\nvar _hoisted_3 = {\n  key: 0\n};\nvar _hoisted_4 = {\n  \"class\": \"verification-code-container\"\n};\nvar _hoisted_5 = {\n  key: 1\n};\nvar _hoisted_6 = {\n  key: 2,\n  \"class\": \"register-success\"\n};\nvar _hoisted_7 = {\n  key: 3,\n  \"class\": \"register-options\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_step = _resolveComponent(\"el-step\");\n  var _component_el_steps = _resolveComponent(\"el-steps\");\n  var _component_Message = _resolveComponent(\"Message\");\n  var _component_el_icon = _resolveComponent(\"el-icon\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_Key = _resolveComponent(\"Key\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_User = _resolveComponent(\"User\");\n  var _component_Lock = _resolveComponent(\"Lock\");\n  var _component_el_result = _resolveComponent(\"el-result\");\n  var _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[12] || (_cache[12] = _createElementVNode(\"div\", {\n    \"class\": \"register-header\"\n  }, [_createElementVNode(\"h2\", null, \"用户注册\")], -1 /* HOISTED */)), _createCommentVNode(\" 步骤条 \"), _createVNode(_component_el_steps, {\n    active: $setup.currentStep,\n    \"finish-status\": \"success\",\n    simple: \"\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_step, {\n        title: \"邮箱验证\"\n      }), _createVNode(_component_el_step, {\n        title: \"填写信息\"\n      }), _createVNode(_component_el_step, {\n        title: \"注册完成\"\n      })];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"active\"]), _createCommentVNode(\" 步骤1：邮箱验证 \"), $setup.currentStep === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_form, {\n    ref: \"emailFormRef\",\n    model: $setup.emailForm,\n    rules: $setup.emailRules,\n    \"label-width\": \"100px\",\n    \"class\": \"register-form\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form_item, {\n        label: \"邮箱\",\n        prop: \"email\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            modelValue: $setup.emailForm.email,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n              return $setup.emailForm.email = $event;\n            }),\n            placeholder: \"请输入邮箱\"\n          }, {\n            prefix: _withCtx(function () {\n              return [_createVNode(_component_el_icon, null, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_Message)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"验证码\",\n        prop: \"code\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_input, {\n            modelValue: $setup.emailForm.code,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n              return $setup.emailForm.code = $event;\n            }),\n            placeholder: \"请输入验证码\",\n            maxlength: \"6\"\n          }, {\n            prefix: _withCtx(function () {\n              return [_createVNode(_component_el_icon, null, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_Key)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n            type: \"primary\",\n            disabled: $setup.codeSending || $setup.countdown > 0,\n            onClick: $setup.sendVerificationCode\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createTextVNode(_toDisplayString($setup.countdown > 0 ? \"\".concat($setup.countdown, \"\\u79D2\\u540E\\u91CD\\u65B0\\u53D1\\u9001\") : '获取验证码'), 1 /* TEXT */)];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"disabled\", \"onClick\"])])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_button, {\n            type: \"primary\",\n            loading: $setup.verifying,\n            onClick: $setup.verifyEmail,\n            \"class\": \"register-button\"\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[7] || (_cache[7] = [_createTextVNode(\"下一步\")]);\n            }),\n            _: 1 /* STABLE */,\n            __: [7]\n          }, 8 /* PROPS */, [\"loading\", \"onClick\"])];\n        }),\n        _: 1 /* STABLE */\n      })];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 步骤2：填写信息 \"), $setup.currentStep === 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_el_form, {\n    ref: \"registerFormRef\",\n    model: $setup.registerForm,\n    rules: $setup.registerRules,\n    \"label-width\": \"100px\",\n    \"class\": \"register-form\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form_item, {\n        label: \"用户名\",\n        prop: \"username\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            modelValue: $setup.registerForm.username,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n              return $setup.registerForm.username = $event;\n            }),\n            placeholder: \"请输入用户名\"\n          }, {\n            prefix: _withCtx(function () {\n              return [_createVNode(_component_el_icon, null, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_User)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"昵称\",\n        prop: \"nickname\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            modelValue: $setup.registerForm.nickname,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n              return $setup.registerForm.nickname = $event;\n            }),\n            placeholder: \"请输入昵称\"\n          }, {\n            prefix: _withCtx(function () {\n              return [_createVNode(_component_el_icon, null, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_User)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"密码\",\n        prop: \"password\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            modelValue: $setup.registerForm.password,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n              return $setup.registerForm.password = $event;\n            }),\n            type: \"password\",\n            placeholder: \"请输入密码\",\n            \"show-password\": \"\"\n          }, {\n            prefix: _withCtx(function () {\n              return [_createVNode(_component_el_icon, null, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_Lock)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"确认密码\",\n        prop: \"confirmPassword\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            modelValue: $setup.registerForm.confirmPassword,\n            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n              return $setup.registerForm.confirmPassword = $event;\n            }),\n            type: \"password\",\n            placeholder: \"请再次输入密码\",\n            \"show-password\": \"\"\n          }, {\n            prefix: _withCtx(function () {\n              return [_createVNode(_component_el_icon, null, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_Lock)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_button, {\n            type: \"primary\",\n            loading: $setup.registering,\n            onClick: $setup.handleRegister,\n            \"class\": \"register-button\"\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[8] || (_cache[8] = [_createTextVNode(\"注册\")]);\n            }),\n            _: 1 /* STABLE */,\n            __: [8]\n          }, 8 /* PROPS */, [\"loading\", \"onClick\"]), _createVNode(_component_el_button, {\n            onClick: _cache[6] || (_cache[6] = function ($event) {\n              return $setup.currentStep = 0;\n            })\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[9] || (_cache[9] = [_createTextVNode(\"上一步\")]);\n            }),\n            _: 1 /* STABLE */,\n            __: [9]\n          })];\n        }),\n        _: 1 /* STABLE */\n      })];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 步骤3：注册完成 \"), $setup.currentStep === 2 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createVNode(_component_el_result, {\n    icon: \"success\",\n    title: \"注册成功\",\n    \"sub-title\": \"您已成功注册账号，现在可以登录使用了\"\n  }, {\n    extra: _withCtx(function () {\n      return [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.goToLogin\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[10] || (_cache[10] = [_createTextVNode(\"去登录\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [10]\n      }, 8 /* PROPS */, [\"onClick\"])];\n    }),\n    _: 1 /* STABLE */\n  })])) : _createCommentVNode(\"v-if\", true), $setup.currentStep < 2 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createVNode(_component_router_link, {\n    to: \"/login\"\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[11] || (_cache[11] = [_createTextVNode(\"已有账号？立即登录\")]);\n    }),\n    _: 1 /* STABLE */,\n    __: [11]\n  })])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_createVNode","_component_el_steps","active","$setup","currentStep","simple","_withCtx","_component_el_step","title","_","_hoisted_3","_component_el_form","ref","model","emailForm","rules","emailRules","_component_el_form_item","label","prop","_component_el_input","modelValue","email","_cache","$event","placeholder","prefix","_component_el_icon","_component_Message","_hoisted_4","code","maxlength","_component_Key","_component_el_button","type","disabled","codeSending","countdown","onClick","sendVerificationCode","_createTextVNode","_toDisplayString","concat","loading","verifying","verifyEmail","__","_hoisted_5","registerForm","registerRules","username","_component_User","nickname","password","_component_Lock","confirmPassword","registering","handleRegister","_hoisted_6","_component_el_result","icon","extra","goToLogin","_hoisted_7","_component_router_link","to"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\RegisterWithVerification.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <div class=\"register-box\">\n      <div class=\"register-header\">\n        <h2>用户注册</h2>\n      </div>\n\n      <!-- 步骤条 -->\n      <el-steps :active=\"currentStep\" finish-status=\"success\" simple>\n        <el-step title=\"邮箱验证\" />\n        <el-step title=\"填写信息\" />\n        <el-step title=\"注册完成\" />\n      </el-steps>\n\n      <!-- 步骤1：邮箱验证 -->\n      <div v-if=\"currentStep === 0\">\n        <el-form\n          ref=\"emailFormRef\"\n          :model=\"emailForm\"\n          :rules=\"emailRules\"\n          label-width=\"100px\"\n          class=\"register-form\"\n        >\n          <el-form-item label=\"邮箱\" prop=\"email\">\n            <el-input\n              v-model=\"emailForm.email\"\n              placeholder=\"请输入邮箱\"\n            >\n              <template #prefix>\n                <el-icon><Message /></el-icon>\n              </template>\n            </el-input>\n          </el-form-item>\n\n          <el-form-item label=\"验证码\" prop=\"code\">\n            <div class=\"verification-code-container\">\n              <el-input\n                v-model=\"emailForm.code\"\n                placeholder=\"请输入验证码\"\n                maxlength=\"6\"\n              >\n                <template #prefix>\n                  <el-icon><Key /></el-icon>\n                </template>\n              </el-input>\n              <el-button\n                type=\"primary\"\n                :disabled=\"codeSending || countdown > 0\"\n                @click=\"sendVerificationCode\"\n              >\n                {{ countdown > 0 ? `${countdown}秒后重新发送` : '获取验证码' }}\n              </el-button>\n            </div>\n          </el-form-item>\n\n          <el-form-item>\n            <el-button\n              type=\"primary\"\n              :loading=\"verifying\"\n              @click=\"verifyEmail\"\n              class=\"register-button\"\n            >下一步</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n\n      <!-- 步骤2：填写信息 -->\n      <div v-if=\"currentStep === 1\">\n        <el-form\n          ref=\"registerFormRef\"\n          :model=\"registerForm\"\n          :rules=\"registerRules\"\n          label-width=\"100px\"\n          class=\"register-form\"\n        >\n          <el-form-item label=\"用户名\" prop=\"username\">\n            <el-input\n              v-model=\"registerForm.username\"\n              placeholder=\"请输入用户名\"\n            >\n              <template #prefix>\n                <el-icon><User /></el-icon>\n              </template>\n            </el-input>\n          </el-form-item>\n\n          <el-form-item label=\"昵称\" prop=\"nickname\">\n            <el-input\n              v-model=\"registerForm.nickname\"\n              placeholder=\"请输入昵称\"\n            >\n              <template #prefix>\n                <el-icon><User /></el-icon>\n              </template>\n            </el-input>\n          </el-form-item>\n\n          <el-form-item label=\"密码\" prop=\"password\">\n            <el-input\n              v-model=\"registerForm.password\"\n              type=\"password\"\n              placeholder=\"请输入密码\"\n              show-password\n            >\n              <template #prefix>\n                <el-icon><Lock /></el-icon>\n              </template>\n            </el-input>\n          </el-form-item>\n\n          <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\n            <el-input\n              v-model=\"registerForm.confirmPassword\"\n              type=\"password\"\n              placeholder=\"请再次输入密码\"\n              show-password\n            >\n              <template #prefix>\n                <el-icon><Lock /></el-icon>\n              </template>\n            </el-input>\n          </el-form-item>\n\n          <el-form-item>\n            <el-button\n              type=\"primary\"\n              :loading=\"registering\"\n              @click=\"handleRegister\"\n              class=\"register-button\"\n            >注册</el-button>\n            <el-button @click=\"currentStep = 0\">上一步</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n\n      <!-- 步骤3：注册完成 -->\n      <div v-if=\"currentStep === 2\" class=\"register-success\">\n        <el-result\n          icon=\"success\"\n          title=\"注册成功\"\n          sub-title=\"您已成功注册账号，现在可以登录使用了\"\n        >\n          <template #extra>\n            <el-button type=\"primary\" @click=\"goToLogin\">去登录</el-button>\n          </template>\n        </el-result>\n      </div>\n\n      <div class=\"register-options\" v-if=\"currentStep < 2\">\n        <router-link to=\"/login\">已有账号？立即登录</router-link>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onBeforeUnmount } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { User, Message, Lock, Key } from '@element-plus/icons-vue'\nimport { sendVerificationCode as sendCode, verifyEmail as verifyCode, registerWithVerification } from '../api/user'\n\nexport default {\n  name: 'RegisterWithVerification',\n  components: {\n    User,\n    Message,\n    Lock,\n    Key\n  },\n  setup() {\n    const router = useRouter()\n    const currentStep = ref(0)\n    const emailFormRef = ref(null)\n    const registerFormRef = ref(null)\n    const codeSending = ref(false)\n    const verifying = ref(false)\n    const registering = ref(false)\n    const countdown = ref(0)\n    let countdownTimer = null\n\n    // 邮箱验证表单\n    const emailForm = reactive({\n      email: '',\n      code: ''\n    })\n\n    // 注册表单\n    const registerForm = reactive({\n      username: '',\n      nickname: '',\n      password: '',\n      confirmPassword: '',\n      email: '', // 将从邮箱验证表单中获取\n      code: ''   // 将从邮箱验证表单中获取\n    })\n\n    // 邮箱验证表单规则\n    const emailRules = {\n      email: [\n        { required: true, message: '请输入邮箱', trigger: 'blur' },\n        { type: 'email', message: '请输入正确的邮箱格式', trigger: 'blur' }\n      ],\n      code: [\n        { required: true, message: '请输入验证码', trigger: 'blur' },\n        { min: 6, max: 6, message: '验证码长度应为6位', trigger: 'blur' }\n      ]\n    }\n\n    // 注册表单规则\n    const registerRules = {\n      username: [\n        { required: true, message: '请输入用户名', trigger: 'blur' },\n        { min: 3, max: 50, message: '用户名长度应在3-50个字符之间', trigger: 'blur' }\n      ],\n      nickname: [\n        { required: true, message: '请输入昵称', trigger: 'blur' },\n        { min: 2, max: 50, message: '昵称长度应在2-50个字符之间', trigger: 'blur' }\n      ],\n      password: [\n        { required: true, message: '请输入密码', trigger: 'blur' },\n        { min: 6, max: 20, message: '密码长度应在6-20个字符之间', trigger: 'blur' }\n      ],\n      confirmPassword: [\n        { required: true, message: '请再次输入密码', trigger: 'blur' },\n        {\n          validator: (rule, value, callback) => {\n            if (value !== registerForm.password) {\n              callback(new Error('两次输入的密码不一致'))\n            } else {\n              callback()\n            }\n          },\n          trigger: 'blur'\n        }\n      ]\n    }\n\n    // 发送验证码\n    const sendVerificationCode = async () => {\n      try {\n        // 验证邮箱\n        await emailFormRef.value.validateField('email')\n\n        // 显示加载状态\n        codeSending.value = true\n\n        // 调用发送验证码API\n        await sendCode({\n          email: emailForm.email,\n          type: 'register'\n        })\n\n        // 开始倒计时\n        countdown.value = 60\n        countdownTimer = setInterval(() => {\n          countdown.value--\n          if (countdown.value <= 0) {\n            clearInterval(countdownTimer)\n          }\n        }, 1000)\n\n        ElMessage({\n          message: '验证码已发送，请查收邮件',\n          type: 'success'\n        })\n      } catch (error) {\n        console.error('发送验证码失败:', error)\n        ElMessage({\n          message: error.message || '发送验证码失败，请稍后重试',\n          type: 'error'\n        })\n      } finally {\n        codeSending.value = false\n      }\n    }\n\n    // 验证邮箱\n    const verifyEmail = async () => {\n      try {\n        // 表单验证\n        await emailFormRef.value.validate()\n\n        // 显示加载状态\n        verifying.value = true\n\n        // 调用验证邮箱API\n        await verifyCode({\n          email: emailForm.email,\n          code: emailForm.code,\n          type: 'register'\n        })\n\n        // 将邮箱和验证码传递给注册表单\n        registerForm.email = emailForm.email\n        registerForm.code = emailForm.code\n\n        // 进入下一步\n        currentStep.value = 1\n\n        ElMessage({\n          message: '邮箱验证成功',\n          type: 'success'\n        })\n      } catch (error) {\n        console.error('邮箱验证失败:', error)\n        ElMessage({\n          message: error.message || '邮箱验证失败，请检查验证码是否正确',\n          type: 'error'\n        })\n      } finally {\n        verifying.value = false\n      }\n    }\n\n    // 注册处理\n    const handleRegister = async () => {\n      try {\n        // 表单验证\n        await registerFormRef.value.validate()\n\n        // 显示加载状态\n        registering.value = true\n\n        // 准备注册数据\n        const registerPayload = {\n          username: registerForm.username,\n          email: registerForm.email,\n          nickname: registerForm.nickname,\n          password: registerForm.password,\n          confirm_password: registerForm.confirmPassword,\n          code: registerForm.code\n        }\n\n        // 调用注册API\n        await registerWithVerification(registerPayload)\n\n        // 进入下一步\n        currentStep.value = 2\n\n        ElMessage({\n          message: '注册成功',\n          type: 'success'\n        })\n      } catch (error) {\n        console.error('注册失败:', error)\n\n        // 处理后端返回的错误信息\n        let errorMsg = '注册失败，请检查输入信息'\n\n        if (error.response && error.response.data) {\n          const responseData = error.response.data\n\n          if (responseData.msg && typeof responseData.msg === 'object') {\n            // 处理字段错误\n            const fieldErrors = []\n            for (const field in responseData.msg) {\n              if (Array.isArray(responseData.msg[field])) {\n                fieldErrors.push(`${field}: ${responseData.msg[field].join(', ')}`)\n              } else {\n                fieldErrors.push(`${field}: ${responseData.msg[field]}`)\n              }\n            }\n            if (fieldErrors.length > 0) {\n              errorMsg = fieldErrors.join('\\n')\n            }\n          } else if (responseData.msg) {\n            errorMsg = responseData.msg\n          }\n        } else if (error.message) {\n          errorMsg = error.message\n        }\n\n        ElMessage({\n          message: errorMsg,\n          type: 'error',\n          dangerouslyUseHTMLString: true\n        })\n      } finally {\n        registering.value = false\n      }\n    }\n\n    // 跳转到登录页\n    const goToLogin = () => {\n      router.push('/login')\n    }\n\n    // 组件销毁前清除定时器\n    onBeforeUnmount(() => {\n      if (countdownTimer) {\n        clearInterval(countdownTimer)\n      }\n    })\n\n    return {\n      currentStep,\n      emailFormRef,\n      registerFormRef,\n      emailForm,\n      registerForm,\n      emailRules,\n      registerRules,\n      codeSending,\n      verifying,\n      registering,\n      countdown,\n      sendVerificationCode,\n      verifyEmail,\n      handleRegister,\n      goToLogin\n    }\n  }\n}\n</script>\n\n<style scoped>\n.register-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #f5f7fa;\n  padding: 20px 0;\n}\n\n.register-box {\n  width: 500px;\n  padding: 30px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.register-header {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.register-header h2 {\n  font-weight: 500;\n  color: #303133;\n}\n\n.register-form {\n  margin-top: 30px;\n}\n\n.verification-code-container {\n  display: flex;\n  gap: 10px;\n}\n\n.verification-code-container .el-input {\n  flex: 1;\n}\n\n.register-button {\n  width: 100%;\n}\n\n.register-options {\n  display: flex;\n  justify-content: center;\n  margin-top: 15px;\n  font-size: 14px;\n}\n\n.register-options a {\n  color: #409eff;\n  text-decoration: none;\n}\n\n.register-options a:hover {\n  text-decoration: underline;\n}\n\n.register-success {\n  margin-top: 20px;\n}\n\n:deep(.el-steps--simple) {\n  margin-top: 20px;\n  margin-bottom: 30px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}