{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.includes.js\");\nrequire(\"core-js/modules/es.array.map.js\");\nrequire(\"core-js/modules/es.array.some.js\");\nrequire(\"core-js/modules/es.iterator.constructor.js\");\nrequire(\"core-js/modules/es.iterator.map.js\");\nrequire(\"core-js/modules/es.iterator.some.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/es.string.includes.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar lodashUnified = require('lodash-unified');\nvar constants = require('../constants.js');\nvar types = require('../../../../utils/types.js');\nvar shared = require('@vue/shared');\nvar useFormCommonProps = require('../../../form/src/hooks/use-form-common-props.js');\nvar useCheckboxStatus = function useCheckboxStatus(props, slots, _ref) {\n  var model = _ref.model;\n  var checkboxGroup = vue.inject(constants.checkboxGroupContextKey, void 0);\n  var isFocused = vue.ref(false);\n  var actualValue = vue.computed(function () {\n    if (!types.isPropAbsent(props.value)) {\n      return props.value;\n    }\n    return props.label;\n  });\n  var isChecked = vue.computed(function () {\n    var value = model.value;\n    if (types.isBoolean(value)) {\n      return value;\n    } else if (shared.isArray(value)) {\n      if (shared.isObject(actualValue.value)) {\n        return value.map(vue.toRaw).some(function (o) {\n          return lodashUnified.isEqual(o, actualValue.value);\n        });\n      } else {\n        return value.map(vue.toRaw).includes(actualValue.value);\n      }\n    } else if (value !== null && value !== void 0) {\n      return value === props.trueValue || value === props.trueLabel;\n    } else {\n      return !!value;\n    }\n  });\n  var checkboxButtonSize = useFormCommonProps.useFormSize(vue.computed(function () {\n    var _a;\n    return (_a = checkboxGroup == null ? void 0 : checkboxGroup.size) == null ? void 0 : _a.value;\n  }), {\n    prop: true\n  });\n  var checkboxSize = useFormCommonProps.useFormSize(vue.computed(function () {\n    var _a;\n    return (_a = checkboxGroup == null ? void 0 : checkboxGroup.size) == null ? void 0 : _a.value;\n  }));\n  var hasOwnLabel = vue.computed(function () {\n    return !!slots[\"default\"] || !types.isPropAbsent(actualValue.value);\n  });\n  return {\n    checkboxButtonSize: checkboxButtonSize,\n    isChecked: isChecked,\n    isFocused: isFocused,\n    checkboxSize: checkboxSize,\n    hasOwnLabel: hasOwnLabel,\n    actualValue: actualValue\n  };\n};\nexports.useCheckboxStatus = useCheckboxStatus;","map":{"version":3,"names":["useCheckboxStatus","props","slots","_ref","model","checkboxGroup","vue","inject","constants","checkboxGroupContextKey","isFocused","ref","actualValue","computed","types","isPropAbsent","value","label","isChecked","isBoolean","shared","isArray","isObject","map","toRaw","some","o","lodashUnified","isEqual","includes","trueValue","trueLabel","checkboxButtonSize","useFormCommonProps","useFormSize","_a","size","prop","checkboxSize","hasOwnLabel"],"sources":["../../../../../../../packages/components/checkbox/src/composables/use-checkbox-status.ts"],"sourcesContent":["import { computed, inject, ref, toRaw } from 'vue'\nimport { isEqual } from 'lodash-unified'\nimport { useFormSize } from '@element-plus/components/form'\nimport { isArray, isBoolean, isObject, isPropAbsent } from '@element-plus/utils'\nimport { checkboxGroupContextKey } from '../constants'\n\nimport type { ComponentInternalInstance } from 'vue'\nimport type { CheckboxProps } from '../checkbox'\nimport type { CheckboxModel } from '../composables'\n\nexport const useCheckboxStatus = (\n  props: CheckboxProps,\n  slots: ComponentInternalInstance['slots'],\n  { model }: Pick<CheckboxModel, 'model'>\n) => {\n  const checkboxGroup = inject(checkboxGroupContextKey, undefined)\n  const isFocused = ref(false)\n  const actualValue = computed(() => {\n    // In version 2.x, if there's no props.value, props.label will act as props.value\n    // In version 3.x, remove this computed value, use props.value instead.\n    if (!isPropAbsent(props.value)) {\n      return props.value\n    }\n    return props.label\n  })\n  const isChecked = computed<boolean>(() => {\n    const value = model.value\n    if (isBoolean(value)) {\n      return value\n    } else if (isArray(value)) {\n      if (isObject(actualValue.value)) {\n        return value.map(toRaw).some((o) => isEqual(o, actualValue.value))\n      } else {\n        return value.map(toRaw).includes(actualValue.value)\n      }\n    } else if (value !== null && value !== undefined) {\n      return value === props.trueValue || value === props.trueLabel\n    } else {\n      return !!value\n    }\n  })\n\n  const checkboxButtonSize = useFormSize(\n    computed(() => checkboxGroup?.size?.value),\n    {\n      prop: true,\n    }\n  )\n  const checkboxSize = useFormSize(computed(() => checkboxGroup?.size?.value))\n\n  const hasOwnLabel = computed<boolean>(() => {\n    return !!slots.default || !isPropAbsent(actualValue.value)\n  })\n\n  return {\n    checkboxButtonSize,\n    isChecked,\n    isFocused,\n    checkboxSize,\n    hasOwnLabel,\n    actualValue,\n  }\n}\n\nexport type CheckboxStatus = ReturnType<typeof useCheckboxStatus>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}