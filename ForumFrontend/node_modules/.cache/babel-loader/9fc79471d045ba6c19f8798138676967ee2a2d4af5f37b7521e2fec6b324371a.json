{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, onMounted, onUnmounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport UserAvatar from './UserAvatar.vue';\nexport default {\n  name: 'AppHeader',\n  components: {\n    UserAvatar: UserAvatar\n  },\n  setup: function setup() {\n    var store = useStore();\n    var router = useRouter();\n    var showUserMenu = ref(false);\n    var unreadMessages = ref(0);\n    var isAuthenticated = computed(function () {\n      return store.getters.isAuthenticated;\n    });\n    var userInfo = computed(function () {\n      return store.getters.userInfo;\n    });\n    var toggleUserMenu = function toggleUserMenu() {\n      showUserMenu.value = !showUserMenu.value;\n    };\n    var handleLogout = function handleLogout() {\n      store.dispatch('logout');\n      router.push('/login');\n      showUserMenu.value = false;\n    };\n    var closeUserMenu = function closeUserMenu(event) {\n      if (showUserMenu.value && !event.target.closest('.user-info')) {\n        showUserMenu.value = false;\n      }\n    };\n\n    // 模拟获取未读消息数量\n    var fetchUnreadMessages = function fetchUnreadMessages() {\n      // 在实际项目中，这里应该调用API获取未读消息数量\n      // 这里只是模拟一个随机数\n      unreadMessages.value = Math.floor(Math.random() * 5);\n    };\n    onMounted(function () {\n      document.addEventListener('click', closeUserMenu);\n      if (isAuthenticated.value) {\n        fetchUnreadMessages();\n      }\n    });\n    onUnmounted(function () {\n      document.removeEventListener('click', closeUserMenu);\n    });\n    return {\n      isAuthenticated: isAuthenticated,\n      userInfo: userInfo,\n      showUserMenu: showUserMenu,\n      unreadMessages: unreadMessages,\n      toggleUserMenu: toggleUserMenu,\n      handleLogout: handleLogout\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onUnmounted","useStore","useRouter","UserAvatar","name","components","setup","store","router","showUserMenu","unreadMessages","isAuthenticated","getters","userInfo","toggleUserMenu","value","handleLogout","dispatch","push","closeUserMenu","event","target","closest","fetchUnreadMessages","Math","floor","random","document","addEventListener","removeEventListener"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\components\\Header.vue"],"sourcesContent":["<template>\r\n  <header class=\"app-header\">\r\n    <div class=\"header-container\">\r\n      <div class=\"logo-container\">\r\n        <router-link to=\"/\" class=\"logo\">\r\n          <h1>论坛系统</h1>\r\n        </router-link>\r\n      </div>\r\n      <nav class=\"main-nav\">\r\n        <ul>\r\n          <li>\r\n            <router-link to=\"/\" active-class=\"active\">首页</router-link>\r\n          </li>\r\n          <li>\r\n            <router-link to=\"/boards\" active-class=\"active\">板块</router-link>\r\n          </li>\r\n          <li>\r\n            <router-link to=\"/posts\" active-class=\"active\">帖子</router-link>\r\n          </li>\r\n          <li v-if=\"isAuthenticated\">\r\n            <router-link to=\"/post/create\" active-class=\"active\">发帖</router-link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div class=\"user-area\">\r\n        <template v-if=\"isAuthenticated\">\r\n          <div class=\"user-info\" @click=\"toggleUserMenu\">\r\n            <user-avatar :user=\"userInfo\" :size=\"32\" />\r\n            <span class=\"username\">{{ userInfo.nickname || userInfo.username }}</span>\r\n            <i class=\"el-icon-arrow-down\"></i>\r\n            <div class=\"user-menu\" v-show=\"showUserMenu\">\r\n              <router-link :to=\"`/profile/${userInfo.id}`\">\r\n                <i class=\"el-icon-user\"></i> 个人中心\r\n              </router-link>\r\n              <router-link to=\"/user/messages\" v-if=\"false\">\r\n                <i class=\"el-icon-message\"></i> 消息中心\r\n                <span v-if=\"unreadMessages > 0\" class=\"badge\">{{ unreadMessages }}</span>\r\n              </router-link>\r\n              <router-link to=\"/user/settings\" v-if=\"false\">\r\n                <i class=\"el-icon-setting\"></i> 设置\r\n              </router-link>\r\n              <div v-if=\"userInfo.role === 'admin'\" class=\"divider\"></div>\r\n              <router-link v-if=\"userInfo.role === 'admin'\" to=\"/admin/dashboard\">\r\n                <i class=\"el-icon-monitor\"></i> 管理员仪表盘\r\n              </router-link>\r\n              <router-link v-if=\"userInfo.role === 'admin'\" to=\"/admin/users\">\r\n                <i class=\"el-icon-user\"></i> 用户管理\r\n              </router-link>\r\n              <div class=\"divider\"></div>\r\n              <a href=\"javascript:void(0)\" @click=\"handleLogout\">\r\n                <i class=\"el-icon-switch-button\"></i> 退出登录\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </template>\r\n        <template v-else>\r\n          <router-link to=\"/login\" class=\"login-btn\">登录</router-link>\r\n          <router-link to=\"/register\" class=\"register-btn\">注册</router-link>\r\n        </template>\r\n      </div>\r\n    </div>\r\n  </header>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\nimport UserAvatar from './UserAvatar.vue'\r\n\r\nexport default {\r\n  name: 'AppHeader',\r\n  components: {\r\n    UserAvatar\r\n  },\r\n  setup() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const showUserMenu = ref(false)\r\n    const unreadMessages = ref(0)\r\n\r\n    const isAuthenticated = computed(() => store.getters.isAuthenticated)\r\n    const userInfo = computed(() => store.getters.userInfo)\r\n\r\n    const toggleUserMenu = () => {\r\n      showUserMenu.value = !showUserMenu.value\r\n    }\r\n\r\n    const handleLogout = () => {\r\n      store.dispatch('logout')\r\n      router.push('/login')\r\n      showUserMenu.value = false\r\n    }\r\n\r\n    const closeUserMenu = (event) => {\r\n      if (showUserMenu.value && !event.target.closest('.user-info')) {\r\n        showUserMenu.value = false\r\n      }\r\n    }\r\n\r\n    // 模拟获取未读消息数量\r\n    const fetchUnreadMessages = () => {\r\n      // 在实际项目中，这里应该调用API获取未读消息数量\r\n      // 这里只是模拟一个随机数\r\n      unreadMessages.value = Math.floor(Math.random() * 5)\r\n    }\r\n\r\n    onMounted(() => {\r\n      document.addEventListener('click', closeUserMenu)\r\n      if (isAuthenticated.value) {\r\n        fetchUnreadMessages()\r\n      }\r\n    })\r\n\r\n    onUnmounted(() => {\r\n      document.removeEventListener('click', closeUserMenu)\r\n    })\r\n\r\n    return {\r\n      isAuthenticated,\r\n      userInfo,\r\n      showUserMenu,\r\n      unreadMessages,\r\n      toggleUserMenu,\r\n      handleLogout\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.app-header {\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 1000;\r\n}\r\n\r\n.header-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n  height: 60px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.logo-container {\r\n  flex: 0 0 auto;\r\n}\r\n\r\n.logo {\r\n  text-decoration: none;\r\n  color: #409EFF;\r\n}\r\n\r\n.logo h1 {\r\n  margin: 0;\r\n  font-size: 20px;\r\n}\r\n\r\n.main-nav {\r\n  flex: 1;\r\n  margin: 0 20px;\r\n}\r\n\r\n.main-nav ul {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n}\r\n\r\n.main-nav li {\r\n  margin-right: 20px;\r\n}\r\n\r\n.main-nav a {\r\n  text-decoration: none;\r\n  color: #606266;\r\n  font-size: 16px;\r\n  padding: 8px 0;\r\n  position: relative;\r\n}\r\n\r\n.main-nav a:hover,\r\n.main-nav a.active {\r\n  color: #409EFF;\r\n}\r\n\r\n.main-nav a.active:after {\r\n  content: '';\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background-color: #409EFF;\r\n}\r\n\r\n.user-area {\r\n  flex: 0 0 auto;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.user-info {\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  position: relative;\r\n}\r\n\r\n.username {\r\n  margin: 0 8px;\r\n  font-size: 14px;\r\n}\r\n\r\n.user-menu {\r\n  position: absolute;\r\n  top: 100%;\r\n  right: 0;\r\n  width: 150px;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n  padding: 5px 0;\r\n  margin-top: 10px;\r\n  z-index: 1001;\r\n}\r\n\r\n.user-menu:before {\r\n  content: '';\r\n  position: absolute;\r\n  top: -6px;\r\n  right: 20px;\r\n  width: 12px;\r\n  height: 12px;\r\n  background-color: #fff;\r\n  transform: rotate(45deg);\r\n  box-shadow: -2px -2px 5px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.user-menu a {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 8px 15px;\r\n  color: #606266;\r\n  text-decoration: none;\r\n  font-size: 14px;\r\n  position: relative;\r\n}\r\n\r\n.user-menu a:hover {\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.user-menu i {\r\n  margin-right: 8px;\r\n  font-size: 16px;\r\n}\r\n\r\n.divider {\r\n  height: 1px;\r\n  background-color: #ebeef5;\r\n  margin: 5px 0;\r\n}\r\n\r\n.badge {\r\n  background-color: #f56c6c;\r\n  color: #fff;\r\n  border-radius: 10px;\r\n  padding: 0 6px;\r\n  font-size: 12px;\r\n  height: 18px;\r\n  line-height: 18px;\r\n  margin-left: 5px;\r\n}\r\n\r\n.login-btn,\r\n.register-btn {\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  text-decoration: none;\r\n  font-size: 14px;\r\n}\r\n\r\n.login-btn {\r\n  color: #409EFF;\r\n  margin-right: 10px;\r\n}\r\n\r\n.register-btn {\r\n  background-color: #409EFF;\r\n  color: #fff;\r\n}\r\n</style> "],"mappings":";AAiEA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,WAAU,QAAS,KAAI;AAC1D,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,SAAQ,QAAS,YAAW;AACrC,OAAOC,UAAS,MAAO,kBAAiB;AAExC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACVF,UAAS,EAATA;EACF,CAAC;EACDG,KAAK,WAALA,KAAKA,CAAA,EAAG;IACN,IAAMC,KAAI,GAAIN,QAAQ,CAAC;IACvB,IAAMO,MAAK,GAAIN,SAAS,CAAC;IACzB,IAAMO,YAAW,GAAIZ,GAAG,CAAC,KAAK;IAC9B,IAAMa,cAAa,GAAIb,GAAG,CAAC,CAAC;IAE5B,IAAMc,eAAc,GAAIb,QAAQ,CAAC;MAAA,OAAMS,KAAK,CAACK,OAAO,CAACD,eAAe;IAAA;IACpE,IAAME,QAAO,GAAIf,QAAQ,CAAC;MAAA,OAAMS,KAAK,CAACK,OAAO,CAACC,QAAQ;IAAA;IAEtD,IAAMC,cAAa,GAAI,SAAjBA,cAAaA,CAAA,EAAU;MAC3BL,YAAY,CAACM,KAAI,GAAI,CAACN,YAAY,CAACM,KAAI;IACzC;IAEA,IAAMC,YAAW,GAAI,SAAfA,YAAWA,CAAA,EAAU;MACzBT,KAAK,CAACU,QAAQ,CAAC,QAAQ;MACvBT,MAAM,CAACU,IAAI,CAAC,QAAQ;MACpBT,YAAY,CAACM,KAAI,GAAI,KAAI;IAC3B;IAEA,IAAMI,aAAY,GAAI,SAAhBA,aAAYA,CAAKC,KAAK,EAAK;MAC/B,IAAIX,YAAY,CAACM,KAAI,IAAK,CAACK,KAAK,CAACC,MAAM,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE;QAC7Db,YAAY,CAACM,KAAI,GAAI,KAAI;MAC3B;IACF;;IAEA;IACA,IAAMQ,mBAAkB,GAAI,SAAtBA,mBAAkBA,CAAA,EAAU;MAChC;MACA;MACAb,cAAc,CAACK,KAAI,GAAIS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAI,CAAC;IACrD;IAEA3B,SAAS,CAAC,YAAM;MACd4B,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAET,aAAa;MAChD,IAAIR,eAAe,CAACI,KAAK,EAAE;QACzBQ,mBAAmB,CAAC;MACtB;IACF,CAAC;IAEDvB,WAAW,CAAC,YAAM;MAChB2B,QAAQ,CAACE,mBAAmB,CAAC,OAAO,EAAEV,aAAa;IACrD,CAAC;IAED,OAAO;MACLR,eAAe,EAAfA,eAAe;MACfE,QAAQ,EAARA,QAAQ;MACRJ,YAAY,EAAZA,YAAY;MACZC,cAAc,EAAdA,cAAc;MACdI,cAAc,EAAdA,cAAc;MACdE,YAAW,EAAXA;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}