{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\")[\"default\"];\nvar _asyncToGenerator = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\")[\"default\"];\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.array.filter.js\");\nrequire(\"core-js/modules/es.array.for-each.js\");\nrequire(\"core-js/modules/es.array.includes.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.array.slice.js\");\nrequire(\"core-js/modules/es.iterator.constructor.js\");\nrequire(\"core-js/modules/es.iterator.filter.js\");\nrequire(\"core-js/modules/es.iterator.for-each.js\");\nrequire(\"core-js/modules/es.number.parse-float.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar lodashUnified = require('lodash-unified');\nvar core = require('@vueuse/core');\nvar index$9 = require('../../cascader-panel/index.js');\nvar index$5 = require('../../input/index.js');\nvar index$4 = require('../../tooltip/index.js');\nvar index$a = require('../../scrollbar/index.js');\nvar index$7 = require('../../tag/index.js');\nvar index$6 = require('../../icon/index.js');\nvar iconsVue = require('@element-plus/icons-vue');\nvar cascader = require('./cascader2.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index$8 = require('../../../directives/click-outside/index.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar index$1 = require('../../../hooks/use-locale/index.js');\nvar useFormItem = require('../../form/src/hooks/use-form-item.js');\nvar index$2 = require('../../../hooks/use-empty-values/index.js');\nvar index$3 = require('../../../hooks/use-composition/index.js');\nvar useFormCommonProps = require('../../form/src/hooks/use-form-common-props.js');\nvar event = require('../../../constants/event.js');\nvar error = require('../../../utils/error.js');\nvar shared = require('@vue/shared');\nvar aria = require('../../../constants/aria.js');\nvar aria$1 = require('../../../utils/dom/aria.js');\nvar COMPONENT_NAME = \"ElCascader\";\nvar __default__ = vue.defineComponent({\n  name: COMPONENT_NAME\n});\nvar _sfc_main = /* @__PURE__ */vue.defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: cascader.cascaderProps,\n  emits: cascader.cascaderEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n      emit = _ref.emit;\n    var props = __props;\n    var popperOptions = {\n      modifiers: [{\n        name: \"arrowPosition\",\n        enabled: true,\n        phase: \"main\",\n        fn: function fn(_ref2) {\n          var state = _ref2.state;\n          var modifiersData = state.modifiersData,\n            placement = state.placement;\n          if ([\"right\", \"left\", \"bottom\", \"top\"].includes(placement)) return;\n          modifiersData.arrow.x = 35;\n        },\n        requires: [\"arrow\"]\n      }]\n    };\n    var attrs = vue.useAttrs();\n    var inputInitialHeight = 0;\n    var pressDeleteCount = 0;\n    var nsCascader = index.useNamespace(\"cascader\");\n    var nsInput = index.useNamespace(\"input\");\n    var _index$1$useLocale = index$1.useLocale(),\n      t = _index$1$useLocale.t;\n    var _useFormItem$useFormI = useFormItem.useFormItem(),\n      form = _useFormItem$useFormI.form,\n      formItem = _useFormItem$useFormI.formItem;\n    var _index$2$useEmptyValu = index$2.useEmptyValues(props),\n      valueOnClear = _index$2$useEmptyValu.valueOnClear;\n    var _index$3$useCompositi = index$3.useComposition({\n        afterComposition: function afterComposition(event) {\n          var _a;\n          var text = (_a = event.target) == null ? void 0 : _a.value;\n          handleInput(text);\n        }\n      }),\n      isComposing = _index$3$useCompositi.isComposing,\n      handleComposition = _index$3$useCompositi.handleComposition;\n    var tooltipRef = vue.ref(null);\n    var input = vue.ref(null);\n    var tagWrapper = vue.ref(null);\n    var cascaderPanelRef = vue.ref(null);\n    var suggestionPanel = vue.ref(null);\n    var popperVisible = vue.ref(false);\n    var inputHover = vue.ref(false);\n    var filtering = vue.ref(false);\n    var filterFocus = vue.ref(false);\n    var inputValue = vue.ref(\"\");\n    var searchInputValue = vue.ref(\"\");\n    var presentTags = vue.ref([]);\n    var allPresentTags = vue.ref([]);\n    var suggestions = vue.ref([]);\n    var cascaderStyle = vue.computed(function () {\n      return attrs.style;\n    });\n    var isDisabled = vue.computed(function () {\n      return props.disabled || (form == null ? void 0 : form.disabled);\n    });\n    var inputPlaceholder = vue.computed(function () {\n      return props.placeholder || t(\"el.cascader.placeholder\");\n    });\n    var currentPlaceholder = vue.computed(function () {\n      return searchInputValue.value || presentTags.value.length > 0 || isComposing.value ? \"\" : inputPlaceholder.value;\n    });\n    var realSize = useFormCommonProps.useFormSize();\n    var tagSize = vue.computed(function () {\n      return realSize.value === \"small\" ? \"small\" : \"default\";\n    });\n    var multiple = vue.computed(function () {\n      return !!props.props.multiple;\n    });\n    var readonly = vue.computed(function () {\n      return !props.filterable || multiple.value;\n    });\n    var searchKeyword = vue.computed(function () {\n      return multiple.value ? searchInputValue.value : inputValue.value;\n    });\n    var checkedNodes = vue.computed(function () {\n      var _a;\n      return ((_a = cascaderPanelRef.value) == null ? void 0 : _a.checkedNodes) || [];\n    });\n    var clearBtnVisible = vue.computed(function () {\n      if (!props.clearable || isDisabled.value || filtering.value || !inputHover.value) return false;\n      return !!checkedNodes.value.length;\n    });\n    var presentText = vue.computed(function () {\n      var showAllLevels = props.showAllLevels,\n        separator = props.separator;\n      var nodes = checkedNodes.value;\n      return nodes.length ? multiple.value ? \"\" : nodes[0].calcText(showAllLevels, separator) : \"\";\n    });\n    var validateState = vue.computed(function () {\n      return (formItem == null ? void 0 : formItem.validateState) || \"\";\n    });\n    var checkedValue = vue.computed({\n      get: function get() {\n        return lodashUnified.cloneDeep(props.modelValue);\n      },\n      set: function set(val) {\n        var value = val != null ? val : valueOnClear.value;\n        emit(event.UPDATE_MODEL_EVENT, value);\n        emit(event.CHANGE_EVENT, value);\n        if (props.validateEvent) {\n          formItem == null ? void 0 : formItem.validate(\"change\")[\"catch\"](function (err) {\n            return error.debugWarn(err);\n          });\n        }\n      }\n    });\n    var cascaderKls = vue.computed(function () {\n      return [nsCascader.b(), nsCascader.m(realSize.value), nsCascader.is(\"disabled\", isDisabled.value), attrs[\"class\"]];\n    });\n    var cascaderIconKls = vue.computed(function () {\n      return [nsInput.e(\"icon\"), \"icon-arrow-down\", nsCascader.is(\"reverse\", popperVisible.value)];\n    });\n    var inputClass = vue.computed(function () {\n      return nsCascader.is(\"focus\", popperVisible.value || filterFocus.value);\n    });\n    var contentRef = vue.computed(function () {\n      var _a, _b;\n      return (_b = (_a = tooltipRef.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n    var togglePopperVisible = function togglePopperVisible(visible) {\n      var _a, _b, _c;\n      if (isDisabled.value) return;\n      visible = visible != null ? visible : !popperVisible.value;\n      if (visible !== popperVisible.value) {\n        popperVisible.value = visible;\n        (_b = (_a = input.value) == null ? void 0 : _a.input) == null ? void 0 : _b.setAttribute(\"aria-expanded\", \"\".concat(visible));\n        if (visible) {\n          updatePopperPosition();\n          vue.nextTick((_c = cascaderPanelRef.value) == null ? void 0 : _c.scrollToExpandingNode);\n        } else if (props.filterable) {\n          syncPresentTextValue();\n        }\n        emit(\"visibleChange\", visible);\n      }\n    };\n    var updatePopperPosition = function updatePopperPosition() {\n      vue.nextTick(function () {\n        var _a;\n        (_a = tooltipRef.value) == null ? void 0 : _a.updatePopper();\n      });\n    };\n    var hideSuggestionPanel = function hideSuggestionPanel() {\n      filtering.value = false;\n    };\n    var genTag = function genTag(node) {\n      var showAllLevels = props.showAllLevels,\n        separator = props.separator;\n      return {\n        node: node,\n        key: node.uid,\n        text: node.calcText(showAllLevels, separator),\n        hitState: false,\n        closable: !isDisabled.value && !node.isDisabled,\n        isCollapseTag: false\n      };\n    };\n    var deleteTag = function deleteTag(tag) {\n      var _a;\n      var node = tag.node;\n      node.doCheck(false);\n      (_a = cascaderPanelRef.value) == null ? void 0 : _a.calculateCheckedValue();\n      emit(\"removeTag\", node.valueByOption);\n    };\n    var calculatePresentTags = function calculatePresentTags() {\n      if (!multiple.value) return;\n      var nodes = checkedNodes.value;\n      var tags = [];\n      var allTags = [];\n      nodes.forEach(function (node) {\n        return allTags.push(genTag(node));\n      });\n      allPresentTags.value = allTags;\n      if (nodes.length) {\n        nodes.slice(0, props.maxCollapseTags).forEach(function (node) {\n          return tags.push(genTag(node));\n        });\n        var rest = nodes.slice(props.maxCollapseTags);\n        var restCount = rest.length;\n        if (restCount) {\n          if (props.collapseTags) {\n            tags.push({\n              key: -1,\n              text: \"+ \".concat(restCount),\n              closable: false,\n              isCollapseTag: true\n            });\n          } else {\n            rest.forEach(function (node) {\n              return tags.push(genTag(node));\n            });\n          }\n        }\n      }\n      presentTags.value = tags;\n    };\n    var calculateSuggestions = function calculateSuggestions() {\n      var _a, _b;\n      var filterMethod = props.filterMethod,\n        showAllLevels = props.showAllLevels,\n        separator = props.separator;\n      var res = (_b = (_a = cascaderPanelRef.value) == null ? void 0 : _a.getFlattedNodes(!props.props.checkStrictly)) == null ? void 0 : _b.filter(function (node) {\n        if (node.isDisabled) return false;\n        node.calcText(showAllLevels, separator);\n        return filterMethod(node, searchKeyword.value);\n      });\n      if (multiple.value) {\n        presentTags.value.forEach(function (tag) {\n          tag.hitState = false;\n        });\n        allPresentTags.value.forEach(function (tag) {\n          tag.hitState = false;\n        });\n      }\n      filtering.value = true;\n      suggestions.value = res;\n      updatePopperPosition();\n    };\n    var focusFirstNode = function focusFirstNode() {\n      var _a;\n      var firstNode;\n      if (filtering.value && suggestionPanel.value) {\n        firstNode = suggestionPanel.value.$el.querySelector(\".\".concat(nsCascader.e(\"suggestion-item\")));\n      } else {\n        firstNode = (_a = cascaderPanelRef.value) == null ? void 0 : _a.$el.querySelector(\".\".concat(nsCascader.b(\"node\"), \"[tabindex=\\\"-1\\\"]\"));\n      }\n      if (firstNode) {\n        firstNode.focus();\n        !filtering.value && firstNode.click();\n      }\n    };\n    var updateStyle = function updateStyle() {\n      var _a, _b;\n      var inputInner = (_a = input.value) == null ? void 0 : _a.input;\n      var tagWrapperEl = tagWrapper.value;\n      var suggestionPanelEl = (_b = suggestionPanel.value) == null ? void 0 : _b.$el;\n      if (!core.isClient || !inputInner) return;\n      if (suggestionPanelEl) {\n        var suggestionList = suggestionPanelEl.querySelector(\".\".concat(nsCascader.e(\"suggestion-list\")));\n        suggestionList.style.minWidth = \"\".concat(inputInner.offsetWidth, \"px\");\n      }\n      if (tagWrapperEl) {\n        var offsetHeight = tagWrapperEl.offsetHeight;\n        var height = presentTags.value.length > 0 ? \"\".concat(Math.max(offsetHeight, inputInitialHeight) - 2, \"px\") : \"\".concat(inputInitialHeight, \"px\");\n        inputInner.style.height = height;\n        updatePopperPosition();\n      }\n    };\n    var getCheckedNodes = function getCheckedNodes(leafOnly) {\n      var _a;\n      return (_a = cascaderPanelRef.value) == null ? void 0 : _a.getCheckedNodes(leafOnly);\n    };\n    var handleExpandChange = function handleExpandChange(value) {\n      updatePopperPosition();\n      emit(\"expandChange\", value);\n    };\n    var handleKeyDown = function handleKeyDown(e) {\n      if (isComposing.value) return;\n      switch (e.code) {\n        case aria.EVENT_CODE.enter:\n        case aria.EVENT_CODE.numpadEnter:\n          togglePopperVisible();\n          break;\n        case aria.EVENT_CODE.down:\n          togglePopperVisible(true);\n          vue.nextTick(focusFirstNode);\n          e.preventDefault();\n          break;\n        case aria.EVENT_CODE.esc:\n          if (popperVisible.value === true) {\n            e.preventDefault();\n            e.stopPropagation();\n            togglePopperVisible(false);\n          }\n          break;\n        case aria.EVENT_CODE.tab:\n          togglePopperVisible(false);\n          break;\n      }\n    };\n    var handleClear = function handleClear() {\n      var _a;\n      (_a = cascaderPanelRef.value) == null ? void 0 : _a.clearCheckedNodes();\n      if (!popperVisible.value && props.filterable) {\n        syncPresentTextValue();\n      }\n      togglePopperVisible(false);\n      emit(\"clear\");\n    };\n    var syncPresentTextValue = function syncPresentTextValue() {\n      var value = presentText.value;\n      inputValue.value = value;\n      searchInputValue.value = value;\n    };\n    var handleSuggestionClick = function handleSuggestionClick(node) {\n      var _a, _b;\n      var checked = node.checked;\n      if (multiple.value) {\n        (_a = cascaderPanelRef.value) == null ? void 0 : _a.handleCheckChange(node, !checked, false);\n      } else {\n        !checked && ((_b = cascaderPanelRef.value) == null ? void 0 : _b.handleCheckChange(node, true, false));\n        togglePopperVisible(false);\n      }\n    };\n    var handleSuggestionKeyDown = function handleSuggestionKeyDown(e) {\n      var target = e.target;\n      var code = e.code;\n      switch (code) {\n        case aria.EVENT_CODE.up:\n        case aria.EVENT_CODE.down:\n          {\n            e.preventDefault();\n            var distance = code === aria.EVENT_CODE.up ? -1 : 1;\n            aria$1.focusNode(aria$1.getSibling(target, distance, \".\".concat(nsCascader.e(\"suggestion-item\"), \"[tabindex=\\\"-1\\\"]\")));\n            break;\n          }\n        case aria.EVENT_CODE.enter:\n        case aria.EVENT_CODE.numpadEnter:\n          target.click();\n          break;\n      }\n    };\n    var handleDelete = function handleDelete() {\n      var tags = presentTags.value;\n      var lastTag = tags[tags.length - 1];\n      pressDeleteCount = searchInputValue.value ? 0 : pressDeleteCount + 1;\n      if (!lastTag || !pressDeleteCount || props.collapseTags && tags.length > 1) return;\n      if (lastTag.hitState) {\n        deleteTag(lastTag);\n      } else {\n        lastTag.hitState = true;\n      }\n    };\n    var handleFocus = function handleFocus(e) {\n      var el = e.target;\n      var name = nsCascader.e(\"search-input\");\n      if (el.className === name) {\n        filterFocus.value = true;\n      }\n      emit(\"focus\", e);\n    };\n    var handleBlur = function handleBlur(e) {\n      filterFocus.value = false;\n      emit(\"blur\", e);\n    };\n    var handleFilter = lodashUnified.debounce(function () {\n      var value = searchKeyword.value;\n      if (!value) return;\n      var passed = props.beforeFilter(value);\n      if (shared.isPromise(passed)) {\n        passed.then(calculateSuggestions)[\"catch\"](function () {});\n      } else if (passed !== false) {\n        calculateSuggestions();\n      } else {\n        hideSuggestionPanel();\n      }\n    }, props.debounce);\n    var handleInput = function handleInput(val, e) {\n      !popperVisible.value && togglePopperVisible(true);\n      if (e == null ? void 0 : e.isComposing) return;\n      val ? handleFilter() : hideSuggestionPanel();\n    };\n    var getInputInnerHeight = function getInputInnerHeight(inputInner) {\n      return Number.parseFloat(core.useCssVar(nsInput.cssVarName(\"input-height\"), inputInner).value) - 2;\n    };\n    vue.watch(filtering, updatePopperPosition);\n    vue.watch([checkedNodes, isDisabled, function () {\n      return props.collapseTags;\n    }], calculatePresentTags);\n    vue.watch(presentTags, function () {\n      vue.nextTick(function () {\n        return updateStyle();\n      });\n    });\n    vue.watch(realSize, /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var inputInner;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return vue.nextTick();\n          case 2:\n            inputInner = input.value.input;\n            inputInitialHeight = getInputInnerHeight(inputInner) || inputInitialHeight;\n            updateStyle();\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    })));\n    vue.watch(presentText, syncPresentTextValue, {\n      immediate: true\n    });\n    vue.onMounted(function () {\n      var inputInner = input.value.input;\n      var inputInnerHeight = getInputInnerHeight(inputInner);\n      inputInitialHeight = inputInner.offsetHeight || inputInnerHeight;\n      core.useResizeObserver(inputInner, updateStyle);\n    });\n    expose({\n      getCheckedNodes: getCheckedNodes,\n      cascaderPanelRef: cascaderPanelRef,\n      togglePopperVisible: togglePopperVisible,\n      contentRef: contentRef,\n      presentText: presentText\n    });\n    return function (_ctx, _cache) {\n      return vue.openBlock(), vue.createBlock(vue.unref(index$4.ElTooltip), {\n        ref_key: \"tooltipRef\",\n        ref: tooltipRef,\n        visible: popperVisible.value,\n        teleported: _ctx.teleported,\n        \"popper-class\": [vue.unref(nsCascader).e(\"dropdown\"), _ctx.popperClass],\n        \"popper-options\": popperOptions,\n        \"fallback-placements\": _ctx.fallbackPlacements,\n        \"stop-popper-mouse-event\": false,\n        \"gpu-acceleration\": false,\n        placement: _ctx.placement,\n        transition: \"\".concat(vue.unref(nsCascader).namespace.value, \"-zoom-in-top\"),\n        effect: \"light\",\n        pure: \"\",\n        persistent: _ctx.persistent,\n        onHide: hideSuggestionPanel\n      }, {\n        \"default\": vue.withCtx(function () {\n          return [vue.withDirectives((vue.openBlock(), vue.createElementBlock(\"div\", {\n            \"class\": vue.normalizeClass(vue.unref(cascaderKls)),\n            style: vue.normalizeStyle(vue.unref(cascaderStyle)),\n            onClick: function onClick() {\n              return togglePopperVisible(vue.unref(readonly) ? void 0 : true);\n            },\n            onKeydown: handleKeyDown,\n            onMouseenter: function onMouseenter($event) {\n              return inputHover.value = true;\n            },\n            onMouseleave: function onMouseleave($event) {\n              return inputHover.value = false;\n            }\n          }, [vue.createVNode(vue.unref(index$5.ElInput), {\n            ref_key: \"input\",\n            ref: input,\n            modelValue: inputValue.value,\n            \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n              return inputValue.value = $event;\n            },\n            placeholder: vue.unref(currentPlaceholder),\n            readonly: vue.unref(readonly),\n            disabled: vue.unref(isDisabled),\n            \"validate-event\": false,\n            size: vue.unref(realSize),\n            \"class\": vue.normalizeClass(vue.unref(inputClass)),\n            tabindex: vue.unref(multiple) && _ctx.filterable && !vue.unref(isDisabled) ? -1 : void 0,\n            onCompositionstart: vue.unref(handleComposition),\n            onCompositionupdate: vue.unref(handleComposition),\n            onCompositionend: vue.unref(handleComposition),\n            onFocus: handleFocus,\n            onBlur: handleBlur,\n            onInput: handleInput\n          }, vue.createSlots({\n            suffix: vue.withCtx(function () {\n              return [vue.unref(clearBtnVisible) ? (vue.openBlock(), vue.createBlock(vue.unref(index$6.ElIcon), {\n                key: \"clear\",\n                \"class\": vue.normalizeClass([vue.unref(nsInput).e(\"icon\"), \"icon-circle-close\"]),\n                onClick: vue.withModifiers(handleClear, [\"stop\"])\n              }, {\n                \"default\": vue.withCtx(function () {\n                  return [vue.createVNode(vue.unref(iconsVue.CircleClose))];\n                }),\n                _: 1\n              }, 8, [\"class\", \"onClick\"])) : (vue.openBlock(), vue.createBlock(vue.unref(index$6.ElIcon), {\n                key: \"arrow-down\",\n                \"class\": vue.normalizeClass(vue.unref(cascaderIconKls)),\n                onClick: vue.withModifiers(function ($event) {\n                  return togglePopperVisible();\n                }, [\"stop\"])\n              }, {\n                \"default\": vue.withCtx(function () {\n                  return [vue.createVNode(vue.unref(iconsVue.ArrowDown))];\n                }),\n                _: 1\n              }, 8, [\"class\", \"onClick\"]))];\n            }),\n            _: 2\n          }, [_ctx.$slots.prefix ? {\n            name: \"prefix\",\n            fn: vue.withCtx(function () {\n              return [vue.renderSlot(_ctx.$slots, \"prefix\")];\n            })\n          } : void 0]), 1032, [\"modelValue\", \"onUpdate:modelValue\", \"placeholder\", \"readonly\", \"disabled\", \"size\", \"class\", \"tabindex\", \"onCompositionstart\", \"onCompositionupdate\", \"onCompositionend\"]), vue.unref(multiple) ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n            key: 0,\n            ref_key: \"tagWrapper\",\n            ref: tagWrapper,\n            \"class\": vue.normalizeClass([vue.unref(nsCascader).e(\"tags\"), vue.unref(nsCascader).is(\"validate\", Boolean(vue.unref(validateState)))])\n          }, [(vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(presentTags.value, function (tag) {\n            return vue.openBlock(), vue.createBlock(vue.unref(index$7.ElTag), {\n              key: tag.key,\n              type: _ctx.tagType,\n              size: vue.unref(tagSize),\n              effect: _ctx.tagEffect,\n              hit: tag.hitState,\n              closable: tag.closable,\n              \"disable-transitions\": \"\",\n              onClose: function onClose($event) {\n                return deleteTag(tag);\n              }\n            }, {\n              \"default\": vue.withCtx(function () {\n                return [tag.isCollapseTag === false ? (vue.openBlock(), vue.createElementBlock(\"span\", {\n                  key: 0\n                }, vue.toDisplayString(tag.text), 1)) : (vue.openBlock(), vue.createBlock(vue.unref(index$4.ElTooltip), {\n                  key: 1,\n                  disabled: popperVisible.value || !_ctx.collapseTagsTooltip,\n                  \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n                  placement: \"bottom\",\n                  effect: \"light\"\n                }, {\n                  \"default\": vue.withCtx(function () {\n                    return [vue.createElementVNode(\"span\", null, vue.toDisplayString(tag.text), 1)];\n                  }),\n                  content: vue.withCtx(function () {\n                    return [vue.createElementVNode(\"div\", {\n                      \"class\": vue.normalizeClass(vue.unref(nsCascader).e(\"collapse-tags\"))\n                    }, [(vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(allPresentTags.value.slice(_ctx.maxCollapseTags), function (tag2, idx) {\n                      return vue.openBlock(), vue.createElementBlock(\"div\", {\n                        key: idx,\n                        \"class\": vue.normalizeClass(vue.unref(nsCascader).e(\"collapse-tag\"))\n                      }, [(vue.openBlock(), vue.createBlock(vue.unref(index$7.ElTag), {\n                        key: tag2.key,\n                        \"class\": \"in-tooltip\",\n                        type: _ctx.tagType,\n                        size: vue.unref(tagSize),\n                        effect: _ctx.tagEffect,\n                        hit: tag2.hitState,\n                        closable: tag2.closable,\n                        \"disable-transitions\": \"\",\n                        onClose: function onClose($event) {\n                          return deleteTag(tag2);\n                        }\n                      }, {\n                        \"default\": vue.withCtx(function () {\n                          return [vue.createElementVNode(\"span\", null, vue.toDisplayString(tag2.text), 1)];\n                        }),\n                        _: 2\n                      }, 1032, [\"type\", \"size\", \"effect\", \"hit\", \"closable\", \"onClose\"]))], 2);\n                    }), 128))], 2)];\n                  }),\n                  _: 2\n                }, 1032, [\"disabled\"]))];\n              }),\n              _: 2\n            }, 1032, [\"type\", \"size\", \"effect\", \"hit\", \"closable\", \"onClose\"]);\n          }), 128)), _ctx.filterable && !vue.unref(isDisabled) ? vue.withDirectives((vue.openBlock(), vue.createElementBlock(\"input\", {\n            key: 0,\n            \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n              return searchInputValue.value = $event;\n            },\n            type: \"text\",\n            \"class\": vue.normalizeClass(vue.unref(nsCascader).e(\"search-input\")),\n            placeholder: vue.unref(presentText) ? \"\" : vue.unref(inputPlaceholder),\n            onInput: function onInput(e) {\n              return handleInput(searchInputValue.value, e);\n            },\n            onClick: vue.withModifiers(function ($event) {\n              return togglePopperVisible(true);\n            }, [\"stop\"]),\n            onKeydown: vue.withKeys(handleDelete, [\"delete\"]),\n            onCompositionstart: vue.unref(handleComposition),\n            onCompositionupdate: vue.unref(handleComposition),\n            onCompositionend: vue.unref(handleComposition),\n            onFocus: handleFocus,\n            onBlur: handleBlur\n          }, null, 42, [\"onUpdate:modelValue\", \"placeholder\", \"onInput\", \"onClick\", \"onKeydown\", \"onCompositionstart\", \"onCompositionupdate\", \"onCompositionend\"])), [[vue.vModelText, searchInputValue.value]]) : vue.createCommentVNode(\"v-if\", true)], 2)) : vue.createCommentVNode(\"v-if\", true)], 46, [\"onClick\", \"onMouseenter\", \"onMouseleave\"])), [[vue.unref(index$8[\"default\"]), function () {\n            return togglePopperVisible(false);\n          }, vue.unref(contentRef)]])];\n        }),\n        content: vue.withCtx(function () {\n          return [vue.withDirectives(vue.createVNode(vue.unref(index$9.ElCascaderPanel), {\n            ref_key: \"cascaderPanelRef\",\n            ref: cascaderPanelRef,\n            modelValue: vue.unref(checkedValue),\n            \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n              return vue.isRef(checkedValue) ? checkedValue.value = $event : null;\n            },\n            options: _ctx.options,\n            props: props.props,\n            border: false,\n            \"render-label\": _ctx.$slots[\"default\"],\n            onExpandChange: handleExpandChange,\n            onClose: function onClose($event) {\n              return _ctx.$nextTick(function () {\n                return togglePopperVisible(false);\n              });\n            }\n          }, {\n            empty: vue.withCtx(function () {\n              return [vue.renderSlot(_ctx.$slots, \"empty\")];\n            }),\n            _: 3\n          }, 8, [\"modelValue\", \"onUpdate:modelValue\", \"options\", \"props\", \"render-label\", \"onClose\"]), [[vue.vShow, !filtering.value]]), _ctx.filterable ? vue.withDirectives((vue.openBlock(), vue.createBlock(vue.unref(index$a.ElScrollbar), {\n            key: 0,\n            ref_key: \"suggestionPanel\",\n            ref: suggestionPanel,\n            tag: \"ul\",\n            \"class\": vue.normalizeClass(vue.unref(nsCascader).e(\"suggestion-panel\")),\n            \"view-class\": vue.unref(nsCascader).e(\"suggestion-list\"),\n            onKeydown: handleSuggestionKeyDown\n          }, {\n            \"default\": vue.withCtx(function () {\n              return [suggestions.value.length ? (vue.openBlock(true), vue.createElementBlock(vue.Fragment, {\n                key: 0\n              }, vue.renderList(suggestions.value, function (item) {\n                return vue.openBlock(), vue.createElementBlock(\"li\", {\n                  key: item.uid,\n                  \"class\": vue.normalizeClass([vue.unref(nsCascader).e(\"suggestion-item\"), vue.unref(nsCascader).is(\"checked\", item.checked)]),\n                  tabindex: -1,\n                  onClick: function onClick($event) {\n                    return handleSuggestionClick(item);\n                  }\n                }, [vue.renderSlot(_ctx.$slots, \"suggestion-item\", {\n                  item: item\n                }, function () {\n                  return [vue.createElementVNode(\"span\", null, vue.toDisplayString(item.text), 1), item.checked ? (vue.openBlock(), vue.createBlock(vue.unref(index$6.ElIcon), {\n                    key: 0\n                  }, {\n                    \"default\": vue.withCtx(function () {\n                      return [vue.createVNode(vue.unref(iconsVue.Check))];\n                    }),\n                    _: 1\n                  })) : vue.createCommentVNode(\"v-if\", true)];\n                })], 10, [\"onClick\"]);\n              }), 128)) : vue.renderSlot(_ctx.$slots, \"empty\", {\n                key: 1\n              }, function () {\n                return [vue.createElementVNode(\"li\", {\n                  \"class\": vue.normalizeClass(vue.unref(nsCascader).e(\"empty-text\"))\n                }, vue.toDisplayString(vue.unref(t)(\"el.cascader.noMatch\")), 3)];\n              })];\n            }),\n            _: 3\n          }, 8, [\"class\", \"view-class\"])), [[vue.vShow, filtering.value]]) : vue.createCommentVNode(\"v-if\", true)];\n        }),\n        _: 3\n      }, 8, [\"visible\", \"teleported\", \"popper-class\", \"fallback-placements\", \"placement\", \"transition\", \"persistent\"]);\n    };\n  }\n}));\nvar Cascader = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"cascader.vue\"]]);\nexports[\"default\"] = Cascader;","map":{"version":3,"names":["name","COMPONENT_NAME","popperOptions","modifiers","enabled","phase","fn","_ref2","state","modifiersData","placement","includes","arrow","x","requires","attrs","vue","useAttrs","inputInitialHeight","pressDeleteCount","nsCascader","index","useNamespace","nsInput","_index$1$useLocale","index$1","useLocale","t","_useFormItem$useFormI","useFormItem","form","formItem","_index$2$useEmptyValu","index$2","useEmptyValues","props","valueOnClear","_index$3$useCompositi","index$3","useComposition","afterComposition","event","_a","text","target","value","handleInput","isComposing","handleComposition","tooltipRef","ref","input","tagWrapper","cascaderPanelRef","suggestionPanel","popperVisible","inputHover","filtering","filterFocus","inputValue","searchInputValue","presentTags","allPresentTags","suggestions","cascaderStyle","computed","style","isDisabled","disabled","inputPlaceholder","placeholder","currentPlaceholder","length","realSize","useFormCommonProps","useFormSize","tagSize","multiple","readonly","filterable","searchKeyword","checkedNodes","clearBtnVisible","clearable","presentText","showAllLevels","separator","nodes","calcText","validateState","checkedValue","get","lodashUnified","cloneDeep","modelValue","set","val","emit","UPDATE_MODEL_EVENT","CHANGE_EVENT","validateEvent","validate","err","error","debugWarn","cascaderKls","b","m","is","cascaderIconKls","e","inputClass","contentRef","_b","popperRef","togglePopperVisible","visible","_c","setAttribute","concat","updatePopperPosition","nextTick","scrollToExpandingNode","syncPresentTextValue","updatePopper","hideSuggestionPanel","genTag","node","key","uid","hitState","closable","isCollapseTag","deleteTag","tag","doCheck","calculateCheckedValue","valueByOption","calculatePresentTags","tags","allTags","forEach","push","slice","maxCollapseTags","rest","restCount","collapseTags","calculateSuggestions","filterMethod","res","getFlattedNodes","checkStrictly","filter","focusFirstNode","firstNode","$el","querySelector","focus","click","updateStyle","inputInner","tagWrapperEl","suggestionPanelEl","core","isClient","suggestionList","minWidth","offsetWidth","offsetHeight","height","Math","max","getCheckedNodes","leafOnly","handleExpandChange","handleKeyDown","code","aria","EVENT_CODE","enter","numpadEnter","down","preventDefault","esc","stopPropagation","tab","handleClear","clearCheckedNodes","handleSuggestionClick","checked","handleCheckChange","handleSuggestionKeyDown","up","distance","aria$1","focusNode","getSibling","handleDelete","lastTag","handleFocus","el","className","handleBlur","handleFilter","debounce","passed","beforeFilter","shared","isPromise","then","getInputInnerHeight","Number","parseFloat","useCssVar","cssVarName","watch","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","stop","immediate","onMounted","inputInnerHeight","useResizeObserver","expose","_ctx","_cache","openBlock","createBlock","unref","index$4","ElTooltip","ref_key","teleported","popperClass","fallbackPlacements","transition","namespace","effect","pure","persistent","onHide","withCtx","withDirectives","createElementBlock"],"sources":["../../../../../../packages/components/cascader/src/cascader.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"tooltipRef\"\n    :visible=\"popperVisible\"\n    :teleported=\"teleported\"\n    :popper-class=\"[nsCascader.e('dropdown'), popperClass]\"\n    :popper-options=\"popperOptions\"\n    :fallback-placements=\"fallbackPlacements\"\n    :stop-popper-mouse-event=\"false\"\n    :gpu-acceleration=\"false\"\n    :placement=\"placement\"\n    :transition=\"`${nsCascader.namespace.value}-zoom-in-top`\"\n    effect=\"light\"\n    pure\n    :persistent=\"persistent\"\n    @hide=\"hideSuggestionPanel\"\n  >\n    <template #default>\n      <div\n        v-clickoutside:[contentRef]=\"() => togglePopperVisible(false)\"\n        :class=\"cascaderKls\"\n        :style=\"cascaderStyle\"\n        @click=\"() => togglePopperVisible(readonly ? undefined : true)\"\n        @keydown=\"handleKeyDown\"\n        @mouseenter=\"inputHover = true\"\n        @mouseleave=\"inputHover = false\"\n      >\n        <el-input\n          ref=\"input\"\n          v-model=\"inputValue\"\n          :placeholder=\"currentPlaceholder\"\n          :readonly=\"readonly\"\n          :disabled=\"isDisabled\"\n          :validate-event=\"false\"\n          :size=\"realSize\"\n          :class=\"inputClass\"\n          :tabindex=\"multiple && filterable && !isDisabled ? -1 : undefined\"\n          @compositionstart=\"handleComposition\"\n          @compositionupdate=\"handleComposition\"\n          @compositionend=\"handleComposition\"\n          @focus=\"handleFocus\"\n          @blur=\"handleBlur\"\n          @input=\"handleInput\"\n        >\n          <template v-if=\"$slots.prefix\" #prefix>\n            <slot name=\"prefix\" />\n          </template>\n          <template #suffix>\n            <el-icon\n              v-if=\"clearBtnVisible\"\n              key=\"clear\"\n              :class=\"[nsInput.e('icon'), 'icon-circle-close']\"\n              @click.stop=\"handleClear\"\n            >\n              <circle-close />\n            </el-icon>\n            <el-icon\n              v-else\n              key=\"arrow-down\"\n              :class=\"cascaderIconKls\"\n              @click.stop=\"togglePopperVisible()\"\n            >\n              <arrow-down />\n            </el-icon>\n          </template>\n        </el-input>\n\n        <div\n          v-if=\"multiple\"\n          ref=\"tagWrapper\"\n          :class=\"[\n            nsCascader.e('tags'),\n            nsCascader.is('validate', Boolean(validateState)),\n          ]\"\n        >\n          <el-tag\n            v-for=\"tag in presentTags\"\n            :key=\"tag.key\"\n            :type=\"tagType\"\n            :size=\"tagSize\"\n            :effect=\"tagEffect\"\n            :hit=\"tag.hitState\"\n            :closable=\"tag.closable\"\n            disable-transitions\n            @close=\"deleteTag(tag)\"\n          >\n            <template v-if=\"tag.isCollapseTag === false\">\n              <span>{{ tag.text }}</span>\n            </template>\n            <template v-else>\n              <el-tooltip\n                :disabled=\"popperVisible || !collapseTagsTooltip\"\n                :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                placement=\"bottom\"\n                effect=\"light\"\n              >\n                <template #default>\n                  <span>{{ tag.text }}</span>\n                </template>\n                <template #content>\n                  <div :class=\"nsCascader.e('collapse-tags')\">\n                    <div\n                      v-for=\"(tag2, idx) in allPresentTags.slice(\n                        maxCollapseTags\n                      )\"\n                      :key=\"idx\"\n                      :class=\"nsCascader.e('collapse-tag')\"\n                    >\n                      <el-tag\n                        :key=\"tag2.key\"\n                        class=\"in-tooltip\"\n                        :type=\"tagType\"\n                        :size=\"tagSize\"\n                        :effect=\"tagEffect\"\n                        :hit=\"tag2.hitState\"\n                        :closable=\"tag2.closable\"\n                        disable-transitions\n                        @close=\"deleteTag(tag2)\"\n                      >\n                        <span>{{ tag2.text }}</span>\n                      </el-tag>\n                    </div>\n                  </div>\n                </template>\n              </el-tooltip>\n            </template>\n          </el-tag>\n          <input\n            v-if=\"filterable && !isDisabled\"\n            v-model=\"searchInputValue\"\n            type=\"text\"\n            :class=\"nsCascader.e('search-input')\"\n            :placeholder=\"presentText ? '' : inputPlaceholder\"\n            @input=\"(e) => handleInput(searchInputValue, e as KeyboardEvent)\"\n            @click.stop=\"togglePopperVisible(true)\"\n            @keydown.delete=\"handleDelete\"\n            @compositionstart=\"handleComposition\"\n            @compositionupdate=\"handleComposition\"\n            @compositionend=\"handleComposition\"\n            @focus=\"handleFocus\"\n            @blur=\"handleBlur\"\n          />\n        </div>\n      </div>\n    </template>\n\n    <template #content>\n      <el-cascader-panel\n        v-show=\"!filtering\"\n        ref=\"cascaderPanelRef\"\n        v-model=\"checkedValue\"\n        :options=\"options\"\n        :props=\"props.props\"\n        :border=\"false\"\n        :render-label=\"$slots.default\"\n        @expand-change=\"handleExpandChange\"\n        @close=\"$nextTick(() => togglePopperVisible(false))\"\n      >\n        <template #empty>\n          <slot name=\"empty\" />\n        </template>\n      </el-cascader-panel>\n      <el-scrollbar\n        v-if=\"filterable\"\n        v-show=\"filtering\"\n        ref=\"suggestionPanel\"\n        tag=\"ul\"\n        :class=\"nsCascader.e('suggestion-panel')\"\n        :view-class=\"nsCascader.e('suggestion-list')\"\n        @keydown=\"handleSuggestionKeyDown\"\n      >\n        <template v-if=\"suggestions.length\">\n          <li\n            v-for=\"item in suggestions\"\n            :key=\"item.uid\"\n            :class=\"[\n              nsCascader.e('suggestion-item'),\n              nsCascader.is('checked', item.checked),\n            ]\"\n            :tabindex=\"-1\"\n            @click=\"handleSuggestionClick(item)\"\n          >\n            <slot name=\"suggestion-item\" :item=\"item\">\n              <span>{{ item.text }}</span>\n              <el-icon v-if=\"item.checked\">\n                <check />\n              </el-icon>\n            </slot>\n          </li>\n        </template>\n        <slot v-else name=\"empty\">\n          <li :class=\"nsCascader.e('empty-text')\">\n            {{ t('el.cascader.noMatch') }}\n          </li>\n        </slot>\n      </el-scrollbar>\n    </template>\n  </el-tooltip>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, nextTick, onMounted, ref, useAttrs, watch } from 'vue'\nimport { cloneDeep, debounce } from 'lodash-unified'\nimport { useCssVar, useResizeObserver } from '@vueuse/core'\nimport {\n  debugWarn,\n  focusNode,\n  getSibling,\n  isClient,\n  isPromise,\n} from '@element-plus/utils'\nimport ElCascaderPanel from '@element-plus/components/cascader-panel'\nimport ElInput from '@element-plus/components/input'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElTag from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { useFormItem, useFormSize } from '@element-plus/components/form'\nimport { ClickOutside as vClickoutside } from '@element-plus/directives'\nimport {\n  useComposition,\n  useEmptyValues,\n  useLocale,\n  useNamespace,\n} from '@element-plus/hooks'\nimport {\n  CHANGE_EVENT,\n  EVENT_CODE,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { ArrowDown, Check, CircleClose } from '@element-plus/icons-vue'\nimport { cascaderEmits, cascaderProps } from './cascader'\n\nimport type { Options } from '@element-plus/components/popper'\nimport type { ComputedRef, Ref, StyleValue } from 'vue'\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\nimport type { InputInstance } from '@element-plus/components/input'\nimport type { ScrollbarInstance } from '@element-plus/components/scrollbar'\nimport type {\n  CascaderNode,\n  CascaderPanelInstance,\n  CascaderValue,\n  Tag,\n} from '@element-plus/components/cascader-panel'\n\nconst popperOptions: Partial<Options> = {\n  modifiers: [\n    {\n      name: 'arrowPosition',\n      enabled: true,\n      phase: 'main',\n      fn: ({ state }) => {\n        const { modifiersData, placement } = state as any\n        if (['right', 'left', 'bottom', 'top'].includes(placement)) return\n        modifiersData.arrow.x = 35\n      },\n      requires: ['arrow'],\n    },\n  ],\n}\nconst COMPONENT_NAME = 'ElCascader'\n\ndefineOptions({\n  name: COMPONENT_NAME,\n})\n\nconst props = defineProps(cascaderProps)\nconst emit = defineEmits(cascaderEmits)\nconst attrs = useAttrs()\n\nlet inputInitialHeight = 0\nlet pressDeleteCount = 0\n\nconst nsCascader = useNamespace('cascader')\nconst nsInput = useNamespace('input')\n\nconst { t } = useLocale()\nconst { form, formItem } = useFormItem()\nconst { valueOnClear } = useEmptyValues(props)\nconst { isComposing, handleComposition } = useComposition({\n  afterComposition(event) {\n    const text = (event.target as HTMLInputElement)?.value\n    handleInput(text)\n  },\n})\n\nconst tooltipRef: Ref<TooltipInstance | null> = ref(null)\nconst input: Ref<InputInstance | null> = ref(null)\nconst tagWrapper = ref(null)\nconst cascaderPanelRef: Ref<CascaderPanelInstance | null> = ref(null)\nconst suggestionPanel: Ref<ScrollbarInstance | null> = ref(null)\nconst popperVisible = ref(false)\nconst inputHover = ref(false)\nconst filtering = ref(false)\nconst filterFocus = ref(false)\nconst inputValue = ref('')\nconst searchInputValue = ref('')\nconst presentTags: Ref<Tag[]> = ref([])\nconst allPresentTags: Ref<Tag[]> = ref([])\nconst suggestions: Ref<CascaderNode[]> = ref([])\n\nconst cascaderStyle = computed<StyleValue>(() => {\n  return attrs.style as StyleValue\n})\n\nconst isDisabled = computed(() => props.disabled || form?.disabled)\nconst inputPlaceholder = computed(\n  () => props.placeholder || t('el.cascader.placeholder')\n)\nconst currentPlaceholder = computed(() =>\n  searchInputValue.value || presentTags.value.length > 0 || isComposing.value\n    ? ''\n    : inputPlaceholder.value\n)\nconst realSize = useFormSize()\nconst tagSize = computed(() =>\n  realSize.value === 'small' ? 'small' : 'default'\n)\nconst multiple = computed(() => !!props.props.multiple)\nconst readonly = computed(() => !props.filterable || multiple.value)\nconst searchKeyword = computed(() =>\n  multiple.value ? searchInputValue.value : inputValue.value\n)\nconst checkedNodes: ComputedRef<CascaderNode[]> = computed(\n  () => cascaderPanelRef.value?.checkedNodes || []\n)\nconst clearBtnVisible = computed(() => {\n  if (\n    !props.clearable ||\n    isDisabled.value ||\n    filtering.value ||\n    !inputHover.value\n  )\n    return false\n\n  return !!checkedNodes.value.length\n})\nconst presentText = computed(() => {\n  const { showAllLevels, separator } = props\n  const nodes = checkedNodes.value\n  return nodes.length\n    ? multiple.value\n      ? ''\n      : nodes[0].calcText(showAllLevels, separator)\n    : ''\n})\n\nconst validateState = computed(() => formItem?.validateState || '')\n\nconst checkedValue = computed<CascaderValue>({\n  get() {\n    return cloneDeep(props.modelValue) as CascaderValue\n  },\n  set(val) {\n    // https://github.com/element-plus/element-plus/issues/17647\n    const value = val ?? valueOnClear.value\n    emit(UPDATE_MODEL_EVENT, value)\n    emit(CHANGE_EVENT, value)\n    if (props.validateEvent) {\n      formItem?.validate('change').catch((err) => debugWarn(err))\n    }\n  },\n})\n\nconst cascaderKls = computed(() => {\n  return [\n    nsCascader.b(),\n    nsCascader.m(realSize.value),\n    nsCascader.is('disabled', isDisabled.value),\n    attrs.class,\n  ]\n})\n\nconst cascaderIconKls = computed(() => {\n  return [\n    nsInput.e('icon'),\n    'icon-arrow-down',\n    nsCascader.is('reverse', popperVisible.value),\n  ]\n})\n\nconst inputClass = computed(() => {\n  return nsCascader.is('focus', popperVisible.value || filterFocus.value)\n})\n\nconst contentRef = computed(() => {\n  return tooltipRef.value?.popperRef?.contentRef\n})\n\nconst togglePopperVisible = (visible?: boolean) => {\n  if (isDisabled.value) return\n\n  visible = visible ?? !popperVisible.value\n\n  if (visible !== popperVisible.value) {\n    popperVisible.value = visible\n    input.value?.input?.setAttribute('aria-expanded', `${visible}`)\n\n    if (visible) {\n      updatePopperPosition()\n      nextTick(cascaderPanelRef.value?.scrollToExpandingNode)\n    } else if (props.filterable) {\n      syncPresentTextValue()\n    }\n\n    emit('visibleChange', visible)\n  }\n}\n\nconst updatePopperPosition = () => {\n  nextTick(() => {\n    tooltipRef.value?.updatePopper()\n  })\n}\nconst hideSuggestionPanel = () => {\n  filtering.value = false\n}\n\nconst genTag = (node: CascaderNode): Tag => {\n  const { showAllLevels, separator } = props\n  return {\n    node,\n    key: node.uid,\n    text: node.calcText(showAllLevels, separator),\n    hitState: false,\n    closable: !isDisabled.value && !node.isDisabled,\n    isCollapseTag: false,\n  }\n}\n\nconst deleteTag = (tag: Tag) => {\n  const node = tag.node as CascaderNode\n  node.doCheck(false)\n  cascaderPanelRef.value?.calculateCheckedValue()\n  emit('removeTag', node.valueByOption)\n}\n\nconst calculatePresentTags = () => {\n  if (!multiple.value) return\n\n  const nodes = checkedNodes.value\n  const tags: Tag[] = []\n\n  const allTags: Tag[] = []\n  nodes.forEach((node) => allTags.push(genTag(node)))\n  allPresentTags.value = allTags\n\n  if (nodes.length) {\n    nodes\n      .slice(0, props.maxCollapseTags)\n      .forEach((node) => tags.push(genTag(node)))\n    const rest = nodes.slice(props.maxCollapseTags)\n    const restCount = rest.length\n\n    if (restCount) {\n      if (props.collapseTags) {\n        tags.push({\n          key: -1,\n          text: `+ ${restCount}`,\n          closable: false,\n          isCollapseTag: true,\n        })\n      } else {\n        rest.forEach((node) => tags.push(genTag(node)))\n      }\n    }\n  }\n\n  presentTags.value = tags\n}\n\nconst calculateSuggestions = () => {\n  const { filterMethod, showAllLevels, separator } = props\n  const res = cascaderPanelRef.value\n    ?.getFlattedNodes(!props.props.checkStrictly)\n    ?.filter((node) => {\n      if (node.isDisabled) return false\n      node.calcText(showAllLevels, separator)\n      return filterMethod(node, searchKeyword.value)\n    })\n\n  if (multiple.value) {\n    presentTags.value.forEach((tag) => {\n      tag.hitState = false\n    })\n    allPresentTags.value.forEach((tag) => {\n      tag.hitState = false\n    })\n  }\n\n  filtering.value = true\n  suggestions.value = res!\n  updatePopperPosition()\n}\n\nconst focusFirstNode = () => {\n  let firstNode!: HTMLElement\n\n  if (filtering.value && suggestionPanel.value) {\n    firstNode = suggestionPanel.value.$el.querySelector(\n      `.${nsCascader.e('suggestion-item')}`\n    )\n  } else {\n    firstNode = cascaderPanelRef.value?.$el.querySelector(\n      `.${nsCascader.b('node')}[tabindex=\"-1\"]`\n    )\n  }\n\n  if (firstNode) {\n    firstNode.focus()\n    !filtering.value && firstNode.click()\n  }\n}\n\nconst updateStyle = () => {\n  const inputInner = input.value?.input\n  const tagWrapperEl = tagWrapper.value\n  const suggestionPanelEl = suggestionPanel.value?.$el\n\n  if (!isClient || !inputInner) return\n\n  if (suggestionPanelEl) {\n    const suggestionList = suggestionPanelEl.querySelector(\n      `.${nsCascader.e('suggestion-list')}`\n    )\n    suggestionList.style.minWidth = `${inputInner.offsetWidth}px`\n  }\n\n  if (tagWrapperEl) {\n    const { offsetHeight } = tagWrapperEl\n    // 2 is el-input__wrapper padding\n    const height =\n      presentTags.value.length > 0\n        ? `${Math.max(offsetHeight, inputInitialHeight) - 2}px`\n        : `${inputInitialHeight}px`\n    inputInner.style.height = height\n    updatePopperPosition()\n  }\n}\n\nconst getCheckedNodes = (leafOnly: boolean) => {\n  return cascaderPanelRef.value?.getCheckedNodes(leafOnly)\n}\n\nconst handleExpandChange = (value: CascaderValue) => {\n  updatePopperPosition()\n  emit('expandChange', value)\n}\n\nconst handleKeyDown = (e: KeyboardEvent) => {\n  if (isComposing.value) return\n\n  switch (e.code) {\n    case EVENT_CODE.enter:\n    case EVENT_CODE.numpadEnter:\n      togglePopperVisible()\n      break\n    case EVENT_CODE.down:\n      togglePopperVisible(true)\n      nextTick(focusFirstNode)\n      e.preventDefault()\n      break\n    case EVENT_CODE.esc:\n      if (popperVisible.value === true) {\n        e.preventDefault()\n        e.stopPropagation()\n        togglePopperVisible(false)\n      }\n      break\n    case EVENT_CODE.tab:\n      togglePopperVisible(false)\n      break\n  }\n}\n\nconst handleClear = () => {\n  cascaderPanelRef.value?.clearCheckedNodes()\n  if (!popperVisible.value && props.filterable) {\n    syncPresentTextValue()\n  }\n  togglePopperVisible(false)\n  emit('clear')\n}\n\nconst syncPresentTextValue = () => {\n  const { value } = presentText\n  inputValue.value = value\n  searchInputValue.value = value\n}\n\nconst handleSuggestionClick = (node: CascaderNode) => {\n  const { checked } = node\n\n  if (multiple.value) {\n    cascaderPanelRef.value?.handleCheckChange(node, !checked, false)\n  } else {\n    !checked && cascaderPanelRef.value?.handleCheckChange(node, true, false)\n    togglePopperVisible(false)\n  }\n}\n\nconst handleSuggestionKeyDown = (e: KeyboardEvent) => {\n  const target = e.target as HTMLElement\n  const { code } = e\n\n  switch (code) {\n    case EVENT_CODE.up:\n    case EVENT_CODE.down: {\n      e.preventDefault()\n      const distance = code === EVENT_CODE.up ? -1 : 1\n      focusNode(\n        getSibling(\n          target,\n          distance,\n          `.${nsCascader.e('suggestion-item')}[tabindex=\"-1\"]`\n        ) as HTMLElement\n      )\n      break\n    }\n    case EVENT_CODE.enter:\n    case EVENT_CODE.numpadEnter:\n      target.click()\n      break\n  }\n}\n\nconst handleDelete = () => {\n  const tags = presentTags.value\n  const lastTag = tags[tags.length - 1]\n  pressDeleteCount = searchInputValue.value ? 0 : pressDeleteCount + 1\n\n  if (!lastTag || !pressDeleteCount || (props.collapseTags && tags.length > 1))\n    return\n\n  if (lastTag.hitState) {\n    deleteTag(lastTag)\n  } else {\n    lastTag.hitState = true\n  }\n}\n\nconst handleFocus = (e: FocusEvent) => {\n  const el = e.target as HTMLInputElement\n  const name = nsCascader.e('search-input')\n  if (el.className === name) {\n    filterFocus.value = true\n  }\n  emit('focus', e)\n}\n\nconst handleBlur = (e: FocusEvent) => {\n  filterFocus.value = false\n  emit('blur', e)\n}\n\nconst handleFilter = debounce(() => {\n  const { value } = searchKeyword\n\n  if (!value) return\n\n  const passed = props.beforeFilter(value)\n\n  if (isPromise(passed)) {\n    passed.then(calculateSuggestions).catch(() => {\n      /* prevent log error */\n    })\n  } else if (passed !== false) {\n    calculateSuggestions()\n  } else {\n    hideSuggestionPanel()\n  }\n}, props.debounce)\n\nconst handleInput = (val: string, e?: KeyboardEvent) => {\n  !popperVisible.value && togglePopperVisible(true)\n\n  if (e?.isComposing) return\n\n  val ? handleFilter() : hideSuggestionPanel()\n}\n\nconst getInputInnerHeight = (inputInner: HTMLElement): number =>\n  Number.parseFloat(\n    useCssVar(nsInput.cssVarName('input-height'), inputInner).value\n  ) - 2\n\nwatch(filtering, updatePopperPosition)\n\nwatch(\n  [checkedNodes, isDisabled, () => props.collapseTags],\n  calculatePresentTags\n)\n\nwatch(presentTags, () => {\n  nextTick(() => updateStyle())\n})\n\nwatch(realSize, async () => {\n  await nextTick()\n  const inputInner = input.value!.input!\n  inputInitialHeight = getInputInnerHeight(inputInner) || inputInitialHeight\n  updateStyle()\n})\n\nwatch(presentText, syncPresentTextValue, { immediate: true })\n\nonMounted(() => {\n  const inputInner = input.value!.input!\n\n  const inputInnerHeight = getInputInnerHeight(inputInner)\n\n  inputInitialHeight = inputInner.offsetHeight || inputInnerHeight\n  useResizeObserver(inputInner, updateStyle)\n})\n\ndefineExpose({\n  /**\n   * @description get an array of currently selected node,(leafOnly) whether only return the leaf checked nodes, default is `false`\n   */\n  getCheckedNodes,\n  /**\n   * @description cascader panel ref\n   */\n  cascaderPanelRef,\n  /**\n   * @description toggle the visible of popper\n   */\n  togglePopperVisible,\n  /**\n   * @description cascader content ref\n   */\n  contentRef,\n  /**\n   * @description selected content text\n   */\n  presentText,\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}