{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar __default__ = vue.defineComponent({\n  name: \"ElAside\"\n});\nvar _sfc_main = /* @__PURE__ */vue.defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: {\n    width: {\n      type: String,\n      \"default\": null\n    }\n  },\n  setup: function setup(__props) {\n    var props = __props;\n    var ns = index.useNamespace(\"aside\");\n    var style = vue.computed(function () {\n      return props.width ? ns.cssVarBlock({\n        width: props.width\n      }) : {};\n    });\n    return function (_ctx, _cache) {\n      return vue.openBlock(), vue.createElementBlock(\"aside\", {\n        \"class\": vue.normalizeClass(vue.unref(ns).b()),\n        style: vue.normalizeStyle(vue.unref(style))\n      }, [vue.renderSlot(_ctx.$slots, \"default\")], 6);\n    };\n  }\n}));\nvar Aside = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"aside.vue\"]]);\nexports[\"default\"] = Aside;","map":{"version":3,"names":["name","vue","openBlock","createElementBlock","normalizeClass","unref","ns","b","style","normalizeStyle"],"sources":["../../../../../../packages/components/container/src/aside.vue"],"sourcesContent":["<template>\n  <aside :class=\"ns.b()\" :style=\"style\">\n    <slot />\n  </aside>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElAside',\n})\nconst props = defineProps({\n  /**\n   * @description width of the side section\n   */\n  width: {\n    type: String,\n    default: null,\n  },\n})\n\nconst ns = useNamespace('aside')\nconst style = computed(\n  () =>\n    (props.width ? ns.cssVarBlock({ width: props.width }) : {}) as CSSProperties\n)\n</script>\n"],"mappings":";;;;;;;;;;qCAYc;EACZA,IAAM;AACR;;;;;;;;;;;;;;;;;MAWM,OAAAC,GAAA,CAAAC,SAAA,IAAAD,GAAA,CAAAE,kBAAyB;QAC/B,SAAcF,GAAA,CAAAG,cAAA,CAAAH,GAAA,CAAAI,KAAA,CAAAC,EAAA,EAAAC,CAAA;QACZC,KACS,EAAAP,GAAA,CAAAQ,cAAW,CAAAR,GAAA,CAAAI,KAAA,CAAAG,KAAc;MAAyB,CAC7D,G","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}