{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar index$2 = require('../../icon/index.js');\nvar link = require('./link.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-deprecated/index.js');\nvar types = require('../../../utils/types.js');\nvar index$1 = require('../../../hooks/use-namespace/index.js');\nvar __default__ = vue.defineComponent({\n  name: \"ElLink\"\n});\nvar _sfc_main = /* @__PURE__ */vue.defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: link.linkProps,\n  emits: link.linkEmits,\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    index.useDeprecated({\n      scope: \"el-link\",\n      from: \"The underline option (boolean)\",\n      replacement: \"'always' | 'hover' | 'never'\",\n      version: \"3.0.0\",\n      ref: \"https://element-plus.org/en-US/component/link.html#underline\"\n    }, vue.computed(function () {\n      return types.isBoolean(props.underline);\n    }));\n    var ns = index$1.useNamespace(\"link\");\n    var linkKls = vue.computed(function () {\n      return [ns.b(), ns.m(props.type), ns.is(\"disabled\", props.disabled), ns.is(\"underline\", underline.value === \"always\"), ns.is(\"hover-underline\", underline.value === \"hover\" && !props.disabled)];\n    });\n    var underline = vue.computed(function () {\n      if (types.isBoolean(props.underline)) {\n        return props.underline ? \"hover\" : \"never\";\n      } else return props.underline;\n    });\n    function handleClick(event) {\n      if (!props.disabled) emit(\"click\", event);\n    }\n    return function (_ctx, _cache) {\n      return vue.openBlock(), vue.createElementBlock(\"a\", {\n        \"class\": vue.normalizeClass(vue.unref(linkKls)),\n        href: _ctx.disabled || !_ctx.href ? void 0 : _ctx.href,\n        target: _ctx.disabled || !_ctx.href ? void 0 : _ctx.target,\n        onClick: handleClick\n      }, [_ctx.icon ? (vue.openBlock(), vue.createBlock(vue.unref(index$2.ElIcon), {\n        key: 0\n      }, {\n        \"default\": vue.withCtx(function () {\n          return [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.icon)))];\n        }),\n        _: 1\n      })) : vue.createCommentVNode(\"v-if\", true), _ctx.$slots[\"default\"] ? (vue.openBlock(), vue.createElementBlock(\"span\", {\n        key: 1,\n        \"class\": vue.normalizeClass(vue.unref(ns).e(\"inner\"))\n      }, [vue.renderSlot(_ctx.$slots, \"default\")], 2)) : vue.createCommentVNode(\"v-if\", true), _ctx.$slots.icon ? vue.renderSlot(_ctx.$slots, \"icon\", {\n        key: 2\n      }) : vue.createCommentVNode(\"v-if\", true)], 10, [\"href\", \"target\"]);\n    };\n  }\n}));\nvar Link = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"link.vue\"]]);\nexports[\"default\"] = Link;","map":{"version":3,"names":["name","index","useDeprecated","scope","from","replacement","version","ref","vue","computed","types","isBoolean","props","underline","ns","index$1","useNamespace","linkKls","b","m","type","is","disabled","value","handleClick","event","emit","_ctx","_cache"],"sources":["../../../../../../packages/components/link/src/link.vue"],"sourcesContent":["<template>\n  <a\n    :class=\"linkKls\"\n    :href=\"disabled || !href ? undefined : href\"\n    :target=\"disabled || !href ? undefined : target\"\n    @click=\"handleClick\"\n  >\n    <el-icon v-if=\"icon\"><component :is=\"icon\" /></el-icon>\n    <span v-if=\"$slots.default\" :class=\"ns.e('inner')\">\n      <slot />\n    </span>\n\n    <slot v-if=\"$slots.icon\" name=\"icon\" />\n  </a>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { useDeprecated, useNamespace } from '@element-plus/hooks'\nimport { isBoolean } from '@element-plus/utils'\nimport { linkEmits, linkProps } from './link'\n\ndefineOptions({\n  name: 'ElLink',\n})\nconst props = defineProps(linkProps)\nconst emit = defineEmits(linkEmits)\n\nuseDeprecated(\n  {\n    scope: 'el-link',\n    from: 'The underline option (boolean)',\n    replacement: \"'always' | 'hover' | 'never'\",\n    version: '3.0.0',\n    ref: 'https://element-plus.org/en-US/component/link.html#underline',\n  },\n  computed(() => isBoolean(props.underline))\n)\n\nconst ns = useNamespace('link')\n\nconst linkKls = computed(() => [\n  ns.b(),\n  ns.m(props.type),\n  ns.is('disabled', props.disabled),\n  ns.is('underline', underline.value === 'always'),\n  ns.is('hover-underline', underline.value === 'hover' && !props.disabled),\n])\n\n// Boolean compatibility\nconst underline = computed(() => {\n  if (isBoolean(props.underline)) {\n    return props.underline ? 'hover' : 'never'\n  } else return props.underline\n})\n\nfunction handleClick(event: MouseEvent) {\n  if (!props.disabled) emit('click', event)\n}\n</script>\n"],"mappings":";;;;;;;;;;;;;;qCAuBc;EACZA,IAAM;AACR;;;;;;;IAIAC,KAAA,CAAAC,aAAA;MACEC,KAAA;MAAAC,IACS;MAAAC,WACD;MAAAC,OACO;MAAAC,GACJ;IAAA,GAAAC,GAAA,CAAAC,QACJ;MAAA,OAAAC,KAAA,CAAAC,SAAA,CAAAC,KAAA,CAAAC,SAAA;IAAA;IACP,IAAAC,EAAA,GAAAC,OAAA,CAAAC,YAAA;IAAA,IACSC,OAAA,GAAAT,GAAA,CAAAC,QAAgB;MAAA,QAC3BK,EAAA,CAAAI,CAAA,IAEMJ,EAAA,CAAAK,CAAA,CAAAP,KAAA,CAAAQ,IAAA,GAEAN,EAAA,CAAAO,EAAA,aAAAT,KAAmB,CAAMU,QAAA,GAC7BR,EAAA,CAAGO,EAAE,cAAAR,SAAA,CAAAU,KAAA,gBACLT,EAAA,CAAGO,EAAE,kBAAU,EAAAR,SAAA,CAAAU,KAAA,iBAAAX,KAAA,CAAAU,QAAA;IAAA,EACf;IAAgC,IAC7BT,SAAgB,GAAAL,GAAA,CAAAC,QAAA;MACnB,IAAAC,KAAA,CAAAC,SAAyB,CAAAC,KAAA,CAAAC,SAAA;QAC1B,OAAAD,KAAA,CAAAC,SAAA;MAGD,CAAM,MACA,OAAAD,KAAU,CAAMC,SAAA;IAClB,CAAO;IACT,SAAAW,WAAoBA,CAAAC,KAAA;MACrB,KAAAb,KAAA,CAAAU,QAAA,EAEDI,IAAA,CAAS,SAAAD,KAA+B;IACtC;IACF,iBAAAE,IAAA,EAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}