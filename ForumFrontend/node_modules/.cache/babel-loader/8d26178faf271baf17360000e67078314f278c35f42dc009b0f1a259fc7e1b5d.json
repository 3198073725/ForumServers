{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.number.parse-float.js\");\nrequire(\"core-js/modules/es.number.parse-int.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar core = require('@vueuse/core');\nvar constants = require('./constants.js');\nvar error = require('../../../utils/error.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar COMPONENT_NAME = \"ElLabelWrap\";\nvar FormLabelWrap = vue.defineComponent({\n  name: COMPONENT_NAME,\n  props: {\n    isAutoWidth: Boolean,\n    updateAll: Boolean\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var formContext = vue.inject(constants.formContextKey, void 0);\n    var formItemContext = vue.inject(constants.formItemContextKey);\n    if (!formItemContext) error.throwError(COMPONENT_NAME, \"usage: <el-form-item><label-wrap /></el-form-item>\");\n    var ns = index.useNamespace(\"form\");\n    var el = vue.ref();\n    var computedWidth = vue.ref(0);\n    var getLabelWidth = function getLabelWidth() {\n      var _a;\n      if ((_a = el.value) == null ? void 0 : _a.firstElementChild) {\n        var width = window.getComputedStyle(el.value.firstElementChild).width;\n        return Math.ceil(Number.parseFloat(width));\n      } else {\n        return 0;\n      }\n    };\n    var updateLabelWidth = function updateLabelWidth() {\n      var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"update\";\n      vue.nextTick(function () {\n        if (slots[\"default\"] && props.isAutoWidth) {\n          if (action === \"update\") {\n            computedWidth.value = getLabelWidth();\n          } else if (action === \"remove\") {\n            formContext == null ? void 0 : formContext.deregisterLabelWidth(computedWidth.value);\n          }\n        }\n      });\n    };\n    var updateLabelWidthFn = function updateLabelWidthFn() {\n      return updateLabelWidth(\"update\");\n    };\n    vue.onMounted(function () {\n      updateLabelWidthFn();\n    });\n    vue.onBeforeUnmount(function () {\n      updateLabelWidth(\"remove\");\n    });\n    vue.onUpdated(function () {\n      return updateLabelWidthFn();\n    });\n    vue.watch(computedWidth, function (val, oldVal) {\n      if (props.updateAll) {\n        formContext == null ? void 0 : formContext.registerLabelWidth(val, oldVal);\n      }\n    });\n    core.useResizeObserver(vue.computed(function () {\n      var _a, _b;\n      return (_b = (_a = el.value) == null ? void 0 : _a.firstElementChild) != null ? _b : null;\n    }), updateLabelWidthFn);\n    return function () {\n      var _a, _b;\n      if (!slots) return null;\n      var isAutoWidth = props.isAutoWidth;\n      if (isAutoWidth) {\n        var autoLabelWidth = formContext == null ? void 0 : formContext.autoLabelWidth;\n        var hasLabel = formItemContext == null ? void 0 : formItemContext.hasLabel;\n        var style = {};\n        if (hasLabel && autoLabelWidth && autoLabelWidth !== \"auto\") {\n          var marginWidth = Math.max(0, Number.parseInt(autoLabelWidth, 10) - computedWidth.value);\n          var labelPosition = formItemContext.labelPosition || formContext.labelPosition;\n          var marginPosition = labelPosition === \"left\" ? \"marginRight\" : \"marginLeft\";\n          if (marginWidth) {\n            style[marginPosition] = \"\".concat(marginWidth, \"px\");\n          }\n        }\n        return vue.createVNode(\"div\", {\n          \"ref\": el,\n          \"class\": [ns.be(\"item\", \"label-wrap\")],\n          \"style\": style\n        }, [(_a = slots[\"default\"]) == null ? void 0 : _a.call(slots)]);\n      } else {\n        return vue.createVNode(vue.Fragment, {\n          \"ref\": el\n        }, [(_b = slots[\"default\"]) == null ? void 0 : _b.call(slots)]);\n      }\n    };\n  }\n});\nexports[\"default\"] = FormLabelWrap;","map":{"version":3,"names":["COMPONENT_NAME","FormLabelWrap","vue","defineComponent","name","props","isAutoWidth","Boolean","updateAll","slots","_ref","formContext","inject","constants","formContextKey","formItemContext","formItemContextKey","error","throwError","ns","index","useNamespace","el","ref","computedWidth","_a","value","firstElementChild","width","window","getComputedStyle","Math","ceil","Number","parseFloat","nextTick","action","getLabelWidth","deregisterLabelWidth","updateLabelWidthFn","updateLabelWidth","onBeforeUnmount","onUpdated","val","oldVal","registerLabelWidth","core","useResizeObserver","computed","_b","autoLabelWidth","hasLabel","marginWidth","max","parseInt","labelPosition","marginPosition","style","concat","createVNode","be","call","Fragment"],"sources":["../../../../../../packages/components/form/src/form-label-wrap.tsx"],"sourcesContent":["import {\n  Fragment,\n  computed,\n  defineComponent,\n  inject,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  onUpdated,\n  ref,\n  watch,\n} from 'vue'\nimport { useResizeObserver } from '@vueuse/core'\nimport { throwError } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { formContextKey, formItemContextKey } from './constants'\n\nimport type { CSSProperties } from 'vue'\n\nconst COMPONENT_NAME = 'ElLabelWrap'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  props: {\n    isAutoWidth: Boolean,\n    updateAll: Boolean,\n  },\n\n  setup(props, { slots }) {\n    const formContext = inject(formContextKey, undefined)\n    const formItemContext = inject(formItemContextKey)\n    if (!formItemContext)\n      throwError(\n        COMPONENT_NAME,\n        'usage: <el-form-item><label-wrap /></el-form-item>'\n      )\n\n    const ns = useNamespace('form')\n\n    const el = ref<HTMLElement>()\n    const computedWidth = ref(0)\n\n    const getLabelWidth = () => {\n      if (el.value?.firstElementChild) {\n        const width = window.getComputedStyle(el.value.firstElementChild).width\n        return Math.ceil(Number.parseFloat(width))\n      } else {\n        return 0\n      }\n    }\n\n    const updateLabelWidth = (action: 'update' | 'remove' = 'update') => {\n      nextTick(() => {\n        if (slots.default && props.isAutoWidth) {\n          if (action === 'update') {\n            computedWidth.value = getLabelWidth()\n          } else if (action === 'remove') {\n            formContext?.deregisterLabelWidth(computedWidth.value)\n          }\n        }\n      })\n    }\n    const updateLabelWidthFn = () => updateLabelWidth('update')\n\n    onMounted(() => {\n      updateLabelWidthFn()\n    })\n    onBeforeUnmount(() => {\n      updateLabelWidth('remove')\n    })\n    onUpdated(() => updateLabelWidthFn())\n\n    watch(computedWidth, (val, oldVal) => {\n      if (props.updateAll) {\n        formContext?.registerLabelWidth(val, oldVal)\n      }\n    })\n\n    useResizeObserver(\n      computed(\n        () => (el.value?.firstElementChild ?? null) as HTMLElement | null\n      ),\n      updateLabelWidthFn\n    )\n\n    return () => {\n      if (!slots) return null\n\n      const { isAutoWidth } = props\n      if (isAutoWidth) {\n        const autoLabelWidth = formContext?.autoLabelWidth\n        const hasLabel = formItemContext?.hasLabel\n        const style: CSSProperties = {}\n        if (hasLabel && autoLabelWidth && autoLabelWidth !== 'auto') {\n          const marginWidth = Math.max(\n            0,\n            Number.parseInt(autoLabelWidth, 10) - computedWidth.value\n          )\n          const labelPosition =\n            formItemContext.labelPosition || formContext.labelPosition\n\n          const marginPosition =\n            labelPosition === 'left' ? 'marginRight' : 'marginLeft'\n\n          if (marginWidth) {\n            style[marginPosition] = `${marginWidth}px`\n          }\n        }\n        return (\n          <div ref={el} class={[ns.be('item', 'label-wrap')]} style={style}>\n            {slots.default?.()}\n          </div>\n        )\n      } else {\n        return <Fragment ref={el}>{slots.default?.()}</Fragment>\n      }\n    }\n  },\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}