{"ast":null,"code":"import _objectSpread from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport { ref, watch, onMounted } from 'vue';\nimport { QuillEditor } from '@vueup/vue-quill';\nimport '@vueup/vue-quill/dist/vue-quill.snow.css';\nimport { defaultQuillOptions } from '@/utils/quill-config';\nexport default {\n  name: 'RichTextEditor',\n  components: {\n    QuillEditor: QuillEditor\n  },\n  props: {\n    modelValue: {\n      type: String,\n      \"default\": ''\n    },\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  emits: ['update:modelValue', 'change'],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var content = ref(props.modelValue || '');\n    var quillEditor = ref(null);\n    var handleContentUpdate = function handleContentUpdate(newContent) {\n      console.log('RichTextEditor - handleContentUpdate:', newContent);\n      if (quillEditor.value && quillEditor.value.getQuill) {\n        var quill = quillEditor.value.getQuill();\n        var text = quill.getText().trim();\n        var html = quill.root.innerHTML;\n        console.log('RichTextEditor - 内容更新:', {\n          html: html,\n          text: text,\n          isEmpty: !text\n        });\n        if (!text || text === '\\n') {\n          content.value = '';\n          emit('update:modelValue', '');\n          emit('change', '');\n        } else {\n          content.value = html;\n          emit('update:modelValue', html);\n          emit('change', html);\n        }\n      }\n    };\n    var handleBlur = function handleBlur() {\n      if (quillEditor.value && quillEditor.value.getQuill) {\n        var quill = quillEditor.value.getQuill();\n        var text = quill.getText().trim();\n        var html = quill.root.innerHTML;\n        console.log('RichTextEditor - 失去焦点:', {\n          html: html,\n          text: text,\n          isEmpty: !text\n        });\n        if (!text || text === '\\n') {\n          content.value = '';\n          emit('update:modelValue', '');\n          emit('change', '');\n        } else if (html !== content.value) {\n          content.value = html;\n          emit('update:modelValue', html);\n          emit('change', html);\n        }\n      }\n    };\n\n    // 监听 modelValue 变化\n    watch(function () {\n      return props.modelValue;\n    }, function (newValue, oldValue) {\n      console.log('RichTextEditor - modelValue变化:', {\n        newValue: newValue,\n        oldValue: oldValue,\n        contentValue: content.value\n      });\n      if (newValue !== content.value) {\n        content.value = newValue || '';\n\n        // 如果编辑器已经初始化，手动更新内容\n        if (quillEditor.value && quillEditor.value.getQuill) {\n          console.log('手动更新Quill编辑器内容');\n          var quill = quillEditor.value.getQuill();\n          if (quill) {\n            // 清空当前内容\n            quill.setText('');\n            // 设置新内容（如果是HTML格式）\n            if (newValue && newValue.trim()) {\n              quill.clipboard.dangerouslyPasteHTML(0, newValue);\n            }\n          }\n        }\n      }\n    }, {\n      immediate: true\n    });\n    onMounted(function () {\n      console.log('RichTextEditor - 组件挂载，初始值:', props.modelValue);\n\n      // 初始化时设置内容\n      if (quillEditor.value) {\n        console.log('RichTextEditor - 设置初始内容');\n        try {\n          var quill = quillEditor.value.getQuill();\n          if (quill) {\n            // 确保使用现代 API\n            Object.assign(quill.options, {\n              experimental: {\n                useModernScrollingApi: true,\n                useMutationObserver: true\n              }\n            });\n\n            // 清空当前内容\n            quill.setText('');\n            // 设置新内容（如果是HTML格式）\n            if (props.modelValue && props.modelValue.trim()) {\n              quill.clipboard.dangerouslyPasteHTML(0, props.modelValue);\n              content.value = props.modelValue;\n              console.log('RichTextEditor - 初始内容设置成功');\n            }\n          }\n        } catch (error) {\n          console.error('RichTextEditor - 设置初始内容失败:', error);\n        }\n      }\n    });\n    return {\n      content: content,\n      editorOption: _objectSpread(_objectSpread({}, defaultQuillOptions), {}, {\n        readOnly: props.disabled\n      }),\n      handleContentUpdate: handleContentUpdate,\n      handleBlur: handleBlur,\n      quillEditor: quillEditor\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","QuillEditor","defaultQuillOptions","name","components","props","modelValue","type","String","disabled","Boolean","emits","setup","_ref","emit","content","quillEditor","handleContentUpdate","newContent","console","log","value","getQuill","quill","text","getText","trim","html","root","innerHTML","isEmpty","handleBlur","newValue","oldValue","contentValue","setText","clipboard","dangerouslyPasteHTML","immediate","Object","assign","options","experimental","useModernScrollingApi","useMutationObserver","error","editorOption","_objectSpread","readOnly"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\components\\RichTextEditor.vue"],"sourcesContent":["<template>\n  <div class=\"rich-text-editor\">\n    <quill-editor\n      v-model=\"content\"\n      :options=\"editorOption\"\n      @update:content=\"handleContentUpdate\"\n      @blur=\"handleBlur\"\n      :disabled=\"disabled\"\n      ref=\"quillEditor\"\n    />\n  </div>\n</template>\n\n<script>\nimport { ref, watch, onMounted } from 'vue'\nimport { QuillEditor } from '@vueup/vue-quill'\nimport '@vueup/vue-quill/dist/vue-quill.snow.css'\nimport { defaultQuillOptions } from '@/utils/quill-config'\n\nexport default {\n  name: 'RichTextEditor',\n  components: {\n    QuillEditor\n  },\n  props: {\n    modelValue: {\n      type: String,\n      default: ''\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['update:modelValue', 'change'],\n  setup(props, { emit }) {\n    const content = ref(props.modelValue || '')\n    const quillEditor = ref(null)\n\n    const handleContentUpdate = (newContent) => {\n      console.log('RichTextEditor - handleContentUpdate:', newContent);\n      \n      if (quillEditor.value && quillEditor.value.getQuill) {\n        const quill = quillEditor.value.getQuill();\n        const text = quill.getText().trim();\n        const html = quill.root.innerHTML;\n        \n        console.log('RichTextEditor - 内容更新:', {\n          html: html,\n          text: text,\n          isEmpty: !text\n        });\n\n        if (!text || text === '\\n') {\n          content.value = '';\n          emit('update:modelValue', '');\n          emit('change', '');\n        } else {\n          content.value = html;\n          emit('update:modelValue', html);\n          emit('change', html);\n        }\n      }\n    }\n\n    const handleBlur = () => {\n      if (quillEditor.value && quillEditor.value.getQuill) {\n        const quill = quillEditor.value.getQuill();\n        const text = quill.getText().trim();\n        const html = quill.root.innerHTML;\n        \n        console.log('RichTextEditor - 失去焦点:', {\n          html: html,\n          text: text,\n          isEmpty: !text\n        });\n\n        if (!text || text === '\\n') {\n          content.value = '';\n          emit('update:modelValue', '');\n          emit('change', '');\n        } else if (html !== content.value) {\n          content.value = html;\n          emit('update:modelValue', html);\n          emit('change', html);\n        }\n      }\n    }\n\n    // 监听 modelValue 变化\n    watch(() => props.modelValue, (newValue, oldValue) => {\n      console.log('RichTextEditor - modelValue变化:', { \n        newValue, \n        oldValue, \n        contentValue: content.value \n      });\n      \n      if (newValue !== content.value) {\n        content.value = newValue || '';\n        \n        // 如果编辑器已经初始化，手动更新内容\n        if (quillEditor.value && quillEditor.value.getQuill) {\n          console.log('手动更新Quill编辑器内容');\n          const quill = quillEditor.value.getQuill();\n          if (quill) {\n            // 清空当前内容\n            quill.setText('');\n            // 设置新内容（如果是HTML格式）\n            if (newValue && newValue.trim()) {\n              quill.clipboard.dangerouslyPasteHTML(0, newValue);\n            }\n          }\n        }\n      }\n    }, { immediate: true })\n\n    onMounted(() => {\n      console.log('RichTextEditor - 组件挂载，初始值:', props.modelValue);\n      \n      // 初始化时设置内容\n      if (quillEditor.value) {\n        console.log('RichTextEditor - 设置初始内容');\n        \n        try {\n          const quill = quillEditor.value.getQuill();\n          if (quill) {\n            // 确保使用现代 API\n            Object.assign(quill.options, {\n              experimental: {\n                useModernScrollingApi: true,\n                useMutationObserver: true\n              }\n            });\n\n            // 清空当前内容\n            quill.setText('');\n            // 设置新内容（如果是HTML格式）\n            if (props.modelValue && props.modelValue.trim()) {\n              quill.clipboard.dangerouslyPasteHTML(0, props.modelValue);\n              content.value = props.modelValue;\n              console.log('RichTextEditor - 初始内容设置成功');\n            }\n          }\n        } catch (error) {\n          console.error('RichTextEditor - 设置初始内容失败:', error);\n        }\n      }\n    })\n\n    return {\n      content,\n      editorOption: {\n        ...defaultQuillOptions,\n        readOnly: props.disabled\n      },\n      handleContentUpdate,\n      handleBlur,\n      quillEditor\n    }\n  }\n}\n</script>\n\n<style scoped>\n.rich-text-editor {\n  width: 100%;\n}\n\n:deep(.ql-container) {\n  min-height: 300px;\n  font-size: 16px;\n  line-height: 1.5;\n}\n\n:deep(.ql-editor) {\n  min-height: 300px;\n  padding: 12px 15px;\n}\n\n:deep(.ql-toolbar) {\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  background-color: #f8f9fa;\n}\n\n:deep(.ql-container) {\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n}\n\n:deep(.ql-editor p) {\n  margin-bottom: 1em;\n}\n\n:deep(.ql-editor img) {\n  max-width: 100%;\n  height: auto;\n}\n\n:deep(.ql-editor blockquote) {\n  border-left: 4px solid #ccc;\n  margin: 0;\n  padding-left: 16px;\n}\n\n:deep(.ql-editor pre.ql-syntax) {\n  background-color: #f8f9fa;\n  border-radius: 4px;\n  padding: 12px;\n  margin: 8px 0;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}