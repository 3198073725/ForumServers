{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar icon = require('../../../utils/vue/icon.js');\nvar dialogContentProps = runtime.buildProps({\n  center: Boolean,\n  alignCenter: Boolean,\n  closeIcon: {\n    type: icon.iconPropType\n  },\n  draggable: Boolean,\n  overflow: Boolean,\n  fullscreen: Boolean,\n  headerClass: String,\n  bodyClass: String,\n  footerClass: String,\n  showClose: {\n    type: Boolean,\n    \"default\": true\n  },\n  title: {\n    type: String,\n    \"default\": \"\"\n  },\n  ariaLevel: {\n    type: String,\n    \"default\": \"2\"\n  }\n});\nvar dialogContentEmits = {\n  close: function close() {\n    return true;\n  }\n};\nexports.dialogContentEmits = dialogContentEmits;\nexports.dialogContentProps = dialogContentProps;","map":{"version":3,"names":["dialogContentProps","runtime","buildProps","center","Boolean","alignCenter","closeIcon","type","icon","iconPropType","draggable","overflow","fullscreen","headerClass","String","bodyClass","footerClass","showClose","title","ariaLevel","dialogContentEmits","close"],"sources":["../../../../../../packages/components/dialog/src/dialog-content.ts"],"sourcesContent":["import { buildProps, iconPropType } from '@element-plus/utils'\n\nexport const dialogContentProps = buildProps({\n  /**\n   * @description whether to align the header and footer in center\n   */\n  center: Boolean,\n  /**\n   * @description whether to align the dialog both horizontally and vertically\n   */\n  alignCenter: Boolean,\n  /**\n   * @description custom close icon, default is Close\n   */\n  closeIcon: {\n    type: iconPropType,\n  },\n  /**\n   * @description enable dragging feature for Dialog\n   */\n  draggable: Boolean,\n  /**\n   * @description draggable Dialog can overflow the viewport\n   */\n  overflow: Boolean,\n  /**\n   * @description whether the Dialog takes up full screen\n   */\n  fullscreen: Boolean,\n  /**\n   * @description custom class names for header wrapper\n   */\n  headerClass: String,\n  /**\n   * @description custom class names for body wrapper\n   */\n  bodyClass: String,\n  /**\n   * @description custom class names for footer wrapper\n   */\n  footerClass: String,\n  /**\n   * @description whether to show a close button\n   */\n  showClose: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description title of Dialog. Can also be passed with a named slot (see the following table)\n   */\n  title: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description header's aria-level attribute\n   */\n  ariaLevel: {\n    type: String,\n    default: '2',\n  },\n} as const)\n\nexport const dialogContentEmits = {\n  close: () => true,\n}\n"],"mappings":";;;;;;;;AACY,IAACA,kBAAkB,GAAGC,OAAA,CAAAC,UAAU,CAAC;EAC3CC,MAAM,EAAEC,OAAO;EACfC,WAAW,EAAED,OAAO;EACpBE,SAAS,EAAE;IACTC,IAAI,EAAEC,IAAA,CAAAC;EACV,CAAG;EACDC,SAAS,EAAEN,OAAO;EAClBO,QAAQ,EAAEP,OAAO;EACjBQ,UAAU,EAAER,OAAO;EACnBS,WAAW,EAAEC,MAAM;EACnBC,SAAS,EAAED,MAAM;EACjBE,WAAW,EAAEF,MAAM;EACnBG,SAAS,EAAE;IACTV,IAAI,EAAEH,OAAO;IACb,WAAS;EACb,CAAG;EACDc,KAAK,EAAE;IACLX,IAAI,EAAEO,MAAM;IACZ,WAAS;EACb,CAAG;EACDK,SAAS,EAAE;IACTZ,IAAI,EAAEO,MAAM;IACZ,WAAS;EACb;AACA,CAAC;AACW,IAACM,kBAAkB,GAAG;EAChCC,KAAK,EAAE,SAAPA,KAAKA,CAAA;IAAA,OAAQ,IAAI;EAAA;AACnB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}