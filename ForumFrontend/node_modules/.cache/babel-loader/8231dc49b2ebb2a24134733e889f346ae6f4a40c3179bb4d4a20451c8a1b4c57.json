{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withKeys as _withKeys, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"user-management-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"clearfix\"\n};\nvar _hoisted_3 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_4 = {\n  key: 1\n};\nvar _hoisted_5 = {\n  \"class\": \"pagination-container\"\n};\nvar _hoisted_6 = {\n  \"class\": \"avatar-preview\"\n};\nvar _hoisted_7 = {\n  \"class\": \"dialog-footer\"\n};\nvar _hoisted_8 = {\n  \"class\": \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  var _component_el_table_column = _resolveComponent(\"el-table-column\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_el_table = _resolveComponent(\"el-table\");\n  var _component_el_pagination = _resolveComponent(\"el-pagination\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_avatar = _resolveComponent(\"el-avatar\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_dialog = _resolveComponent(\"el-dialog\");\n  var _component_el_option = _resolveComponent(\"el-option\");\n  var _component_el_select = _resolveComponent(\"el-select\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    \"class\": \"user-management-card\"\n  }, {\n    header: _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_2, [_cache[10] || (_cache[10] = _createElementVNode(\"span\", null, \"用户管理\", -1 /* HOISTED */)), _createVNode(_component_el_input, {\n        modelValue: $setup.searchQuery,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return $setup.searchQuery = $event;\n        }),\n        placeholder: \"搜索用户名或邮箱\",\n        style: {\n          \"width\": \"300px\",\n          \"float\": \"right\"\n        },\n        clearable: \"\",\n        onKeyup: _withKeys($setup.handleSearch, [\"enter\"]),\n        onClear: $setup.handleSearch\n      }, {\n        append: _withCtx(function () {\n          return [_createVNode(_component_el_button, {\n            icon: \"el-icon-search\",\n            onClick: $setup.handleSearch\n          }, null, 8 /* PROPS */, [\"onClick\"])];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\", \"onKeyup\", \"onClear\"])])];\n    }),\n    \"default\": _withCtx(function () {\n      return [$setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_skeleton, {\n        rows: 10,\n        animated: \"\"\n      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_table, {\n        data: $setup.users,\n        style: {\n          \"width\": \"100%\"\n        },\n        border: \"\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_table_column, {\n            prop: \"id\",\n            label: \"ID\",\n            width: \"80\",\n            align: \"center\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"username\",\n            label: \"用户名\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"nickname\",\n            label: \"昵称\",\n            width: \"120\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createTextVNode(_toDisplayString(scope.row.nickname || '-'), 1 /* TEXT */)];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"email\",\n            label: \"邮箱\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"role\",\n            label: \"角色\",\n            width: \"100\",\n            align: \"center\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createVNode(_component_el_tag, {\n                type: $setup.getRoleTagType(scope.row.role)\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString($setup.getRoleLabel(scope.row.role)), 1 /* TEXT */)];\n                }),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"created_at\",\n            label: \"注册时间\",\n            width: \"180\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createTextVNode(_toDisplayString($setup.formatDate(scope.row.created_at)), 1 /* TEXT */)];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"last_login\",\n            label: \"最后登录\",\n            width: \"180\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createTextVNode(_toDisplayString(scope.row.last_login ? $setup.formatDate(scope.row.last_login) : '-'), 1 /* TEXT */)];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            label: \"操作\",\n            align: \"center\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createVNode(_component_el_button, {\n                size: \"small\",\n                type: \"primary\",\n                onClick: function onClick($event) {\n                  return $setup.handleViewUser(scope.row);\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[11] || (_cache[11] = [_createTextVNode(\" 查看 \")]);\n                }),\n                _: 2 /* DYNAMIC */,\n                __: [11]\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n                size: \"small\",\n                type: \"success\",\n                onClick: function onClick($event) {\n                  return $setup.handleEditUser(scope.row);\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[12] || (_cache[12] = [_createTextVNode(\" 编辑 \")]);\n                }),\n                _: 2 /* DYNAMIC */,\n                __: [12]\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n                size: \"small\",\n                type: \"warning\",\n                onClick: function onClick($event) {\n                  return $setup.handleChangeRole(scope.row);\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[13] || (_cache[13] = [_createTextVNode(\" 角色 \")]);\n                }),\n                _: 2 /* DYNAMIC */,\n                __: [13]\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n                size: \"small\",\n                type: \"danger\",\n                onClick: function onClick($event) {\n                  return $setup.handleDeleteUser(scope.row);\n                },\n                disabled: scope.row.id === $setup.currentUserId\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[14] || (_cache[14] = [_createTextVNode(\" 删除 \")]);\n                }),\n                _: 2 /* DYNAMIC */,\n                __: [14]\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"disabled\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"data\"]), _createCommentVNode(\" 分页 \"), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_pagination, {\n        background: \"\",\n        layout: \"total, sizes, prev, pager, next, jumper\",\n        total: $setup.total,\n        \"page-sizes\": [10, 20, 50, 100],\n        \"page-size\": $setup.pageSize,\n        \"current-page\": $setup.currentPage,\n        onSizeChange: $setup.handleSizeChange,\n        onCurrentChange: $setup.handleCurrentChange\n      }, null, 8 /* PROPS */, [\"total\", \"page-size\", \"current-page\", \"onSizeChange\", \"onCurrentChange\"])])]))];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 编辑用户对话框 \"), _createVNode(_component_el_dialog, {\n    title: \"编辑用户信息\",\n    visible: $setup.editDialogVisible,\n    \"onUpdate:visible\": _cache[6] || (_cache[6] = function ($event) {\n      return $setup.editDialogVisible = $event;\n    }),\n    width: \"500px\"\n  }, {\n    footer: _withCtx(function () {\n      return [_createElementVNode(\"span\", _hoisted_7, [_createVNode(_component_el_button, {\n        onClick: _cache[5] || (_cache[5] = function ($event) {\n          return $setup.editDialogVisible = false;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[15] || (_cache[15] = [_createTextVNode(\"取 消\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [15]\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.submitUserForm,\n        loading: $setup.submitting\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[16] || (_cache[16] = [_createTextVNode(\"确 定\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [16]\n      }, 8 /* PROPS */, [\"onClick\", \"loading\"])])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        ref: \"userForm\",\n        model: $setup.userForm,\n        rules: $setup.userRules,\n        \"label-width\": \"80px\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"用户名\",\n            prop: \"username\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.userForm.username,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return $setup.userForm.username = $event;\n                }),\n                disabled: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"邮箱\",\n            prop: \"email\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.userForm.email,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                  return $setup.userForm.email = $event;\n                }),\n                disabled: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"昵称\",\n            prop: \"nickname\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.userForm.nickname,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                  return $setup.userForm.nickname = $event;\n                })\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"头像URL\",\n            prop: \"avatar_url\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.userForm.avatar_url,\n                \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n                  return $setup.userForm.avatar_url = $event;\n                })\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_avatar, {\n                size: 60,\n                src: $setup.userForm.avatar_url || ''\n              }, {\n                \"default\": _withCtx(function () {\n                  var _$setup$userForm$nick, _$setup$userForm$user;\n                  return [_createTextVNode(_toDisplayString(((_$setup$userForm$nick = $setup.userForm.nickname) === null || _$setup$userForm$nick === void 0 ? void 0 : _$setup$userForm$nick.charAt(0)) || ((_$setup$userForm$user = $setup.userForm.username) === null || _$setup$userForm$user === void 0 ? void 0 : _$setup$userForm$user.charAt(0)) || 'U'), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"src\"])])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\", \"rules\"])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\"]), _createCommentVNode(\" 修改角色对话框 \"), _createVNode(_component_el_dialog, {\n    title: \"修改用户角色\",\n    visible: $setup.roleDialogVisible,\n    \"onUpdate:visible\": _cache[9] || (_cache[9] = function ($event) {\n      return $setup.roleDialogVisible = $event;\n    }),\n    width: \"400px\"\n  }, {\n    footer: _withCtx(function () {\n      return [_createElementVNode(\"span\", _hoisted_8, [_createVNode(_component_el_button, {\n        onClick: _cache[8] || (_cache[8] = function ($event) {\n          return $setup.roleDialogVisible = false;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[17] || (_cache[17] = [_createTextVNode(\"取 消\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [17]\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.submitRoleForm,\n        loading: $setup.submitting\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[18] || (_cache[18] = [_createTextVNode(\"确 定\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [18]\n      }, 8 /* PROPS */, [\"onClick\", \"loading\"])])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        ref: \"roleForm\",\n        model: $setup.roleForm,\n        \"label-width\": \"80px\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"用户名\"\n          }, {\n            \"default\": _withCtx(function () {\n              var _$setup$currentUser;\n              return [_createElementVNode(\"span\", null, _toDisplayString((_$setup$currentUser = $setup.currentUser) === null || _$setup$currentUser === void 0 ? void 0 : _$setup$currentUser.username), 1 /* TEXT */)];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"当前角色\"\n          }, {\n            \"default\": _withCtx(function () {\n              var _$setup$currentUser2;\n              return [_createVNode(_component_el_tag, {\n                type: $setup.getRoleTagType((_$setup$currentUser2 = $setup.currentUser) === null || _$setup$currentUser2 === void 0 ? void 0 : _$setup$currentUser2.role)\n              }, {\n                \"default\": _withCtx(function () {\n                  var _$setup$currentUser3;\n                  return [_createTextVNode(_toDisplayString($setup.getRoleLabel((_$setup$currentUser3 = $setup.currentUser) === null || _$setup$currentUser3 === void 0 ? void 0 : _$setup$currentUser3.role)), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"type\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"新角色\",\n            prop: \"role\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_select, {\n                modelValue: $setup.roleForm.role,\n                \"onUpdate:modelValue\": _cache[7] || (_cache[7] = function ($event) {\n                  return $setup.roleForm.role = $event;\n                }),\n                placeholder: \"请选择角色\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.roleOptions, function (item) {\n                    return _openBlock(), _createBlock(_component_el_option, {\n                      key: item.value,\n                      label: item.label,\n                      value: item.value\n                    }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n                  }), 128 /* KEYED_FRAGMENT */))];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\"])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\"])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_createElementVNode","_hoisted_2","_component_el_input","modelValue","$setup","searchQuery","_cache","$event","placeholder","style","clearable","onKeyup","_withKeys","handleSearch","onClear","append","_component_el_button","icon","onClick","_","loading","_hoisted_3","_component_el_skeleton","rows","animated","_hoisted_4","_component_el_table","data","users","border","_component_el_table_column","prop","label","width","align","scope","_createTextVNode","_toDisplayString","row","nickname","_component_el_tag","type","getRoleTagType","role","getRoleLabel","formatDate","created_at","last_login","size","handleViewUser","__","handleEditUser","handleChangeRole","handleDeleteUser","disabled","id","currentUserId","_createCommentVNode","_hoisted_5","_component_el_pagination","background","layout","total","pageSize","currentPage","onSizeChange","handleSizeChange","onCurrentChange","handleCurrentChange","_component_el_dialog","title","visible","editDialogVisible","footer","_hoisted_7","submitUserForm","submitting","_component_el_form","ref","model","userForm","rules","userRules","_component_el_form_item","username","email","avatar_url","_hoisted_6","_component_el_avatar","src","_$setup$userForm$nick","_$setup$userForm$user","charAt","roleDialogVisible","_hoisted_8","submitRoleForm","roleForm","_$setup$currentUser","currentUser","_$setup$currentUser2","_$setup$currentUser3","_component_el_select","_Fragment","_renderList","roleOptions","item","_createBlock","_component_el_option","value"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\admin\\UserManagement.vue"],"sourcesContent":["<template>\n  <div class=\"user-management-container\">\n    <el-card class=\"user-management-card\">\n      <template #header>\n        <div class=\"clearfix\">\n          <span>用户管理</span>\n          <el-input\n            v-model=\"searchQuery\"\n            placeholder=\"搜索用户名或邮箱\"\n            style=\"width: 300px; float: right\"\n            clearable\n            @keyup.enter=\"handleSearch\"\n            @clear=\"handleSearch\"\n          >\n            <template #append>\n              <el-button icon=\"el-icon-search\" @click=\"handleSearch\"></el-button>\n            </template>\n          </el-input>\n        </div>\n      </template>\n\n      <div v-if=\"loading\" class=\"loading-container\">\n        <el-skeleton :rows=\"10\" animated />\n      </div>\n      <div v-else>\n        <el-table\n          :data=\"users\"\n          style=\"width: 100%\"\n          border\n        >\n          <el-table-column\n            prop=\"id\"\n            label=\"ID\"\n            width=\"80\"\n            align=\"center\"\n          >\n          </el-table-column>\n\n          <el-table-column\n            prop=\"username\"\n            label=\"用户名\"\n            width=\"120\"\n          >\n          </el-table-column>\n\n          <el-table-column\n            prop=\"nickname\"\n            label=\"昵称\"\n            width=\"120\"\n          >\n            <template #default=\"scope\">\n              {{ scope.row.nickname || '-' }}\n            </template>\n          </el-table-column>\n\n          <el-table-column\n            prop=\"email\"\n            label=\"邮箱\"\n            width=\"180\"\n          >\n          </el-table-column>\n\n          <el-table-column\n            prop=\"role\"\n            label=\"角色\"\n            width=\"100\"\n            align=\"center\"\n          >\n            <template #default=\"scope\">\n              <el-tag\n                :type=\"getRoleTagType(scope.row.role)\"\n              >\n                {{ getRoleLabel(scope.row.role) }}\n              </el-tag>\n            </template>\n          </el-table-column>\n\n          <el-table-column\n            prop=\"created_at\"\n            label=\"注册时间\"\n            width=\"180\"\n          >\n            <template #default=\"scope\">\n              {{ formatDate(scope.row.created_at) }}\n            </template>\n          </el-table-column>\n\n          <el-table-column\n            prop=\"last_login\"\n            label=\"最后登录\"\n            width=\"180\"\n          >\n            <template #default=\"scope\">\n              {{ scope.row.last_login ? formatDate(scope.row.last_login) : '-' }}\n            </template>\n          </el-table-column>\n\n          <el-table-column\n            label=\"操作\"\n            align=\"center\"\n          >\n            <template #default=\"scope\">\n              <el-button\n                size=\"small\"\n                type=\"primary\"\n                @click=\"handleViewUser(scope.row)\"\n              >\n                查看\n              </el-button>\n              <el-button\n                size=\"small\"\n                type=\"success\"\n                @click=\"handleEditUser(scope.row)\"\n              >\n                编辑\n              </el-button>\n              <el-button\n                size=\"small\"\n                type=\"warning\"\n                @click=\"handleChangeRole(scope.row)\"\n              >\n                角色\n              </el-button>\n              <el-button\n                size=\"small\"\n                type=\"danger\"\n                @click=\"handleDeleteUser(scope.row)\"\n                :disabled=\"scope.row.id === currentUserId\"\n              >\n                删除\n              </el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n\n        <!-- 分页 -->\n        <div class=\"pagination-container\">\n          <el-pagination\n            background\n            layout=\"total, sizes, prev, pager, next, jumper\"\n            :total=\"total\"\n            :page-sizes=\"[10, 20, 50, 100]\"\n            :page-size=\"pageSize\"\n            :current-page=\"currentPage\"\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n          >\n          </el-pagination>\n        </div>\n      </div>\n    </el-card>\n\n    <!-- 编辑用户对话框 -->\n    <el-dialog\n      title=\"编辑用户信息\"\n      v-model:visible=\"editDialogVisible\"\n      width=\"500px\"\n    >\n      <el-form\n        ref=\"userForm\"\n        :model=\"userForm\"\n        :rules=\"userRules\"\n        label-width=\"80px\"\n      >\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"userForm.username\" disabled></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"userForm.email\" disabled></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"昵称\" prop=\"nickname\">\n          <el-input v-model=\"userForm.nickname\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"头像URL\" prop=\"avatar_url\">\n          <el-input v-model=\"userForm.avatar_url\"></el-input>\n          <div class=\"avatar-preview\">\n            <el-avatar :size=\"60\" :src=\"userForm.avatar_url || ''\">\n              {{ userForm.nickname?.charAt(0) || userForm.username?.charAt(0) || 'U' }}\n            </el-avatar>\n          </div>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitUserForm\" :loading=\"submitting\">确 定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n\n    <!-- 修改角色对话框 -->\n    <el-dialog\n      title=\"修改用户角色\"\n      v-model:visible=\"roleDialogVisible\"\n      width=\"400px\"\n    >\n      <el-form\n        ref=\"roleForm\"\n        :model=\"roleForm\"\n        label-width=\"80px\"\n      >\n        <el-form-item label=\"用户名\">\n          <span>{{ currentUser?.username }}</span>\n        </el-form-item>\n\n        <el-form-item label=\"当前角色\">\n          <el-tag :type=\"getRoleTagType(currentUser?.role)\">\n            {{ getRoleLabel(currentUser?.role) }}\n          </el-tag>\n        </el-form-item>\n\n        <el-form-item label=\"新角色\" prop=\"role\">\n          <el-select v-model=\"roleForm.role\" placeholder=\"请选择角色\">\n            <el-option\n              v-for=\"item in roleOptions\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            >\n            </el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"roleDialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitRoleForm\" :loading=\"submitting\">确 定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { formatDateTime } from '@/utils/index'\n\n// 格式化日期函数\nconst formatDate = (date) => {\n  return formatDateTime(date)\n}\n\n// 模拟API调用\nconst mockUsers = [\n  {\n    id: 1,\n    username: 'admin',\n    nickname: '管理员',\n    email: 'admin@example.com',\n    avatar_url: '',\n    role: 'admin',\n    created_at: '2023-05-01T12:00:00Z',\n    last_login: '2023-05-19T08:30:00Z'\n  },\n  {\n    id: 2,\n    username: 'moderator',\n    nickname: '版主',\n    email: 'moderator@example.com',\n    avatar_url: '',\n    role: 'moderator',\n    created_at: '2023-05-02T14:30:00Z',\n    last_login: '2023-05-18T16:45:00Z'\n  },\n  {\n    id: 3,\n    username: 'user1',\n    nickname: '普通用户1',\n    email: 'user1@example.com',\n    avatar_url: '',\n    role: 'user',\n    created_at: '2023-05-03T09:15:00Z',\n    last_login: '2023-05-17T10:20:00Z'\n  }\n]\n\nexport default {\n  name: 'UserManagement',\n  setup() {\n    const router = useRouter()\n    const store = useStore()\n\n    // 状态\n    const loading = ref(false)\n    const users = ref([])\n    const total = ref(0)\n    const currentPage = ref(1)\n    const pageSize = ref(10)\n    const searchQuery = ref('')\n\n    // 当前用户ID\n    const currentUserId = computed(() => store.getters.userInfo?.id)\n\n    // 编辑用户对话框\n    const editDialogVisible = ref(false)\n    const userForm = ref({\n      id: null,\n      username: '',\n      email: '',\n      nickname: '',\n      avatar_url: ''\n    })\n    const userRules = {\n      nickname: [\n        { max: 50, message: '昵称不能超过50个字符', trigger: 'blur' }\n      ]\n    }\n\n    // 修改角色对话框\n    const roleDialogVisible = ref(false)\n    const currentUser = ref(null)\n    const roleForm = ref({\n      role: ''\n    })\n    const roleOptions = [\n      { value: 'user', label: '普通用户' },\n      { value: 'moderator', label: '版主' },\n      { value: 'admin', label: '管理员' }\n    ]\n\n    const submitting = ref(false)\n\n    // 获取用户列表\n    const fetchUsers = async () => {\n      loading.value = true\n      try {\n        // 模拟API调用\n        setTimeout(() => {\n          users.value = mockUsers\n          total.value = mockUsers.length\n          loading.value = false\n        }, 500)\n\n        // 实际API调用\n        // const response = await getUserList({\n        //   page: currentPage.value,\n        //   page_size: pageSize.value,\n        //   search: searchQuery.value\n        // })\n        // if (response.code === 0) {\n        //   users.value = response.data.results || []\n        //   total.value = response.data.count || 0\n        // } else {\n        //   ElMessage.error(response.msg || '获取用户列表失败')\n        // }\n      } catch (error) {\n        console.error('获取用户列表失败:', error)\n        ElMessage.error('获取用户列表失败')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    // 处理搜索\n    const handleSearch = () => {\n      currentPage.value = 1\n      fetchUsers()\n    }\n\n    // 处理页码变化\n    const handleCurrentChange = (page) => {\n      currentPage.value = page\n      fetchUsers()\n    }\n\n    // 处理每页条数变化\n    const handleSizeChange = (size) => {\n      pageSize.value = size\n      currentPage.value = 1\n      fetchUsers()\n    }\n\n    // 查看用户\n    const handleViewUser = (user) => {\n      router.push({ name: 'UserProfile', params: { id: user.id } })\n    }\n\n    // 编辑用户\n    const handleEditUser = (user) => {\n      userForm.value = {\n        id: user.id,\n        username: user.username,\n        email: user.email,\n        nickname: user.nickname || '',\n        avatar_url: user.avatar_url || ''\n      }\n      editDialogVisible.value = true\n    }\n\n    // 提交用户表单\n    const submitUserForm = async () => {\n      submitting.value = true\n      try {\n        // 模拟API调用\n        setTimeout(() => {\n          const index = users.value.findIndex(u => u.id === userForm.value.id)\n          if (index !== -1) {\n            users.value[index] = {\n              ...users.value[index],\n              nickname: userForm.value.nickname,\n              avatar_url: userForm.value.avatar_url\n            }\n          }\n\n          ElMessage.success('用户信息更新成功')\n          editDialogVisible.value = false\n          submitting.value = false\n        }, 500)\n\n        // 实际API调用\n        // const response = await updateUser(userForm.value.id, {\n        //   nickname: userForm.value.nickname,\n        //   avatar_url: userForm.value.avatar_url\n        // })\n        // if (response.code === 0) {\n        //   ElMessage.success(response.msg || '用户信息更新成功')\n        //   editDialogVisible.value = false\n        //   fetchUsers()\n        // } else {\n        //   ElMessage.error(response.msg || '用户信息更新失败')\n        // }\n      } catch (error) {\n        console.error('用户信息更新失败:', error)\n        ElMessage.error('用户信息更新失败')\n      } finally {\n        submitting.value = false\n      }\n    }\n\n    // 修改角色\n    const handleChangeRole = (user) => {\n      currentUser.value = user\n      roleForm.value.role = user.role\n      roleDialogVisible.value = true\n    }\n\n    // 提交角色表单\n    const submitRoleForm = async () => {\n      if (!currentUser.value) return\n\n      submitting.value = true\n      try {\n        // 模拟API调用\n        setTimeout(() => {\n          const index = users.value.findIndex(u => u.id === currentUser.value.id)\n          if (index !== -1) {\n            users.value[index] = {\n              ...users.value[index],\n              role: roleForm.value.role\n            }\n          }\n\n          ElMessage.success('用户角色更新成功')\n          roleDialogVisible.value = false\n          submitting.value = false\n        }, 500)\n\n        // 实际API调用\n        // const response = await updateUserRole(currentUser.value.id, {\n        //   role: roleForm.value.role\n        // })\n        // if (response.code === 0) {\n        //   ElMessage.success(response.msg || '用户角色更新成功')\n        //   roleDialogVisible.value = false\n        //   fetchUsers()\n        // } else {\n        //   ElMessage.error(response.msg || '用户角色更新失败')\n        // }\n      } catch (error) {\n        console.error('用户角色更新失败:', error)\n        ElMessage.error('用户角色更新失败')\n      } finally {\n        submitting.value = false\n      }\n    }\n\n    // 删除用户\n    const handleDeleteUser = async (user) => {\n      try {\n        await ElMessageBox.confirm(\n          `确定要删除用户 \"${user.username}\" 吗？此操作不可逆！`,\n          '警告',\n          {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }\n        )\n\n        // 模拟API调用\n        setTimeout(() => {\n          users.value = users.value.filter(u => u.id !== user.id)\n          total.value = users.value.length\n\n          ElMessage.success('用户删除成功')\n        }, 500)\n\n        // 实际API调用\n        // const response = await deleteUser(user.id)\n        // if (response.code === 0) {\n        //   ElMessage.success(response.msg || '用户删除成功')\n        //   fetchUsers()\n        // } else {\n        //   ElMessage.error(response.msg || '用户删除失败')\n        // }\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('用户删除失败:', error)\n          ElMessage.error('用户删除失败')\n        }\n      }\n    }\n\n    // 获取角色标签类型\n    const getRoleTagType = (role) => {\n      switch (role) {\n        case 'admin':\n          return 'danger'\n        case 'moderator':\n          return 'warning'\n        case 'user':\n          return 'success'\n        default:\n          return 'info'\n      }\n    }\n\n    // 获取角色标签文本\n    const getRoleLabel = (role) => {\n      switch (role) {\n        case 'admin':\n          return '管理员'\n        case 'moderator':\n          return '版主'\n        case 'user':\n          return '普通用户'\n        default:\n          return '未知'\n      }\n    }\n\n    // 生命周期钩子\n    onMounted(() => {\n      fetchUsers()\n    })\n\n    return {\n      loading,\n      users,\n      total,\n      currentPage,\n      pageSize,\n      searchQuery,\n      currentUserId,\n      editDialogVisible,\n      userForm,\n      userRules,\n      roleDialogVisible,\n      currentUser,\n      roleForm,\n      roleOptions,\n      submitting,\n      formatDate,\n      handleSearch,\n      handleCurrentChange,\n      handleSizeChange,\n      handleViewUser,\n      handleEditUser,\n      submitUserForm,\n      handleChangeRole,\n      submitRoleForm,\n      handleDeleteUser,\n      getRoleTagType,\n      getRoleLabel\n    }\n  }\n}\n</script>\n\n<style scoped>\n.user-management-container {\n  padding: 20px;\n}\n\n.user-management-card {\n  margin-bottom: 20px;\n}\n\n.loading-container {\n  padding: 20px 0;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.avatar-preview {\n  margin-top: 10px;\n  display: flex;\n  justify-content: center;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}