{"ast":null,"code":"import _regeneratorRuntime from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nimport { View, ChatDotRound, Star } from '@element-plus/icons-vue';\nimport { logout } from '../api/user';\nimport { getHotBoards } from '../api/board';\nimport { getHotUsers } from '../api/profile';\nimport { getPostList } from '../api/post';\nimport { formatDateTime } from '../utils/index';\nimport UserAvatar from '../components/UserAvatar.vue';\nexport default {\n  name: 'Home',\n  components: {\n    View: View,\n    ChatDotRound: ChatDotRound,\n    Star: Star,\n    UserAvatar: UserAvatar\n  },\n  setup: function setup() {\n    var router = useRouter();\n    var store = useStore();\n\n    // 获取认证状态和用户信息\n    var isAuthenticated = computed(function () {\n      return store.getters.isAuthenticated;\n    });\n    var userInfo = computed(function () {\n      return store.getters.userInfo;\n    });\n\n    // 判断是否为管理员\n    var isAdmin = computed(function () {\n      return userInfo.value && userInfo.value.role === 'admin';\n    });\n\n    // 数据状态\n    var latestPosts = ref([]);\n    var hotBoards = ref([]);\n    var hotUsers = ref([]);\n    var loading = ref({\n      posts: false,\n      boards: false,\n      users: false\n    });\n\n    // 格式化日期\n    var formatDate = function formatDate(date) {\n      return formatDateTime(date);\n    };\n\n    // 页面跳转方法\n    var goToLogin = function goToLogin() {\n      return router.push('/login');\n    };\n    var goToRegister = function goToRegister() {\n      return router.push('/register');\n    };\n    var goToProfile = function goToProfile() {\n      return router.push('/profile/me');\n    };\n    var goToAdminDashboard = function goToAdminDashboard() {\n      return router.push('/admin/dashboard');\n    };\n    var goToUserManagement = function goToUserManagement() {\n      return router.push('/admin/users');\n    };\n    var goToNewPost = function goToNewPost() {\n      // 清除可能的成功消息提示\n      ElMessage.closeAll();\n      router.push('/post/create');\n    };\n\n    // 退出登录\n    var handleLogout = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return logout();\n            case 3:\n              store.dispatch('logout');\n              ElMessage({\n                message: '退出登录成功',\n                type: 'success'\n              });\n              router.push('/');\n              _context.next = 12;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('退出登录失败:', _context.t0);\n              ElMessage({\n                message: '退出登录失败',\n                type: 'error'\n              });\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n      return function handleLogout() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    // 获取最新帖子\n    var fetchLatestPosts = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              loading.value.posts = true;\n              _context2.prev = 1;\n              _context2.next = 4;\n              return getPostList({\n                page: 1,\n                page_size: 5,\n                ordering: '-created_at'\n              });\n            case 4:\n              response = _context2.sent;\n              console.log('最新帖子响应:', response);\n              if (response && response.count !== undefined) {\n                // 处理DRF分页响应\n                latestPosts.value = response.results || [];\n              } else if (response && response.code === 0) {\n                // 处理自定义响应格式\n                latestPosts.value = response.data.results || [];\n              } else {\n                console.error('获取最新帖子失败:', response ? response.msg : '未知错误');\n                // 使用模拟数据作为备用\n                latestPosts.value = [{\n                  id: 1,\n                  title: '欢迎来到论坛系统',\n                  user: {\n                    id: 1,\n                    username: 'admin',\n                    nickname: '管理员',\n                    avatar_url: ''\n                  },\n                  board_name: '公告',\n                  created_at: '2023-05-19 12:00',\n                  views: 1000,\n                  comments_count: 50,\n                  likes_count: 120,\n                  is_pinned: true,\n                  is_featured: true\n                }];\n              }\n              _context2.next = 13;\n              break;\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error('获取最新帖子失败:', _context2.t0);\n              // 使用模拟数据作为备用\n              latestPosts.value = [{\n                id: 1,\n                title: '欢迎来到论坛系统',\n                user: {\n                  id: 1,\n                  username: 'admin',\n                  nickname: '管理员',\n                  avatar_url: ''\n                },\n                board_name: '公告',\n                created_at: '2023-05-19 12:00',\n                views: 1000,\n                comments_count: 50,\n                likes_count: 120,\n                is_pinned: true,\n                is_featured: true\n              }];\n            case 13:\n              _context2.prev = 13;\n              loading.value.posts = false;\n              return _context2.finish(13);\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[1, 9, 13, 16]]);\n      }));\n      return function fetchLatestPosts() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 获取热门板块\n    var fetchHotBoards = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              loading.value.boards = true;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return getHotBoards(5);\n            case 4:\n              response = _context3.sent;\n              console.log('热门板块响应:', response);\n              if (response && response.status === 0 && response.data) {\n                // 处理Django REST framework自定义响应格式\n                hotBoards.value = response.data || [];\n              } else if (response && response.code === 0 && response.data) {\n                // 处理另一种自定义响应格式\n                hotBoards.value = response.data || [];\n              } else if (response && Array.isArray(response)) {\n                // 直接返回数组的情况\n                hotBoards.value = response;\n              } else {\n                console.error('获取热门板块失败:', response ? response.msg : '未知错误');\n                // 使用模拟数据作为备用\n                hotBoards.value = [{\n                  id: 1,\n                  name: '公告',\n                  posts_count: 10\n                }, {\n                  id: 2,\n                  name: '使用指南',\n                  posts_count: 25\n                }, {\n                  id: 3,\n                  name: '技术讨论',\n                  posts_count: 100\n                }, {\n                  id: 4,\n                  name: '灌水区',\n                  posts_count: 200\n                }];\n              }\n              _context3.next = 13;\n              break;\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.error('获取热门板块失败:', _context3.t0);\n              // 使用模拟数据作为备用\n              hotBoards.value = [{\n                id: 1,\n                name: '公告',\n                posts_count: 10\n              }, {\n                id: 2,\n                name: '使用指南',\n                posts_count: 25\n              }, {\n                id: 3,\n                name: '技术讨论',\n                posts_count: 100\n              }, {\n                id: 4,\n                name: '灌水区',\n                posts_count: 200\n              }];\n            case 13:\n              _context3.prev = 13;\n              loading.value.boards = false;\n              return _context3.finish(13);\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[1, 9, 13, 16]]);\n      }));\n      return function fetchHotBoards() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    // 获取热门用户\n    var fetchHotUsers = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              loading.value.users = true;\n              _context4.prev = 1;\n              _context4.next = 4;\n              return getHotUsers(5);\n            case 4:\n              response = _context4.sent;\n              console.log('热门用户响应:', response);\n              if (response && response.code === 0 && response.data) {\n                hotUsers.value = response.data || [];\n              } else if (response && Array.isArray(response)) {\n                // 直接返回数组的情况\n                hotUsers.value = response;\n              } else if (response && response.status === 0 && response.data) {\n                // 另一种响应格式\n                hotUsers.value = response.data || [];\n              } else {\n                console.error('获取热门用户失败:', response ? response.msg : '未知错误');\n                // 使用模拟数据作为备用\n                hotUsers.value = [{\n                  id: 1,\n                  username: 'admin',\n                  nickname: '管理员',\n                  avatar_url: '',\n                  posts_count: 50\n                }, {\n                  id: 2,\n                  username: 'moderator',\n                  nickname: '版主',\n                  avatar_url: '',\n                  posts_count: 30\n                }, {\n                  id: 3,\n                  username: 'user1',\n                  nickname: '活跃用户',\n                  avatar_url: '',\n                  posts_count: 20\n                }];\n              }\n              _context4.next = 13;\n              break;\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](1);\n              console.error('获取热门用户失败:', _context4.t0);\n              // 使用模拟数据作为备用\n              hotUsers.value = [{\n                id: 1,\n                username: 'admin',\n                nickname: '管理员',\n                avatar_url: '',\n                posts_count: 50\n              }, {\n                id: 2,\n                username: 'moderator',\n                nickname: '版主',\n                avatar_url: '',\n                posts_count: 30\n              }, {\n                id: 3,\n                username: 'user1',\n                nickname: '活跃用户',\n                avatar_url: '',\n                posts_count: 20\n              }];\n            case 13:\n              _context4.prev = 13;\n              loading.value.users = false;\n              return _context4.finish(13);\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[1, 9, 13, 16]]);\n      }));\n      return function fetchHotUsers() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    // 生命周期钩子\n    onMounted(function () {\n      // 加载首页数据\n      fetchLatestPosts();\n      fetchHotBoards();\n      fetchHotUsers();\n    });\n    return {\n      isAuthenticated: isAuthenticated,\n      userInfo: userInfo,\n      isAdmin: isAdmin,\n      latestPosts: latestPosts,\n      hotBoards: hotBoards,\n      hotUsers: hotUsers,\n      loading: loading,\n      formatDate: formatDate,\n      goToLogin: goToLogin,\n      goToRegister: goToRegister,\n      goToProfile: goToProfile,\n      goToAdminDashboard: goToAdminDashboard,\n      goToUserManagement: goToUserManagement,\n      goToNewPost: goToNewPost,\n      handleLogout: handleLogout\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useRouter","useStore","ElMessage","View","ChatDotRound","Star","logout","getHotBoards","getHotUsers","getPostList","formatDateTime","UserAvatar","name","components","setup","router","store","isAuthenticated","getters","userInfo","isAdmin","value","role","latestPosts","hotBoards","hotUsers","loading","posts","boards","users","formatDate","date","goToLogin","push","goToRegister","goToProfile","goToAdminDashboard","goToUserManagement","goToNewPost","closeAll","handleLogout","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","dispatch","message","type","t0","console","error","stop","apply","arguments","fetchLatestPosts","_ref2","_callee2","response","_callee2$","_context2","page","page_size","ordering","sent","log","count","undefined","results","code","data","msg","id","title","user","username","nickname","avatar_url","board_name","created_at","views","comments_count","likes_count","is_pinned","is_featured","finish","fetchHotBoards","_ref3","_callee3","_callee3$","_context3","status","Array","isArray","posts_count","fetchHotUsers","_ref4","_callee4","_callee4$","_context4"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\Home.vue"],"sourcesContent":["<template>\n  <div class=\"home-container\">\n    <el-container>\n      <el-header height=\"60px\">\n        <div class=\"header-container\">\n          <div class=\"logo\">\n            <h1>论坛系统</h1>\n          </div>\n          <div class=\"nav-menu\">\n            <el-menu\n              mode=\"horizontal\"\n              :ellipsis=\"false\"\n              :router=\"true\"\n              class=\"menu\"\n            >\n              <el-menu-item index=\"/\">首页</el-menu-item>\n              <el-menu-item index=\"/boards\">板块</el-menu-item>\n              <el-menu-item index=\"/posts\">帖子</el-menu-item>\n            </el-menu>\n          </div>\n          <div class=\"user-actions\">\n            <template v-if=\"isAuthenticated\">\n              <el-dropdown trigger=\"click\">\n                <div class=\"user-info\">\n                  <user-avatar :user=\"userInfo\" :size=\"32\" />\n                  <span class=\"username\">{{ userInfo?.nickname || userInfo?.username }}</span>\n                </div>\n                <template #dropdown>\n                  <el-dropdown-menu>\n                    <el-dropdown-item @click=\"goToProfile\">个人中心</el-dropdown-item>\n                    <el-dropdown-item v-if=\"isAdmin\" divided>管理员功能</el-dropdown-item>\n                    <el-dropdown-item v-if=\"isAdmin\" @click=\"goToAdminDashboard\">管理员仪表盘</el-dropdown-item>\n                    <el-dropdown-item v-if=\"isAdmin\" @click=\"goToUserManagement\">用户管理</el-dropdown-item>\n                    <el-dropdown-item divided @click=\"handleLogout\">退出登录</el-dropdown-item>\n                  </el-dropdown-menu>\n                </template>\n              </el-dropdown>\n            </template>\n            <template v-else>\n              <el-button type=\"primary\" @click=\"goToLogin\">登录</el-button>\n              <el-button @click=\"goToRegister\">注册</el-button>\n            </template>\n          </div>\n        </div>\n      </el-header>\n\n      <el-main>\n        <div class=\"main-content\">\n          <el-row :gutter=\"20\">\n            <el-col :span=\"18\">\n              <div class=\"content-area\">\n                <div class=\"welcome-message\" v-if=\"isAuthenticated\">\n                  <h2>欢迎回来，{{ userInfo?.nickname || userInfo?.username }}！</h2>\n                  <p>今天有什么想法要分享吗？</p>\n                  <el-button type=\"primary\" @click=\"goToNewPost\">发布新帖</el-button>\n                </div>\n                <div class=\"welcome-message\" v-else>\n                  <h2>欢迎来到论坛系统</h2>\n                  <p>这里是一个交流和分享的平台，登录后可以发帖和参与讨论。</p>\n                  <el-button type=\"primary\" @click=\"goToLogin\">立即登录</el-button>\n                  <el-button @click=\"goToRegister\">注册账号</el-button>\n                </div>\n\n                <div class=\"section-title\">\n                  <h3>最新帖子</h3>\n                  <el-button text>查看更多</el-button>\n                </div>\n\n                <div class=\"post-list\">\n                  <div v-if=\"loading.posts\" class=\"loading-container\">\n                    <el-skeleton :rows=\"5\" animated />\n                  </div>\n                  <el-empty description=\"暂无帖子\" v-else-if=\"!latestPosts.length\"></el-empty>\n                  <div v-else>\n                    <div v-for=\"post in latestPosts\" :key=\"post.id\" class=\"post-item\">\n                      <div class=\"post-avatar\">\n                        <el-avatar :size=\"40\" :src=\"post.user.avatar_url\">\n                          {{ post.user.nickname ? post.user.nickname.charAt(0) : post.user.username.charAt(0) }}\n                        </el-avatar>\n                      </div>\n                      <div class=\"post-content\">\n                        <div class=\"post-title\">\n                          <router-link :to=\"`/posts/${post.id}`\">{{ post.title }}</router-link>\n                          <el-tag size=\"small\" type=\"success\" v-if=\"post.is_pinned\">置顶</el-tag>\n                          <el-tag size=\"small\" type=\"warning\" v-if=\"post.is_featured\">精华</el-tag>\n                        </div>\n                        <div class=\"post-info\">\n                          <span class=\"author\">{{ post.user.nickname || post.user.username }}</span>\n                          <span class=\"board\">{{ post.board_name }}</span>\n                          <span class=\"time\">{{ formatDate(post.created_at) }}</span>\n                        </div>\n                        <div class=\"post-stats\">\n                          <span class=\"views\">\n                            <el-icon><View /></el-icon> {{ post.views }}\n                          </span>\n                          <span class=\"comments\">\n                            <el-icon><ChatDotRound /></el-icon> {{ post.comments_count }}\n                          </span>\n                          <span class=\"likes\">\n                            <el-icon><Star /></el-icon> {{ post.likes_count }}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </el-col>\n\n            <el-col :span=\"6\">\n              <div class=\"sidebar\">\n                <div class=\"sidebar-section\">\n                  <div class=\"section-title\">\n                    <h3>热门板块</h3>\n                  </div>\n                  <div class=\"board-list\">\n                    <div v-if=\"loading.boards\" class=\"loading-container\">\n                      <el-skeleton :rows=\"3\" animated />\n                    </div>\n                    <el-empty description=\"暂无板块\" v-else-if=\"!hotBoards.length\"></el-empty>\n                    <div v-else>\n                      <div v-for=\"board in hotBoards\" :key=\"board.id\" class=\"board-item\">\n                        <router-link :to=\"`/boards/${board.id}`\">{{ board.name }}</router-link>\n                        <span class=\"post-count\">{{ board.posts_count }}帖子</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"sidebar-section\">\n                  <div class=\"section-title\">\n                    <h3>热门用户</h3>\n                  </div>\n                  <div class=\"user-list\">\n                    <div v-if=\"loading.users\" class=\"loading-container\">\n                      <el-skeleton :rows=\"3\" animated />\n                    </div>\n                    <el-empty description=\"暂无用户\" v-else-if=\"!hotUsers.length\"></el-empty>\n                    <div v-else>\n                      <div v-for=\"user in hotUsers\" :key=\"user.id\" class=\"user-item\">\n                        <user-avatar :user=\"user\" :size=\"32\" />\n                        <span class=\"user-nickname\">{{ user.nickname || user.username }}</span>\n                        <span class=\"post-count\">{{ user.posts_count }}帖子</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </el-col>\n          </el-row>\n        </div>\n      </el-main>\n\n      <el-footer height=\"60px\">\n        <div class=\"footer-content\">\n          <p>© 2023 论坛系统 - 基于Vue + Django + MySQL的PC端论坛系统</p>\n        </div>\n      </el-footer>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { ElMessage } from 'element-plus'\nimport { View, ChatDotRound, Star } from '@element-plus/icons-vue'\nimport { logout } from '../api/user'\nimport { getHotBoards } from '../api/board'\nimport { getHotUsers } from '../api/profile'\nimport { getPostList } from '../api/post'\nimport { formatDateTime } from '../utils/index'\nimport UserAvatar from '../components/UserAvatar.vue'\n\nexport default {\n  name: 'Home',\n  components: {\n    View,\n    ChatDotRound,\n    Star,\n    UserAvatar\n  },\n  setup() {\n    const router = useRouter()\n    const store = useStore()\n\n    // 获取认证状态和用户信息\n    const isAuthenticated = computed(() => store.getters.isAuthenticated)\n    const userInfo = computed(() => store.getters.userInfo)\n\n    // 判断是否为管理员\n    const isAdmin = computed(() => {\n      return userInfo.value && userInfo.value.role === 'admin'\n    })\n\n    // 数据状态\n    const latestPosts = ref([])\n    const hotBoards = ref([])\n    const hotUsers = ref([])\n    const loading = ref({\n      posts: false,\n      boards: false,\n      users: false\n    })\n\n    // 格式化日期\n    const formatDate = (date) => {\n      return formatDateTime(date)\n    }\n\n    // 页面跳转方法\n    const goToLogin = () => router.push('/login')\n    const goToRegister = () => router.push('/register')\n    const goToProfile = () => router.push('/profile/me')\n    const goToAdminDashboard = () => router.push('/admin/dashboard')\n    const goToUserManagement = () => router.push('/admin/users')\n    const goToNewPost = () => {\n      // 清除可能的成功消息提示\n      ElMessage.closeAll()\n      router.push('/post/create')\n    }\n\n    // 退出登录\n    const handleLogout = async () => {\n      try {\n        await logout()\n        store.dispatch('logout')\n        ElMessage({\n          message: '退出登录成功',\n          type: 'success'\n        })\n        router.push('/')\n      } catch (error) {\n        console.error('退出登录失败:', error)\n        ElMessage({\n          message: '退出登录失败',\n          type: 'error'\n        })\n      }\n    }\n\n    // 获取最新帖子\n    const fetchLatestPosts = async () => {\n      loading.value.posts = true\n      try {\n        const response = await getPostList({\n          page: 1,\n          page_size: 5,\n          ordering: '-created_at'\n        })\n\n        console.log('最新帖子响应:', response)\n\n        if (response && response.count !== undefined) {\n          // 处理DRF分页响应\n          latestPosts.value = response.results || []\n        } else if (response && response.code === 0) {\n          // 处理自定义响应格式\n          latestPosts.value = response.data.results || []\n        } else {\n          console.error('获取最新帖子失败:', response ? response.msg : '未知错误')\n          // 使用模拟数据作为备用\n          latestPosts.value = [\n            {\n              id: 1,\n              title: '欢迎来到论坛系统',\n              user: {\n                id: 1,\n                username: 'admin',\n                nickname: '管理员',\n                avatar_url: ''\n              },\n              board_name: '公告',\n              created_at: '2023-05-19 12:00',\n              views: 1000,\n              comments_count: 50,\n              likes_count: 120,\n              is_pinned: true,\n              is_featured: true\n            }\n          ]\n        }\n      } catch (error) {\n        console.error('获取最新帖子失败:', error)\n        // 使用模拟数据作为备用\n        latestPosts.value = [\n          {\n            id: 1,\n            title: '欢迎来到论坛系统',\n            user: {\n              id: 1,\n              username: 'admin',\n              nickname: '管理员',\n              avatar_url: ''\n            },\n            board_name: '公告',\n            created_at: '2023-05-19 12:00',\n            views: 1000,\n            comments_count: 50,\n            likes_count: 120,\n            is_pinned: true,\n            is_featured: true\n          }\n        ]\n      } finally {\n        loading.value.posts = false\n      }\n    }\n\n    // 获取热门板块\n    const fetchHotBoards = async () => {\n      loading.value.boards = true\n      try {\n        const response = await getHotBoards(5)\n\n        console.log('热门板块响应:', response)\n\n        if (response && response.status === 0 && response.data) {\n          // 处理Django REST framework自定义响应格式\n          hotBoards.value = response.data || []\n        } else if (response && response.code === 0 && response.data) {\n          // 处理另一种自定义响应格式\n          hotBoards.value = response.data || []\n        } else if (response && Array.isArray(response)) {\n          // 直接返回数组的情况\n          hotBoards.value = response\n        } else {\n          console.error('获取热门板块失败:', response ? response.msg : '未知错误')\n          // 使用模拟数据作为备用\n          hotBoards.value = [\n            { id: 1, name: '公告', posts_count: 10 },\n            { id: 2, name: '使用指南', posts_count: 25 },\n            { id: 3, name: '技术讨论', posts_count: 100 },\n            { id: 4, name: '灌水区', posts_count: 200 }\n          ]\n        }\n      } catch (error) {\n        console.error('获取热门板块失败:', error)\n        // 使用模拟数据作为备用\n        hotBoards.value = [\n          { id: 1, name: '公告', posts_count: 10 },\n          { id: 2, name: '使用指南', posts_count: 25 },\n          { id: 3, name: '技术讨论', posts_count: 100 },\n          { id: 4, name: '灌水区', posts_count: 200 }\n        ]\n      } finally {\n        loading.value.boards = false\n      }\n    }\n\n    // 获取热门用户\n    const fetchHotUsers = async () => {\n      loading.value.users = true\n      try {\n        const response = await getHotUsers(5)\n\n        console.log('热门用户响应:', response)\n\n        if (response && response.code === 0 && response.data) {\n          hotUsers.value = response.data || []\n        } else if (response && Array.isArray(response)) {\n          // 直接返回数组的情况\n          hotUsers.value = response\n        } else if (response && response.status === 0 && response.data) {\n          // 另一种响应格式\n          hotUsers.value = response.data || []\n        } else {\n          console.error('获取热门用户失败:', response ? response.msg : '未知错误')\n          // 使用模拟数据作为备用\n          hotUsers.value = [\n            { id: 1, username: 'admin', nickname: '管理员', avatar_url: '', posts_count: 50 },\n            { id: 2, username: 'moderator', nickname: '版主', avatar_url: '', posts_count: 30 },\n            { id: 3, username: 'user1', nickname: '活跃用户', avatar_url: '', posts_count: 20 }\n          ]\n        }\n      } catch (error) {\n        console.error('获取热门用户失败:', error)\n        // 使用模拟数据作为备用\n        hotUsers.value = [\n          { id: 1, username: 'admin', nickname: '管理员', avatar_url: '', posts_count: 50 },\n          { id: 2, username: 'moderator', nickname: '版主', avatar_url: '', posts_count: 30 },\n          { id: 3, username: 'user1', nickname: '活跃用户', avatar_url: '', posts_count: 20 }\n        ]\n      } finally {\n        loading.value.users = false\n      }\n    }\n\n    // 生命周期钩子\n    onMounted(() => {\n      // 加载首页数据\n      fetchLatestPosts()\n      fetchHotBoards()\n      fetchHotUsers()\n    })\n\n    return {\n      isAuthenticated,\n      userInfo,\n      isAdmin,\n      latestPosts,\n      hotBoards,\n      hotUsers,\n      loading,\n      formatDate,\n      goToLogin,\n      goToRegister,\n      goToProfile,\n      goToAdminDashboard,\n      goToUserManagement,\n      goToNewPost,\n      handleLogout\n    }\n  }\n}\n</script>\n\n<style scoped>\n.home-container {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.el-container {\n  min-height: 100vh;\n}\n\n.el-header {\n  background-color: #fff;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n}\n\n.header-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px;\n}\n\n.logo h1 {\n  margin: 0;\n  font-size: 24px;\n  color: #409eff;\n}\n\n.nav-menu {\n  flex-grow: 1;\n  margin-left: 30px;\n}\n\n.menu {\n  border-bottom: none;\n}\n\n.user-actions {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n}\n\n.username {\n  margin-left: 8px;\n  font-size: 14px;\n}\n\n.el-main {\n  padding: 20px;\n  background-color: #f5f7fa;\n}\n\n.main-content {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.content-area {\n  background-color: #fff;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n}\n\n.welcome-message {\n  background-color: #f0f9ff;\n  border-radius: 8px;\n  padding: 20px;\n  margin-bottom: 20px;\n  border-left: 4px solid #409eff;\n}\n\n.welcome-message h2 {\n  margin-top: 0;\n  color: #303133;\n}\n\n.section-title {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n  border-bottom: 1px solid #ebeef5;\n  padding-bottom: 10px;\n}\n\n.section-title h3 {\n  margin: 0;\n  font-size: 18px;\n  color: #303133;\n}\n\n.post-list {\n  margin-bottom: 20px;\n}\n\n.post-item {\n  display: flex;\n  padding: 15px 0;\n  border-bottom: 1px solid #ebeef5;\n}\n\n.post-avatar {\n  margin-right: 15px;\n}\n\n.post-content {\n  flex-grow: 1;\n}\n\n.post-title {\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 8px;\n  display: flex;\n  align-items: center;\n}\n\n.post-title a {\n  color: #303133;\n  text-decoration: none;\n  margin-right: 8px;\n}\n\n.post-title a:hover {\n  color: #409eff;\n}\n\n.post-info {\n  font-size: 12px;\n  color: #909399;\n  margin-bottom: 8px;\n}\n\n.post-info .author {\n  margin-right: 10px;\n}\n\n.post-info .board {\n  margin-right: 10px;\n  background-color: #f0f9ff;\n  color: #409eff;\n  padding: 2px 6px;\n  border-radius: 4px;\n}\n\n.post-stats {\n  font-size: 12px;\n  color: #909399;\n  display: flex;\n  gap: 15px;\n}\n\n.sidebar {\n  position: sticky;\n  top: 80px;\n}\n\n.sidebar-section {\n  background-color: #fff;\n  border-radius: 8px;\n  padding: 15px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n}\n\n.board-list, .user-list {\n  margin-top: 10px;\n}\n\n.board-item, .user-item {\n  display: flex;\n  align-items: center;\n  padding: 8px 0;\n  border-bottom: 1px solid #ebeef5;\n}\n\n.board-item a {\n  color: #303133;\n  text-decoration: none;\n  flex-grow: 1;\n}\n\n.board-item a:hover {\n  color: #409eff;\n}\n\n.post-count {\n  font-size: 12px;\n  color: #909399;\n}\n\n.user-item {\n  gap: 10px;\n}\n\n.user-nickname {\n  flex-grow: 1;\n  font-size: 14px;\n}\n\n.el-footer {\n  background-color: #fff;\n  border-top: 1px solid #ebeef5;\n}\n\n.footer-content {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #909399;\n  font-size: 14px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}