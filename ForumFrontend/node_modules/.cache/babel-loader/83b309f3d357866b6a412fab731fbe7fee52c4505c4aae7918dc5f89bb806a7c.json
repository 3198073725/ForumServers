{"ast":null,"code":"import _regeneratorRuntime from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport { computed, onMounted, ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport { Bell, Star, ChatDotRound, User, Check, Loading } from '@element-plus/icons-vue';\nimport webSocketManager from '@/utils/websocket';\nexport default {\n  name: 'NotificationBell',\n  setup: function setup() {\n    var store = useStore();\n    var router = useRouter();\n    var loading = ref(false);\n\n    // 从Vuex获取通知数据\n    var notifications = computed(function () {\n      return store.state.notifications;\n    });\n    var unreadCount = computed(function () {\n      return store.state.unreadNotificationCount;\n    });\n    var hasUnread = computed(function () {\n      return unreadCount.value > 0;\n    });\n\n    // 加载通知数据\n    var loadNotifications = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              loading.value = true;\n              _context.prev = 1;\n              _context.next = 4;\n              return store.dispatch('fetchNotifications');\n            case 4:\n              _context.next = 9;\n              break;\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('加载通知失败:', _context.t0);\n            case 9:\n              _context.prev = 9;\n              loading.value = false;\n              return _context.finish(9);\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 6, 9, 12]]);\n      }));\n      return function loadNotifications() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    // 初始化WebSocket连接\n    var initWebSocket = function initWebSocket() {\n      if (store.getters.isLoggedIn) {\n        webSocketManager.initNotificationSocket();\n      }\n    };\n\n    // 标记通知为已读\n    var markAsRead = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(notificationId) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              // 使用WebSocket标记已读\n              webSocketManager.markNotificationRead(notificationId);\n\n              // 备用方案：使用API标记已读\n              _context2.next = 4;\n              return store.dispatch('markNotificationRead', notificationId);\n            case 4:\n              _context2.next = 9;\n              break;\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('标记通知已读失败:', _context2.t0);\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 6]]);\n      }));\n      return function markAsRead(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 标记所有通知为已读\n    var markAllAsRead = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              // 使用WebSocket标记所有已读\n              webSocketManager.markAllNotificationsRead();\n\n              // 备用方案：使用API标记所有已读\n              _context3.next = 4;\n              return store.dispatch('markAllNotificationsRead');\n            case 4:\n              _context3.next = 9;\n              break;\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('标记所有通知已读失败:', _context3.t0);\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 6]]);\n      }));\n      return function markAllAsRead() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    // 处理通知点击\n    var handleNotificationClick = function handleNotificationClick(notification) {\n      // 如果未读，标记为已读\n      if (!notification.is_read) {\n        markAsRead(notification.id);\n      }\n\n      // 根据通知类型跳转到相应页面\n      // 这里需要根据实际情况实现\n      // 例如：点赞通知跳转到帖子，评论通知跳转到评论，系统通知可能不跳转\n    };\n\n    // 查看所有通知\n    var viewAllNotifications = function viewAllNotifications() {\n      router.push('/notifications');\n    };\n\n    // 处理弹出层显示\n    var handlePopoverShow = function handlePopoverShow() {\n      loadNotifications();\n    };\n\n    // 格式化时间\n    var formatTime = function formatTime(timestamp) {\n      var date = new Date(timestamp);\n      var now = new Date();\n      var diffMs = now - date;\n      var diffSec = Math.floor(diffMs / 1000);\n      var diffMin = Math.floor(diffSec / 60);\n      var diffHour = Math.floor(diffMin / 60);\n      var diffDay = Math.floor(diffHour / 24);\n      if (diffSec < 60) {\n        return '刚刚';\n      } else if (diffMin < 60) {\n        return \"\".concat(diffMin, \"\\u5206\\u949F\\u524D\");\n      } else if (diffHour < 24) {\n        return \"\".concat(diffHour, \"\\u5C0F\\u65F6\\u524D\");\n      } else if (diffDay < 30) {\n        return \"\".concat(diffDay, \"\\u5929\\u524D\");\n      } else {\n        return date.toLocaleDateString();\n      }\n    };\n    onMounted(function () {\n      // 加载未读通知数量\n      store.dispatch('fetchUnreadNotificationCount');\n\n      // 初始化WebSocket\n      initWebSocket();\n    });\n    return {\n      notifications: notifications,\n      unreadCount: unreadCount,\n      hasUnread: hasUnread,\n      loading: loading,\n      markAsRead: markAsRead,\n      markAllAsRead: markAllAsRead,\n      handleNotificationClick: handleNotificationClick,\n      viewAllNotifications: viewAllNotifications,\n      handlePopoverShow: handlePopoverShow,\n      formatTime: formatTime,\n      // 图标\n      Bell: Bell,\n      Star: Star,\n      ChatDotRound: ChatDotRound,\n      User: User,\n      Check: Check,\n      Loading: Loading\n    };\n  }\n};","map":{"version":3,"names":["computed","onMounted","ref","useStore","useRouter","Bell","Star","ChatDotRound","User","Check","Loading","webSocketManager","name","setup","store","router","loading","notifications","state","unreadCount","unreadNotificationCount","hasUnread","value","loadNotifications","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","dispatch","t0","console","error","finish","stop","apply","arguments","initWebSocket","getters","isLoggedIn","initNotificationSocket","markAsRead","_ref2","_callee2","notificationId","_callee2$","_context2","markNotificationRead","_x","markAllAsRead","_ref3","_callee3","_callee3$","_context3","markAllNotificationsRead","handleNotificationClick","notification","is_read","id","viewAllNotifications","push","handlePopoverShow","formatTime","timestamp","date","Date","now","diffMs","diffSec","Math","floor","diffMin","diffHour","diffDay","concat","toLocaleDateString"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\components\\NotificationBell.vue"],"sourcesContent":["<template>\r\n  <el-badge :value=\"unreadCount\" :hidden=\"unreadCount === 0\" class=\"notification-badge\">\r\n    <el-popover\r\n      placement=\"bottom\"\r\n      :width=\"350\"\r\n      trigger=\"click\"\r\n      popper-class=\"notification-popover\"\r\n      @show=\"handlePopoverShow\"\r\n    >\r\n      <template #reference>\r\n        <el-button class=\"notification-bell\" :icon=\"Bell\" circle />\r\n      </template>\r\n      \r\n      <div class=\"notification-header\">\r\n        <h3>通知</h3>\r\n        <el-button v-if=\"hasUnread\" type=\"text\" @click=\"markAllAsRead\">全部标为已读</el-button>\r\n      </div>\r\n      \r\n      <el-divider />\r\n      \r\n      <div v-if=\"loading\" class=\"notification-loading\">\r\n        <el-icon class=\"is-loading\"><Loading /></el-icon>\r\n        <span>加载中...</span>\r\n      </div>\r\n      \r\n      <div v-else-if=\"notifications.length === 0\" class=\"notification-empty\">\r\n        <el-empty description=\"暂无通知\" />\r\n      </div>\r\n      \r\n      <el-scrollbar max-height=\"300px\">\r\n        <div v-for=\"notification in notifications\" :key=\"notification.id\" class=\"notification-item\">\r\n          <div \r\n            class=\"notification-content\" \r\n            :class=\"{ 'is-unread': !notification.is_read }\"\r\n            @click=\"handleNotificationClick(notification)\"\r\n          >\r\n            <div class=\"notification-icon\">\r\n              <el-icon v-if=\"notification.type === 'like'\"><Star /></el-icon>\r\n              <el-icon v-else-if=\"notification.type === 'comment'\"><ChatDotRound /></el-icon>\r\n              <el-icon v-else-if=\"notification.type === 'follow'\"><User /></el-icon>\r\n              <el-icon v-else><Bell /></el-icon>\r\n            </div>\r\n            <div class=\"notification-body\">\r\n              <div class=\"notification-text\">{{ notification.content }}</div>\r\n              <div class=\"notification-time\">{{ formatTime(notification.created_at) }}</div>\r\n            </div>\r\n            <div class=\"notification-actions\">\r\n              <el-button \r\n                v-if=\"!notification.is_read\" \r\n                size=\"small\" \r\n                circle \r\n                @click.stop=\"markAsRead(notification.id)\"\r\n              >\r\n                <el-icon><Check /></el-icon>\r\n              </el-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-scrollbar>\r\n      \r\n      <div class=\"notification-footer\">\r\n        <el-button type=\"text\" @click=\"viewAllNotifications\">查看全部通知</el-button>\r\n      </div>\r\n    </el-popover>\r\n  </el-badge>\r\n</template>\r\n\r\n<script>\r\nimport { computed, onMounted, ref } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\nimport { Bell, Star, ChatDotRound, User, Check, Loading } from '@element-plus/icons-vue'\r\nimport webSocketManager from '@/utils/websocket'\r\n\r\nexport default {\r\n  name: 'NotificationBell',\r\n  setup() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const loading = ref(false)\r\n    \r\n    // 从Vuex获取通知数据\r\n    const notifications = computed(() => store.state.notifications)\r\n    const unreadCount = computed(() => store.state.unreadNotificationCount)\r\n    const hasUnread = computed(() => unreadCount.value > 0)\r\n    \r\n    // 加载通知数据\r\n    const loadNotifications = async () => {\r\n      loading.value = true\r\n      try {\r\n        await store.dispatch('fetchNotifications')\r\n      } catch (error) {\r\n        console.error('加载通知失败:', error)\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n    \r\n    // 初始化WebSocket连接\r\n    const initWebSocket = () => {\r\n      if (store.getters.isLoggedIn) {\r\n        webSocketManager.initNotificationSocket()\r\n      }\r\n    }\r\n    \r\n    // 标记通知为已读\r\n    const markAsRead = async (notificationId) => {\r\n      try {\r\n        // 使用WebSocket标记已读\r\n        webSocketManager.markNotificationRead(notificationId)\r\n        \r\n        // 备用方案：使用API标记已读\r\n        await store.dispatch('markNotificationRead', notificationId)\r\n      } catch (error) {\r\n        console.error('标记通知已读失败:', error)\r\n      }\r\n    }\r\n    \r\n    // 标记所有通知为已读\r\n    const markAllAsRead = async () => {\r\n      try {\r\n        // 使用WebSocket标记所有已读\r\n        webSocketManager.markAllNotificationsRead()\r\n        \r\n        // 备用方案：使用API标记所有已读\r\n        await store.dispatch('markAllNotificationsRead')\r\n      } catch (error) {\r\n        console.error('标记所有通知已读失败:', error)\r\n      }\r\n    }\r\n    \r\n    // 处理通知点击\r\n    const handleNotificationClick = (notification) => {\r\n      // 如果未读，标记为已读\r\n      if (!notification.is_read) {\r\n        markAsRead(notification.id)\r\n      }\r\n      \r\n      // 根据通知类型跳转到相应页面\r\n      // 这里需要根据实际情况实现\r\n      // 例如：点赞通知跳转到帖子，评论通知跳转到评论，系统通知可能不跳转\r\n    }\r\n    \r\n    // 查看所有通知\r\n    const viewAllNotifications = () => {\r\n      router.push('/notifications')\r\n    }\r\n    \r\n    // 处理弹出层显示\r\n    const handlePopoverShow = () => {\r\n      loadNotifications()\r\n    }\r\n    \r\n    // 格式化时间\r\n    const formatTime = (timestamp) => {\r\n      const date = new Date(timestamp)\r\n      const now = new Date()\r\n      const diffMs = now - date\r\n      const diffSec = Math.floor(diffMs / 1000)\r\n      const diffMin = Math.floor(diffSec / 60)\r\n      const diffHour = Math.floor(diffMin / 60)\r\n      const diffDay = Math.floor(diffHour / 24)\r\n      \r\n      if (diffSec < 60) {\r\n        return '刚刚'\r\n      } else if (diffMin < 60) {\r\n        return `${diffMin}分钟前`\r\n      } else if (diffHour < 24) {\r\n        return `${diffHour}小时前`\r\n      } else if (diffDay < 30) {\r\n        return `${diffDay}天前`\r\n      } else {\r\n        return date.toLocaleDateString()\r\n      }\r\n    }\r\n    \r\n    onMounted(() => {\r\n      // 加载未读通知数量\r\n      store.dispatch('fetchUnreadNotificationCount')\r\n      \r\n      // 初始化WebSocket\r\n      initWebSocket()\r\n    })\r\n    \r\n    return {\r\n      notifications,\r\n      unreadCount,\r\n      hasUnread,\r\n      loading,\r\n      markAsRead,\r\n      markAllAsRead,\r\n      handleNotificationClick,\r\n      viewAllNotifications,\r\n      handlePopoverShow,\r\n      formatTime,\r\n      // 图标\r\n      Bell,\r\n      Star,\r\n      ChatDotRound,\r\n      User,\r\n      Check,\r\n      Loading\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.notification-badge {\r\n  margin-right: 15px;\r\n}\r\n\r\n.notification-bell {\r\n  font-size: 20px;\r\n  color: #606266;\r\n}\r\n\r\n.notification-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n}\r\n\r\n.notification-header h3 {\r\n  margin: 0;\r\n  font-size: 16px;\r\n}\r\n\r\n.notification-loading, .notification-empty {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100px;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.notification-item {\r\n  padding: 10px;\r\n  border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\n.notification-content {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  cursor: pointer;\r\n  padding: 5px;\r\n  border-radius: 4px;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.notification-content:hover {\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.notification-content.is-unread {\r\n  background-color: #ecf5ff;\r\n}\r\n\r\n.notification-icon {\r\n  margin-right: 10px;\r\n  font-size: 18px;\r\n  color: #409eff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 30px;\r\n  height: 30px;\r\n}\r\n\r\n.notification-body {\r\n  flex: 1;\r\n}\r\n\r\n.notification-text {\r\n  font-size: 14px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.notification-time {\r\n  font-size: 12px;\r\n  color: #909399;\r\n}\r\n\r\n.notification-actions {\r\n  margin-left: 10px;\r\n}\r\n\r\n.notification-footer {\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 10px 0;\r\n  border-top: 1px solid #f0f0f0;\r\n  margin-top: 10px;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}