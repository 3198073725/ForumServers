{"ast":null,"code":"import _toConsumableArray from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"ranking-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"ranking-section\"\n};\nvar _hoisted_3 = {\n  \"class\": \"section-header\"\n};\nvar _hoisted_4 = {\n  \"class\": \"ranking-list\"\n};\nvar _hoisted_5 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_6 = {\n  key: 2,\n  \"class\": \"ranking-items\"\n};\nvar _hoisted_7 = {\n  \"class\": \"user-avatar\"\n};\nvar _hoisted_8 = {\n  \"class\": \"user-info\"\n};\nvar _hoisted_9 = {\n  \"class\": \"user-name\"\n};\nvar _hoisted_10 = {\n  \"class\": \"user-stats\"\n};\nvar _hoisted_11 = {\n  \"class\": \"ranking-value\"\n};\nvar _hoisted_12 = {\n  \"class\": \"ranking-section\"\n};\nvar _hoisted_13 = {\n  \"class\": \"section-header\"\n};\nvar _hoisted_14 = {\n  \"class\": \"ranking-list\"\n};\nvar _hoisted_15 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_16 = {\n  key: 2,\n  \"class\": \"ranking-items\"\n};\nvar _hoisted_17 = {\n  \"class\": \"post-info\"\n};\nvar _hoisted_18 = {\n  \"class\": \"post-title\"\n};\nvar _hoisted_19 = {\n  \"class\": \"post-meta\"\n};\nvar _hoisted_20 = {\n  \"class\": \"ranking-stats\"\n};\nvar _hoisted_21 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_22 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_23 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_24 = {\n  \"class\": \"ranking-section\"\n};\nvar _hoisted_25 = {\n  \"class\": \"section-header\"\n};\nvar _hoisted_26 = {\n  \"class\": \"ranking-list\"\n};\nvar _hoisted_27 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_28 = {\n  key: 2,\n  \"class\": \"ranking-items\"\n};\nvar _hoisted_29 = {\n  \"class\": \"board-info\"\n};\nvar _hoisted_30 = {\n  \"class\": \"board-name\"\n};\nvar _hoisted_31 = {\n  \"class\": \"board-description\"\n};\nvar _hoisted_32 = {\n  \"class\": \"ranking-stats\"\n};\nvar _hoisted_33 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_34 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_35 = {\n  \"class\": \"stat-item\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_option = _resolveComponent(\"el-option\");\n  var _component_el_select = _resolveComponent(\"el-select\");\n  var _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  var _component_el_empty = _resolveComponent(\"el-empty\");\n  var _component_user_avatar = _resolveComponent(\"user-avatar\");\n  var _component_router_link = _resolveComponent(\"router-link\");\n  var _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_View = _resolveComponent(\"View\");\n  var _component_el_icon = _resolveComponent(\"el-icon\");\n  var _component_ChatDotRound = _resolveComponent(\"ChatDotRound\");\n  var _component_Star = _resolveComponent(\"Star\");\n  var _component_Document = _resolveComponent(\"Document\");\n  var _component_User = _resolveComponent(\"User\");\n  var _component_el_tabs = _resolveComponent(\"el-tabs\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[9] || (_cache[9] = _createElementVNode(\"div\", {\n    \"class\": \"page-header\"\n  }, [_createElementVNode(\"h1\", null, \"排行榜\"), _createElementVNode(\"p\", null, \"查看论坛中最活跃的用户、最热门的帖子和板块\")], -1 /* HOISTED */)), _createVNode(_component_el_tabs, {\n    modelValue: $setup.activeTab,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n      return $setup.activeTab = $event;\n    }),\n    \"class\": \"ranking-tabs\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_tab_pane, {\n        label: \"用户排行\",\n        name: \"users\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"活跃用户排行\", -1 /* HOISTED */)), _createVNode(_component_el_select, {\n            modelValue: $setup.userRankingType,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n              return $setup.userRankingType = $event;\n            }),\n            placeholder: \"排序方式\",\n            size: \"small\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_option, {\n                label: \"发帖数量\",\n                value: \"posts_count\"\n              }), _createVNode(_component_el_option, {\n                label: \"获赞数量\",\n                value: \"likes_received\"\n              }), _createVNode(_component_el_option, {\n                label: \"注册时间\",\n                value: \"join_date\"\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])]), _createElementVNode(\"div\", _hoisted_4, [$setup.loading.users ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_el_skeleton, {\n            rows: 10,\n            animated: \"\"\n          })])) : !$setup.userRanking.length ? (_openBlock(), _createBlock(_component_el_empty, {\n            key: 1,\n            description: \"暂无数据\"\n          })) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.userRanking, function (user, index) {\n            return _openBlock(), _createElementBlock(\"div\", {\n              key: user.id,\n              \"class\": \"ranking-item\"\n            }, [_createElementVNode(\"div\", {\n              \"class\": _normalizeClass([\"rank-number\", {\n                'top-three': index < 3\n              }])\n            }, _toDisplayString(index + 1), 3 /* TEXT, CLASS */), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_user_avatar, {\n              user: user,\n              size: 40\n            }, null, 8 /* PROPS */, [\"user\"])]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_router_link, {\n              to: \"/profile/\".concat(user.id)\n            }, {\n              \"default\": _withCtx(function () {\n                return [_createTextVNode(_toDisplayString(user.nickname || user.username), 1 /* TEXT */)];\n              }),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"span\", null, \"发帖: \" + _toDisplayString(user.posts_count || 0), 1 /* TEXT */), _createElementVNode(\"span\", null, \"获赞: \" + _toDisplayString(user.likes_received || 0), 1 /* TEXT */), _createElementVNode(\"span\", null, \"注册于: \" + _toDisplayString($setup.formatDate(user.date_joined)), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_11, _toDisplayString($setup.getRankingValue(user, $setup.userRankingType)), 1 /* TEXT */)]);\n          }), 128 /* KEYED_FRAGMENT */))]))])])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_tab_pane, {\n        label: \"帖子排行\",\n        name: \"posts\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_cache[5] || (_cache[5] = _createElementVNode(\"h2\", null, \"热门帖子排行\", -1 /* HOISTED */)), _createVNode(_component_el_select, {\n            modelValue: $setup.postRankingType,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n              return $setup.postRankingType = $event;\n            }),\n            placeholder: \"排序方式\",\n            size: \"small\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_option, {\n                label: \"浏览量\",\n                value: \"views\"\n              }), _createVNode(_component_el_option, {\n                label: \"评论数\",\n                value: \"comments_count\"\n              }), _createVNode(_component_el_option, {\n                label: \"点赞数\",\n                value: \"likes_count\"\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])]), _createElementVNode(\"div\", _hoisted_14, [$setup.loading.posts ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createVNode(_component_el_skeleton, {\n            rows: 10,\n            animated: \"\"\n          })])) : !$setup.postRanking.length ? (_openBlock(), _createBlock(_component_el_empty, {\n            key: 1,\n            description: \"暂无数据\"\n          })) : (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.postRanking, function (post, index) {\n            return _openBlock(), _createElementBlock(\"div\", {\n              key: post.id,\n              \"class\": \"ranking-item\"\n            }, [_createElementVNode(\"div\", {\n              \"class\": _normalizeClass([\"rank-number\", {\n                'top-three': index < 3\n              }])\n            }, _toDisplayString(index + 1), 3 /* TEXT, CLASS */), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, [_createVNode(_component_router_link, {\n              to: \"/posts/\".concat(post.id)\n            }, {\n              \"default\": _withCtx(function () {\n                return [_createTextVNode(_toDisplayString(post.title), 1 /* TEXT */)];\n              }),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), post.is_pinned ? (_openBlock(), _createBlock(_component_el_tag, {\n              key: 0,\n              size: \"small\",\n              type: \"success\"\n            }, {\n              \"default\": _withCtx(function () {\n                return _toConsumableArray(_cache[6] || (_cache[6] = [_createTextVNode(\"置顶\")]));\n              }),\n              _: 1 /* STABLE */,\n              __: [6]\n            })) : _createCommentVNode(\"v-if\", true), post.is_featured ? (_openBlock(), _createBlock(_component_el_tag, {\n              key: 1,\n              size: \"small\",\n              type: \"warning\"\n            }, {\n              \"default\": _withCtx(function () {\n                return _toConsumableArray(_cache[7] || (_cache[7] = [_createTextVNode(\"精华\")]));\n              }),\n              _: 1 /* STABLE */,\n              __: [7]\n            })) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"span\", null, \"作者: \" + _toDisplayString(post.user.nickname || post.user.username), 1 /* TEXT */), _createElementVNode(\"span\", null, \"板块: \" + _toDisplayString(post.board_name), 1 /* TEXT */), _createElementVNode(\"span\", null, \"发布于: \" + _toDisplayString($setup.formatDate(post.created_at)), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [_createVNode(_component_el_icon, null, {\n              \"default\": _withCtx(function () {\n                return [_createVNode(_component_View)];\n              }),\n              _: 1 /* STABLE */\n            }), _createTextVNode(\" \" + _toDisplayString(post.views || 0), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_22, [_createVNode(_component_el_icon, null, {\n              \"default\": _withCtx(function () {\n                return [_createVNode(_component_ChatDotRound)];\n              }),\n              _: 1 /* STABLE */\n            }), _createTextVNode(\" \" + _toDisplayString(post.comments_count || 0), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_23, [_createVNode(_component_el_icon, null, {\n              \"default\": _withCtx(function () {\n                return [_createVNode(_component_Star)];\n              }),\n              _: 1 /* STABLE */\n            }), _createTextVNode(\" \" + _toDisplayString(post.likes_count || 0), 1 /* TEXT */)])])]);\n          }), 128 /* KEYED_FRAGMENT */))]))])])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_tab_pane, {\n        label: \"板块排行\",\n        name: \"boards\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"热门板块排行\", -1 /* HOISTED */)), _createVNode(_component_el_select, {\n            modelValue: $setup.boardRankingType,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n              return $setup.boardRankingType = $event;\n            }),\n            placeholder: \"排序方式\",\n            size: \"small\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_option, {\n                label: \"帖子数量\",\n                value: \"posts_count\"\n              }), _createVNode(_component_el_option, {\n                label: \"用户数量\",\n                value: \"users_count\"\n              }), _createVNode(_component_el_option, {\n                label: \"总浏览量\",\n                value: \"total_views\"\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])]), _createElementVNode(\"div\", _hoisted_26, [$setup.loading.boards ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, [_createVNode(_component_el_skeleton, {\n            rows: 10,\n            animated: \"\"\n          })])) : !$setup.boardRanking.length ? (_openBlock(), _createBlock(_component_el_empty, {\n            key: 1,\n            description: \"暂无数据\"\n          })) : (_openBlock(), _createElementBlock(\"div\", _hoisted_28, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.boardRanking, function (board, index) {\n            return _openBlock(), _createElementBlock(\"div\", {\n              key: board.id,\n              \"class\": \"ranking-item\"\n            }, [_createElementVNode(\"div\", {\n              \"class\": _normalizeClass([\"rank-number\", {\n                'top-three': index < 3\n              }])\n            }, _toDisplayString(index + 1), 3 /* TEXT, CLASS */), _createElementVNode(\"div\", _hoisted_29, [_createElementVNode(\"div\", _hoisted_30, [_createVNode(_component_router_link, {\n              to: \"/boards/\".concat(board.id)\n            }, {\n              \"default\": _withCtx(function () {\n                return [_createTextVNode(_toDisplayString(board.name), 1 /* TEXT */)];\n              }),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]), _createElementVNode(\"div\", _hoisted_31, _toDisplayString(board.description), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_32, [_createElementVNode(\"div\", _hoisted_33, [_createVNode(_component_el_icon, null, {\n              \"default\": _withCtx(function () {\n                return [_createVNode(_component_Document)];\n              }),\n              _: 1 /* STABLE */\n            }), _createTextVNode(\" \" + _toDisplayString(board.posts_count || 0) + \" 帖子 \", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_34, [_createVNode(_component_el_icon, null, {\n              \"default\": _withCtx(function () {\n                return [_createVNode(_component_User)];\n              }),\n              _: 1 /* STABLE */\n            }), _createTextVNode(\" \" + _toDisplayString(board.users_count || 0) + \" 用户 \", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_35, [_createVNode(_component_el_icon, null, {\n              \"default\": _withCtx(function () {\n                return [_createVNode(_component_View)];\n              }),\n              _: 1 /* STABLE */\n            }), _createTextVNode(\" \" + _toDisplayString(board.total_views || 0) + \" 浏览 \", 1 /* TEXT */)])])]);\n          }), 128 /* KEYED_FRAGMENT */))]))])])];\n        }),\n        _: 1 /* STABLE */\n      })];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_el_tabs","modelValue","$setup","activeTab","_cache","$event","_withCtx","_component_el_tab_pane","label","name","_hoisted_2","_hoisted_3","_component_el_select","userRankingType","placeholder","size","_component_el_option","value","_","_hoisted_4","loading","users","_hoisted_5","_component_el_skeleton","rows","animated","userRanking","length","_createBlock","_component_el_empty","description","_hoisted_6","_Fragment","_renderList","user","index","id","_normalizeClass","_hoisted_7","_component_user_avatar","_hoisted_8","_hoisted_9","_component_router_link","to","concat","_createTextVNode","_toDisplayString","nickname","username","_hoisted_10","posts_count","likes_received","formatDate","date_joined","_hoisted_11","getRankingValue","_hoisted_12","_hoisted_13","postRankingType","_hoisted_14","posts","_hoisted_15","postRanking","_hoisted_16","post","_hoisted_17","_hoisted_18","title","is_pinned","_component_el_tag","type","_toConsumableArray","__","_createCommentVNode","is_featured","_hoisted_19","board_name","created_at","_hoisted_20","_hoisted_21","_component_el_icon","_component_View","views","_hoisted_22","_component_ChatDotRound","comments_count","_hoisted_23","_component_Star","likes_count","_hoisted_24","_hoisted_25","boardRankingType","_hoisted_26","boards","_hoisted_27","boardRanking","_hoisted_28","board","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_component_Document","_hoisted_34","_component_User","users_count","_hoisted_35","total_views"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\Ranking.vue"],"sourcesContent":["<template>\r\n  <div class=\"ranking-container\">\r\n    <div class=\"page-header\">\r\n      <h1>排行榜</h1>\r\n      <p>查看论坛中最活跃的用户、最热门的帖子和板块</p>\r\n    </div>\r\n\r\n    <el-tabs v-model=\"activeTab\" class=\"ranking-tabs\">\r\n      <el-tab-pane label=\"用户排行\" name=\"users\">\r\n        <div class=\"ranking-section\">\r\n          <div class=\"section-header\">\r\n            <h2>活跃用户排行</h2>\r\n            <el-select v-model=\"userRankingType\" placeholder=\"排序方式\" size=\"small\">\r\n              <el-option label=\"发帖数量\" value=\"posts_count\" />\r\n              <el-option label=\"获赞数量\" value=\"likes_received\" />\r\n              <el-option label=\"注册时间\" value=\"join_date\" />\r\n            </el-select>\r\n          </div>\r\n\r\n          <div class=\"ranking-list\">\r\n            <div v-if=\"loading.users\" class=\"loading-container\">\r\n              <el-skeleton :rows=\"10\" animated />\r\n            </div>\r\n            <el-empty description=\"暂无数据\" v-else-if=\"!userRanking.length\"></el-empty>\r\n            <div v-else class=\"ranking-items\">\r\n              <div v-for=\"(user, index) in userRanking\" :key=\"user.id\" class=\"ranking-item\">\r\n                <div class=\"rank-number\" :class=\"{ 'top-three': index < 3 }\">{{ index + 1 }}</div>\r\n                <div class=\"user-avatar\">\r\n                  <user-avatar :user=\"user\" :size=\"40\" />\r\n                </div>\r\n                <div class=\"user-info\">\r\n                  <div class=\"user-name\">\r\n                    <router-link :to=\"`/profile/${user.id}`\">{{ user.nickname || user.username }}</router-link>\r\n                  </div>\r\n                  <div class=\"user-stats\">\r\n                    <span>发帖: {{ user.posts_count || 0 }}</span>\r\n                    <span>获赞: {{ user.likes_received || 0 }}</span>\r\n                    <span>注册于: {{ formatDate(user.date_joined) }}</span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"ranking-value\">\r\n                  {{ getRankingValue(user, userRankingType) }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n\r\n      <el-tab-pane label=\"帖子排行\" name=\"posts\">\r\n        <div class=\"ranking-section\">\r\n          <div class=\"section-header\">\r\n            <h2>热门帖子排行</h2>\r\n            <el-select v-model=\"postRankingType\" placeholder=\"排序方式\" size=\"small\">\r\n              <el-option label=\"浏览量\" value=\"views\" />\r\n              <el-option label=\"评论数\" value=\"comments_count\" />\r\n              <el-option label=\"点赞数\" value=\"likes_count\" />\r\n            </el-select>\r\n          </div>\r\n\r\n          <div class=\"ranking-list\">\r\n            <div v-if=\"loading.posts\" class=\"loading-container\">\r\n              <el-skeleton :rows=\"10\" animated />\r\n            </div>\r\n            <el-empty description=\"暂无数据\" v-else-if=\"!postRanking.length\"></el-empty>\r\n            <div v-else class=\"ranking-items\">\r\n              <div v-for=\"(post, index) in postRanking\" :key=\"post.id\" class=\"ranking-item\">\r\n                <div class=\"rank-number\" :class=\"{ 'top-three': index < 3 }\">{{ index + 1 }}</div>\r\n                <div class=\"post-info\">\r\n                  <div class=\"post-title\">\r\n                    <router-link :to=\"`/posts/${post.id}`\">{{ post.title }}</router-link>\r\n                    <el-tag size=\"small\" type=\"success\" v-if=\"post.is_pinned\">置顶</el-tag>\r\n                    <el-tag size=\"small\" type=\"warning\" v-if=\"post.is_featured\">精华</el-tag>\r\n                  </div>\r\n                  <div class=\"post-meta\">\r\n                    <span>作者: {{ post.user.nickname || post.user.username }}</span>\r\n                    <span>板块: {{ post.board_name }}</span>\r\n                    <span>发布于: {{ formatDate(post.created_at) }}</span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"ranking-stats\">\r\n                  <div class=\"stat-item\">\r\n                    <el-icon><View /></el-icon> {{ post.views || 0 }}\r\n                  </div>\r\n                  <div class=\"stat-item\">\r\n                    <el-icon><ChatDotRound /></el-icon> {{ post.comments_count || 0 }}\r\n                  </div>\r\n                  <div class=\"stat-item\">\r\n                    <el-icon><Star /></el-icon> {{ post.likes_count || 0 }}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n\r\n      <el-tab-pane label=\"板块排行\" name=\"boards\">\r\n        <div class=\"ranking-section\">\r\n          <div class=\"section-header\">\r\n            <h2>热门板块排行</h2>\r\n            <el-select v-model=\"boardRankingType\" placeholder=\"排序方式\" size=\"small\">\r\n              <el-option label=\"帖子数量\" value=\"posts_count\" />\r\n              <el-option label=\"用户数量\" value=\"users_count\" />\r\n              <el-option label=\"总浏览量\" value=\"total_views\" />\r\n            </el-select>\r\n          </div>\r\n\r\n          <div class=\"ranking-list\">\r\n            <div v-if=\"loading.boards\" class=\"loading-container\">\r\n              <el-skeleton :rows=\"10\" animated />\r\n            </div>\r\n            <el-empty description=\"暂无数据\" v-else-if=\"!boardRanking.length\"></el-empty>\r\n            <div v-else class=\"ranking-items\">\r\n              <div v-for=\"(board, index) in boardRanking\" :key=\"board.id\" class=\"ranking-item\">\r\n                <div class=\"rank-number\" :class=\"{ 'top-three': index < 3 }\">{{ index + 1 }}</div>\r\n                <div class=\"board-info\">\r\n                  <div class=\"board-name\">\r\n                    <router-link :to=\"`/boards/${board.id}`\">{{ board.name }}</router-link>\r\n                  </div>\r\n                  <div class=\"board-description\">\r\n                    {{ board.description }}\r\n                  </div>\r\n                </div>\r\n                <div class=\"ranking-stats\">\r\n                  <div class=\"stat-item\">\r\n                    <el-icon><Document /></el-icon> {{ board.posts_count || 0 }} 帖子\r\n                  </div>\r\n                  <div class=\"stat-item\">\r\n                    <el-icon><User /></el-icon> {{ board.users_count || 0 }} 用户\r\n                  </div>\r\n                  <div class=\"stat-item\">\r\n                    <el-icon><View /></el-icon> {{ board.total_views || 0 }} 浏览\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\nimport { View, ChatDotRound, Star, Document, User } from '@element-plus/icons-vue'\r\nimport { getHotUsers } from '../api/profile'\r\nimport { getPostList } from '../api/post'\r\nimport { getHotBoards } from '../api/board'\r\nimport { formatDateTime } from '../utils/index'\r\nimport UserAvatar from '../components/UserAvatar.vue'\r\n\r\nexport default {\r\n  name: 'Ranking',\r\n  components: {\r\n    UserAvatar,\r\n    View,\r\n    ChatDotRound,\r\n    Star,\r\n    Document,\r\n    User\r\n  },\r\n  setup() {\r\n    const activeTab = ref('users')\r\n    const userRankingType = ref('posts_count')\r\n    const postRankingType = ref('views')\r\n    const boardRankingType = ref('posts_count')\r\n\r\n    const userRanking = ref([])\r\n    const postRanking = ref([])\r\n    const boardRanking = ref([])\r\n\r\n    const loading = reactive({\r\n      users: false,\r\n      posts: false,\r\n      boards: false\r\n    })\r\n\r\n    // 格式化日期\r\n    const formatDate = (date) => {\r\n      return formatDateTime(date)\r\n    }\r\n\r\n    // 根据排序类型获取排行值\r\n    const getRankingValue = (item, type) => {\r\n      switch (type) {\r\n        case 'posts_count':\r\n          return `${item.posts_count || 0} 帖子`\r\n        case 'likes_received':\r\n          return `${item.likes_received || 0} 获赞`\r\n        case 'join_date':\r\n          return formatDate(item.date_joined)\r\n        default:\r\n          return item[type] || 0\r\n      }\r\n    }\r\n\r\n    // 获取用户排行\r\n    const fetchUserRanking = async () => {\r\n      loading.users = true\r\n      try {\r\n        const response = await getHotUsers(20)\r\n        \r\n        if (response && response.code === 0 && response.data) {\r\n          userRanking.value = response.data\r\n        } else if (response && Array.isArray(response)) {\r\n          userRanking.value = response\r\n        } else if (response && response.status === 0 && response.data) {\r\n          userRanking.value = response.data\r\n        } else {\r\n          console.error('获取用户排行失败:', response ? response.msg : '未知错误')\r\n          userRanking.value = []\r\n        }\r\n        \r\n        // 根据当前选择的排序类型排序\r\n        sortUserRanking()\r\n      } catch (error) {\r\n        console.error('获取用户排行失败:', error)\r\n        ElMessage.error('获取用户排行失败，请稍后再试')\r\n        userRanking.value = []\r\n      } finally {\r\n        loading.users = false\r\n      }\r\n    }\r\n\r\n    // 获取帖子排行\r\n    const fetchPostRanking = async () => {\r\n      loading.posts = true\r\n      try {\r\n        const response = await getPostList({\r\n          page: 1,\r\n          page_size: 20,\r\n          ordering: `-${postRankingType.value}`\r\n        })\r\n\r\n        if (response && response.count !== undefined) {\r\n          postRanking.value = response.results || []\r\n        } else if (response && response.code === 0) {\r\n          postRanking.value = response.data.results || []\r\n        } else {\r\n          console.error('获取帖子排行失败:', response ? response.msg : '未知错误')\r\n          postRanking.value = []\r\n        }\r\n      } catch (error) {\r\n        console.error('获取帖子排行失败:', error)\r\n        ElMessage.error('获取帖子排行失败，请稍后再试')\r\n        postRanking.value = []\r\n      } finally {\r\n        loading.posts = false\r\n      }\r\n    }\r\n\r\n    // 获取板块排行\r\n    const fetchBoardRanking = async () => {\r\n      loading.boards = true\r\n      try {\r\n        const response = await getHotBoards(20)\r\n\r\n        if (response && response.status === 0 && response.data) {\r\n          boardRanking.value = response.data\r\n        } else if (response && response.code === 0 && response.data) {\r\n          boardRanking.value = response.data\r\n        } else if (response && Array.isArray(response)) {\r\n          boardRanking.value = response\r\n        } else {\r\n          console.error('获取板块排行失败:', response ? response.msg : '未知错误')\r\n          boardRanking.value = []\r\n        }\r\n        \r\n        // 根据当前选择的排序类型排序\r\n        sortBoardRanking()\r\n      } catch (error) {\r\n        console.error('获取板块排行失败:', error)\r\n        ElMessage.error('获取板块排行失败，请稍后再试')\r\n        boardRanking.value = []\r\n      } finally {\r\n        loading.boards = false\r\n      }\r\n    }\r\n\r\n    // 排序用户排行榜\r\n    const sortUserRanking = () => {\r\n      userRanking.value.sort((a, b) => {\r\n        const valueA = a[userRankingType.value] || 0\r\n        const valueB = b[userRankingType.value] || 0\r\n        \r\n        if (userRankingType.value === 'join_date') {\r\n          // 注册时间从早到晚\r\n          return new Date(a.date_joined) - new Date(b.date_joined)\r\n        } else {\r\n          // 其他从高到低\r\n          return valueB - valueA\r\n        }\r\n      })\r\n    }\r\n\r\n    // 排序板块排行榜\r\n    const sortBoardRanking = () => {\r\n      boardRanking.value.sort((a, b) => {\r\n        const valueA = a[boardRankingType.value] || 0\r\n        const valueB = b[boardRankingType.value] || 0\r\n        return valueB - valueA\r\n      })\r\n    }\r\n\r\n    // 监听排序类型变化\r\n    const handleUserRankingTypeChange = () => {\r\n      sortUserRanking()\r\n    }\r\n\r\n    const handlePostRankingTypeChange = () => {\r\n      fetchPostRanking()\r\n    }\r\n\r\n    const handleBoardRankingTypeChange = () => {\r\n      sortBoardRanking()\r\n    }\r\n\r\n    // 监听标签页切换\r\n    const handleTabChange = (tab) => {\r\n      if (tab === 'users' && userRanking.value.length === 0) {\r\n        fetchUserRanking()\r\n      } else if (tab === 'posts' && postRanking.value.length === 0) {\r\n        fetchPostRanking()\r\n      } else if (tab === 'boards' && boardRanking.value.length === 0) {\r\n        fetchBoardRanking()\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n      // 加载默认标签页的数据\r\n      fetchUserRanking()\r\n    })\r\n\r\n    return {\r\n      activeTab,\r\n      userRankingType,\r\n      postRankingType,\r\n      boardRankingType,\r\n      userRanking,\r\n      postRanking,\r\n      boardRanking,\r\n      loading,\r\n      formatDate,\r\n      getRankingValue,\r\n      handleUserRankingTypeChange,\r\n      handlePostRankingTypeChange,\r\n      handleBoardRankingTypeChange,\r\n      handleTabChange\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.ranking-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.page-header {\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.page-header h1 {\r\n  font-size: 28px;\r\n  color: #303133;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.page-header p {\r\n  color: #606266;\r\n  font-size: 16px;\r\n}\r\n\r\n.ranking-tabs {\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\r\n  padding: 20px;\r\n}\r\n\r\n.section-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.section-header h2 {\r\n  margin: 0;\r\n  font-size: 20px;\r\n  color: #303133;\r\n}\r\n\r\n.ranking-list {\r\n  margin-top: 20px;\r\n}\r\n\r\n.ranking-items {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n}\r\n\r\n.ranking-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 15px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.ranking-item:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.rank-number {\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  background-color: #909399;\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  margin-right: 15px;\r\n}\r\n\r\n.rank-number.top-three {\r\n  background-color: #e6a23c;\r\n}\r\n\r\n.rank-number.top-three:first-child {\r\n  background-color: #f56c6c;\r\n}\r\n\r\n.user-avatar {\r\n  margin-right: 15px;\r\n}\r\n\r\n.user-info, .post-info, .board-info {\r\n  flex: 1;\r\n}\r\n\r\n.user-name, .post-title, .board-name {\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.user-name a, .post-title a, .board-name a {\r\n  color: #303133;\r\n  text-decoration: none;\r\n}\r\n\r\n.user-name a:hover, .post-title a:hover, .board-name a:hover {\r\n  color: #409eff;\r\n}\r\n\r\n.user-stats, .post-meta {\r\n  display: flex;\r\n  gap: 15px;\r\n  color: #909399;\r\n  font-size: 13px;\r\n}\r\n\r\n.board-description {\r\n  color: #606266;\r\n  font-size: 14px;\r\n  margin-top: 5px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n}\r\n\r\n.ranking-value {\r\n  font-weight: bold;\r\n  color: #409eff;\r\n  margin-left: 15px;\r\n}\r\n\r\n.ranking-stats {\r\n  display: flex;\r\n  gap: 15px;\r\n}\r\n\r\n.stat-item {\r\n  display: flex;\r\n  align-items: center;\r\n  color: #606266;\r\n  font-size: 14px;\r\n}\r\n\r\n.stat-item .el-icon {\r\n  margin-right: 5px;\r\n}\r\n\r\n.loading-container {\r\n  padding: 20px 0;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}