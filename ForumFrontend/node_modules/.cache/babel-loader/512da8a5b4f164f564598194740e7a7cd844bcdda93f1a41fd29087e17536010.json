{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.symbol.js\");\nrequire(\"core-js/modules/es.symbol.description.js\");\nrequire(\"core-js/modules/es.function.name.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/es.regexp.exec.js\");\nrequire(\"core-js/modules/es.string.replace.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar lodashUnified = require('lodash-unified');\nvar en = require('../../locale/lang/en.js');\nvar buildTranslator = function buildTranslator(locale) {\n  return function (path, option) {\n    return translate(path, option, vue.unref(locale));\n  };\n};\nvar translate = function translate(path, option, locale) {\n  return lodashUnified.get(locale, path, path).replace(/\\{(\\w+)\\}/g, function (_, key) {\n    var _a;\n    return \"\".concat((_a = option == null ? void 0 : option[key]) != null ? _a : \"{\".concat(key, \"}\"));\n  });\n};\nvar buildLocaleContext = function buildLocaleContext(locale) {\n  var lang = vue.computed(function () {\n    return vue.unref(locale).name;\n  });\n  var localeRef = vue.isRef(locale) ? locale : vue.ref(locale);\n  return {\n    lang: lang,\n    locale: localeRef,\n    t: buildTranslator(locale)\n  };\n};\nvar localeContextKey = Symbol(\"localeContextKey\");\nvar useLocale = function useLocale(localeOverrides) {\n  var locale = localeOverrides || vue.inject(localeContextKey, vue.ref());\n  return buildLocaleContext(vue.computed(function () {\n    return locale.value || en[\"default\"];\n  }));\n};\nexports.buildLocaleContext = buildLocaleContext;\nexports.buildTranslator = buildTranslator;\nexports.localeContextKey = localeContextKey;\nexports.translate = translate;\nexports.useLocale = useLocale;","map":{"version":3,"names":["buildTranslator","locale","path","option","translate","vue","unref","lodashUnified","get","replace","_","key","_a","concat","buildLocaleContext","lang","computed","name","localeRef","isRef","ref","t","localeContextKey","Symbol","useLocale","localeOverrides","inject","value","en"],"sources":["../../../../../packages/hooks/use-locale/index.ts"],"sourcesContent":["import { computed, inject, isRef, ref, unref } from 'vue'\nimport { get } from 'lodash-unified'\nimport English from '@element-plus/locale/lang/en'\n\nimport type { MaybeRef } from '@vueuse/core'\nimport type { InjectionKey, Ref } from 'vue'\nimport type { Language } from '@element-plus/locale'\n\nexport type TranslatorOption = Record<string, string | number>\nexport type Translator = (path: string, option?: TranslatorOption) => string\nexport type LocaleContext = {\n  locale: Ref<Language>\n  lang: Ref<string>\n  t: Translator\n}\n\nexport const buildTranslator =\n  (locale: MaybeRef<Language>): Translator =>\n  (path, option) =>\n    translate(path, option, unref(locale))\n\nexport const translate = (\n  path: string,\n  option: undefined | TranslatorOption,\n  locale: Language\n): string =>\n  (get(locale, path, path) as string).replace(\n    /\\{(\\w+)\\}/g,\n    (_, key) => `${option?.[key] ?? `{${key}}`}`\n  )\n\nexport const buildLocaleContext = (\n  locale: MaybeRef<Language>\n): LocaleContext => {\n  const lang = computed(() => unref(locale).name)\n  const localeRef = isRef(locale) ? locale : ref(locale)\n  return {\n    lang,\n    locale: localeRef,\n    t: buildTranslator(locale),\n  }\n}\n\nexport const localeContextKey: InjectionKey<Ref<Language | undefined>> =\n  Symbol('localeContextKey')\n\nexport const useLocale = (localeOverrides?: Ref<Language | undefined>) => {\n  const locale = localeOverrides || inject(localeContextKey, ref())!\n  return buildLocaleContext(computed(() => locale.value || English))\n}\n"],"mappings":";;;;;;;;;;;;;;;AAGY,IAACA,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,MAAM;EAAA,OAAK,UAACC,IAAI,EAAEC,MAAM;IAAA,OAAKC,SAAS,CAACF,IAAI,EAAEC,MAAM,EAAEE,GAAA,CAAAC,KAAK,CAACL,MAAM,CAAC;EAAA;AAAA;AACtF,IAACG,SAAS,GAAG,SAAZA,SAASA,CAAIF,IAAI,EAAEC,MAAM,EAAEF,MAAM;EAAA,OAAKM,aAAA,CAAAC,GAAG,CAACP,MAAM,EAAEC,IAAI,EAAEA,IAAI,CAAC,CAACO,OAAO,CAAC,YAAY,EAAE,UAACC,CAAC,EAAEC,GAAG,EAAK;IAC3G,IAAIC,EAAE;IACN,UAAAC,MAAA,CAAU,CAACD,EAAE,GAAGT,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACQ,GAAG,CAAC,KAAK,IAAI,GAAGC,EAAE,OAAAC,MAAA,CAAOF,GAAG,MAAG;EAClF,CAAC;AAAA;AACW,IAACG,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIb,MAAM,EAAK;EAC5C,IAAMc,IAAI,GAAGV,GAAA,CAAAW,QAAQ,CAAC;IAAA,OAAMX,GAAA,CAAAC,KAAK,CAACL,MAAM,CAAC,CAACgB,IAAI;EAAA,EAAC;EAC/C,IAAMC,SAAS,GAAGb,GAAA,CAAAc,KAAK,CAAClB,MAAM,CAAC,GAAGA,MAAM,GAAGI,GAAA,CAAAe,GAAG,CAACnB,MAAM,CAAC;EACtD,OAAO;IACLc,IAAI,EAAJA,IAAI;IACJd,MAAM,EAAEiB,SAAS;IACjBG,CAAC,EAAErB,eAAe,CAACC,MAAM;EAC7B,CAAG;AACH;AACY,IAACqB,gBAAgB,GAAGC,MAAM,CAAC,kBAAkB;AAC7C,IAACC,SAAS,GAAG,SAAZA,SAASA,CAAIC,eAAe,EAAK;EAC5C,IAAMxB,MAAM,GAAGwB,eAAe,IAAIpB,GAAA,CAAAqB,MAAM,CAACJ,gBAAgB,EAAEjB,GAAA,CAAAe,GAAG,EAAE,CAAC;EACjE,OAAON,kBAAkB,CAACT,GAAA,CAAAW,QAAQ,CAAC;IAAA,OAAMf,MAAM,CAAC0B,KAAK,IAAIC,EAAA,WAAO;EAAA,EAAC,CAAC;AACpE","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}