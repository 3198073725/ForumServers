{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/toConsumableArray.js\")[\"default\"];\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.array.concat.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar content = require('./content.js');\nvar trigger = require('./trigger.js');\nvar popper = require('../../popper/src/popper.js');\nvar arrow = require('../../popper/src/arrow.js');\nvar index = require('../../../hooks/use-model-toggle/index.js');\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar _index$createModelTog = index.createModelToggleComposable(\"visible\"),\n  useTooltipModelToggleProps = _index$createModelTog.useModelToggleProps,\n  useTooltipModelToggleEmits = _index$createModelTog.useModelToggleEmits,\n  useTooltipModelToggle = _index$createModelTog.useModelToggle;\nvar useTooltipProps = runtime.buildProps(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, popper.popperProps), useTooltipModelToggleProps), content.useTooltipContentProps), trigger.useTooltipTriggerProps), arrow.popperArrowProps), {}, {\n  showArrow: {\n    type: Boolean,\n    \"default\": true\n  }\n}));\nvar tooltipEmits = [].concat(_toConsumableArray(useTooltipModelToggleEmits), [\"before-show\", \"before-hide\", \"show\", \"hide\", \"open\", \"close\"]);\nexports.tooltipEmits = tooltipEmits;\nexports.useTooltipModelToggle = useTooltipModelToggle;\nexports.useTooltipModelToggleEmits = useTooltipModelToggleEmits;\nexports.useTooltipModelToggleProps = useTooltipModelToggleProps;\nexports.useTooltipProps = useTooltipProps;","map":{"version":3,"names":["_index$createModelTog","index","createModelToggleComposable","useTooltipModelToggleProps","useModelToggleProps","useTooltipModelToggleEmits","useModelToggleEmits","useTooltipModelToggle","useModelToggle","useTooltipProps","runtime","buildProps","_objectSpread","popper","popperProps","content","useTooltipContentProps","trigger","useTooltipTriggerProps","arrow","popperArrowProps","showArrow","type","Boolean","tooltipEmits","concat","_toConsumableArray"],"sources":["../../../../../../packages/components/tooltip/src/tooltip.ts"],"sourcesContent":["import { buildProps } from '@element-plus/utils'\nimport { createModelToggleComposable } from '@element-plus/hooks'\nimport { popperArrowProps, popperProps } from '@element-plus/components/popper'\nimport { useTooltipContentProps } from './content'\nimport { useTooltipTriggerProps } from './trigger'\nimport type Tooltip from './tooltip.vue'\n\nimport type { ExtractPropTypes } from 'vue'\n\nexport const {\n  useModelToggleProps: useTooltipModelToggleProps,\n  useModelToggleEmits: useTooltipModelToggleEmits,\n  useModelToggle: useTooltipModelToggle,\n} = createModelToggleComposable('visible' as const)\n\nexport const useTooltipProps = buildProps({\n  ...popperProps,\n  ...useTooltipModelToggleProps,\n  ...useTooltipContentProps,\n  ...useTooltipTriggerProps,\n  ...popperArrowProps,\n  /**\n   * @description whether the tooltip content has an arrow\n   */\n  showArrow: {\n    type: Boolean,\n    default: true,\n  },\n})\n\nexport const tooltipEmits = [\n  ...useTooltipModelToggleEmits,\n  'before-show',\n  'before-hide',\n  'show',\n  'hide',\n  'open',\n  'close',\n]\n\nexport type ElTooltipProps = ExtractPropTypes<typeof useTooltipProps>\n\nexport type TooltipInstance = InstanceType<typeof Tooltip> & unknown\n"],"mappings":";;;;;;;;;;;;;;;AAKY,IAAAA,qBAAA,GAIRC,KAAA,CAAAC,2BAA2B,CAAC,SAAS;EAHlBC,0BAA0B,GAAAH,qBAAA,CAA/CI,mBAAmB;EACEC,0BAA0B,GAAAL,qBAAA,CAA/CM,mBAAmB;EACHC,qBAAqB,GAAAP,qBAAA,CAArCQ,cAAc;AAEJ,IAACC,eAAe,GAAGC,OAAA,CAAAC,UAAU,CAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACpCC,MAAA,CAAAC,WAAW,GACXX,0BAA0B,GAC1BY,OAAA,CAAAC,sBAAsB,GACtBC,OAAA,CAAAC,sBAAsB,GACtBC,KAAA,CAAAC,gBAAgB;EACnBC,SAAS,EAAE;IACTC,IAAI,EAAEC,OAAO;IACb,WAAS;EACb;AAAG,EACF;AACW,IAACC,YAAY,MAAAC,MAAA,CAAAC,kBAAA,CACpBrB,0BAA0B,IAC7B,aAAa,EACb,aAAa,EACb,MAAM,EACN,MAAM,EACN,MAAM,EACN,OAAO,EACT","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}