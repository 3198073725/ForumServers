{"ast":null,"code":"import _toConsumableArray from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock, withKeys as _withKeys, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"board-detail-container\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_3 = {\n  key: 1,\n  \"class\": \"board-header\"\n};\nvar _hoisted_4 = {\n  \"class\": \"board-title\"\n};\nvar _hoisted_5 = {\n  \"class\": \"board-description\"\n};\nvar _hoisted_6 = {\n  \"class\": \"board-meta\"\n};\nvar _hoisted_7 = {\n  \"class\": \"board-actions\"\n};\nvar _hoisted_8 = {\n  slot: \"header\",\n  \"class\": \"clearfix\"\n};\nvar _hoisted_9 = {\n  \"class\": \"post-filter\"\n};\nvar _hoisted_10 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_11 = {\n  key: 1\n};\nvar _hoisted_12 = {\n  key: 0,\n  \"class\": \"empty-posts\"\n};\nvar _hoisted_13 = {\n  key: 1,\n  \"class\": \"post-list\"\n};\nvar _hoisted_14 = [\"onClick\"];\nvar _hoisted_15 = {\n  \"class\": \"post-title\"\n};\nvar _hoisted_16 = {\n  \"class\": \"post-meta\"\n};\nvar _hoisted_17 = {\n  \"class\": \"post-author\"\n};\nvar _hoisted_18 = {\n  \"class\": \"post-stats\"\n};\nvar _hoisted_19 = {\n  \"class\": \"post-time\"\n};\nvar _hoisted_20 = {\n  \"class\": \"pagination-container\"\n};\nvar _hoisted_21 = {\n  slot: \"footer\",\n  \"class\": \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _component_el_option = _resolveComponent(\"el-option\");\n  var _component_el_select = _resolveComponent(\"el-select\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_el_pagination = _resolveComponent(\"el-pagination\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 板块信息卡片 \"), _createVNode(_component_el_card, {\n    \"class\": \"board-info-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_skeleton, {\n        rows: 3,\n        animated: \"\"\n      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[5] || (_cache[5] = _createElementVNode(\"i\", {\n        \"class\": \"el-icon-s-grid\"\n      }, null, -1 /* HOISTED */)), _createElementVNode(\"h2\", null, _toDisplayString($data.board.name), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_5, _toDisplayString($data.board.description), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"span\", null, \"帖子数: \" + _toDisplayString($data.board.posts_count || 0), 1 /* TEXT */), _createElementVNode(\"span\", null, \"创建时间: \" + _toDisplayString($options.formatDate($data.board.created_at)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.handleCreatePost\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[6] || (_cache[6] = [_createTextVNode(\"发布新帖\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [6]\n      }, 8 /* PROPS */, [\"onClick\"]), _ctx.isAdmin ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 0,\n        type: \"text\",\n        onClick: $options.handleEditBoard\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[7] || (_cache[7] = [_createTextVNode(\"编辑板块\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [7]\n      }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])]))];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 帖子列表 \"), _createVNode(_component_el_card, {\n    \"class\": \"post-list-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_8, [_cache[8] || (_cache[8] = _createElementVNode(\"span\", null, \"帖子列表\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_el_select, {\n        modelValue: $data.listQuery.ordering,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return $data.listQuery.ordering = $event;\n        }),\n        placeholder: \"排序方式\",\n        onChange: $options.fetchPosts\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_option, {\n            label: \"最新发布\",\n            value: \"-created_at\"\n          }), _createVNode(_component_el_option, {\n            label: \"最多浏览\",\n            value: \"-views\"\n          }), _createVNode(_component_el_option, {\n            label: \"最多点赞\",\n            value: \"-likes_count\"\n          }), _createVNode(_component_el_option, {\n            label: \"最多评论\",\n            value: \"-comments_count\"\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\", \"onChange\"]), _createVNode(_component_el_input, {\n        modelValue: $data.listQuery.search,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n          return $data.listQuery.search = $event;\n        }),\n        placeholder: \"搜索帖子\",\n        style: {\n          \"width\": \"200px\",\n          \"margin-left\": \"10px\"\n        },\n        clearable: \"\",\n        onKeyup: _withKeys($options.fetchPosts, [\"enter\", \"native\"]),\n        onClear: $options.fetchPosts\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_button, {\n            slot: \"append\",\n            icon: \"el-icon-search\",\n            onClick: $options.fetchPosts\n          }, null, 8 /* PROPS */, [\"onClick\"])];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\", \"onKeyup\", \"onClear\"])])]), $data.postsLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createVNode(_component_el_skeleton, {\n        rows: 5,\n        animated: \"\"\n      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [$data.posts.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, _cache[9] || (_cache[9] = [_createElementVNode(\"i\", {\n        \"class\": \"el-icon-document\"\n      }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"暂无帖子，快来发布第一篇帖子吧！\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, function (post) {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: post.id,\n          \"class\": \"post-item\",\n          onClick: function onClick($event) {\n            return $options.viewPost(post);\n          }\n        }, [_createElementVNode(\"div\", _hoisted_15, [post.is_pinned ? (_openBlock(), _createBlock(_component_el_tag, {\n          key: 0,\n          size: \"mini\",\n          type: \"danger\"\n        }, {\n          \"default\": _withCtx(function () {\n            return _toConsumableArray(_cache[10] || (_cache[10] = [_createTextVNode(\"置顶\")]));\n          }),\n          _: 1 /* STABLE */,\n          __: [10]\n        })) : _createCommentVNode(\"v-if\", true), post.is_featured ? (_openBlock(), _createBlock(_component_el_tag, {\n          key: 1,\n          size: \"mini\",\n          type: \"success\"\n        }, {\n          \"default\": _withCtx(function () {\n            return _toConsumableArray(_cache[11] || (_cache[11] = [_createTextVNode(\"精华\")]));\n          }),\n          _: 1 /* STABLE */,\n          __: [11]\n        })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"span\", null, _toDisplayString(post.title), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [_cache[12] || (_cache[12] = _createElementVNode(\"i\", {\n          \"class\": \"el-icon-user\"\n        }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, _toDisplayString(post.user.nickname || post.user.username), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"span\", null, [_cache[13] || (_cache[13] = _createElementVNode(\"i\", {\n          \"class\": \"el-icon-view\"\n        }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(post.views), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_cache[14] || (_cache[14] = _createElementVNode(\"i\", {\n          \"class\": \"el-icon-star-on\"\n        }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(post.likes_count), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_cache[15] || (_cache[15] = _createElementVNode(\"i\", {\n          \"class\": \"el-icon-chat-dot-round\"\n        }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(post.comments_count), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_19, _toDisplayString($options.formatDate(post.created_at)), 1 /* TEXT */)])], 8 /* PROPS */, _hoisted_14);\n      }), 128 /* KEYED_FRAGMENT */))])), _createCommentVNode(\" 分页 \"), _createElementVNode(\"div\", _hoisted_20, [_createVNode(_component_el_pagination, {\n        background: \"\",\n        layout: \"prev, pager, next\",\n        total: $data.total,\n        \"page-size\": $data.listQuery.limit,\n        \"current-page\": $data.listQuery.page,\n        onCurrentChange: $options.handlePageChange\n      }, null, 8 /* PROPS */, [\"total\", \"page-size\", \"current-page\", \"onCurrentChange\"])])]))];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 编辑板块对话框 \"), _createVNode(_component_el_dialog, {\n    title: \"编辑板块\",\n    visible: $data.dialogVisible,\n    width: \"500px\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        ref: \"boardForm\",\n        model: $data.boardForm,\n        rules: $data.boardRules,\n        \"label-width\": \"80px\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"板块名称\",\n            prop: \"name\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $data.boardForm.name,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                  return $data.boardForm.name = $event;\n                }),\n                placeholder: \"请输入板块名称\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"板块描述\",\n            prop: \"description\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $data.boardForm.description,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                  return $data.boardForm.description = $event;\n                }),\n                type: \"textarea\",\n                rows: 4,\n                placeholder: \"请输入板块描述\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\", \"rules\"]), _createElementVNode(\"span\", _hoisted_21, [_createVNode(_component_el_button, {\n        onClick: _cache[4] || (_cache[4] = function ($event) {\n          return $data.dialogVisible = false;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[16] || (_cache[16] = [_createTextVNode(\"取 消\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [16]\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.submitBoardForm\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[17] || (_cache[17] = [_createTextVNode(\"确 定\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [17]\n      }, 8 /* PROPS */, [\"onClick\"])])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\"])]);\n}","map":{"version":3,"names":["key","slot","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_el_card","_withCtx","$data","loading","_hoisted_2","_component_el_skeleton","rows","animated","_hoisted_3","_createElementVNode","_hoisted_4","_toDisplayString","board","name","_hoisted_5","description","_hoisted_6","posts_count","$options","formatDate","created_at","_hoisted_7","_component_el_button","type","onClick","handleCreatePost","_cache","_createTextVNode","_","__","_ctx","isAdmin","_createBlock","handleEditBoard","_hoisted_8","_hoisted_9","_component_el_select","modelValue","listQuery","ordering","$event","placeholder","onChange","fetchPosts","_component_el_option","label","value","_component_el_input","search","style","clearable","onKeyup","_withKeys","onClear","icon","postsLoading","_hoisted_10","_hoisted_11","posts","length","_hoisted_12","_hoisted_13","_Fragment","_renderList","post","id","viewPost","_hoisted_15","is_pinned","_component_el_tag","size","_toConsumableArray","is_featured","title","_hoisted_16","_hoisted_17","user","nickname","username","_hoisted_18","views","likes_count","comments_count","_hoisted_19","_hoisted_14","_hoisted_20","_component_el_pagination","background","layout","total","limit","page","onCurrentChange","handlePageChange","_component_el_dialog","visible","dialogVisible","width","_component_el_form","ref","model","boardForm","rules","boardRules","_component_el_form_item","prop","_hoisted_21","submitBoardForm"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\board\\BoardDetail.vue"],"sourcesContent":["<template>\n  <div class=\"board-detail-container\">\n    <!-- 板块信息卡片 -->\n    <el-card class=\"board-info-card\">\n      <div v-if=\"loading\" class=\"loading-container\">\n        <el-skeleton :rows=\"3\" animated />\n      </div>\n      <div v-else class=\"board-header\">\n        <div class=\"board-title\">\n          <i class=\"el-icon-s-grid\"></i>\n          <h2>{{ board.name }}</h2>\n        </div>\n        <div class=\"board-description\">{{ board.description }}</div>\n        <div class=\"board-meta\">\n          <span>帖子数: {{ board.posts_count || 0 }}</span>\n          <span>创建时间: {{ formatDate(board.created_at) }}</span>\n        </div>\n        <div class=\"board-actions\">\n          <el-button type=\"primary\" @click=\"handleCreatePost\">发布新帖</el-button>\n          <el-button v-if=\"isAdmin\" type=\"text\" @click=\"handleEditBoard\">编辑板块</el-button>\n        </div>\n      </div>\n    </el-card>\n\n    <!-- 帖子列表 -->\n    <el-card class=\"post-list-card\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span>帖子列表</span>\n        <div class=\"post-filter\">\n          <el-select v-model=\"listQuery.ordering\" placeholder=\"排序方式\" @change=\"fetchPosts\">\n            <el-option label=\"最新发布\" value=\"-created_at\"></el-option>\n            <el-option label=\"最多浏览\" value=\"-views\"></el-option>\n            <el-option label=\"最多点赞\" value=\"-likes_count\"></el-option>\n            <el-option label=\"最多评论\" value=\"-comments_count\"></el-option>\n          </el-select>\n          <el-input\n            v-model=\"listQuery.search\"\n            placeholder=\"搜索帖子\"\n            style=\"width: 200px; margin-left: 10px;\"\n            clearable\n            @keyup.enter.native=\"fetchPosts\"\n            @clear=\"fetchPosts\"\n          >\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"fetchPosts\"></el-button>\n          </el-input>\n        </div>\n      </div>\n\n      <div v-if=\"postsLoading\" class=\"loading-container\">\n        <el-skeleton :rows=\"5\" animated />\n      </div>\n      <div v-else>\n        <div v-if=\"posts.length === 0\" class=\"empty-posts\">\n          <i class=\"el-icon-document\"></i>\n          <p>暂无帖子，快来发布第一篇帖子吧！</p>\n        </div>\n        <div v-else class=\"post-list\">\n          <div\n            v-for=\"post in posts\"\n            :key=\"post.id\"\n            class=\"post-item\"\n            @click=\"viewPost(post)\"\n          >\n            <div class=\"post-title\">\n              <el-tag v-if=\"post.is_pinned\" size=\"mini\" type=\"danger\">置顶</el-tag>\n              <el-tag v-if=\"post.is_featured\" size=\"mini\" type=\"success\">精华</el-tag>\n              <span>{{ post.title }}</span>\n            </div>\n            <div class=\"post-meta\">\n              <div class=\"post-author\">\n                <i class=\"el-icon-user\"></i>\n                <span>{{ post.user.nickname || post.user.username }}</span>\n              </div>\n              <div class=\"post-stats\">\n                <span><i class=\"el-icon-view\"></i> {{ post.views }}</span>\n                <span><i class=\"el-icon-star-on\"></i> {{ post.likes_count }}</span>\n                <span><i class=\"el-icon-chat-dot-round\"></i> {{ post.comments_count }}</span>\n              </div>\n              <div class=\"post-time\">{{ formatDate(post.created_at) }}</div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 分页 -->\n        <div class=\"pagination-container\">\n          <el-pagination\n            background\n            layout=\"prev, pager, next\"\n            :total=\"total\"\n            :page-size=\"listQuery.limit\"\n            :current-page.sync=\"listQuery.page\"\n            @current-change=\"handlePageChange\"\n          >\n          </el-pagination>\n        </div>\n      </div>\n    </el-card>\n\n    <!-- 编辑板块对话框 -->\n    <el-dialog\n      title=\"编辑板块\"\n      :visible.sync=\"dialogVisible\"\n      width=\"500px\"\n    >\n      <el-form\n        ref=\"boardForm\"\n        :model=\"boardForm\"\n        :rules=\"boardRules\"\n        label-width=\"80px\"\n      >\n        <el-form-item label=\"板块名称\" prop=\"name\">\n          <el-input v-model=\"boardForm.name\" placeholder=\"请输入板块名称\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"板块描述\" prop=\"description\">\n          <el-input\n            v-model=\"boardForm.description\"\n            type=\"textarea\"\n            :rows=\"4\"\n            placeholder=\"请输入板块描述\"\n          ></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submitBoardForm\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { getBoardDetail, updateBoard } from '@/api/board'\nimport { getPostList } from '@/api/post'\nimport { formatDate } from '@/utils/index'\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'BoardDetail',\n  data() {\n    return {\n      loading: false,\n      postsLoading: false,\n      board: {},\n      posts: [],\n      total: 0,\n      listQuery: {\n        page: 1,\n        limit: 10,\n        board: null,\n        ordering: '-created_at',\n        search: ''\n      },\n      dialogVisible: false,\n      boardForm: {\n        name: '',\n        description: ''\n      },\n      boardRules: {\n        name: [\n          { required: true, message: '请输入板块名称', trigger: 'blur' },\n          { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n        ],\n        description: [\n          { max: 500, message: '长度不能超过 500 个字符', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'isAdmin',\n      'isLogin'\n    ])\n  },\n  created() {\n    const boardId = this.$route.params.id\n    if (boardId) {\n      this.listQuery.board = boardId\n      this.fetchBoardDetail(boardId)\n      this.fetchPosts()\n    } else {\n      this.$router.push({ name: 'BoardList' })\n    }\n  },\n  methods: {\n    formatDate,\n    \n    // 获取板块详情\n    async fetchBoardDetail(id) {\n      this.loading = true\n      try {\n        const response = await getBoardDetail(id)\n        if (response.code === 0) {\n          this.board = response.data\n        } else {\n          this.$message.error(response.msg || '获取板块详情失败')\n        }\n      } catch (error) {\n        console.error('获取板块详情失败:', error)\n        this.$message.error('获取板块详情失败')\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    // 获取帖子列表\n    async fetchPosts() {\n      this.postsLoading = true\n      try {\n        const params = {\n          page: this.listQuery.page,\n          page_size: this.listQuery.limit,\n          board: this.listQuery.board,\n          ordering: this.listQuery.ordering\n        }\n        \n        if (this.listQuery.search) {\n          params.search = this.listQuery.search\n        }\n        \n        const response = await getPostList(params)\n        if (response.code === 0) {\n          this.posts = response.data.results || []\n          this.total = response.data.count || 0\n        } else {\n          this.$message.error(response.msg || '获取帖子列表失败')\n        }\n      } catch (error) {\n        console.error('获取帖子列表失败:', error)\n        this.$message.error('获取帖子列表失败')\n      } finally {\n        this.postsLoading = false\n      }\n    },\n    \n    // 页码变化\n    handlePageChange(page) {\n      this.listQuery.page = page\n      this.fetchPosts()\n    },\n    \n    // 查看帖子\n    viewPost(post) {\n      this.$router.push({ name: 'PostDetail', params: { id: post.id } })\n    },\n    \n    // 创建帖子\n    handleCreatePost() {\n      if (!this.isLogin) {\n        this.$message.warning('请先登录')\n        this.$router.push({ name: 'Login', query: { redirect: this.$route.fullPath } })\n        return\n      }\n      \n      this.$router.push({\n        name: 'PostCreate',\n        params: { boardId: this.board.id }\n      })\n    },\n    \n    // 编辑板块\n    handleEditBoard() {\n      this.boardForm = {\n        name: this.board.name,\n        description: this.board.description\n      }\n      this.dialogVisible = true\n    },\n    \n    // 提交板块表单\n    submitBoardForm() {\n      this.$refs.boardForm.validate(async (valid) => {\n        if (valid) {\n          try {\n            const response = await updateBoard(this.board.id, this.boardForm)\n            if (response.code === 0) {\n              this.$message.success(response.msg || '更新成功')\n              this.dialogVisible = false\n              this.fetchBoardDetail(this.board.id)\n            } else {\n              this.$message.error(response.msg || '更新失败')\n            }\n          } catch (error) {\n            console.error('更新板块失败:', error)\n            this.$message.error('更新板块失败')\n          }\n        } else {\n          return false\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.board-detail-container {\n  padding: 20px;\n}\n\n.board-info-card,\n.post-list-card {\n  margin-bottom: 20px;\n}\n\n.loading-container {\n  padding: 20px 0;\n}\n\n.board-header {\n  padding: 10px 0;\n}\n\n.board-title {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.board-title i {\n  font-size: 24px;\n  margin-right: 10px;\n  color: #409EFF;\n}\n\n.board-title h2 {\n  margin: 0;\n  font-size: 20px;\n}\n\n.board-description {\n  color: #606266;\n  margin-bottom: 15px;\n  line-height: 1.5;\n}\n\n.board-meta {\n  display: flex;\n  color: #909399;\n  font-size: 14px;\n  margin-bottom: 15px;\n}\n\n.board-meta span {\n  margin-right: 20px;\n}\n\n.board-actions {\n  display: flex;\n  align-items: center;\n}\n\n.post-filter {\n  float: right;\n  display: flex;\n  align-items: center;\n}\n\n.empty-posts {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 40px 0;\n  color: #909399;\n}\n\n.empty-posts i {\n  font-size: 48px;\n  margin-bottom: 10px;\n}\n\n.post-list {\n  margin-bottom: 20px;\n}\n\n.post-item {\n  padding: 15px;\n  border-bottom: 1px solid #EBEEF5;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.post-item:hover {\n  background-color: #F5F7FA;\n}\n\n.post-item:last-child {\n  border-bottom: none;\n}\n\n.post-title {\n  font-size: 16px;\n  font-weight: bold;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n}\n\n.post-title .el-tag {\n  margin-right: 8px;\n}\n\n.post-meta {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 13px;\n  color: #909399;\n}\n\n.post-author {\n  display: flex;\n  align-items: center;\n}\n\n.post-author i {\n  margin-right: 5px;\n}\n\n.post-stats {\n  display: flex;\n}\n\n.post-stats span {\n  margin-right: 15px;\n  display: flex;\n  align-items: center;\n}\n\n.post-stats span i {\n  margin-right: 5px;\n}\n\n.pagination-container {\n  text-align: center;\n  margin-top: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}