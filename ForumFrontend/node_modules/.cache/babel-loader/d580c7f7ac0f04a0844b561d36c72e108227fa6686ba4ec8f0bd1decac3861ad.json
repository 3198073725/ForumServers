{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar constants = require('./constants.js');\nvar types = require('../../../utils/types.js');\nvar event = require('../../../constants/event.js');\nvar useFormCommonProps = require('../../form/src/hooks/use-form-common-props.js');\nvar index = require('../../../hooks/use-deprecated/index.js');\nvar useRadio = function useRadio(props, emit) {\n  var radioRef = vue.ref();\n  var radioGroup = vue.inject(constants.radioGroupKey, void 0);\n  var isGroup = vue.computed(function () {\n    return !!radioGroup;\n  });\n  var actualValue = vue.computed(function () {\n    if (!types.isPropAbsent(props.value)) {\n      return props.value;\n    }\n    return props.label;\n  });\n  var modelValue = vue.computed({\n    get: function get() {\n      return isGroup.value ? radioGroup.modelValue : props.modelValue;\n    },\n    set: function set(val) {\n      if (isGroup.value) {\n        radioGroup.changeEvent(val);\n      } else {\n        emit && emit(event.UPDATE_MODEL_EVENT, val);\n      }\n      radioRef.value.checked = props.modelValue === actualValue.value;\n    }\n  });\n  var size = useFormCommonProps.useFormSize(vue.computed(function () {\n    return radioGroup == null ? void 0 : radioGroup.size;\n  }));\n  var disabled = useFormCommonProps.useFormDisabled(vue.computed(function () {\n    return radioGroup == null ? void 0 : radioGroup.disabled;\n  }));\n  var focus = vue.ref(false);\n  var tabIndex = vue.computed(function () {\n    return disabled.value || isGroup.value && modelValue.value !== actualValue.value ? -1 : 0;\n  });\n  index.useDeprecated({\n    from: \"label act as value\",\n    replacement: \"value\",\n    version: \"3.0.0\",\n    scope: \"el-radio\",\n    ref: \"https://element-plus.org/en-US/component/radio.html\"\n  }, vue.computed(function () {\n    return isGroup.value && types.isPropAbsent(props.value);\n  }));\n  return {\n    radioRef: radioRef,\n    isGroup: isGroup,\n    radioGroup: radioGroup,\n    focus: focus,\n    size: size,\n    disabled: disabled,\n    tabIndex: tabIndex,\n    modelValue: modelValue,\n    actualValue: actualValue\n  };\n};\nexports.useRadio = useRadio;","map":{"version":3,"names":["useRadio","props","emit","radioRef","vue","ref","radioGroup","inject","constants","radioGroupKey","isGroup","computed","actualValue","types","isPropAbsent","value","label","modelValue","get","set","val","changeEvent","event","UPDATE_MODEL_EVENT","checked","size","useFormCommonProps","useFormSize","disabled","useFormDisabled","focus","tabIndex","index","useDeprecated","from","replacement","version","scope"],"sources":["../../../../../../packages/components/radio/src/use-radio.ts"],"sourcesContent":["import { computed, inject, ref } from 'vue'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { useFormDisabled, useFormSize } from '@element-plus/components/form'\nimport { useDeprecated } from '@element-plus/hooks'\nimport { isPropAbsent } from '@element-plus/utils'\nimport { radioGroupKey } from './constants'\n\nimport type { RadioButtonProps } from './radio-button'\nimport type { SetupContext } from 'vue'\nimport type { RadioEmits, RadioProps } from './radio'\n\nexport const useRadio = (\n  props: RadioProps | RadioButtonProps,\n  emit?: SetupContext<RadioEmits>['emit']\n) => {\n  const radioRef = ref<HTMLInputElement>()\n  const radioGroup = inject(radioGroupKey, undefined)\n  const isGroup = computed(() => !!radioGroup)\n  const actualValue = computed(() => {\n    // In version 2.x, if there's no props.value, props.label will act as props.value\n    // In version 3.x, remove this computed value, use props.value instead.\n    if (!isPropAbsent(props.value)) {\n      return props.value\n    }\n    return props.label\n  })\n  const modelValue = computed<RadioProps['modelValue']>({\n    get() {\n      return isGroup.value ? radioGroup!.modelValue : props.modelValue!\n    },\n    set(val) {\n      if (isGroup.value) {\n        radioGroup!.changeEvent(val)\n      } else {\n        emit && emit(UPDATE_MODEL_EVENT, val)\n      }\n      radioRef.value!.checked = props.modelValue === actualValue.value\n    },\n  })\n\n  const size = useFormSize(computed(() => radioGroup?.size))\n  const disabled = useFormDisabled(computed(() => radioGroup?.disabled))\n  const focus = ref(false)\n  const tabIndex = computed(() => {\n    return disabled.value ||\n      (isGroup.value && modelValue.value !== actualValue.value)\n      ? -1\n      : 0\n  })\n\n  useDeprecated(\n    {\n      from: 'label act as value',\n      replacement: 'value',\n      version: '3.0.0',\n      scope: 'el-radio',\n      ref: 'https://element-plus.org/en-US/component/radio.html',\n    },\n    computed(() => isGroup.value && isPropAbsent(props.value))\n  )\n\n  return {\n    radioRef,\n    isGroup,\n    radioGroup,\n    focus,\n    size,\n    disabled,\n    tabIndex,\n    modelValue,\n    actualValue,\n  }\n}\n"],"mappings":";;;;;;;;;;;;AAMY,IAACA,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,KAAK,EAAEC,IAAI,EAAK;EACvC,IAAMC,QAAQ,GAAGC,GAAA,CAAAC,GAAG,EAAE;EACtB,IAAMC,UAAU,GAAGF,GAAA,CAAAG,MAAM,CAACC,SAAA,CAAAC,aAAa,EAAE,KAAK,CAAC,CAAC;EAChD,IAAMC,OAAO,GAAGN,GAAA,CAAAO,QAAQ,CAAC;IAAA,OAAM,CAAC,CAACL,UAAU;EAAA,EAAC;EAC5C,IAAMM,WAAW,GAAGR,GAAA,CAAAO,QAAQ,CAAC,YAAM;IACjC,IAAI,CAACE,KAAA,CAAAC,YAAY,CAACb,KAAK,CAACc,KAAK,CAAC,EAAE;MAC9B,OAAOd,KAAK,CAACc,KAAK;IACxB;IACI,OAAOd,KAAK,CAACe,KAAK;EACtB,CAAG,CAAC;EACF,IAAMC,UAAU,GAAGb,GAAA,CAAAO,QAAQ,CAAC;IAC1BO,GAAG,WAAHA,GAAGA,CAAA,EAAG;MACJ,OAAOR,OAAO,CAACK,KAAK,GAAGT,UAAU,CAACW,UAAU,GAAGhB,KAAK,CAACgB,UAAU;IACrE,CAAK;IACDE,GAAG,WAAHA,GAAGA,CAACC,GAAG,EAAE;MACP,IAAIV,OAAO,CAACK,KAAK,EAAE;QACjBT,UAAU,CAACe,WAAW,CAACD,GAAG,CAAC;MACnC,CAAO,MAAM;QACLlB,IAAI,IAAIA,IAAI,CAACoB,KAAA,CAAAC,kBAAkB,EAAEH,GAAG,CAAC;MAC7C;MACMjB,QAAQ,CAACY,KAAK,CAACS,OAAO,GAAGvB,KAAK,CAACgB,UAAU,KAAKL,WAAW,CAACG,KAAK;IACrE;EACA,CAAG,CAAC;EACF,IAAMU,IAAI,GAAGC,kBAAA,CAAAC,WAAW,CAACvB,GAAA,CAAAO,QAAQ,CAAC;IAAA,OAAML,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACmB,IAAI;EAAA,EAAC,CAAC;EACvF,IAAMG,QAAQ,GAAGF,kBAAA,CAAAG,eAAe,CAACzB,GAAA,CAAAO,QAAQ,CAAC;IAAA,OAAML,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACsB,QAAQ;EAAA,EAAC,CAAC;EACnG,IAAME,KAAK,GAAG1B,GAAA,CAAAC,GAAG,CAAC,KAAK,CAAC;EACxB,IAAM0B,QAAQ,GAAG3B,GAAA,CAAAO,QAAQ,CAAC,YAAM;IAC9B,OAAOiB,QAAQ,CAACb,KAAK,IAAIL,OAAO,CAACK,KAAK,IAAIE,UAAU,CAACF,KAAK,KAAKH,WAAW,CAACG,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;EAC7F,CAAG,CAAC;EACFiB,KAAA,CAAAC,aAAa,CAAC;IACZC,IAAI,EAAE,oBAAoB;IAC1BC,WAAW,EAAE,OAAO;IACpBC,OAAO,EAAE,OAAO;IAChBC,KAAK,EAAE,UAAU;IACjBhC,GAAG,EAAE;EACT,CAAG,EAAED,GAAA,CAAAO,QAAQ,CAAC;IAAA,OAAMD,OAAO,CAACK,KAAK,IAAIF,KAAA,CAAAC,YAAY,CAACb,KAAK,CAACc,KAAK,CAAC;EAAA,EAAC,CAAC;EAC9D,OAAO;IACLZ,QAAQ,EAARA,QAAQ;IACRO,OAAO,EAAPA,OAAO;IACPJ,UAAU,EAAVA,UAAU;IACVwB,KAAK,EAALA,KAAK;IACLL,IAAI,EAAJA,IAAI;IACJG,QAAQ,EAARA,QAAQ;IACRG,QAAQ,EAARA,QAAQ;IACRd,UAAU,EAAVA,UAAU;IACVL,WAAW,EAAXA;EACJ,CAAG;AACH","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}