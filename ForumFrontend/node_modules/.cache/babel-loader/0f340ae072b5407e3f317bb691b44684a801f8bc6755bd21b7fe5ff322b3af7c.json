{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.concat.js\");\nrequire(\"core-js/modules/es.array.find-index.js\");\nrequire(\"core-js/modules/es.array.for-each.js\");\nrequire(\"core-js/modules/es.array.index-of.js\");\nrequire(\"core-js/modules/es.array.reduce.js\");\nrequire(\"core-js/modules/es.array.some.js\");\nrequire(\"core-js/modules/es.function.name.js\");\nrequire(\"core-js/modules/es.iterator.constructor.js\");\nrequire(\"core-js/modules/es.iterator.for-each.js\");\nrequire(\"core-js/modules/es.iterator.reduce.js\");\nrequire(\"core-js/modules/es.iterator.some.js\");\nrequire(\"core-js/modules/es.number.constructor.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.keys.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar config = require('../config.js');\nvar util = require('../util.js');\nvar index = require('../../../../hooks/use-namespace/index.js');\nvar types = require('../../../../utils/types.js');\nvar error = require('../../../../utils/error.js');\nvar shared = require('@vue/shared');\nfunction useRender(props, slots, owner) {\n  var instance = vue.getCurrentInstance();\n  var columnId = vue.ref(\"\");\n  var isSubColumn = vue.ref(false);\n  var realAlign = vue.ref();\n  var realHeaderAlign = vue.ref();\n  var ns = index.useNamespace(\"table\");\n  vue.watchEffect(function () {\n    realAlign.value = props.align ? \"is-\".concat(props.align) : null;\n    realAlign.value;\n  });\n  vue.watchEffect(function () {\n    realHeaderAlign.value = props.headerAlign ? \"is-\".concat(props.headerAlign) : realAlign.value;\n    realHeaderAlign.value;\n  });\n  var columnOrTableParent = vue.computed(function () {\n    var parent = instance.vnode.vParent || instance.parent;\n    while (parent && !parent.tableId && !parent.columnId) {\n      parent = parent.vnode.vParent || parent.parent;\n    }\n    return parent;\n  });\n  var hasTreeColumn = vue.computed(function () {\n    var store = instance.parent.store;\n    if (!store) return false;\n    var treeData = store.states.treeData;\n    var treeDataValue = treeData.value;\n    return treeDataValue && Object.keys(treeDataValue).length > 0;\n  });\n  var realWidth = vue.ref(util.parseWidth(props.width));\n  var realMinWidth = vue.ref(util.parseMinWidth(props.minWidth));\n  var setColumnWidth = function setColumnWidth(column) {\n    if (realWidth.value) column.width = realWidth.value;\n    if (realMinWidth.value) {\n      column.minWidth = realMinWidth.value;\n    }\n    if (!realWidth.value && realMinWidth.value) {\n      column.width = void 0;\n    }\n    if (!column.minWidth) {\n      column.minWidth = 80;\n    }\n    column.realWidth = Number(types.isUndefined(column.width) ? column.minWidth : column.width);\n    return column;\n  };\n  var setColumnForcedProps = function setColumnForcedProps(column) {\n    var type = column.type;\n    var source = config.cellForced[type] || {};\n    Object.keys(source).forEach(function (prop) {\n      var value = source[prop];\n      if (prop !== \"className\" && !types.isUndefined(value)) {\n        column[prop] = value;\n      }\n    });\n    var className = config.getDefaultClassName(type);\n    if (className) {\n      var forceClass = \"\".concat(vue.unref(ns.namespace), \"-\").concat(className);\n      column.className = column.className ? \"\".concat(column.className, \" \").concat(forceClass) : forceClass;\n    }\n    return column;\n  };\n  var checkSubColumn = function checkSubColumn(children) {\n    if (shared.isArray(children)) {\n      children.forEach(function (child) {\n        return check(child);\n      });\n    } else {\n      check(children);\n    }\n    function check(item) {\n      var _a;\n      if (((_a = item == null ? void 0 : item.type) == null ? void 0 : _a.name) === \"ElTableColumn\") {\n        item.vParent = instance;\n      }\n    }\n  };\n  var setColumnRenders = function setColumnRenders(column) {\n    if (props.renderHeader) {\n      error.debugWarn(\"TableColumn\", \"Comparing to render-header, scoped-slot header is easier to use. We recommend users to use scoped-slot header.\");\n    } else if (column.type !== \"selection\") {\n      column.renderHeader = function (scope) {\n        instance.columnConfig.value[\"label\"];\n        return vue.renderSlot(slots, \"header\", scope, function () {\n          return [column.label];\n        });\n      };\n    }\n    if (slots[\"filter-icon\"]) {\n      column.renderFilterIcon = function (scope) {\n        return vue.renderSlot(slots, \"filter-icon\", scope);\n      };\n    }\n    var originRenderCell = column.renderCell;\n    if (column.type === \"expand\") {\n      column.renderCell = function (data) {\n        return vue.h(\"div\", {\n          \"class\": \"cell\"\n        }, [originRenderCell(data)]);\n      };\n      owner.value.renderExpanded = function (data) {\n        return slots[\"default\"] ? slots[\"default\"](data) : slots[\"default\"];\n      };\n    } else {\n      originRenderCell = originRenderCell || config.defaultRenderCell;\n      column.renderCell = function (data) {\n        var children = null;\n        if (slots[\"default\"]) {\n          var vnodes = slots[\"default\"](data);\n          children = vnodes.some(function (v) {\n            return v.type !== vue.Comment;\n          }) ? vnodes : originRenderCell(data);\n        } else {\n          children = originRenderCell(data);\n        }\n        var columns = owner.value.store.states.columns;\n        var firstUserColumnIndex = columns.value.findIndex(function (item) {\n          return item.type === \"default\";\n        });\n        var shouldCreatePlaceholder = hasTreeColumn.value && data.cellIndex === firstUserColumnIndex;\n        var prefix = config.treeCellPrefix(data, shouldCreatePlaceholder);\n        var props2 = {\n          \"class\": \"cell\",\n          style: {}\n        };\n        if (column.showOverflowTooltip) {\n          props2[\"class\"] = \"\".concat(props2[\"class\"], \" \").concat(vue.unref(ns.namespace), \"-tooltip\");\n          props2.style = {\n            width: \"\".concat((data.column.realWidth || Number(data.column.width)) - 1, \"px\")\n          };\n        }\n        checkSubColumn(children);\n        return vue.h(\"div\", props2, [prefix, children]);\n      };\n    }\n    return column;\n  };\n  var getPropsData = function getPropsData() {\n    for (var _len = arguments.length, propsKey = new Array(_len), _key = 0; _key < _len; _key++) {\n      propsKey[_key] = arguments[_key];\n    }\n    return propsKey.reduce(function (prev, cur) {\n      if (shared.isArray(cur)) {\n        cur.forEach(function (key) {\n          prev[key] = props[key];\n        });\n      }\n      return prev;\n    }, {});\n  };\n  var getColumnElIndex = function getColumnElIndex(children, child) {\n    return Array.prototype.indexOf.call(children, child);\n  };\n  var updateColumnOrder = function updateColumnOrder() {\n    owner.value.store.commit(\"updateColumnOrder\", instance.columnConfig.value);\n  };\n  return {\n    columnId: columnId,\n    realAlign: realAlign,\n    isSubColumn: isSubColumn,\n    realHeaderAlign: realHeaderAlign,\n    columnOrTableParent: columnOrTableParent,\n    setColumnWidth: setColumnWidth,\n    setColumnForcedProps: setColumnForcedProps,\n    setColumnRenders: setColumnRenders,\n    getPropsData: getPropsData,\n    getColumnElIndex: getColumnElIndex,\n    updateColumnOrder: updateColumnOrder\n  };\n}\nexports[\"default\"] = useRender;","map":{"version":3,"names":["useRender","props","slots","owner","instance","vue","getCurrentInstance","columnId","ref","isSubColumn","realAlign","realHeaderAlign","ns","index","useNamespace","watchEffect","value","align","concat","headerAlign","columnOrTableParent","computed","parent","vnode","vParent","tableId","hasTreeColumn","store","treeData","states","treeDataValue","Object","keys","length","realWidth","util","parseWidth","width","realMinWidth","parseMinWidth","minWidth","setColumnWidth","column","Number","types","isUndefined","setColumnForcedProps","type","source","config","cellForced","forEach","prop","className","getDefaultClassName","forceClass","unref","namespace","checkSubColumn","children","shared","isArray","child","check","item","_a","name","setColumnRenders","renderHeader","error","debugWarn","scope","columnConfig","renderSlot","label","renderFilterIcon","originRenderCell","renderCell","data","h","renderExpanded","defaultRenderCell","vnodes","some","v","Comment","columns","firstUserColumnIndex","findIndex","shouldCreatePlaceholder","cellIndex","prefix","treeCellPrefix","props2","style","showOverflowTooltip","getPropsData","_len","arguments","propsKey","Array","_key","reduce","prev","cur","key","getColumnElIndex","prototype","indexOf","call","updateColumnOrder","commit"],"sources":["../../../../../../../packages/components/table/src/table-column/render-helper.ts"],"sourcesContent":["// @ts-nocheck\nimport {\n  Comment,\n  computed,\n  getCurrentInstance,\n  h,\n  ref,\n  renderSlot,\n  unref,\n  watchEffect,\n} from 'vue'\nimport { debugWarn, isArray, isUndefined } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport {\n  cellForced,\n  defaultRenderCell,\n  getDefaultClassName,\n  treeCellPrefix,\n} from '../config'\nimport { parseMinWidth, parseWidth } from '../util'\nimport type { ComputedRef } from 'vue'\nimport type { TableColumn, TableColumnCtx } from './defaults'\n\nfunction useRender<T>(\n  props: TableColumnCtx<T>,\n  slots,\n  owner: ComputedRef<any>\n) {\n  const instance = getCurrentInstance() as TableColumn<T>\n  const columnId = ref('')\n  const isSubColumn = ref(false)\n  const realAlign = ref<string>()\n  const realHeaderAlign = ref<string>()\n  const ns = useNamespace('table')\n  watchEffect(() => {\n    realAlign.value = props.align ? `is-${props.align}` : null\n    // nextline help render\n    realAlign.value\n  })\n  watchEffect(() => {\n    realHeaderAlign.value = props.headerAlign\n      ? `is-${props.headerAlign}`\n      : realAlign.value\n    // nextline help render\n    realHeaderAlign.value\n  })\n  const columnOrTableParent = computed(() => {\n    let parent: any = instance.vnode.vParent || instance.parent\n    while (parent && !parent.tableId && !parent.columnId) {\n      parent = parent.vnode.vParent || parent.parent\n    }\n    return parent\n  })\n  const hasTreeColumn = computed<boolean>(() => {\n    const { store } = instance.parent\n    if (!store) return false\n    const { treeData } = store.states\n    const treeDataValue = treeData.value\n    return treeDataValue && Object.keys(treeDataValue).length > 0\n  })\n\n  const realWidth = ref(parseWidth(props.width))\n  const realMinWidth = ref(parseMinWidth(props.minWidth))\n  const setColumnWidth = (column: TableColumnCtx<T>) => {\n    if (realWidth.value) column.width = realWidth.value\n    if (realMinWidth.value) {\n      column.minWidth = realMinWidth.value\n    }\n    if (!realWidth.value && realMinWidth.value) {\n      column.width = undefined\n    }\n    if (!column.minWidth) {\n      column.minWidth = 80\n    }\n    column.realWidth = Number(\n      isUndefined(column.width) ? column.minWidth : column.width\n    )\n    return column\n  }\n  const setColumnForcedProps = (column: TableColumnCtx<T>) => {\n    // 对于特定类型的 column，某些属性不允许设置\n    const type = column.type\n    const source = cellForced[type] || {}\n    Object.keys(source).forEach((prop) => {\n      const value = source[prop]\n      if (prop !== 'className' && !isUndefined(value)) {\n        column[prop] = value\n      }\n    })\n    const className = getDefaultClassName(type)\n    if (className) {\n      const forceClass = `${unref(ns.namespace)}-${className}`\n      column.className = column.className\n        ? `${column.className} ${forceClass}`\n        : forceClass\n    }\n    return column\n  }\n\n  const checkSubColumn = (children: TableColumn<T> | TableColumn<T>[]) => {\n    if (isArray(children)) {\n      children.forEach((child) => check(child))\n    } else {\n      check(children)\n    }\n    function check(item: TableColumn<T>) {\n      if (item?.type?.name === 'ElTableColumn') {\n        item.vParent = instance\n      }\n    }\n  }\n  const setColumnRenders = (column: TableColumnCtx<T>) => {\n    // renderHeader 属性不推荐使用。\n    if (props.renderHeader) {\n      debugWarn(\n        'TableColumn',\n        'Comparing to render-header, scoped-slot header is easier to use. We recommend users to use scoped-slot header.'\n      )\n    } else if (column.type !== 'selection') {\n      column.renderHeader = (scope) => {\n        // help render\n        instance.columnConfig.value['label']\n        return renderSlot(slots, 'header', scope, () => [column.label])\n      }\n    }\n\n    if (slots['filter-icon']) {\n      column.renderFilterIcon = (scope) => {\n        return renderSlot(slots, 'filter-icon', scope)\n      }\n    }\n\n    let originRenderCell = column.renderCell\n    // TODO: 这里的实现调整\n    if (column.type === 'expand') {\n      // 对于展开行，renderCell 不允许配置的。在上一步中已经设置过，这里需要简单封装一下。\n      column.renderCell = (data) =>\n        h(\n          'div',\n          {\n            class: 'cell',\n          },\n          [originRenderCell(data)]\n        )\n      owner.value.renderExpanded = (data) => {\n        return slots.default ? slots.default(data) : slots.default\n      }\n    } else {\n      originRenderCell = originRenderCell || defaultRenderCell\n      // 对 renderCell 进行包装\n      column.renderCell = (data) => {\n        let children = null\n        if (slots.default) {\n          const vnodes = slots.default(data)\n          children = vnodes.some((v) => v.type !== Comment)\n            ? vnodes\n            : originRenderCell(data)\n        } else {\n          children = originRenderCell(data)\n        }\n\n        const { columns } = owner.value.store.states\n        const firstUserColumnIndex = columns.value.findIndex(\n          (item) => item.type === 'default'\n        )\n        const shouldCreatePlaceholder =\n          hasTreeColumn.value && data.cellIndex === firstUserColumnIndex\n        const prefix = treeCellPrefix(data, shouldCreatePlaceholder)\n        const props = {\n          class: 'cell',\n          style: {},\n        }\n        if (column.showOverflowTooltip) {\n          props.class = `${props.class} ${unref(ns.namespace)}-tooltip`\n          props.style = {\n            width: `${\n              (data.column.realWidth || Number(data.column.width)) - 1\n            }px`,\n          }\n        }\n        checkSubColumn(children)\n        return h('div', props, [prefix, children])\n      }\n    }\n    return column\n  }\n  const getPropsData = (...propsKey: unknown[]) => {\n    return propsKey.reduce((prev, cur) => {\n      if (isArray(cur)) {\n        cur.forEach((key) => {\n          prev[key] = props[key]\n        })\n      }\n      return prev\n    }, {})\n  }\n  const getColumnElIndex = (children, child) => {\n    return Array.prototype.indexOf.call(children, child)\n  }\n\n  const updateColumnOrder = () => {\n    owner.value.store.commit('updateColumnOrder', instance.columnConfig.value)\n  }\n\n  return {\n    columnId,\n    realAlign,\n    isSubColumn,\n    realHeaderAlign,\n    columnOrTableParent,\n    setColumnWidth,\n    setColumnForcedProps,\n    setColumnRenders,\n    getPropsData,\n    getColumnElIndex,\n    updateColumnOrder,\n  }\n}\n\nexport default useRender\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,SAASA,SAASA,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAE;EACtC,IAAMC,QAAQ,GAAGC,GAAA,CAAAC,kBAAkB,EAAE;EACrC,IAAMC,QAAQ,GAAGF,GAAA,CAAAG,GAAG,CAAC,EAAE,CAAC;EACxB,IAAMC,WAAW,GAAGJ,GAAA,CAAAG,GAAG,CAAC,KAAK,CAAC;EAC9B,IAAME,SAAS,GAAGL,GAAA,CAAAG,GAAG,EAAE;EACvB,IAAMG,eAAe,GAAGN,GAAA,CAAAG,GAAG,EAAE;EAC7B,IAAMI,EAAE,GAAGC,KAAA,CAAAC,YAAY,CAAC,OAAO,CAAC;EAChCT,GAAA,CAAAU,WAAW,CAAC,YAAM;IAChBL,SAAS,CAACM,KAAK,GAAGf,KAAK,CAACgB,KAAK,SAAAC,MAAA,CAASjB,KAAK,CAACgB,KAAK,IAAK,IAAI;IAC1DP,SAAS,CAACM,KAAK;EACnB,CAAG,CAAC;EACFX,GAAA,CAAAU,WAAW,CAAC,YAAM;IAChBJ,eAAe,CAACK,KAAK,GAAGf,KAAK,CAACkB,WAAW,SAAAD,MAAA,CAASjB,KAAK,CAACkB,WAAW,IAAKT,SAAS,CAACM,KAAK;IACvFL,eAAe,CAACK,KAAK;EACzB,CAAG,CAAC;EACF,IAAMI,mBAAmB,GAAGf,GAAA,CAAAgB,QAAQ,CAAC,YAAM;IACzC,IAAIC,MAAM,GAAGlB,QAAQ,CAACmB,KAAK,CAACC,OAAO,IAAIpB,QAAQ,CAACkB,MAAM;IACtD,OAAOA,MAAM,IAAI,CAACA,MAAM,CAACG,OAAO,IAAI,CAACH,MAAM,CAACf,QAAQ,EAAE;MACpDe,MAAM,GAAGA,MAAM,CAACC,KAAK,CAACC,OAAO,IAAIF,MAAM,CAACA,MAAM;IACpD;IACI,OAAOA,MAAM;EACjB,CAAG,CAAC;EACF,IAAMI,aAAa,GAAGrB,GAAA,CAAAgB,QAAQ,CAAC,YAAM;IACnC,IAAQM,KAAK,GAAKvB,QAAQ,CAACkB,MAAM,CAAzBK,KAAK;IACb,IAAI,CAACA,KAAK,EACR,OAAO,KAAK;IACd,IAAQC,QAAQ,GAAKD,KAAK,CAACE,MAAM,CAAzBD,QAAQ;IAChB,IAAME,aAAa,GAAGF,QAAQ,CAACZ,KAAK;IACpC,OAAOc,aAAa,IAAIC,MAAM,CAACC,IAAI,CAACF,aAAa,CAAC,CAACG,MAAM,GAAG,CAAC;EACjE,CAAG,CAAC;EACF,IAAMC,SAAS,GAAG7B,GAAA,CAAAG,GAAG,CAAC2B,IAAA,CAAAC,UAAU,CAACnC,KAAK,CAACoC,KAAK,CAAC,CAAC;EAC9C,IAAMC,YAAY,GAAGjC,GAAA,CAAAG,GAAG,CAAC2B,IAAA,CAAAI,aAAa,CAACtC,KAAK,CAACuC,QAAQ,CAAC,CAAC;EACvD,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,MAAM,EAAK;IACjC,IAAIR,SAAS,CAAClB,KAAK,EACjB0B,MAAM,CAACL,KAAK,GAAGH,SAAS,CAAClB,KAAK;IAChC,IAAIsB,YAAY,CAACtB,KAAK,EAAE;MACtB0B,MAAM,CAACF,QAAQ,GAAGF,YAAY,CAACtB,KAAK;IAC1C;IACI,IAAI,CAACkB,SAAS,CAAClB,KAAK,IAAIsB,YAAY,CAACtB,KAAK,EAAE;MAC1C0B,MAAM,CAACL,KAAK,GAAG,KAAK,CAAC;IAC3B;IACI,IAAI,CAACK,MAAM,CAACF,QAAQ,EAAE;MACpBE,MAAM,CAACF,QAAQ,GAAG,EAAE;IAC1B;IACIE,MAAM,CAACR,SAAS,GAAGS,MAAM,CAACC,KAAA,CAAAC,WAAW,CAACH,MAAM,CAACL,KAAK,CAAC,GAAGK,MAAM,CAACF,QAAQ,GAAGE,MAAM,CAACL,KAAK,CAAC;IACrF,OAAOK,MAAM;EACjB,CAAG;EACD,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIJ,MAAM,EAAK;IACvC,IAAMK,IAAI,GAAGL,MAAM,CAACK,IAAI;IACxB,IAAMC,MAAM,GAAGC,MAAA,CAAAC,UAAU,CAACH,IAAI,CAAC,IAAI,EAAE;IACrChB,MAAM,CAACC,IAAI,CAACgB,MAAM,CAAC,CAACG,OAAO,CAAC,UAACC,IAAI,EAAK;MACpC,IAAMpC,KAAK,GAAGgC,MAAM,CAACI,IAAI,CAAC;MAC1B,IAAIA,IAAI,KAAK,WAAW,IAAI,CAACR,KAAA,CAAAC,WAAW,CAAC7B,KAAK,CAAC,EAAE;QAC/C0B,MAAM,CAACU,IAAI,CAAC,GAAGpC,KAAK;MAC5B;IACA,CAAK,CAAC;IACF,IAAMqC,SAAS,GAAGJ,MAAA,CAAAK,mBAAmB,CAACP,IAAI,CAAC;IAC3C,IAAIM,SAAS,EAAE;MACb,IAAME,UAAU,MAAArC,MAAA,CAAMb,GAAA,CAAAmD,KAAK,CAAC5C,EAAE,CAAC6C,SAAS,CAAC,OAAAvC,MAAA,CAAImC,SAAS,CAAE;MACxDX,MAAM,CAACW,SAAS,GAAGX,MAAM,CAACW,SAAS,MAAAnC,MAAA,CAAMwB,MAAM,CAACW,SAAS,OAAAnC,MAAA,CAAIqC,UAAU,IAAKA,UAAU;IAC5F;IACI,OAAOb,MAAM;EACjB,CAAG;EACD,IAAMgB,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,QAAQ,EAAK;IACnC,IAAIC,MAAA,CAAAC,OAAO,CAACF,QAAQ,CAAC,EAAE;MACrBA,QAAQ,CAACR,OAAO,CAAC,UAACW,KAAK;QAAA,OAAKC,KAAK,CAACD,KAAK,CAAC;MAAA,EAAC;IAC/C,CAAK,MAAM;MACLC,KAAK,CAACJ,QAAQ,CAAC;IACrB;IACI,SAASI,KAAKA,CAACC,IAAI,EAAE;MACnB,IAAIC,EAAE;MACN,IAAI,CAAC,CAACA,EAAE,GAAGD,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACjB,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGkB,EAAE,CAACC,IAAI,MAAM,eAAe,EAAE;QAC7FF,IAAI,CAACxC,OAAO,GAAGpB,QAAQ;MAC/B;IACA;EACA,CAAG;EACD,IAAM+D,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIzB,MAAM,EAAK;IACnC,IAAIzC,KAAK,CAACmE,YAAY,EAAE;MACtBC,KAAA,CAAAC,SAAS,CAAC,aAAa,EAAE,gHAAgH,CAAC;IAChJ,CAAK,MAAM,IAAI5B,MAAM,CAACK,IAAI,KAAK,WAAW,EAAE;MACtCL,MAAM,CAAC0B,YAAY,GAAG,UAACG,KAAK,EAAK;QAC/BnE,QAAQ,CAACoE,YAAY,CAACxD,KAAK,CAAC,OAAO,CAAC;QACpC,OAAOX,GAAA,CAAAoE,UAAU,CAACvE,KAAK,EAAE,QAAQ,EAAEqE,KAAK,EAAE;UAAA,OAAM,CAAC7B,MAAM,CAACgC,KAAK,CAAC;QAAA,EAAC;MACvE,CAAO;IACP;IACI,IAAIxE,KAAK,CAAC,aAAa,CAAC,EAAE;MACxBwC,MAAM,CAACiC,gBAAgB,GAAG,UAACJ,KAAK,EAAK;QACnC,OAAOlE,GAAA,CAAAoE,UAAU,CAACvE,KAAK,EAAE,aAAa,EAAEqE,KAAK,CAAC;MACtD,CAAO;IACP;IACI,IAAIK,gBAAgB,GAAGlC,MAAM,CAACmC,UAAU;IACxC,IAAInC,MAAM,CAACK,IAAI,KAAK,QAAQ,EAAE;MAC5BL,MAAM,CAACmC,UAAU,GAAG,UAACC,IAAI;QAAA,OAAKzE,GAAA,CAAA0E,CAAC,CAAC,KAAK,EAAE;UACrC,SAAO;QACf,CAAO,EAAE,CAACH,gBAAgB,CAACE,IAAI,CAAC,CAAC,CAAC;MAAA;MAC5B3E,KAAK,CAACa,KAAK,CAACgE,cAAc,GAAG,UAACF,IAAI,EAAK;QACrC,OAAO5E,KAAK,WAAQ,GAAGA,KAAK,WAAQ,CAAC4E,IAAI,CAAC,GAAG5E,KAAK,WAAQ;MAClE,CAAO;IACP,CAAK,MAAM;MACL0E,gBAAgB,GAAGA,gBAAgB,IAAI3B,MAAA,CAAAgC,iBAAiB;MACxDvC,MAAM,CAACmC,UAAU,GAAG,UAACC,IAAI,EAAK;QAC5B,IAAInB,QAAQ,GAAG,IAAI;QACnB,IAAIzD,KAAK,WAAQ,EAAE;UACjB,IAAMgF,MAAM,GAAGhF,KAAK,WAAQ,CAAC4E,IAAI,CAAC;UAClCnB,QAAQ,GAAGuB,MAAM,CAACC,IAAI,CAAC,UAACC,CAAC;YAAA,OAAKA,CAAC,CAACrC,IAAI,KAAK1C,GAAA,CAAAgF,OAAO;UAAA,EAAC,GAAGH,MAAM,GAAGN,gBAAgB,CAACE,IAAI,CAAC;QAC7F,CAAS,MAAM;UACLnB,QAAQ,GAAGiB,gBAAgB,CAACE,IAAI,CAAC;QAC3C;QACQ,IAAQQ,OAAO,GAAKnF,KAAK,CAACa,KAAK,CAACW,KAAK,CAACE,MAAM,CAApCyD,OAAO;QACf,IAAMC,oBAAoB,GAAGD,OAAO,CAACtE,KAAK,CAACwE,SAAS,CAAC,UAACxB,IAAI;UAAA,OAAKA,IAAI,CAACjB,IAAI,KAAK,SAAS;QAAA,EAAC;QACvF,IAAM0C,uBAAuB,GAAG/D,aAAa,CAACV,KAAK,IAAI8D,IAAI,CAACY,SAAS,KAAKH,oBAAoB;QAC9F,IAAMI,MAAM,GAAG1C,MAAA,CAAA2C,cAAc,CAACd,IAAI,EAAEW,uBAAuB,CAAC;QAC5D,IAAMI,MAAM,GAAG;UACb,SAAO,MAAM;UACbC,KAAK,EAAE;QACjB,CAAS;QACD,IAAIpD,MAAM,CAACqD,mBAAmB,EAAE;UAC9BF,MAAM,SAAM,MAAA3E,MAAA,CAAM2E,MAAM,SAAM,OAAA3E,MAAA,CAAIb,GAAA,CAAAmD,KAAK,CAAC5C,EAAE,CAAC6C,SAAS,CAAC,aAAU;UAC/DoC,MAAM,CAACC,KAAK,GAAG;YACbzD,KAAK,KAAAnB,MAAA,CAAK,CAAC4D,IAAI,CAACpC,MAAM,CAACR,SAAS,IAAIS,MAAM,CAACmC,IAAI,CAACpC,MAAM,CAACL,KAAK,CAAC,IAAI,CAAC;UAC9E,CAAW;QACX;QACQqB,cAAc,CAACC,QAAQ,CAAC;QACxB,OAAOtD,GAAA,CAAA0E,CAAC,CAAC,KAAK,EAAEc,MAAM,EAAE,CAACF,MAAM,EAAEhC,QAAQ,CAAC,CAAC;MACnD,CAAO;IACP;IACI,OAAOjB,MAAM;EACjB,CAAG;EACD,IAAMsD,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAoB;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAjE,MAAA,EAAbkE,QAAQ,OAAAC,KAAA,CAAAH,IAAA,GAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;MAARF,QAAQ,CAAAE,IAAA,IAAAH,SAAA,CAAAG,IAAA;IAAA;IAC/B,OAAOF,QAAQ,CAACG,MAAM,CAAC,UAACC,IAAI,EAAEC,GAAG,EAAK;MACpC,IAAI5C,MAAA,CAAAC,OAAO,CAAC2C,GAAG,CAAC,EAAE;QAChBA,GAAG,CAACrD,OAAO,CAAC,UAACsD,GAAG,EAAK;UACnBF,IAAI,CAACE,GAAG,CAAC,GAAGxG,KAAK,CAACwG,GAAG,CAAC;QAChC,CAAS,CAAC;MACV;MACM,OAAOF,IAAI;IACjB,CAAK,EAAE,EAAE,CAAC;EACV,CAAG;EACD,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAI/C,QAAQ,EAAEG,KAAK,EAAK;IAC5C,OAAOsC,KAAK,CAACO,SAAS,CAACC,OAAO,CAACC,IAAI,CAAClD,QAAQ,EAAEG,KAAK,CAAC;EACxD,CAAG;EACD,IAAMgD,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAC9B3G,KAAK,CAACa,KAAK,CAACW,KAAK,CAACoF,MAAM,CAAC,mBAAmB,EAAE3G,QAAQ,CAACoE,YAAY,CAACxD,KAAK,CAAC;EAC9E,CAAG;EACD,OAAO;IACLT,QAAQ,EAARA,QAAQ;IACRG,SAAS,EAATA,SAAS;IACTD,WAAW,EAAXA,WAAW;IACXE,eAAe,EAAfA,eAAe;IACfS,mBAAmB,EAAnBA,mBAAmB;IACnBqB,cAAc,EAAdA,cAAc;IACdK,oBAAoB,EAApBA,oBAAoB;IACpBqB,gBAAgB,EAAhBA,gBAAgB;IAChB6B,YAAY,EAAZA,YAAY;IACZU,gBAAgB,EAAhBA,gBAAgB;IAChBI,iBAAiB,EAAjBA;EACJ,CAAG;AACH","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}