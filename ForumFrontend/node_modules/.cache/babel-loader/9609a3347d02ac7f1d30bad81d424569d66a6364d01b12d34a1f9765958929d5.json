{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.array.for-each.js\");\nrequire(\"core-js/modules/es.iterator.constructor.js\");\nrequire(\"core-js/modules/es.iterator.for-each.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar constants = require('./constants.js');\nvar uploadList = require('./upload-list2.js');\nvar uploadContent = require('./upload-content.js');\nvar useHandlers = require('./use-handlers.js');\nvar upload = require('./upload2.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar useFormCommonProps = require('../../form/src/hooks/use-form-common-props.js');\nvar __default__ = vue.defineComponent({\n  name: \"ElUpload\"\n});\nvar _sfc_main = /* @__PURE__ */vue.defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: upload.uploadProps,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var disabled = useFormCommonProps.useFormDisabled();\n    var uploadRef = vue.shallowRef();\n    var _useHandlers$useHandl = useHandlers.useHandlers(props, uploadRef),\n      abort = _useHandlers$useHandl.abort,\n      submit = _useHandlers$useHandl.submit,\n      clearFiles = _useHandlers$useHandl.clearFiles,\n      uploadFiles = _useHandlers$useHandl.uploadFiles,\n      handleStart = _useHandlers$useHandl.handleStart,\n      handleError = _useHandlers$useHandl.handleError,\n      handleRemove = _useHandlers$useHandl.handleRemove,\n      handleSuccess = _useHandlers$useHandl.handleSuccess,\n      handleProgress = _useHandlers$useHandl.handleProgress,\n      revokeFileObjectURL = _useHandlers$useHandl.revokeFileObjectURL;\n    var isPictureCard = vue.computed(function () {\n      return props.listType === \"picture-card\";\n    });\n    var uploadContentProps = vue.computed(function () {\n      return _objectSpread(_objectSpread({}, props), {}, {\n        fileList: uploadFiles.value,\n        onStart: handleStart,\n        onProgress: handleProgress,\n        onSuccess: handleSuccess,\n        onError: handleError,\n        onRemove: handleRemove\n      });\n    });\n    vue.onBeforeUnmount(function () {\n      uploadFiles.value.forEach(revokeFileObjectURL);\n    });\n    vue.provide(constants.uploadContextKey, {\n      accept: vue.toRef(props, \"accept\")\n    });\n    expose({\n      abort: abort,\n      submit: submit,\n      clearFiles: clearFiles,\n      handleStart: handleStart,\n      handleRemove: handleRemove\n    });\n    return function (_ctx, _cache) {\n      return vue.openBlock(), vue.createElementBlock(\"div\", null, [vue.unref(isPictureCard) && _ctx.showFileList ? (vue.openBlock(), vue.createBlock(uploadList[\"default\"], {\n        key: 0,\n        disabled: vue.unref(disabled),\n        \"list-type\": _ctx.listType,\n        files: vue.unref(uploadFiles),\n        crossorigin: _ctx.crossorigin,\n        \"handle-preview\": _ctx.onPreview,\n        onRemove: vue.unref(handleRemove)\n      }, vue.createSlots({\n        append: vue.withCtx(function () {\n          return [vue.createVNode(uploadContent[\"default\"], vue.mergeProps({\n            ref_key: \"uploadRef\",\n            ref: uploadRef\n          }, vue.unref(uploadContentProps)), {\n            \"default\": vue.withCtx(function () {\n              return [_ctx.$slots.trigger ? vue.renderSlot(_ctx.$slots, \"trigger\", {\n                key: 0\n              }) : vue.createCommentVNode(\"v-if\", true), !_ctx.$slots.trigger && _ctx.$slots[\"default\"] ? vue.renderSlot(_ctx.$slots, \"default\", {\n                key: 1\n              }) : vue.createCommentVNode(\"v-if\", true)];\n            }),\n            _: 3\n          }, 16)];\n        }),\n        _: 2\n      }, [_ctx.$slots.file ? {\n        name: \"default\",\n        fn: vue.withCtx(function (_ref2) {\n          var file = _ref2.file,\n            index = _ref2.index;\n          return [vue.renderSlot(_ctx.$slots, \"file\", {\n            file: file,\n            index: index\n          })];\n        })\n      } : void 0]), 1032, [\"disabled\", \"list-type\", \"files\", \"crossorigin\", \"handle-preview\", \"onRemove\"])) : vue.createCommentVNode(\"v-if\", true), !vue.unref(isPictureCard) || vue.unref(isPictureCard) && !_ctx.showFileList ? (vue.openBlock(), vue.createBlock(uploadContent[\"default\"], vue.mergeProps({\n        key: 1,\n        ref_key: \"uploadRef\",\n        ref: uploadRef\n      }, vue.unref(uploadContentProps)), {\n        \"default\": vue.withCtx(function () {\n          return [_ctx.$slots.trigger ? vue.renderSlot(_ctx.$slots, \"trigger\", {\n            key: 0\n          }) : vue.createCommentVNode(\"v-if\", true), !_ctx.$slots.trigger && _ctx.$slots[\"default\"] ? vue.renderSlot(_ctx.$slots, \"default\", {\n            key: 1\n          }) : vue.createCommentVNode(\"v-if\", true)];\n        }),\n        _: 3\n      }, 16)) : vue.createCommentVNode(\"v-if\", true), _ctx.$slots.trigger ? vue.renderSlot(_ctx.$slots, \"default\", {\n        key: 2\n      }) : vue.createCommentVNode(\"v-if\", true), vue.renderSlot(_ctx.$slots, \"tip\"), !vue.unref(isPictureCard) && _ctx.showFileList ? (vue.openBlock(), vue.createBlock(uploadList[\"default\"], {\n        key: 3,\n        disabled: vue.unref(disabled),\n        \"list-type\": _ctx.listType,\n        files: vue.unref(uploadFiles),\n        crossorigin: _ctx.crossorigin,\n        \"handle-preview\": _ctx.onPreview,\n        onRemove: vue.unref(handleRemove)\n      }, vue.createSlots({\n        _: 2\n      }, [_ctx.$slots.file ? {\n        name: \"default\",\n        fn: vue.withCtx(function (_ref3) {\n          var file = _ref3.file,\n            index = _ref3.index;\n          return [vue.renderSlot(_ctx.$slots, \"file\", {\n            file: file,\n            index: index\n          })];\n        })\n      } : void 0]), 1032, [\"disabled\", \"list-type\", \"files\", \"crossorigin\", \"handle-preview\", \"onRemove\"])) : vue.createCommentVNode(\"v-if\", true)]);\n    };\n  }\n}));\nvar Upload = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"upload.vue\"]]);\nexports[\"default\"] = Upload;","map":{"version":3,"names":["name","disabled","useFormCommonProps","useFormDisabled","uploadRef","vue","shallowRef","_useHandlers$useHandl","useHandlers","props","abort","submit","clearFiles","uploadFiles","handleStart","handleError","handleRemove","handleSuccess","handleProgress","revokeFileObjectURL","isPictureCard","computed","listType","uploadContentProps","_objectSpread","fileList","value","onStart","onProgress","onSuccess","onError","onRemove","onBeforeUnmount","forEach","provide","constants","uploadContextKey","accept","toRef","expose","_ctx","_cache","openBlock","createElementBlock","unref","showFileList","createBlock","uploadList","key"],"sources":["../../../../../../packages/components/upload/src/upload.vue"],"sourcesContent":["<template>\n  <div>\n    <upload-list\n      v-if=\"isPictureCard && showFileList\"\n      :disabled=\"disabled\"\n      :list-type=\"listType\"\n      :files=\"uploadFiles\"\n      :crossorigin=\"crossorigin\"\n      :handle-preview=\"onPreview\"\n      @remove=\"handleRemove\"\n    >\n      <template v-if=\"$slots.file\" #default=\"{ file, index }\">\n        <slot name=\"file\" :file=\"file\" :index=\"index\" />\n      </template>\n      <template #append>\n        <upload-content ref=\"uploadRef\" v-bind=\"uploadContentProps\">\n          <slot v-if=\"$slots.trigger\" name=\"trigger\" />\n          <slot v-if=\"!$slots.trigger && $slots.default\" />\n        </upload-content>\n      </template>\n    </upload-list>\n\n    <upload-content\n      v-if=\"!isPictureCard || (isPictureCard && !showFileList)\"\n      ref=\"uploadRef\"\n      v-bind=\"uploadContentProps\"\n    >\n      <slot v-if=\"$slots.trigger\" name=\"trigger\" />\n      <slot v-if=\"!$slots.trigger && $slots.default\" />\n    </upload-content>\n\n    <slot v-if=\"$slots.trigger\" />\n    <slot name=\"tip\" />\n    <upload-list\n      v-if=\"!isPictureCard && showFileList\"\n      :disabled=\"disabled\"\n      :list-type=\"listType\"\n      :files=\"uploadFiles\"\n      :crossorigin=\"crossorigin\"\n      :handle-preview=\"onPreview\"\n      @remove=\"handleRemove\"\n    >\n      <template v-if=\"$slots.file\" #default=\"{ file, index }\">\n        <slot name=\"file\" :file=\"file\" :index=\"index\" />\n      </template>\n    </upload-list>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, onBeforeUnmount, provide, shallowRef, toRef } from 'vue'\nimport { useFormDisabled } from '@element-plus/components/form'\nimport { uploadContextKey } from './constants'\nimport UploadList from './upload-list.vue'\nimport UploadContent from './upload-content.vue'\nimport { useHandlers } from './use-handlers'\nimport { uploadProps } from './upload'\n\nimport type {\n  UploadContentInstance,\n  UploadContentProps,\n} from './upload-content'\n\ndefineOptions({\n  name: 'ElUpload',\n})\n\nconst props = defineProps(uploadProps)\n\nconst disabled = useFormDisabled()\n\nconst uploadRef = shallowRef<UploadContentInstance>()\nconst {\n  abort,\n  submit,\n  clearFiles,\n  uploadFiles,\n  handleStart,\n  handleError,\n  handleRemove,\n  handleSuccess,\n  handleProgress,\n  revokeFileObjectURL,\n} = useHandlers(props, uploadRef)\n\nconst isPictureCard = computed(() => props.listType === 'picture-card')\n\nconst uploadContentProps = computed<UploadContentProps>(() => ({\n  ...props,\n  fileList: uploadFiles.value,\n  onStart: handleStart,\n  onProgress: handleProgress,\n  onSuccess: handleSuccess,\n  onError: handleError,\n  onRemove: handleRemove,\n}))\n\nonBeforeUnmount(() => {\n  uploadFiles.value.forEach(revokeFileObjectURL)\n})\n\nprovide(uploadContextKey, {\n  accept: toRef(props, 'accept'),\n})\n\ndefineExpose({\n  /** @description cancel upload request */\n  abort,\n  /** @description upload the file list manually */\n  submit,\n  /** @description clear the file list  */\n  clearFiles,\n  /** @description select the file manually */\n  handleStart,\n  /** @description remove the file manually */\n  handleRemove,\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;qCA+Dc;EACZA,IAAM;AACR;;;;;;IAIA,IAAMC,QAAA,GAAWC,kBAAA,CAAAC,eAAgB;IAEjC,IAAMC,SAAA,GAAYC,GAAA,CAAAC,UAAkC;IAC9C,IAAAC,qBAAA,GAWFC,WAAA,CAAAA,WAAY,CAAAC,KAAA,EAAOL,SAAS;MAV9BM,KAAA,GAAAH,qBAAA,CAAAG,KAAA;MACAC,MAAA,GAAAJ,qBAAA,CAAAI,MAAA;MACAC,UAAA,GAAAL,qBAAA,CAAAK,UAAA;MACAC,WAAA,GAAAN,qBAAA,CAAAM,WAAA;MACAC,WAAA,GAAAP,qBAAA,CAAAO,WAAA;MACAC,WAAA,GAAAR,qBAAA,CAAAQ,WAAA;MACAC,YAAA,GAAAT,qBAAA,CAAAS,YAAA;MACAC,aAAA,GAAAV,qBAAA,CAAAU,aAAA;MACAC,cAAA,GAAAX,qBAAA,CAAAW,cAAA;MACAC,mBAAA,GAAAZ,qBAAA,CAAAY,mBAAA;IAGF,IAAMC,aAAgB,GAAAf,GAAA,CAAAgB,QAAA,CAAS;MAAA,OAAMZ,KAAA,CAAMa,QAAA,KAAa,cAAc;IAAA;IAEhE,IAAAC,kBAAA,GAAqBlB,GAAA,CAAAgB,QAAA,CAA6B;MAAA,OAAAG,aAAA,CAAAA,aAAA,KACnDf,KAAA;QACHgB,QAAA,EAAUZ,WAAY,CAAAa,KAAA;QACtBC,OAAS,EAAAb,WAAA;QACTc,UAAY,EAAAV,cAAA;QACZW,SAAW,EAAAZ,aAAA;QACXa,OAAS,EAAAf,WAAA;QACTgB,QAAU,EAAAf;MAAA;IAAA,CACV;IAEFX,GAAA,CAAA2B,eAAA,CAAgB,YAAM;MACRnB,WAAA,CAAAa,KAAA,CAAMO,OAAA,CAAQd,mBAAmB;IAAA,CAC9C;IAEDd,GAAA,CAAA6B,OAAA,CAAQC,SAAA,CAAAC,gBAAkB;MACxBC,MAAA,EAAQhC,GAAA,CAAAiC,KAAM,CAAA7B,KAAA,EAAO,QAAQ;IAAA,CAC9B;IAEY8B,MAAA;MAAA7B,KAAA,EAAAA,KAAA;MAEXC,MAAA,EAAAA,MAAA;MAAAC,UAAA,EAAAA,UAAA;MAEAE,WAAA,EAAAA,WAAA;MAAAE,YAAA,EAAAA;IAAA,CAEA;IAAA,iBAAAwB,IAAA,EAAAC,MAAA;MAEA,OAAApC,GAAA,CAAAqC,SAAA,IAAArC,GAAA,CAAAsC,kBAAA,eAAAtC,GAAA,CAAAuC,KAAA,CAAAxB,aAAA,KAAAoB,IAAA,CAAAK,YAAA,IAAAxC,GAAA,CAAAqC,SAAA,IAAArC,GAAA,CAAAyC,WAAA,CAAAC,UAAA;QAEAC,GAAA;QACD/C,QAAA,EAAAI,GAAA,CAAAuC,KAAA,CAAA3C,QAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}