{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.includes.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.array.reduce.js\");\nrequire(\"core-js/modules/es.array.slice.js\");\nrequire(\"core-js/modules/es.iterator.constructor.js\");\nrequire(\"core-js/modules/es.iterator.reduce.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/es.string.includes.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar util = require('../util.js');\nfunction useExpand(watcherData) {\n  var instance = vue.getCurrentInstance();\n  var defaultExpandAll = vue.ref(false);\n  var expandRows = vue.ref([]);\n  var updateExpandRows = function updateExpandRows() {\n    var data = watcherData.data.value || [];\n    var rowKey = watcherData.rowKey.value;\n    if (defaultExpandAll.value) {\n      expandRows.value = data.slice();\n    } else if (rowKey) {\n      var expandRowsMap = util.getKeysMap(expandRows.value, rowKey);\n      expandRows.value = data.reduce(function (prev, row) {\n        var rowId = util.getRowIdentity(row, rowKey);\n        var rowInfo = expandRowsMap[rowId];\n        if (rowInfo) {\n          prev.push(row);\n        }\n        return prev;\n      }, []);\n    } else {\n      expandRows.value = [];\n    }\n  };\n  var toggleRowExpansion = function toggleRowExpansion(row, expanded) {\n    var changed = util.toggleRowStatus(expandRows.value, row, expanded);\n    if (changed) {\n      instance.emit(\"expand-change\", row, expandRows.value.slice());\n    }\n  };\n  var setExpandRowKeys = function setExpandRowKeys(rowKeys) {\n    instance.store.assertRowKey();\n    var data = watcherData.data.value || [];\n    var rowKey = watcherData.rowKey.value;\n    var keysMap = util.getKeysMap(data, rowKey);\n    expandRows.value = rowKeys.reduce(function (prev, cur) {\n      var info = keysMap[cur];\n      if (info) {\n        prev.push(info.row);\n      }\n      return prev;\n    }, []);\n  };\n  var isRowExpanded = function isRowExpanded(row) {\n    var rowKey = watcherData.rowKey.value;\n    if (rowKey) {\n      var expandMap = util.getKeysMap(expandRows.value, rowKey);\n      return !!expandMap[util.getRowIdentity(row, rowKey)];\n    }\n    return expandRows.value.includes(row);\n  };\n  return {\n    updateExpandRows: updateExpandRows,\n    toggleRowExpansion: toggleRowExpansion,\n    setExpandRowKeys: setExpandRowKeys,\n    isRowExpanded: isRowExpanded,\n    states: {\n      expandRows: expandRows,\n      defaultExpandAll: defaultExpandAll\n    }\n  };\n}\nexports[\"default\"] = useExpand;","map":{"version":3,"names":["useExpand","watcherData","instance","vue","getCurrentInstance","defaultExpandAll","ref","expandRows","updateExpandRows","data","value","rowKey","slice","expandRowsMap","util","getKeysMap","reduce","prev","row","rowId","getRowIdentity","rowInfo","push","toggleRowExpansion","expanded","changed","toggleRowStatus","emit","setExpandRowKeys","rowKeys","store","assertRowKey","keysMap","cur","info","isRowExpanded","expandMap","includes","states"],"sources":["../../../../../../../packages/components/table/src/store/expand.ts"],"sourcesContent":["// @ts-nocheck\nimport { getCurrentInstance, ref } from 'vue'\nimport { getKeysMap, getRowIdentity, toggleRowStatus } from '../util'\n\nimport type { Ref } from 'vue'\nimport type { WatcherPropsData } from '.'\nimport type { Table } from '../table/defaults'\n\nfunction useExpand<T>(watcherData: WatcherPropsData<T>) {\n  const instance = getCurrentInstance() as Table<T>\n  const defaultExpandAll = ref(false)\n  const expandRows: Ref<T[]> = ref([])\n  const updateExpandRows = () => {\n    const data = watcherData.data.value || []\n    const rowKey = watcherData.rowKey.value\n    if (defaultExpandAll.value) {\n      expandRows.value = data.slice()\n    } else if (rowKey) {\n      // TODO：这里的代码可以优化\n      const expandRowsMap = getKeysMap(expandRows.value, rowKey)\n      expandRows.value = data.reduce((prev: T[], row: T) => {\n        const rowId = getRowIdentity(row, rowKey)\n        const rowInfo = expandRowsMap[rowId]\n        if (rowInfo) {\n          prev.push(row)\n        }\n        return prev\n      }, [])\n    } else {\n      expandRows.value = []\n    }\n  }\n\n  const toggleRowExpansion = (row: T, expanded?: boolean) => {\n    const changed = toggleRowStatus(expandRows.value, row, expanded)\n    if (changed) {\n      instance.emit('expand-change', row, expandRows.value.slice())\n    }\n  }\n\n  const setExpandRowKeys = (rowKeys: string[]) => {\n    instance.store.assertRowKey()\n    // TODO：这里的代码可以优化\n    const data = watcherData.data.value || []\n    const rowKey = watcherData.rowKey.value\n    const keysMap = getKeysMap(data, rowKey)\n    expandRows.value = rowKeys.reduce((prev: T[], cur: string) => {\n      const info = keysMap[cur]\n      if (info) {\n        prev.push(info.row)\n      }\n      return prev\n    }, [])\n  }\n\n  const isRowExpanded = (row: T): boolean => {\n    const rowKey = watcherData.rowKey.value\n    if (rowKey) {\n      const expandMap = getKeysMap(expandRows.value, rowKey)\n      return !!expandMap[getRowIdentity(row, rowKey)]\n    }\n    return expandRows.value.includes(row)\n  }\n  return {\n    updateExpandRows,\n    toggleRowExpansion,\n    setExpandRowKeys,\n    isRowExpanded,\n    states: {\n      expandRows,\n      defaultExpandAll,\n    },\n  }\n}\n\nexport default useExpand\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}