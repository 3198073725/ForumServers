{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar index = require('../../../hooks/use-delayed-toggle/index.js');\nvar content = require('../../popper/src/content.js');\nvar teleport = require('../../teleport/src/teleport2.js');\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar index$1 = require('../../../hooks/use-aria/index.js');\nvar useTooltipContentProps = runtime.buildProps(_objectSpread(_objectSpread(_objectSpread({}, index.useDelayedToggleProps), content.popperContentProps), {}, {\n  appendTo: {\n    type: teleport.teleportProps.to.type\n  },\n  content: {\n    type: String,\n    \"default\": \"\"\n  },\n  rawContent: Boolean,\n  persistent: Boolean,\n  visible: {\n    type: runtime.definePropType(Boolean),\n    \"default\": null\n  },\n  transition: String,\n  teleported: {\n    type: Boolean,\n    \"default\": true\n  },\n  disabled: Boolean\n}, index$1.useAriaProps([\"ariaLabel\"])));\nexports.useTooltipContentProps = useTooltipContentProps;","map":{"version":3,"names":["useTooltipContentProps","runtime","buildProps","_objectSpread","index","useDelayedToggleProps","content","popperContentProps","appendTo","type","teleport","teleportProps","to","String","rawContent","Boolean","persistent","visible","definePropType","transition","teleported","disabled","index$1","useAriaProps"],"sources":["../../../../../../packages/components/tooltip/src/content.ts"],"sourcesContent":["import { buildProps, definePropType } from '@element-plus/utils'\nimport { popperContentProps } from '@element-plus/components/popper'\nimport { useAriaProps, useDelayedToggleProps } from '@element-plus/hooks'\n\nimport { teleportProps } from '@element-plus/components/teleport'\nimport type TooltipContent from './content.vue'\nimport type { ExtractPropTypes } from 'vue'\n\nexport const useTooltipContentProps = buildProps({\n  ...useDelayedToggleProps,\n  ...popperContentProps,\n  /**\n   * @description which element the tooltip CONTENT appends to\n   */\n  appendTo: {\n    type: teleportProps.to.type,\n  },\n  /**\n   * @description display content, can be overridden by `slot#content`\n   */\n  content: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description whether `content` is treated as HTML string\n   */\n  rawContent: Boolean,\n  /**\n   * @description when tooltip inactive and `persistent` is `false` , popconfirm will be destroyed\n   */\n  persistent: Boolean,\n  // because model toggle prop is generated dynamically\n  // so the typing cannot be evaluated by typescript as type:\n  // [name]: { type: Boolean, default: null }\n  // so we need to declare that again for type checking.\n  /**\n   * @description visibility of Tooltip\n   */\n  visible: {\n    type: definePropType<boolean | null>(Boolean),\n    default: null,\n  },\n  /**\n   * @description animation name\n   */\n  transition: String,\n  /**\n   * @description whether tooltip content is teleported, if `true` it will be teleported to where `append-to` sets\n   */\n  teleported: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description whether Tooltip is disabled\n   */\n  disabled: Boolean,\n  ...useAriaProps(['ariaLabel']),\n} as const)\n\nexport type ElTooltipContentProps = ExtractPropTypes<\n  typeof useTooltipContentProps\n>\n\nexport type TooltipContentInstance = InstanceType<typeof TooltipContent> &\n  unknown\n"],"mappings":";;;;;;;;;;;;AAIY,IAACA,sBAAsB,GAAGC,OAAA,CAAAC,UAAU,CAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA,KAC3CC,KAAA,CAAAC,qBAAqB,GACrBC,OAAA,CAAAC,kBAAkB;EACrBC,QAAQ,EAAE;IACRC,IAAI,EAAEC,QAAA,CAAAC,aAAa,CAACC,EAAE,CAACH;EAC3B,CAAG;EACDH,OAAO,EAAE;IACPG,IAAI,EAAEI,MAAM;IACZ,WAAS;EACb,CAAG;EACDC,UAAU,EAAEC,OAAO;EACnBC,UAAU,EAAED,OAAO;EACnBE,OAAO,EAAE;IACPR,IAAI,EAAER,OAAA,CAAAiB,cAAc,CAACH,OAAO,CAAC;IAC7B,WAAS;EACb,CAAG;EACDI,UAAU,EAAEN,MAAM;EAClBO,UAAU,EAAE;IACVX,IAAI,EAAEM,OAAO;IACb,WAAS;EACb,CAAG;EACDM,QAAQ,EAAEN;AAAO,GACdO,OAAA,CAAAC,YAAY,CAAC,CAAC,WAAW,CAAC,CAAC,CAC/B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}