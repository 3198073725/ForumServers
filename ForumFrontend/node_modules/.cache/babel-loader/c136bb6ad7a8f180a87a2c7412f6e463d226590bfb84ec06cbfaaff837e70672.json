{"ast":null,"code":"import _regeneratorRuntime from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { computed, onMounted, ref, provide } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter, useRoute } from 'vue-router';\nimport NotificationBell from '@/components/NotificationBell.vue';\nimport { ElMessage } from 'element-plus';\n\n// 是否启用调试日志\nvar DEBUG = false;\n\n// 自定义日志函数，可以通过DEBUG开关控制\nvar log = function log() {\n  if (DEBUG) {\n    var _console;\n    (_console = console).log.apply(_console, arguments);\n  }\n};\nexport default {\n  name: 'App',\n  components: {\n    NotificationBell: NotificationBell\n  },\n  setup: function setup() {\n    var store = useStore();\n    var router = useRouter();\n    var route = useRoute();\n\n    // 登录状态\n    var isLoggedIn = computed(function () {\n      return store.getters.isLoggedIn;\n    });\n    var isAdmin = computed(function () {\n      return store.getters.isAdmin;\n    });\n    var user = computed(function () {\n      return store.state.user;\n    });\n    var username = computed(function () {\n      return store.getters.username;\n    });\n    var userAvatar = computed(function () {\n      return store.getters.userAvatar;\n    });\n\n    // 检查通知功能是否可用\n    var notificationsEnabled = ref(true);\n\n    // 当前激活的路由\n    var activeRoute = computed(function () {\n      return route.path;\n    });\n\n    // 路由导航\n    var goToLogin = function goToLogin() {\n      return router.push('/login');\n    };\n    var goToRegister = function goToRegister() {\n      return router.push('/register');\n    };\n\n    // 强制刷新认证状态\n    var forceRefreshAuthState = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var token, userInfoStr, userInfo, _userInfo;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              log('强制刷新认证状态');\n              token = localStorage.getItem('token');\n              if (token) {\n                _context.next = 5;\n                break;\n              }\n              log('本地存储中没有token，不刷新认证状态');\n              return _context.abrupt(\"return\", false);\n            case 5:\n              // 同步token到store\n              store.commit('setToken', token);\n\n              // 尝试同步用户信息\n              try {\n                userInfoStr = localStorage.getItem('userInfo');\n                if (userInfoStr) {\n                  userInfo = JSON.parse(userInfoStr);\n                  store.commit('setUser', userInfo);\n                  log('已从localStorage同步用户信息:', userInfo);\n                }\n              } catch (e) {\n                console.error('解析本地用户信息失败:', e);\n              }\n\n              // 从API获取最新用户信息\n              _context.prev = 7;\n              _context.next = 10;\n              return store.dispatch('getUserInfo');\n            case 10:\n              _userInfo = _context.sent;\n              log('已从API更新用户信息:', _userInfo);\n              return _context.abrupt(\"return\", !!_userInfo);\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](7);\n              console.error('从API获取用户信息失败:', _context.t0);\n              return _context.abrupt(\"return\", false);\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[7, 15]]);\n      }));\n      return function forceRefreshAuthState() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    // 提供给子组件\n    provide('forceRefreshAuthState', forceRefreshAuthState);\n\n    // 处理下拉菜单命令\n    var handleCommand = function handleCommand(command) {\n      var _user$value, _store$state$user;\n      var userId;\n      switch (command) {\n        case 'profile':\n          // 确保用户ID存在\n          userId = ((_user$value = user.value) === null || _user$value === void 0 ? void 0 : _user$value.id) || ((_store$state$user = store.state.user) === null || _store$state$user === void 0 ? void 0 : _store$state$user.id);\n          if (userId) {\n            router.push(\"/profile/\".concat(userId));\n          } else {\n            console.error('无法获取用户ID');\n            ElMessage.error('获取用户信息失败');\n          }\n          break;\n        case 'admin':\n          router.push('/admin');\n          break;\n        case 'logout':\n          logout();\n          break;\n      }\n    };\n\n    // 登出\n    var logout = function logout() {\n      // 登出并重定向到首页\n      store.dispatch('logout');\n      router.push('/');\n    };\n    onMounted(function () {\n      log('App组件加载 - 登录状态:', {\n        isLoggedIn: isLoggedIn.value,\n        token: store.state.token,\n        userInfo: user.value,\n        localStorageToken: localStorage.getItem('token'),\n        localStorageUserInfo: localStorage.getItem('userInfo')\n      });\n\n      // 强制刷新用户状态\n      var token = localStorage.getItem('token');\n      if (token) {\n        log('App.vue - 应用启动时发现token，强制刷新用户状态');\n        store.commit('setToken', token);\n        try {\n          var userInfoStr = localStorage.getItem('userInfo');\n          if (userInfoStr) {\n            var userInfo = JSON.parse(userInfoStr);\n            store.commit('setUser', userInfo);\n            log('已从localStorage恢复用户信息:', userInfo);\n          }\n        } catch (e) {\n          console.error('解析用户信息失败:', e);\n        }\n\n        // 请求最新的用户信息\n        store.dispatch('getUserInfo').then(function (userInfo) {\n          log('用户信息已从API刷新:', userInfo);\n          // 强制触发状态更新\n          setTimeout(function () {\n            log('强制触发登录状态检查:', {\n              isLoggedIn: store.getters.isLoggedIn,\n              token: store.state.token,\n              userInfo: store.state.user\n            });\n          }, 100);\n        })[\"catch\"](function (err) {\n          console.error('刷新用户信息失败:', err);\n        });\n      }\n\n      // 检查通知API是否可用\n      if (isLoggedIn.value) {\n        var _token = store.state.token || localStorage.getItem('token');\n        if (!_token) {\n          notificationsEnabled.value = false;\n          log('用户登录状态异常，禁用通知功能');\n          return;\n        }\n        fetch('http://localhost:8000/api/v1/notifications/', {\n          headers: {\n            'Authorization': \"Bearer \".concat(_token)\n          }\n        }).then(function (response) {\n          notificationsEnabled.value = response.status !== 404;\n          log('通知功能' + (notificationsEnabled.value ? '可用' : '不可用'));\n        })[\"catch\"](function () {\n          notificationsEnabled.value = false;\n          log('通知功能不可用 - 连接失败');\n        });\n      } else {\n        notificationsEnabled.value = false;\n        log('用户未登录，禁用通知功能');\n      }\n    });\n    return {\n      isLoggedIn: isLoggedIn,\n      isAdmin: isAdmin,\n      user: user,\n      username: username,\n      userAvatar: userAvatar,\n      activeRoute: activeRoute,\n      notificationsEnabled: notificationsEnabled,\n      goToLogin: goToLogin,\n      goToRegister: goToRegister,\n      handleCommand: handleCommand\n    };\n  }\n};","map":{"version":3,"names":["computed","onMounted","ref","provide","useStore","useRouter","useRoute","NotificationBell","ElMessage","DEBUG","log","_console","console","apply","arguments","name","components","setup","store","router","route","isLoggedIn","getters","isAdmin","user","state","username","userAvatar","notificationsEnabled","activeRoute","path","goToLogin","push","goToRegister","forceRefreshAuthState","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","userInfoStr","userInfo","_userInfo","wrap","_callee$","_context","prev","next","localStorage","getItem","abrupt","commit","JSON","parse","e","error","dispatch","sent","t0","stop","handleCommand","command","_user$value","_store$state$user","userId","value","id","concat","logout","localStorageToken","localStorageUserInfo","then","setTimeout","err","fetch","headers","response","status"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>\n        <div class=\"header-content\">\n          <div class=\"logo\">\n            <router-link to=\"/\">论坛系统</router-link>\n          </div>\n          <div class=\"nav\">\n            <el-menu mode=\"horizontal\" :router=\"true\" :default-active=\"activeRoute\">\n              <el-menu-item index=\"/\">首页</el-menu-item>\n              <el-menu-item index=\"/boards\">板块</el-menu-item>\n              <el-menu-item index=\"/posts\">帖子</el-menu-item>\n              <el-menu-item index=\"/ranking\">排行榜</el-menu-item>\n              <el-menu-item index=\"/complaints\">投诉中心</el-menu-item>\n            </el-menu>\n          </div>\n          <div class=\"user-actions\">\n            <template v-if=\"isLoggedIn\">\n              <!-- 通知铃铛 -->\n              <NotificationBell v-if=\"notificationsEnabled\" />\n              \n              <!-- 用户头像和下拉菜单 -->\n              <el-dropdown trigger=\"click\" @command=\"handleCommand\">\n                <div class=\"user-avatar\">\n                  <el-avatar :size=\"32\" :src=\"userAvatar\">\n                    {{ username && username.substring(0, 1).toUpperCase() }}\n                  </el-avatar>\n                  <span class=\"username\">{{ user && (user.nickname || user.username) }}</span>\n                </div>\n                <template #dropdown>\n                  <el-dropdown-menu>\n                    <el-dropdown-item command=\"profile\">个人中心</el-dropdown-item>\n                    <el-dropdown-item v-if=\"isAdmin\" command=\"admin\">管理后台</el-dropdown-item>\n                    <el-dropdown-item divided command=\"logout\">退出登录</el-dropdown-item>\n                  </el-dropdown-menu>\n                </template>\n              </el-dropdown>\n            </template>\n            <template v-else>\n              <el-button type=\"primary\" @click=\"goToLogin\">登录</el-button>\n              <el-button @click=\"goToRegister\">注册</el-button>\n            </template>\n          </div>\n        </div>\n      </el-header>\n      \n      <el-container class=\"main-container\">\n        <el-main>\n          <router-view />\n        </el-main>\n      </el-container>\n    \n    </el-container>\n    \n  </div>\n</template>\n\n<script>\nimport { computed, onMounted, ref, provide } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRouter, useRoute } from 'vue-router'\nimport NotificationBell from '@/components/NotificationBell.vue'\n\nimport { ElMessage } from 'element-plus'\n\n// 是否启用调试日志\nconst DEBUG = false;\n\n// 自定义日志函数，可以通过DEBUG开关控制\nconst log = (...args) => {\n  if (DEBUG) {\n    console.log(...args);\n  }\n};\n\nexport default {\n  name: 'App',\n  components: {\n    NotificationBell\n  },\n  setup() {\n    const store = useStore()\n    const router = useRouter()\n    const route = useRoute()\n    \n    // 登录状态\n    const isLoggedIn = computed(() => store.getters.isLoggedIn)\n    const isAdmin = computed(() => store.getters.isAdmin)\n    const user = computed(() => store.state.user)\n    const username = computed(() => store.getters.username)\n    const userAvatar = computed(() => store.getters.userAvatar)\n    \n    // 检查通知功能是否可用\n    const notificationsEnabled = ref(true)\n    \n    // 当前激活的路由\n    const activeRoute = computed(() => route.path)\n    \n    // 路由导航\n    const goToLogin = () => router.push('/login')\n    const goToRegister = () => router.push('/register')\n    \n    // 强制刷新认证状态\n    const forceRefreshAuthState = async () => {\n      log('强制刷新认证状态')\n      const token = localStorage.getItem('token')\n      if (!token) {\n        log('本地存储中没有token，不刷新认证状态')\n        return false\n      }\n\n      // 同步token到store\n      store.commit('setToken', token)\n      \n      // 尝试同步用户信息\n      try {\n        const userInfoStr = localStorage.getItem('userInfo')\n        if (userInfoStr) {\n          const userInfo = JSON.parse(userInfoStr)\n          store.commit('setUser', userInfo)\n          log('已从localStorage同步用户信息:', userInfo)\n        }\n      } catch (e) {\n        console.error('解析本地用户信息失败:', e)\n      }\n      \n      // 从API获取最新用户信息\n      try {\n        const userInfo = await store.dispatch('getUserInfo')\n        log('已从API更新用户信息:', userInfo)\n        return !!userInfo\n      } catch (err) {\n        console.error('从API获取用户信息失败:', err)\n        return false\n      }\n    }\n    \n    // 提供给子组件\n    provide('forceRefreshAuthState', forceRefreshAuthState)\n    \n    // 处理下拉菜单命令\n    const handleCommand = (command) => {\n      let userId;\n      \n      switch (command) {\n        case 'profile':\n          // 确保用户ID存在\n          userId = user.value?.id || store.state.user?.id;\n          if (userId) {\n            router.push(`/profile/${userId}`);\n          } else {\n            console.error('无法获取用户ID');\n            ElMessage.error('获取用户信息失败');\n          }\n          break;\n\n        case 'admin':\n          router.push('/admin');\n          break;\n        case 'logout':\n          logout();\n          break;\n      }\n    }\n    \n    // 登出\n    const logout = () => {\n      // 登出并重定向到首页\n      store.dispatch('logout')\n      router.push('/')\n    }\n    \n    onMounted(() => {\n      log('App组件加载 - 登录状态:', {\n        isLoggedIn: isLoggedIn.value,\n        token: store.state.token,\n        userInfo: user.value,\n        localStorageToken: localStorage.getItem('token'),\n        localStorageUserInfo: localStorage.getItem('userInfo')\n      })\n      \n      // 强制刷新用户状态\n      const token = localStorage.getItem('token')\n      if (token) {\n        log('App.vue - 应用启动时发现token，强制刷新用户状态')\n        store.commit('setToken', token)\n        try {\n          const userInfoStr = localStorage.getItem('userInfo')\n          if (userInfoStr) {\n            const userInfo = JSON.parse(userInfoStr)\n            store.commit('setUser', userInfo)\n            log('已从localStorage恢复用户信息:', userInfo)\n          }\n        } catch (e) {\n          console.error('解析用户信息失败:', e)\n        }\n        \n        // 请求最新的用户信息\n        store.dispatch('getUserInfo')\n          .then(userInfo => {\n            log('用户信息已从API刷新:', userInfo)\n            // 强制触发状态更新\n            setTimeout(() => {\n              log('强制触发登录状态检查:', {\n                isLoggedIn: store.getters.isLoggedIn,\n                token: store.state.token,\n                userInfo: store.state.user\n              })\n            }, 100)\n          })\n          .catch(err => {\n            console.error('刷新用户信息失败:', err)\n          })\n      }\n      \n      // 检查通知API是否可用\n      if (isLoggedIn.value) {\n        const token = store.state.token || localStorage.getItem('token');\n        if (!token) {\n          notificationsEnabled.value = false;\n          log('用户登录状态异常，禁用通知功能');\n          return;\n        }\n        \n        fetch('http://localhost:8000/api/v1/notifications/', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        })\n          .then(response => {\n            notificationsEnabled.value = response.status !== 404\n            log('通知功能' + (notificationsEnabled.value ? '可用' : '不可用'))\n          })\n          .catch(() => {\n            notificationsEnabled.value = false\n            log('通知功能不可用 - 连接失败')\n          })\n      } else {\n        notificationsEnabled.value = false\n        log('用户未登录，禁用通知功能')\n      }\n    })\n    \n    return {\n      isLoggedIn,\n      isAdmin,\n      user,\n      username,\n      userAvatar,\n      activeRoute,\n      notificationsEnabled,\n      goToLogin,\n      goToRegister,\n      handleCommand\n    }\n  }\n}\n</script>\n\n<style>\n/* 全局样式 */\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n}\n\n/* 修复下拉框宽度问题 */\n.el-select {\n  min-width: 120px !important;\n}\n\n.el-select .el-input {\n  width: 100% !important;\n}\n\n.el-select-dropdown__item {\n  white-space: nowrap !important;\n  overflow: hidden !important;\n  text-overflow: ellipsis !important;\n}\n\n.el-select-dropdown {\n  min-width: 120px !important;\n}\n\n.header-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 100%;\n}\n\n.el-container {\n  min-height: 100vh;\n}\n\n.el-header {\n  padding: 0;\n  background-color: #fff;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  position: fixed;\n  width: 100%;\n  z-index: 1000;\n}\n\n.logo {\n  font-size: 20px;\n  font-weight: bold;\n}\n\n.logo a {\n  color: #409EFF;\n  text-decoration: none;\n}\n\n.nav {\n  flex: 1;\n  margin: 0 20px;\n}\n\n.nav .el-menu {\n  border: none;\n  background: transparent;\n}\n\n.user-actions {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n}\n\n.user-avatar {\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n}\n\n.username {\n  margin-left: 8px;\n  font-size: 14px;\n}\n\n.main-container {\n  padding-top: 60px;\n  min-height: calc(100vh - 60px);\n  background-color: #f5f7fa;\n}\n\n.el-main {\n  padding: 20px;\n}\n\n.el-footer {\n  height: 60px !important;\n  background-color: #fff;\n  border-top: 1px solid #e4e7ed;\n  margin-top: auto;\n}\n\n.footer-content {\n  max-width: 1400px;\n  margin: 0 auto;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #909399;\n}\n\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}