{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar constants = require('./constants.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar __default__ = vue.defineComponent({\n  name: \"ElPopperArrow\",\n  inheritAttrs: false\n});\nvar _sfc_main = /* @__PURE__ */vue.defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var ns = index.useNamespace(\"popper\");\n    var _vue$inject = vue.inject(constants.POPPER_CONTENT_INJECTION_KEY, void 0),\n      arrowRef = _vue$inject.arrowRef,\n      arrowStyle = _vue$inject.arrowStyle;\n    vue.onBeforeUnmount(function () {\n      arrowRef.value = void 0;\n    });\n    expose({\n      arrowRef: arrowRef\n    });\n    return function (_ctx, _cache) {\n      return vue.openBlock(), vue.createElementBlock(\"span\", {\n        ref_key: \"arrowRef\",\n        ref: arrowRef,\n        \"class\": vue.normalizeClass(vue.unref(ns).e(\"arrow\")),\n        style: vue.normalizeStyle(vue.unref(arrowStyle)),\n        \"data-popper-arrow\": \"\"\n      }, null, 6);\n    };\n  }\n}));\nvar ElPopperArrow = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"arrow.vue\"]]);\nexports[\"default\"] = ElPopperArrow;","map":{"version":3,"names":["name","inheritAttrs","ns","index","useNamespace","_vue$inject","vue","inject","constants","POPPER_CONTENT_INJECTION_KEY","arrowRef","arrowStyle","onBeforeUnmount","value","expose","_ctx","_cache","openBlock","createElementBlock","ref_key","ref","normalizeClass","unref","e","style","normalizeStyle"],"sources":["../../../../../../packages/components/popper/src/arrow.vue"],"sourcesContent":["<template>\n  <span\n    ref=\"arrowRef\"\n    :class=\"ns.e('arrow')\"\n    :style=\"arrowStyle\"\n    data-popper-arrow\n  />\n</template>\n\n<script lang=\"ts\" setup>\nimport { inject, onBeforeUnmount } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { POPPER_CONTENT_INJECTION_KEY } from './constants'\n\ndefineOptions({\n  name: 'ElPopperArrow',\n  inheritAttrs: false,\n})\n\nconst ns = useNamespace('popper')\nconst { arrowRef, arrowStyle } = inject(\n  POPPER_CONTENT_INJECTION_KEY,\n  undefined\n)!\n\nonBeforeUnmount(() => {\n  arrowRef.value = undefined\n})\n\ndefineExpose({\n  /**\n   * @description Arrow element\n   */\n  arrowRef,\n})\n</script>\n"],"mappings":";;;;;;;;;;;qCAcc;EACZA,IAAM;EACNC,YAAc;AAChB;;;;IAEM,IAAAC,EAAA,GAAKC,KAAA,CAAAC,YAAA,CAAa,QAAQ;IAC1B,IAAAC,WAAA,GAA2BC,GAAA,CAAAC,MAAA,CAAAC,SAAA,CAAAC,4BAAA;MAAzBC,QAAU,GAAAL,WAAA,CAAVK,QAAU;MAAAC,UAAA,GAAAN,WAAA,CAAAM,UAAA;IAChBL,GAAA,CAAAM,eAAA;MACAF,QAAA,CAAAG,KAAA;IAAA,CACF;IAEAC,MAAA;MACEJ,QAAA,EAAAA;IAAiB,CAClB;IAEY,iBAAAK,IAAA,EAAAC,MAAA;MAAA,OAAAV,GAAA,CAAAW,SAAA,IAAAX,GAAA,CAAAY,kBAAA;QAAAC,OAAA;QAAAC,GAAA,EAAAV,QAAA;QAIX,SAAAJ,GAAA,CAAAe,cAAA,CAAAf,GAAA,CAAAgB,KAAA,CAAApB,EAAA,EAAAqB,CAAA;QACDC,KAAA,EAAAlB,GAAA,CAAAmB,cAAA,CAAAnB,GAAA,CAAAgB,KAAA,CAAAX,UAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}