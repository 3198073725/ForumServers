{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar index$1 = require('../../text/index.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar _sfc_main = vue.defineComponent({\n  name: \"ElTreeNodeContent\",\n  props: {\n    node: {\n      type: Object,\n      required: true\n    },\n    renderContent: Function\n  },\n  setup: function setup(props) {\n    var ns = index.useNamespace(\"tree\");\n    var nodeInstance = vue.inject(\"NodeInstance\");\n    var tree = vue.inject(\"RootTree\");\n    return function () {\n      var node = props.node;\n      var data = node.data,\n        store = node.store;\n      return props.renderContent ? props.renderContent(vue.h, {\n        _self: nodeInstance,\n        node: node,\n        data: data,\n        store: store\n      }) : vue.renderSlot(tree.ctx.slots, \"default\", {\n        node: node,\n        data: data\n      }, function () {\n        return [vue.h(index$1.ElText, {\n          tag: \"span\",\n          truncated: true,\n          \"class\": ns.be(\"node\", \"label\")\n        }, function () {\n          return [node.label];\n        })];\n      });\n    };\n  }\n});\nvar NodeContent = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"tree-node-content.vue\"]]);\nexports[\"default\"] = NodeContent;","map":{"version":3,"names":["_sfc_main","vue","defineComponent","name","props","node","type","Object","required","renderContent","Function","setup","ns","index","useNamespace","nodeInstance","inject","tree","data","store","h","_self","renderSlot","ctx","slots","index$1","ElText","tag","truncated","be","label","NodeContent","pluginVue_exportHelper"],"sources":["../../../../../../packages/components/tree/src/tree-node-content.vue"],"sourcesContent":["<script lang=\"ts\">\nimport { defineComponent, h, inject, renderSlot } from 'vue'\nimport ElText from '@element-plus/components/text'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport type { ComponentInternalInstance } from 'vue'\nimport type { RootTreeType } from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTreeNodeContent',\n  props: {\n    node: {\n      type: Object,\n      required: true,\n    },\n    renderContent: Function,\n  },\n  setup(props) {\n    const ns = useNamespace('tree')\n    const nodeInstance = inject<ComponentInternalInstance>('NodeInstance')\n    const tree = inject<RootTreeType>('RootTree')!\n    return () => {\n      const node = props.node\n      const { data, store } = node\n      return props.renderContent\n        ? props.renderContent(h, { _self: nodeInstance, node, data, store })\n        : renderSlot(tree.ctx.slots, 'default', { node, data }, () => [\n            h(\n              ElText,\n              { tag: 'span', truncated: true, class: ns.be('node', 'label') },\n              () => [node.label]\n            ),\n          ])\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;;;;;AAQA,IAAKA,SAAA,GAAaC,GAAA,CAAAC,eAAa;EAC7BC,IAAM;EACNC,KAAO;IACLC,IAAM;MACJC,IAAM,EAAAC,MAAA;MACNC,QAAU;IAAA,CACZ;IACAC,aAAe,EAAAC;EAAA,CACjB;EACAC,KAAA,WAAAA,MAAMP,KAAO;IACL,IAAAQ,EAAA,GAAKC,KAAA,CAAAC,YAAA,CAAa,MAAM;IACxB,IAAAC,YAAA,GAAed,GAAA,CAAAe,MAAA,CAAkC,cAAc;IAC/D,IAAAC,IAAA,GAAOhB,GAAA,CAAAe,MAAA,CAAqB,UAAU;IAC5C,OAAO,YAAM;MACX,IAAMX,IAAA,GAAOD,KAAM,CAAAC,IAAA;MACb,IAAEa,IAAM,GAAUb,IAAA,CAAhBa,IAAM;QAAAC,KAAA,GAAUd,IAAA,CAAVc,KAAA;MACP,OAAAf,KAAA,CAAMK,aAAA,GACTL,KAAM,CAAAK,aAAA,CAAcR,GAAA,CAAAmB,CAAA,EAAG;QAAEC,KAAA,EAAON,YAAc;QAAAV,IAAA,EAAAA,IAAA;QAAMa,IAAM,EAANA,IAAM;QAAAC,KAAA,EAAAA;MAAA,CAAO,CACjE,GAAAlB,GAAA,CAAAqB,UAAA,CAAWL,IAAA,CAAKM,GAAI,CAAAC,KAAA,EAAO,WAAW;QAAEnB,IAAA,EAAAA,IAAA;QAAMa,IAAK,EAALA;MAAK,GAAG;QAAA,OAAM,CAC1DjB,GAAA,CAAAmB,CAAA,CAAAK,OAAA,CAAAC,MAAA;UAAAC,GAAA;UAAAC,SAAA;UAAA,SAAAhB,EAAA,CAAAiB,EAAA;QAAA;UAAA,QAAAxB,IAAA,CAAAyB,KAAA;QAAA,GACE;MAAA;IAAA,CACA;EAA8D;AAC7C,CACnB;AACD,IAAAC,WAAA,GACP,eAAAC,sBAAA,YAAAhC,SAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}