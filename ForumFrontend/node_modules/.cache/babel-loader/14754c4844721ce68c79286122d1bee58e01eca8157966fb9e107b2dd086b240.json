{"ast":null,"code":"import _regeneratorRuntime from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport { getPostList } from '@/api/post';\nimport { getBoardList } from '@/api/board';\nimport { formatDateTime } from '@/utils/index';\nimport { mapGetters } from 'vuex';\n\n// 格式化日期函数\nvar formatDate = function formatDate(date) {\n  return formatDateTime(date);\n};\nexport default {\n  name: 'PostList',\n  data: function data() {\n    return {\n      loading: false,\n      posts: [],\n      total: 0,\n      boardOptions: [],\n      listQuery: {\n        page: 1,\n        limit: 10,\n        board: null,\n        ordering: '-created_at',\n        search: ''\n      }\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['isLogin'])),\n  created: function created() {\n    this.fetchBoardOptions();\n    this.fetchPosts();\n  },\n  methods: {\n    formatDate: formatDate,\n    // 获取板块选项\n    fetchBoardOptions: function fetchBoardOptions() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getBoardList();\n            case 3:\n              response = _context.sent;\n              if (response.code === 0) {\n                _this.boardOptions = response.data;\n              }\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('获取板块列表失败:', _context.t0);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    },\n    // 获取帖子列表\n    fetchPosts: function fetchPosts() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var params, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this2.loading = true;\n              _context2.prev = 1;\n              params = {\n                page: _this2.listQuery.page,\n                page_size: _this2.listQuery.limit,\n                ordering: _this2.listQuery.ordering\n              };\n              if (_this2.listQuery.board) {\n                params.board = _this2.listQuery.board;\n              }\n              if (_this2.listQuery.search) {\n                params.search = _this2.listQuery.search;\n              }\n              _context2.next = 7;\n              return getPostList(params);\n            case 7:\n              response = _context2.sent;\n              if (response.code === 0) {\n                _this2.posts = response.data.results || [];\n                _this2.total = response.data.count || 0;\n              } else {\n                _this2.$message.error(response.msg || '获取帖子列表失败');\n              }\n              _context2.next = 15;\n              break;\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error('获取帖子列表失败:', _context2.t0);\n              _this2.$message.error('获取帖子列表失败');\n            case 15:\n              _context2.prev = 15;\n              _this2.loading = false;\n              return _context2.finish(15);\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[1, 11, 15, 18]]);\n      }))();\n    },\n    // 筛选\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.fetchPosts();\n    },\n    // 页码变化\n    handlePageChange: function handlePageChange(page) {\n      this.listQuery.page = page;\n      this.fetchPosts();\n    },\n    // 查看帖子\n    viewPost: function viewPost(post) {\n      this.$router.push({\n        name: 'PostDetail',\n        params: {\n          id: post.id\n        }\n      });\n    },\n    // 创建帖子\n    handleCreatePost: function handleCreatePost() {\n      if (!this.isLogin) {\n        this.$message.warning('请先登录');\n        this.$router.push({\n          name: 'Login',\n          query: {\n            redirect: this.$route.fullPath\n          }\n        });\n        return;\n      }\n      this.$router.push({\n        name: 'PostCreate'\n      });\n    }\n  }\n};","map":{"version":3,"names":["getPostList","getBoardList","formatDateTime","mapGetters","formatDate","date","name","data","loading","posts","total","boardOptions","listQuery","page","limit","board","ordering","search","computed","_objectSpread","created","fetchBoardOptions","fetchPosts","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","sent","code","t0","console","error","stop","_this2","_callee2","params","_callee2$","_context2","page_size","results","count","$message","msg","finish","handleFilter","handlePageChange","viewPost","post","$router","push","id","handleCreatePost","isLogin","warning","query","redirect","$route","fullPath"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\post\\PostList.vue"],"sourcesContent":["<template>\n  <div class=\"post-list-container\">\n    <!-- 顶部过滤器 -->\n    <el-card class=\"filter-card\">\n      <div class=\"filter-container\">\n        <div class=\"filter-item\">\n          <el-select v-model=\"listQuery.board\" placeholder=\"选择板块\" clearable @change=\"handleFilter\">\n            <el-option\n              v-for=\"board in boardOptions\"\n              :key=\"board.id\"\n              :label=\"board.name\"\n              :value=\"board.id\"\n            >\n            </el-option>\n          </el-select>\n        </div>\n\n        <div class=\"filter-item\">\n          <el-select v-model=\"listQuery.ordering\" placeholder=\"排序方式\" @change=\"handleFilter\">\n            <el-option label=\"最新发布\" value=\"-created_at\"></el-option>\n            <el-option label=\"最多浏览\" value=\"-views\"></el-option>\n            <el-option label=\"最多点赞\" value=\"-likes_count\"></el-option>\n            <el-option label=\"最多评论\" value=\"-comments_count\"></el-option>\n          </el-select>\n        </div>\n\n        <div class=\"filter-item\">\n          <el-input\n            v-model=\"listQuery.search\"\n            placeholder=\"搜索帖子\"\n            style=\"width: 200px;\"\n            clearable\n            @keyup.enter=\"handleFilter\"\n            @clear=\"handleFilter\"\n          >\n            <template #append>\n              <el-button icon=\"el-icon-search\" @click=\"handleFilter\"></el-button>\n            </template>\n          </el-input>\n        </div>\n\n        <div class=\"filter-item\">\n          <el-button type=\"primary\" @click=\"handleCreatePost\">发布新帖</el-button>\n        </div>\n      </div>\n    </el-card>\n\n    <!-- 帖子列表 -->\n    <el-card class=\"post-list-card\">\n      <div v-if=\"loading\" class=\"loading-container\">\n        <el-skeleton :rows=\"10\" animated />\n      </div>\n      <div v-else>\n        <div v-if=\"posts.length === 0\" class=\"empty-posts\">\n          <i class=\"el-icon-document\"></i>\n          <p>暂无帖子，快来发布第一篇帖子吧！</p>\n        </div>\n        <div v-else class=\"post-list\">\n          <div\n            v-for=\"post in posts\"\n            :key=\"post.id\"\n            class=\"post-item\"\n            @click=\"viewPost(post)\"\n          >\n            <div class=\"post-title\">\n              <el-tag v-if=\"post.is_pinned\" size=\"mini\" type=\"danger\">置顶</el-tag>\n              <el-tag v-if=\"post.is_featured\" size=\"mini\" type=\"success\">精华</el-tag>\n              <span>{{ post.title }}</span>\n            </div>\n            <div class=\"post-meta\">\n              <div class=\"post-board\">\n                <i class=\"el-icon-s-grid\"></i>\n                <span>{{ post.board_name }}</span>\n              </div>\n              <div class=\"post-author\">\n                <i class=\"el-icon-user\"></i>\n                <span>{{ post.user.nickname || post.user.username }}</span>\n              </div>\n              <div class=\"post-stats\">\n                <span><i class=\"el-icon-view\"></i> {{ post.views }}</span>\n                <span><i class=\"el-icon-star-on\"></i> {{ post.likes_count }}</span>\n                <span><i class=\"el-icon-chat-dot-round\"></i> {{ post.comments_count }}</span>\n              </div>\n              <div class=\"post-time\">{{ formatDate(post.created_at) }}</div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 分页 -->\n        <div class=\"pagination-container\">\n          <el-pagination\n            background\n            layout=\"prev, pager, next\"\n            :total=\"total\"\n            :page-size=\"listQuery.limit\"\n            v-model:current-page=\"listQuery.page\"\n            @current-change=\"handlePageChange\"\n          >\n          </el-pagination>\n        </div>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { getPostList } from '@/api/post'\nimport { getBoardList } from '@/api/board'\nimport { formatDateTime } from '@/utils/index'\nimport { mapGetters } from 'vuex'\n\n// 格式化日期函数\nconst formatDate = (date) => {\n  return formatDateTime(date)\n}\n\nexport default {\n  name: 'PostList',\n  data() {\n    return {\n      loading: false,\n      posts: [],\n      total: 0,\n      boardOptions: [],\n      listQuery: {\n        page: 1,\n        limit: 10,\n        board: null,\n        ordering: '-created_at',\n        search: ''\n      }\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'isLogin'\n    ])\n  },\n  created() {\n    this.fetchBoardOptions()\n    this.fetchPosts()\n  },\n  methods: {\n    formatDate,\n\n    // 获取板块选项\n    async fetchBoardOptions() {\n      try {\n        const response = await getBoardList()\n        if (response.code === 0) {\n          this.boardOptions = response.data\n        }\n      } catch (error) {\n        console.error('获取板块列表失败:', error)\n      }\n    },\n\n    // 获取帖子列表\n    async fetchPosts() {\n      this.loading = true\n      try {\n        const params = {\n          page: this.listQuery.page,\n          page_size: this.listQuery.limit,\n          ordering: this.listQuery.ordering\n        }\n\n        if (this.listQuery.board) {\n          params.board = this.listQuery.board\n        }\n\n        if (this.listQuery.search) {\n          params.search = this.listQuery.search\n        }\n\n        const response = await getPostList(params)\n        if (response.code === 0) {\n          this.posts = response.data.results || []\n          this.total = response.data.count || 0\n        } else {\n          this.$message.error(response.msg || '获取帖子列表失败')\n        }\n      } catch (error) {\n        console.error('获取帖子列表失败:', error)\n        this.$message.error('获取帖子列表失败')\n      } finally {\n        this.loading = false\n      }\n    },\n\n    // 筛选\n    handleFilter() {\n      this.listQuery.page = 1\n      this.fetchPosts()\n    },\n\n    // 页码变化\n    handlePageChange(page) {\n      this.listQuery.page = page\n      this.fetchPosts()\n    },\n\n    // 查看帖子\n    viewPost(post) {\n      this.$router.push({ name: 'PostDetail', params: { id: post.id } })\n    },\n\n    // 创建帖子\n    handleCreatePost() {\n      if (!this.isLogin) {\n        this.$message.warning('请先登录')\n        this.$router.push({ name: 'Login', query: { redirect: this.$route.fullPath } })\n        return\n      }\n\n      this.$router.push({ name: 'PostCreate' })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.post-list-container {\n  padding: 20px;\n}\n\n.filter-card,\n.post-list-card {\n  margin-bottom: 20px;\n}\n\n.filter-container {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.filter-item {\n  margin-right: 15px;\n  margin-bottom: 10px;\n}\n\n.loading-container {\n  padding: 20px 0;\n}\n\n.empty-posts {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 40px 0;\n  color: #909399;\n}\n\n.empty-posts i {\n  font-size: 48px;\n  margin-bottom: 10px;\n}\n\n.post-list {\n  margin-bottom: 20px;\n}\n\n.post-item {\n  padding: 15px;\n  border-bottom: 1px solid #EBEEF5;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.post-item:hover {\n  background-color: #F5F7FA;\n}\n\n.post-item:last-child {\n  border-bottom: none;\n}\n\n.post-title {\n  font-size: 16px;\n  font-weight: bold;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n}\n\n.post-title .el-tag {\n  margin-right: 8px;\n}\n\n.post-meta {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 13px;\n  color: #909399;\n}\n\n.post-board,\n.post-author {\n  display: flex;\n  align-items: center;\n}\n\n.post-board i,\n.post-author i {\n  margin-right: 5px;\n}\n\n.post-stats {\n  display: flex;\n}\n\n.post-stats span {\n  margin-right: 15px;\n  display: flex;\n  align-items: center;\n}\n\n.post-stats span i {\n  margin-right: 5px;\n}\n\n.pagination-container {\n  text-align: center;\n  margin-top: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}