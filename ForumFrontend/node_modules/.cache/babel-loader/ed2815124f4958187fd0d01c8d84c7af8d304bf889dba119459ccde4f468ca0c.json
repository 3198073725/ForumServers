{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/toConsumableArray.js\")[\"default\"];\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.array.for-each.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.array.some.js\");\nrequire(\"core-js/modules/es.function.name.js\");\nrequire(\"core-js/modules/es.iterator.constructor.js\");\nrequire(\"core-js/modules/es.iterator.for-each.js\");\nrequire(\"core-js/modules/es.iterator.some.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar core = require('@vueuse/core');\nvar token = require('./token.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar lodashUnified = require('lodash-unified');\nvar shared = require('@vue/shared');\nvar _sfc_main = vue.defineComponent({\n  name: \"ElOptionGroup\",\n  componentName: \"ElOptionGroup\",\n  props: {\n    label: String,\n    disabled: Boolean\n  },\n  setup: function setup(props) {\n    var ns = index.useNamespace(\"select\");\n    var groupRef = vue.ref();\n    var instance = vue.getCurrentInstance();\n    var children = vue.ref([]);\n    vue.provide(token.selectGroupKey, vue.reactive(_objectSpread({}, vue.toRefs(props))));\n    var visible = vue.computed(function () {\n      return children.value.some(function (option) {\n        return option.visible === true;\n      });\n    });\n    var isOption = function isOption(node) {\n      var _a;\n      return node.type.name === \"ElOption\" && !!((_a = node.component) == null ? void 0 : _a.proxy);\n    };\n    var _flattedChildren = function flattedChildren(node) {\n      var nodes = lodashUnified.castArray(node);\n      var children2 = [];\n      nodes.forEach(function (child) {\n        var _a;\n        if (!vue.isVNode(child)) return;\n        if (isOption(child)) {\n          children2.push(child.component.proxy);\n        } else if (shared.isArray(child.children) && child.children.length) {\n          children2.push.apply(children2, _toConsumableArray(_flattedChildren(child.children)));\n        } else if ((_a = child.component) == null ? void 0 : _a.subTree) {\n          children2.push.apply(children2, _toConsumableArray(_flattedChildren(child.component.subTree)));\n        }\n      });\n      return children2;\n    };\n    var updateChildren = function updateChildren() {\n      children.value = _flattedChildren(instance.subTree);\n    };\n    vue.onMounted(function () {\n      updateChildren();\n    });\n    core.useMutationObserver(groupRef, updateChildren, {\n      attributes: true,\n      subtree: true,\n      childList: true\n    });\n    return {\n      groupRef: groupRef,\n      visible: visible,\n      ns: ns\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return vue.withDirectives((vue.openBlock(), vue.createElementBlock(\"ul\", {\n    ref: \"groupRef\",\n    \"class\": vue.normalizeClass(_ctx.ns.be(\"group\", \"wrap\"))\n  }, [vue.createElementVNode(\"li\", {\n    \"class\": vue.normalizeClass(_ctx.ns.be(\"group\", \"title\"))\n  }, vue.toDisplayString(_ctx.label), 3), vue.createElementVNode(\"li\", null, [vue.createElementVNode(\"ul\", {\n    \"class\": vue.normalizeClass(_ctx.ns.b(\"group\"))\n  }, [vue.renderSlot(_ctx.$slots, \"default\")], 2)])], 2)), [[vue.vShow, _ctx.visible]]);\n}\nvar OptionGroup = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"option-group.vue\"]]);\nexports[\"default\"] = OptionGroup;","map":{"version":3,"names":["_sfc_main","vue","defineComponent","name","componentName","props","label","String","disabled","Boolean","setup","ns","index","useNamespace","groupRef","ref","instance","getCurrentInstance","children","provide","token","selectGroupKey","reactive","_objectSpread","toRefs","visible","computed","value","some","option","isOption","node","_a","type","component","proxy","flattedChildren","nodes","lodashUnified","castArray","children2","forEach","child","isVNode","push","shared","isArray","length","apply","_toConsumableArray","subTree","updateChildren","onMounted","core","useMutationObserver","attributes","subtree","childList","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","withDirectives","openBlock","createElementBlock","normalizeClass","be","toDisplayString","createElementVNode","b","renderSlot","$slots","vShow","OptionGroup","pluginVue_exportHelper"],"sources":["../../../../../../packages/components/select/src/option-group.vue"],"sourcesContent":["<template>\n  <ul v-show=\"visible\" ref=\"groupRef\" :class=\"ns.be('group', 'wrap')\">\n    <li :class=\"ns.be('group', 'title')\">{{ label }}</li>\n    <li>\n      <ul :class=\"ns.b('group')\">\n        <slot />\n      </ul>\n    </li>\n  </ul>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  isVNode,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  toRefs,\n} from 'vue'\nimport { useMutationObserver } from '@vueuse/core'\nimport { ensureArray, isArray } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { selectGroupKey } from './token'\n\nimport type { Component, VNode, VNodeArrayChildren } from 'vue'\nimport type { OptionInternalInstance, OptionPublicInstance } from './type'\n\nexport default defineComponent({\n  name: 'ElOptionGroup',\n  componentName: 'ElOptionGroup',\n\n  props: {\n    /**\n     * @description name of the group\n     */\n    label: String,\n    /**\n     * @description whether to disable all options in this group\n     */\n    disabled: Boolean,\n  },\n  setup(props) {\n    const ns = useNamespace('select')\n    const groupRef = ref<HTMLElement>()\n    const instance = getCurrentInstance()!\n    const children = ref<OptionPublicInstance[]>([])\n\n    provide(\n      selectGroupKey,\n      reactive({\n        ...toRefs(props),\n      })\n    )\n\n    const visible = computed(() =>\n      children.value.some((option) => option.visible === true)\n    )\n\n    const isOption = (\n      node: VNode\n    ): node is VNode & { component: OptionInternalInstance } =>\n      (node.type as Component).name === 'ElOption' && !!node.component?.proxy\n\n    // get all instances of options\n    const flattedChildren = (node: VNode | VNodeArrayChildren) => {\n      const nodes = ensureArray(node) as VNode[] | VNodeArrayChildren\n      const children: OptionPublicInstance[] = []\n\n      nodes.forEach((child) => {\n        if (!isVNode(child)) return\n\n        if (isOption(child)) {\n          children.push(child.component.proxy)\n        } else if (isArray(child.children) && child.children.length) {\n          children.push(...flattedChildren(child.children))\n        } else if (child.component?.subTree) {\n          children.push(...flattedChildren(child.component.subTree))\n        }\n      })\n\n      return children\n    }\n\n    const updateChildren = () => {\n      children.value = flattedChildren(instance.subTree)\n    }\n\n    onMounted(() => {\n      updateChildren()\n    })\n\n    useMutationObserver(groupRef, updateChildren, {\n      attributes: true,\n      subtree: true,\n      childList: true,\n    })\n\n    return {\n      groupRef,\n      visible,\n      ns,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}