{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.symbol.js\");\nrequire(\"core-js/modules/es.symbol.description.js\");\nrequire(\"core-js/modules/es.array.includes.js\");\nrequire(\"core-js/modules/es.number.constructor.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/es.string.includes.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar runtime = require('../../utils/vue/props/runtime.js');\nvar shared = require('@vue/shared');\nvar error = require('../../utils/error.js');\nvar emptyValuesContextKey = Symbol(\"emptyValuesContextKey\");\nvar SCOPE = \"use-empty-values\";\nvar DEFAULT_EMPTY_VALUES = [\"\", void 0, null];\nvar DEFAULT_VALUE_ON_CLEAR = void 0;\nvar useEmptyValuesProps = runtime.buildProps({\n  emptyValues: Array,\n  valueOnClear: {\n    type: [String, Number, Boolean, Function],\n    \"default\": void 0,\n    validator: function validator(val) {\n      return shared.isFunction(val) ? !val() : !val;\n    }\n  }\n});\nvar useEmptyValues = function useEmptyValues(props, defaultValue) {\n  var config = vue.getCurrentInstance() ? vue.inject(emptyValuesContextKey, vue.ref({})) : vue.ref({});\n  var emptyValues = vue.computed(function () {\n    return props.emptyValues || config.value.emptyValues || DEFAULT_EMPTY_VALUES;\n  });\n  var valueOnClear = vue.computed(function () {\n    if (shared.isFunction(props.valueOnClear)) {\n      return props.valueOnClear();\n    } else if (props.valueOnClear !== void 0) {\n      return props.valueOnClear;\n    } else if (shared.isFunction(config.value.valueOnClear)) {\n      return config.value.valueOnClear();\n    } else if (config.value.valueOnClear !== void 0) {\n      return config.value.valueOnClear;\n    }\n    return defaultValue !== void 0 ? defaultValue : DEFAULT_VALUE_ON_CLEAR;\n  });\n  var isEmptyValue = function isEmptyValue(value) {\n    return emptyValues.value.includes(value);\n  };\n  if (!emptyValues.value.includes(valueOnClear.value)) {\n    error.debugWarn(SCOPE, \"value-on-clear should be a value of empty-values\");\n  }\n  return {\n    emptyValues: emptyValues,\n    valueOnClear: valueOnClear,\n    isEmptyValue: isEmptyValue\n  };\n};\nexports.DEFAULT_EMPTY_VALUES = DEFAULT_EMPTY_VALUES;\nexports.DEFAULT_VALUE_ON_CLEAR = DEFAULT_VALUE_ON_CLEAR;\nexports.SCOPE = SCOPE;\nexports.emptyValuesContextKey = emptyValuesContextKey;\nexports.useEmptyValues = useEmptyValues;\nexports.useEmptyValuesProps = useEmptyValuesProps;","map":{"version":3,"names":["emptyValuesContextKey","Symbol","SCOPE","DEFAULT_EMPTY_VALUES","DEFAULT_VALUE_ON_CLEAR","useEmptyValuesProps","runtime","buildProps","emptyValues","Array","valueOnClear","type","String","Number","Boolean","Function","validator","val","shared","isFunction","useEmptyValues","props","defaultValue","config","vue","getCurrentInstance","inject","ref","computed","value","isEmptyValue","includes","error","debugWarn"],"sources":["../../../../../packages/hooks/use-empty-values/index.ts"],"sourcesContent":["import { computed, getCurrentInstance, inject, ref } from 'vue'\nimport { buildProps, debugWarn, isFunction } from '@element-plus/utils'\n\nimport type { ExtractPropTypes, InjectionKey, Ref } from 'vue'\n\ntype EmptyValuesContext = ExtractPropTypes<typeof useEmptyValuesProps>\n\nexport const emptyValuesContextKey: InjectionKey<Ref<EmptyValuesContext>> =\n  Symbol('emptyValuesContextKey')\nexport const SCOPE = 'use-empty-values'\nexport const DEFAULT_EMPTY_VALUES = ['', undefined, null]\nexport const DEFAULT_VALUE_ON_CLEAR = undefined\n\nexport const useEmptyValuesProps = buildProps({\n  /**\n   * @description empty values supported by the component\n   */\n  emptyValues: Array,\n  /**\n   * @description return value when cleared, if you want to set `undefined`, use `() => undefined`\n   */\n  valueOnClear: {\n    type: [String, Number, Boolean, Function],\n    default: undefined,\n    validator: (val: any) => (isFunction(val) ? !val() : !val),\n  },\n} as const)\n\nexport const useEmptyValues = (\n  props: EmptyValuesContext,\n  defaultValue?: null | undefined\n) => {\n  const config = getCurrentInstance()\n    ? inject(emptyValuesContextKey, ref<EmptyValuesContext>({}))\n    : ref<EmptyValuesContext>({})\n\n  const emptyValues = computed(\n    () => props.emptyValues || config.value.emptyValues || DEFAULT_EMPTY_VALUES\n  )\n\n  const valueOnClear = computed(() => {\n    // function is used for undefined cause undefined can't be a value of prop\n    if (isFunction(props.valueOnClear)) {\n      return props.valueOnClear()\n    } else if (props.valueOnClear !== undefined) {\n      return props.valueOnClear\n    } else if (isFunction(config.value.valueOnClear)) {\n      return config.value.valueOnClear()\n    } else if (config.value.valueOnClear !== undefined) {\n      return config.value.valueOnClear\n    }\n    return defaultValue !== undefined ? defaultValue : DEFAULT_VALUE_ON_CLEAR\n  })\n\n  const isEmptyValue = (value: any) => {\n    return emptyValues.value.includes(value)\n  }\n\n  if (!emptyValues.value.includes(valueOnClear.value)) {\n    debugWarn(SCOPE, 'value-on-clear should be a value of empty-values')\n  }\n\n  return {\n    emptyValues,\n    valueOnClear,\n    isEmptyValue,\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAEY,IAACA,qBAAqB,GAAGC,MAAM,CAAC,uBAAuB;AACvD,IAACC,KAAK,GAAG;AACT,IAACC,oBAAoB,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,IAAI;AACzC,IAACC,sBAAsB,GAAG,KAAK;AAC/B,IAACC,mBAAmB,GAAGC,OAAA,CAAAC,UAAU,CAAC;EAC5CC,WAAW,EAAEC,KAAK;EAClBC,YAAY,EAAE;IACZC,IAAI,EAAE,CAACC,MAAM,EAAEC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,CAAC;IACzC,WAAS,KAAK,CAAC;IACfC,SAAS,EAAE,SAAXA,SAASA,CAAGC,GAAG;MAAA,OAAKC,MAAA,CAAAC,UAAU,CAACF,GAAG,CAAC,GAAG,CAACA,GAAG,EAAE,GAAG,CAACA,GAAG;IAAA;EACvD;AACA,CAAC;AACW,IAACG,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,KAAK,EAAEC,YAAY,EAAK;EACrD,IAAMC,MAAM,GAAGC,GAAA,CAAAC,kBAAkB,EAAE,GAAGD,GAAA,CAAAE,MAAM,CAAC1B,qBAAqB,EAAEwB,GAAA,CAAAG,GAAG,CAAC,EAAE,CAAC,CAAC,GAAGH,GAAA,CAAAG,GAAG,CAAC,EAAE,CAAC;EACtF,IAAMnB,WAAW,GAAGgB,GAAA,CAAAI,QAAQ,CAAC;IAAA,OAAMP,KAAK,CAACb,WAAW,IAAIe,MAAM,CAACM,KAAK,CAACrB,WAAW,IAAIL,oBAAoB;EAAA,EAAC;EACzG,IAAMO,YAAY,GAAGc,GAAA,CAAAI,QAAQ,CAAC,YAAM;IAClC,IAAIV,MAAA,CAAAC,UAAU,CAACE,KAAK,CAACX,YAAY,CAAC,EAAE;MAClC,OAAOW,KAAK,CAACX,YAAY,EAAE;IACjC,CAAK,MAAM,IAAIW,KAAK,CAACX,YAAY,KAAK,KAAK,CAAC,EAAE;MACxC,OAAOW,KAAK,CAACX,YAAY;IAC/B,CAAK,MAAM,IAAIQ,MAAA,CAAAC,UAAU,CAACI,MAAM,CAACM,KAAK,CAACnB,YAAY,CAAC,EAAE;MAChD,OAAOa,MAAM,CAACM,KAAK,CAACnB,YAAY,EAAE;IACxC,CAAK,MAAM,IAAIa,MAAM,CAACM,KAAK,CAACnB,YAAY,KAAK,KAAK,CAAC,EAAE;MAC/C,OAAOa,MAAM,CAACM,KAAK,CAACnB,YAAY;IACtC;IACI,OAAOY,YAAY,KAAK,KAAK,CAAC,GAAGA,YAAY,GAAGlB,sBAAsB;EAC1E,CAAG,CAAC;EACF,IAAM0B,YAAY,GAAG,SAAfA,YAAYA,CAAID,KAAK,EAAK;IAC9B,OAAOrB,WAAW,CAACqB,KAAK,CAACE,QAAQ,CAACF,KAAK,CAAC;EAC5C,CAAG;EACD,IAAI,CAACrB,WAAW,CAACqB,KAAK,CAACE,QAAQ,CAACrB,YAAY,CAACmB,KAAK,CAAC,EAAE;IACnDG,KAAA,CAAAC,SAAS,CAAC/B,KAAK,EAAE,kDAAkD,CAAC;EACxE;EACE,OAAO;IACLM,WAAW,EAAXA,WAAW;IACXE,YAAY,EAAZA,YAAY;IACZoB,YAAY,EAAZA;EACJ,CAAG;AACH","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}