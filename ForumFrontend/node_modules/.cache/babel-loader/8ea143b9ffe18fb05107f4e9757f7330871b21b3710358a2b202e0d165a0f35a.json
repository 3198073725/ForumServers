{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.symbol.js\");\nrequire(\"core-js/modules/es.symbol.description.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar selectGroupKey = Symbol(\"ElSelectGroup\");\nvar selectKey = Symbol(\"ElSelect\");\nexports.selectGroupKey = selectGroupKey;\nexports.selectKey = selectKey;","map":{"version":3,"names":["selectGroupKey","Symbol","selectKey"],"sources":["../../../../../../packages/components/select/src/token.ts"],"sourcesContent":["import type { InjectionKey } from 'vue'\nimport type { SelectContext, SelectGroupContext } from './type'\n\n// For individual build sharing injection key, we had to make `Symbol` to string\nexport const selectGroupKey: InjectionKey<SelectGroupContext> =\n  Symbol('ElSelectGroup')\n\nexport const selectKey: InjectionKey<SelectContext> = Symbol('ElSelect')\n"],"mappings":";;;;;;;;;AAAY,IAACA,cAAc,GAAGC,MAAM,CAAC,eAAe;AACxC,IAACC,SAAS,GAAGD,MAAM,CAAC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}