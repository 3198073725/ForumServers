{"ast":null,"code":"import \"core-js/modules/es.string.trim.js\";\nimport { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, withModifiers as _withModifiers, openBlock as _openBlock, createBlock as _createBlock, withCtx as _withCtx, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, withKeys as _withKeys } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"user-info\"\n};\nvar _hoisted_2 = {\n  \"class\": \"username\"\n};\nvar _hoisted_3 = {\n  \"class\": \"header-actions\"\n};\nvar _hoisted_4 = {\n  key: 0,\n  \"class\": \"chat-body\"\n};\nvar _hoisted_5 = {\n  \"class\": \"message-container\",\n  ref: \"messageContainer\"\n};\nvar _hoisted_6 = {\n  key: 0,\n  \"class\": \"loading-messages\"\n};\nvar _hoisted_7 = {\n  key: 1,\n  \"class\": \"no-messages\"\n};\nvar _hoisted_8 = {\n  key: 0,\n  \"class\": \"load-more\"\n};\nvar _hoisted_9 = {\n  \"class\": \"message-content\"\n};\nvar _hoisted_10 = {\n  \"class\": \"message-text\"\n};\nvar _hoisted_11 = {\n  \"class\": \"message-time\"\n};\nvar _hoisted_12 = {\n  \"class\": \"message-input\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_avatar = _resolveComponent(\"el-avatar\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_Loading = _resolveComponent(\"Loading\");\n  var _component_el_icon = _resolveComponent(\"el-icon\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    \"class\": _normalizeClass([\"chat-window\", {\n      'is-minimized': $setup.minimized\n    }])\n  }, [_createCommentVNode(\" 聊天窗口标题栏 \"), _createElementVNode(\"div\", {\n    \"class\": \"chat-header\",\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $setup.toggleMinimize && $setup.toggleMinimize.apply($setup, arguments);\n    })\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_el_avatar, {\n    size: 24,\n    src: $setup.chatUser.avatar_url || '/images/default-avatar.png',\n    onError: $setup.handleAvatarError\n  }, null, 8 /* PROPS */, [\"src\", \"onError\"]), _createElementVNode(\"span\", _hoisted_2, _toDisplayString($setup.chatUser.nickname || $setup.chatUser.username), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_3, [!$setup.minimized ? (_openBlock(), _createBlock(_component_el_button, {\n    key: 0,\n    \"class\": \"action-button\",\n    icon: $setup.Minus,\n    circle: \"\",\n    onClick: _withModifiers($setup.minimize, [\"stop\"])\n  }, null, 8 /* PROPS */, [\"icon\", \"onClick\"])) : (_openBlock(), _createBlock(_component_el_button, {\n    key: 1,\n    \"class\": \"action-button\",\n    icon: $setup.ArrowUp,\n    circle: \"\",\n    onClick: _withModifiers($setup.maximize, [\"stop\"])\n  }, null, 8 /* PROPS */, [\"icon\", \"onClick\"])), _createVNode(_component_el_button, {\n    \"class\": \"action-button\",\n    icon: $setup.Close,\n    circle: \"\",\n    onClick: _withModifiers($setup.closeChat, [\"stop\"])\n  }, null, 8 /* PROPS */, [\"icon\", \"onClick\"])])]), _createCommentVNode(\" 聊天消息区域 \"), !$setup.minimized ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [$setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createVNode(_component_el_icon, {\n    \"class\": \"is-loading\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_Loading)];\n    }),\n    _: 1 /* STABLE */\n  }), _cache[2] || (_cache[2] = _createElementVNode(\"span\", null, \"加载中...\", -1 /* HOISTED */))])) : $setup.messages.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _cache[3] || (_cache[3] = [_createElementVNode(\"p\", null, \"暂无消息记录，发送一条消息开始聊天吧！\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [$setup.hasMoreMessages ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createVNode(_component_el_button, {\n    type: \"text\",\n    onClick: $setup.loadMoreMessages,\n    loading: $setup.loadingMore\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[4] || (_cache[4] = [_createTextVNode(\" 加载更多消息 \")]);\n    }),\n    _: 1 /* STABLE */,\n    __: [4]\n  }, 8 /* PROPS */, [\"onClick\", \"loading\"])])) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.sortedMessages, function (message) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.id,\n      \"class\": _normalizeClass([\"message\", {\n        'outgoing': message.senderId === $setup.currentUserId\n      }])\n    }, [message.senderId !== $setup.currentUserId ? (_openBlock(), _createBlock(_component_el_avatar, {\n      key: 0,\n      size: 32,\n      src: $setup.chatUser.avatar_url || '/images/default-avatar.png',\n      onError: $setup.handleAvatarError\n    }, null, 8 /* PROPS */, [\"src\", \"onError\"])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, _toDisplayString(message.content), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_11, _toDisplayString($setup.formatTime(message.timestamp)), 1 /* TEXT */)]), message.senderId === $setup.currentUserId ? (_openBlock(), _createBlock(_component_el_avatar, {\n      key: 1,\n      size: 32,\n      src: $setup.currentUser.avatar_url || '/images/default-avatar.png',\n      onError: $setup.handleAvatarError\n    }, null, 8 /* PROPS */, [\"src\", \"onError\"])) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */))], 512 /* NEED_PATCH */), _createCommentVNode(\" 消息输入区域 \"), _createElementVNode(\"div\", _hoisted_12, [_createVNode(_component_el_input, {\n    modelValue: $setup.messageText,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $setup.messageText = $event;\n    }),\n    type: \"textarea\",\n    rows: 2,\n    placeholder: \"输入消息...\",\n    resize: \"none\",\n    onKeydown: _withKeys(_withModifiers($setup.sendMessage, [\"prevent\"]), [\"enter\"])\n  }, null, 8 /* PROPS */, [\"modelValue\", \"onKeydown\"]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    icon: $setup.Position,\n    onClick: $setup.sendMessage,\n    disabled: !$setup.messageText.trim()\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[5] || (_cache[5] = [_createTextVNode(\" 发送 \")]);\n    }),\n    _: 1 /* STABLE */,\n    __: [5]\n  }, 8 /* PROPS */, [\"icon\", \"onClick\", \"disabled\"])])])) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n}","map":{"version":3,"names":["key","ref","_createElementBlock","_normalizeClass","$setup","minimized","_createCommentVNode","_createElementVNode","onClick","_cache","toggleMinimize","apply","arguments","_hoisted_1","_createVNode","_component_el_avatar","size","src","chatUser","avatar_url","onError","handleAvatarError","_hoisted_2","_toDisplayString","nickname","username","_hoisted_3","_createBlock","_component_el_button","icon","Minus","circle","_withModifiers","minimize","ArrowUp","maximize","Close","closeChat","_hoisted_4","_hoisted_5","loading","_hoisted_6","_component_el_icon","_withCtx","_component_Loading","_","messages","length","_hoisted_7","_Fragment","hasMoreMessages","_hoisted_8","type","loadMoreMessages","loadingMore","_createTextVNode","__","_renderList","sortedMessages","message","id","senderId","currentUserId","_hoisted_9","_hoisted_10","content","_hoisted_11","formatTime","timestamp","currentUser","_hoisted_12","_component_el_input","modelValue","messageText","$event","rows","placeholder","resize","onKeydown","_withKeys","sendMessage","Position","disabled","trim"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\components\\ChatWindow.vue"],"sourcesContent":["<template>\n  <div class=\"chat-window\" :class=\"{ 'is-minimized': minimized }\">\n    <!-- 聊天窗口标题栏 -->\n    <div class=\"chat-header\" @click=\"toggleMinimize\">\n      <div class=\"user-info\">\n        <el-avatar \n          :size=\"24\" \n          :src=\"chatUser.avatar_url || '/images/default-avatar.png'\"\n          @error=\"handleAvatarError\"\n        />\n        <span class=\"username\">{{ chatUser.nickname || chatUser.username }}</span>\n      </div>\n      <div class=\"header-actions\">\n        <el-button v-if=\"!minimized\" class=\"action-button\" :icon=\"Minus\" circle @click.stop=\"minimize\" />\n        <el-button v-else class=\"action-button\" :icon=\"ArrowUp\" circle @click.stop=\"maximize\" />\n        <el-button class=\"action-button\" :icon=\"Close\" circle @click.stop=\"closeChat\" />\n      </div>\n    </div>\n    \n    <!-- 聊天消息区域 -->\n    <div v-if=\"!minimized\" class=\"chat-body\">\n      <div class=\"message-container\" ref=\"messageContainer\">\n        <div v-if=\"loading\" class=\"loading-messages\">\n          <el-icon class=\"is-loading\"><Loading /></el-icon>\n          <span>加载中...</span>\n        </div>\n        \n        <div v-else-if=\"messages.length === 0\" class=\"no-messages\">\n          <p>暂无消息记录，发送一条消息开始聊天吧！</p>\n        </div>\n        \n        <template v-else>\n          <div v-if=\"hasMoreMessages\" class=\"load-more\">\n            <el-button type=\"text\" @click=\"loadMoreMessages\" :loading=\"loadingMore\">\n              加载更多消息\n            </el-button>\n          </div>\n          \n          <div \n            v-for=\"message in sortedMessages\" \n            :key=\"message.id\" \n            class=\"message\" \n            :class=\"{ 'outgoing': message.senderId === currentUserId }\"\n          >\n            <el-avatar \n              v-if=\"message.senderId !== currentUserId\" \n              :size=\"32\" \n              :src=\"chatUser.avatar_url || '/images/default-avatar.png'\"\n              @error=\"handleAvatarError\"\n            />\n            \n            <div class=\"message-content\">\n              <div class=\"message-text\">{{ message.content }}</div>\n              <div class=\"message-time\">{{ formatTime(message.timestamp) }}</div>\n            </div>\n            \n            <el-avatar \n              v-if=\"message.senderId === currentUserId\" \n              :size=\"32\" \n              :src=\"currentUser.avatar_url || '/images/default-avatar.png'\"\n              @error=\"handleAvatarError\"\n            />\n          </div>\n        </template>\n      </div>\n      \n      <!-- 消息输入区域 -->\n      <div class=\"message-input\">\n        <el-input\n          v-model=\"messageText\"\n          type=\"textarea\"\n          :rows=\"2\"\n          placeholder=\"输入消息...\"\n          resize=\"none\"\n          @keydown.enter.prevent=\"sendMessage\"\n        />\n        <el-button type=\"primary\" :icon=\"Position\" @click=\"sendMessage\" :disabled=\"!messageText.trim()\">\n          发送\n        </el-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, watch, nextTick, onMounted, onUnmounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nimport { Close, Minus, ArrowUp, Position, Loading } from '@element-plus/icons-vue';\nimport wsManager from '@/utils/websocket';\nimport { sendMessage as sendMessageApi } from '@/api/messages';\n\nexport default {\n  name: 'ChatWindow',\n  components: {\n    Loading\n  },\n  props: {\n    userId: {\n      type: [Number, String],\n      required: true\n    }\n  },\n  emits: ['close'],\n  setup(props, { emit }) {\n    const store = useStore();\n    const messageContainer = ref(null);\n    const messageText = ref('');\n    const minimized = ref(false);\n    const loading = ref(true);\n    const loadingMore = ref(false);\n    \n    // 计算属性\n    const currentUser = computed(() => store.state.user);\n    const currentUserId = computed(() => store.getters.userId);\n    const messages = computed(() => store.getters['chat/messagesByUserId'](props.userId) || []);\n    const hasMoreMessages = computed(() => store.getters['chat/hasMoreMessages'](props.userId));\n    const chatUser = computed(() => {\n      // 从store中获取用户信息\n      const userInfo = store.getters['users/getUserById'](props.userId);\n      if (!userInfo) {\n        // 如果没有用户信息，触发获取\n        store.dispatch('users/fetchUserInfo', props.userId);\n      }\n      return {\n        id: props.userId,\n        username: userInfo?.username || `用户${props.userId}`,\n        nickname: userInfo?.nickname || userInfo?.username || `用户${props.userId}`,\n        avatar_url: userInfo?.avatar_url || '/assets/default-avatar.png'\n      };\n    });\n    \n    // 按时间排序的消息列表\n    const sortedMessages = computed(() => {\n      return [...messages.value].sort((a, b) => {\n        return new Date(a.timestamp) - new Date(b.timestamp);\n      });\n    });\n    \n    // 监听消息列表变化，自动滚动到底部\n    watch(sortedMessages, () => {\n      nextTick(() => {\n        scrollToBottom();\n      });\n    });\n    \n    // 初始化\n    onMounted(async () => {\n      // 获取用户信息\n      await store.dispatch('users/fetchUserInfo', props.userId);\n      \n      // 连接WebSocket\n      wsManager.connectChat(props.userId);\n      \n      // 加载消息历史\n      await loadMessages();\n      \n      // 标记消息为已读\n      store.dispatch('chat/markMessagesAsRead', props.userId);\n    });\n    \n    // 组件销毁时断开WebSocket连接\n    onUnmounted(() => {\n      wsManager.disconnectChat(props.userId);\n    });\n    \n    // 加载消息\n    const loadMessages = async () => {\n      loading.value = true;\n      try {\n        await store.dispatch('chat/fetchMessagesWithUser', {\n          userId: props.userId,\n          page: 1\n        });\n        \n        // 滚动到底部\n        nextTick(() => {\n          scrollToBottom();\n        });\n      } catch (error) {\n        console.error('加载消息失败:', error);\n        ElMessage.error('加载消息失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    // 加载更多消息\n    const loadMoreMessages = async () => {\n      if (loadingMore.value || !hasMoreMessages.value) return;\n      \n      loadingMore.value = true;\n      try {\n        await store.dispatch('chat/loadMoreMessages', props.userId);\n      } catch (error) {\n        console.error('加载更多消息失败:', error);\n        ElMessage.error('加载更多消息失败');\n      } finally {\n        loadingMore.value = false;\n      }\n    };\n    \n    // 发送消息\n    const sendMessage = async () => {\n      const content = messageText.value.trim();\n      if (!content) return;\n      \n      try {\n        // 通过WebSocket发送消息\n        wsManager.sendChatMessage(props.userId, content);\n        \n        // 备用方案：通过API发送消息\n        await sendMessageApi(props.userId, content);\n        \n        // 清空输入框\n        messageText.value = '';\n      } catch (error) {\n        console.error('发送消息失败:', error);\n        ElMessage.error('发送消息失败');\n      }\n    };\n    \n    // 滚动到底部\n    const scrollToBottom = () => {\n      if (messageContainer.value) {\n        messageContainer.value.scrollTop = messageContainer.value.scrollHeight;\n      }\n    };\n    \n    // 最小化聊天窗口\n    const minimize = () => {\n      minimized.value = true;\n    };\n    \n    // 最大化聊天窗口\n    const maximize = () => {\n      minimized.value = false;\n      // 恢复窗口后滚动到底部\n      nextTick(() => {\n        scrollToBottom();\n      });\n    };\n    \n    // 切换最小化/最大化\n    const toggleMinimize = () => {\n      minimized.value = !minimized.value;\n      if (!minimized.value) {\n        nextTick(() => {\n          scrollToBottom();\n        });\n      }\n    };\n    \n    // 关闭聊天窗口\n    const closeChat = () => {\n      emit('close', props.userId);\n    };\n    \n    // 格式化时间\n    const formatTime = (timestamp) => {\n      if (!timestamp) return '';\n      \n      // 确保timestamp是有效的日期\n      const date = new Date(timestamp);\n      if (isNaN(date.getTime())) {\n        console.error('Invalid timestamp:', timestamp);\n        return '';\n      }\n      \n      const now = new Date();\n      const isToday = date.toDateString() === now.toDateString();\n      const isYesterday = new Date(now - 86400000).toDateString() === date.toDateString();\n      \n      // 格式化时间部分\n      const hours = date.getHours().toString().padStart(2, '0');\n      const minutes = date.getMinutes().toString().padStart(2, '0');\n      const timeStr = `${hours}:${minutes}`;\n      \n      // 今天的消息只显示时间\n      if (isToday) {\n        return timeStr;\n      }\n      \n      // 昨天的消息显示\"昨天 HH:MM\"\n      if (isYesterday) {\n        return `昨天 ${timeStr}`;\n      }\n      \n      // 今年的消息显示\"MM-DD HH:MM\"\n      if (date.getFullYear() === now.getFullYear()) {\n        const month = (date.getMonth() + 1).toString().padStart(2, '0');\n        const day = date.getDate().toString().padStart(2, '0');\n        return `${month}-${day} ${timeStr}`;\n      }\n      \n      // 其他情况显示完整日期\"YYYY-MM-DD HH:MM\"\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${timeStr}`;\n    };\n    \n    // 头像加载失败处理\n    const handleAvatarError = (e) => {\n      const img = e.target;\n      img.src = '/images/default-avatar.png';\n    };\n    \n    return {\n      messageContainer,\n      messageText,\n      minimized,\n      loading,\n      loadingMore,\n      currentUser,\n      currentUserId,\n      messages,\n      sortedMessages,\n      hasMoreMessages,\n      chatUser,\n      loadMessages,\n      loadMoreMessages,\n      sendMessage,\n      minimize,\n      maximize,\n      toggleMinimize,\n      closeChat,\n      formatTime,\n      // 图标\n      Close,\n      Minus,\n      ArrowUp,\n      Position,\n      Loading,\n      handleAvatarError\n    };\n  }\n};\n</script>\n\n<style scoped>\n.chat-window {\n  width: 320px;\n  height: 400px;\n  border: 1px solid #dcdfe6;\n  border-radius: 4px;\n  background-color: #fff;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  display: flex;\n  flex-direction: column;\n  position: fixed;\n  bottom: 0;\n  right: 20px;\n  z-index: 1000;\n  transition: height 0.3s;\n}\n\n.chat-window.is-minimized {\n  height: 40px;\n}\n\n.chat-header {\n  height: 40px;\n  padding: 0 10px;\n  background-color: #409eff;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n  user-select: none;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n}\n\n.username {\n  margin-left: 8px;\n  font-weight: bold;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.header-actions {\n  display: flex;\n  gap: 5px;\n}\n\n.action-button {\n  padding: 2px;\n  color: white;\n  background: transparent;\n  border: none;\n}\n\n.action-button:hover {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.chat-body {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.message-container {\n  flex: 1;\n  padding: 10px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n}\n\n.loading-messages {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  color: #909399;\n}\n\n.no-messages {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  color: #909399;\n  text-align: center;\n}\n\n.load-more {\n  text-align: center;\n  margin-bottom: 10px;\n}\n\n.message {\n  display: flex;\n  margin-bottom: 10px;\n  align-items: flex-start;\n}\n\n.message.outgoing {\n  flex-direction: row-reverse;\n}\n\n.message-content {\n  max-width: 70%;\n  margin: 0 8px;\n}\n\n.message-text {\n  padding: 8px 12px;\n  border-radius: 4px;\n  background-color: #f4f4f5;\n  word-break: break-word;\n  line-height: 1.4;\n}\n\n.message.outgoing .message-text {\n  background-color: #ecf5ff;\n  color: #409eff;\n}\n\n.message-time {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 4px;\n  text-align: right;\n}\n\n.message.outgoing .message-time {\n  text-align: left;\n}\n\n.message-input {\n  padding: 10px;\n  border-top: 1px solid #ebeef5;\n  display: flex;\n  align-items: flex-end;\n}\n\n.message-input .el-input {\n  margin-right: 10px;\n}\n\n.message-input .el-button {\n  height: 40px;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}