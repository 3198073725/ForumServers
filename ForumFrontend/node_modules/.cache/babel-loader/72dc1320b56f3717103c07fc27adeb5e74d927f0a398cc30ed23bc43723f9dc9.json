{"ast":null,"code":"import { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nimport { User, Lock } from '@element-plus/icons-vue';\nimport { login } from '../api/user';\nexport default {\n  name: 'Login',\n  components: {\n    User,\n    Lock\n  },\n  setup() {\n    const router = useRouter();\n    const store = useStore();\n    const formRef = ref(null);\n    const loading = ref(false);\n\n    // 表单数据\n    const loginForm = reactive({\n      username: '',\n      password: ''\n    });\n\n    // 表单验证规则\n    const loginRules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }, {\n        min: 3,\n        max: 50,\n        message: '用户名长度应在3-50个字符之间',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        min: 6,\n        max: 20,\n        message: '密码长度应在6-20个字符之间',\n        trigger: 'blur'\n      }]\n    };\n\n    // 登录处理\n    const handleLogin = async () => {\n      try {\n        // 表单验证\n        await formRef.value.validate();\n\n        // 显示加载状态\n        loading.value = true;\n\n        // 调用登录API\n        const response = await login(loginForm);\n\n        // 登录成功，保存token和用户信息\n        const {\n          token,\n          user_info\n        } = response.data;\n        store.dispatch('login', {\n          token,\n          userInfo: user_info\n        });\n        ElMessage({\n          message: '登录成功',\n          type: 'success'\n        });\n\n        // 跳转到首页\n        router.push('/');\n      } catch (error) {\n        console.error('登录失败:', error);\n        ElMessage({\n          message: error.message || '登录失败，请检查用户名和密码',\n          type: 'error'\n        });\n      } finally {\n        loading.value = false;\n      }\n    };\n    return {\n      loginForm,\n      formRef,\n      loginRules,\n      loading,\n      handleLogin\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","useStore","ElMessage","User","Lock","login","name","components","setup","router","store","formRef","loading","loginForm","username","password","loginRules","required","message","trigger","min","max","handleLogin","value","validate","response","token","user_info","data","dispatch","userInfo","type","push","error","console"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-box\">\n      <div class=\"login-header\">\n        <h2>用户登录</h2>\n      </div>\n      <el-form\n        ref=\"formRef\"\n        :model=\"loginForm\"\n        :rules=\"loginRules\"\n        label-width=\"80px\"\n        class=\"login-form\"\n      >\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input\n            v-model=\"loginForm.username\"\n            placeholder=\"请输入用户名\"\n          >\n            <template #prefix>\n              <el-icon><User /></el-icon>\n            </template>\n          </el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input\n            v-model=\"loginForm.password\"\n            type=\"password\"\n            placeholder=\"请输入密码\"\n            show-password\n          >\n            <template #prefix>\n              <el-icon><Lock /></el-icon>\n            </template>\n          </el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button\n            type=\"primary\"\n            :loading=\"loading\"\n            @click=\"handleLogin\"\n            class=\"login-button\"\n          >登录</el-button>\n        </el-form-item>\n        <div class=\"login-options\">\n          <router-link to=\"/register\">没有账号？立即注册</router-link>\n          <router-link to=\"/forgot-password\">忘记密码？</router-link>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { ElMessage } from 'element-plus'\nimport { User, Lock } from '@element-plus/icons-vue'\nimport { login } from '../api/user'\n\nexport default {\n  name: 'Login',\n  components: {\n    User,\n    Lock\n  },\n  setup() {\n    const router = useRouter()\n    const store = useStore()\n    const formRef = ref(null)\n    const loading = ref(false)\n\n    // 表单数据\n    const loginForm = reactive({\n      username: '',\n      password: ''\n    })\n\n    // 表单验证规则\n    const loginRules = {\n      username: [\n        { required: true, message: '请输入用户名', trigger: 'blur' },\n        { min: 3, max: 50, message: '用户名长度应在3-50个字符之间', trigger: 'blur' }\n      ],\n      password: [\n        { required: true, message: '请输入密码', trigger: 'blur' },\n        { min: 6, max: 20, message: '密码长度应在6-20个字符之间', trigger: 'blur' }\n      ]\n    }\n\n    // 登录处理\n    const handleLogin = async () => {\n      try {\n        // 表单验证\n        await formRef.value.validate()\n\n        // 显示加载状态\n        loading.value = true\n\n        // 调用登录API\n        const response = await login(loginForm)\n\n        // 登录成功，保存token和用户信息\n        const { token, user_info } = response.data\n        store.dispatch('login', { token, userInfo: user_info })\n\n        ElMessage({\n          message: '登录成功',\n          type: 'success'\n        })\n\n        // 跳转到首页\n        router.push('/')\n      } catch (error) {\n        console.error('登录失败:', error)\n        ElMessage({\n          message: error.message || '登录失败，请检查用户名和密码',\n          type: 'error'\n        })\n      } finally {\n        loading.value = false\n      }\n    }\n\n    return {\n      loginForm,\n      formRef,\n      loginRules,\n      loading,\n      handleLogin\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #f5f7fa;\n}\n\n.login-box {\n  width: 400px;\n  padding: 30px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.login-header {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.login-header h2 {\n  font-weight: 500;\n  color: #303133;\n}\n\n.login-form {\n  margin-top: 20px;\n}\n\n.login-button {\n  width: 100%;\n}\n\n.login-options {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 15px;\n  font-size: 14px;\n}\n\n.login-options a {\n  color: #409eff;\n  text-decoration: none;\n}\n\n.login-options a:hover {\n  text-decoration: underline;\n}\n</style>\n"],"mappings":"AAqDA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAI;AAClC,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,SAAQ,QAAS,cAAa;AACvC,SAASC,IAAI,EAAEC,IAAG,QAAS,yBAAwB;AACnD,SAASC,KAAI,QAAS,aAAY;AAElC,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,UAAU,EAAE;IACVJ,IAAI;IACJC;EACF,CAAC;EACDI,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIT,SAAS,CAAC;IACzB,MAAMU,KAAI,GAAIT,QAAQ,CAAC;IACvB,MAAMU,OAAM,GAAIb,GAAG,CAAC,IAAI;IACxB,MAAMc,OAAM,GAAId,GAAG,CAAC,KAAK;;IAEzB;IACA,MAAMe,SAAQ,GAAId,QAAQ,CAAC;MACzBe,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;;IAED;IACA,MAAMC,UAAS,GAAI;MACjBF,QAAQ,EAAE,CACR;QAAEG,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,CAAC,EACtD;QAAEC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE,EAAE;QAAEH,OAAO,EAAE,kBAAkB;QAAEC,OAAO,EAAE;MAAO,EACjE;MACDJ,QAAQ,EAAE,CACR;QAAEE,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC,EACrD;QAAEC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE,EAAE;QAAEH,OAAO,EAAE,iBAAiB;QAAEC,OAAO,EAAE;MAAO;IAEnE;;IAEA;IACA,MAAMG,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF;QACA,MAAMX,OAAO,CAACY,KAAK,CAACC,QAAQ,CAAC;;QAE7B;QACAZ,OAAO,CAACW,KAAI,GAAI,IAAG;;QAEnB;QACA,MAAME,QAAO,GAAI,MAAMpB,KAAK,CAACQ,SAAS;;QAEtC;QACA,MAAM;UAAEa,KAAK;UAAEC;QAAU,IAAIF,QAAQ,CAACG,IAAG;QACzClB,KAAK,CAACmB,QAAQ,CAAC,OAAO,EAAE;UAAEH,KAAK;UAAEI,QAAQ,EAAEH;QAAU,CAAC;QAEtDzB,SAAS,CAAC;UACRgB,OAAO,EAAE,MAAM;UACfa,IAAI,EAAE;QACR,CAAC;;QAED;QACAtB,MAAM,CAACuB,IAAI,CAAC,GAAG;MACjB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK;QAC5B/B,SAAS,CAAC;UACRgB,OAAO,EAAEe,KAAK,CAACf,OAAM,IAAK,gBAAgB;UAC1Ca,IAAI,EAAE;QACR,CAAC;MACH,UAAU;QACRnB,OAAO,CAACW,KAAI,GAAI,KAAI;MACtB;IACF;IAEA,OAAO;MACLV,SAAS;MACTF,OAAO;MACPK,UAAU;MACVJ,OAAO;MACPU;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}