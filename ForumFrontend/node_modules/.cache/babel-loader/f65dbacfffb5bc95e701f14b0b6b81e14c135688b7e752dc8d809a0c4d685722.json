{"ast":null,"code":"import _regeneratorRuntime from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nimport { View, ChatDotRound, Star } from '@element-plus/icons-vue';\nimport { logout } from '../api/user';\nimport { getHotBoards } from '../api/board';\nimport { getHotUsers } from '../api/profile';\nimport { getPostList } from '../api/post';\nimport { formatDateTime } from '../utils/index';\nimport UserAvatar from '../components/UserAvatar.vue';\nexport default {\n  name: 'Home',\n  components: {\n    View: View,\n    ChatDotRound: ChatDotRound,\n    Star: Star,\n    UserAvatar: UserAvatar\n  },\n  setup: function setup() {\n    var router = useRouter();\n    var store = useStore();\n\n    // 获取认证状态和用户信息\n    var isAuthenticated = computed(function () {\n      return store.getters.isAuthenticated;\n    });\n    var userInfo = computed(function () {\n      return store.getters.userInfo;\n    });\n\n    // 判断是否为管理员\n    var isAdmin = computed(function () {\n      return userInfo.value && userInfo.value.role === 'admin';\n    });\n\n    // 数据状态\n    var latestPosts = ref([]);\n    var hotBoards = ref([]);\n    var hotUsers = ref([]);\n    var loading = ref({\n      posts: false,\n      boards: false,\n      users: false\n    });\n\n    // 格式化日期\n    var formatDate = function formatDate(date) {\n      return formatDateTime(date);\n    };\n\n    // 页面跳转方法\n    var goToLogin = function goToLogin() {\n      return router.push('/login');\n    };\n    var goToRegister = function goToRegister() {\n      return router.push('/register');\n    };\n    var goToProfile = function goToProfile() {\n      return router.push('/profile/me');\n    };\n    var goToAdminDashboard = function goToAdminDashboard() {\n      return router.push('/admin/dashboard');\n    };\n    var goToUserManagement = function goToUserManagement() {\n      return router.push('/admin/users');\n    };\n    var goToNewPost = function goToNewPost() {\n      // 清除可能的成功消息提示\n      ElMessage.closeAll();\n      router.push('/post/create');\n    };\n\n    // 退出登录\n    var handleLogout = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return logout();\n            case 3:\n              response = _context.sent;\n              store.dispatch('logout');\n              // 使用messageTracker替代直接调用ElMessage\n              if (window.messageTracker) {\n                window.messageTracker.showMessage(response.msg || '退出登录成功', 'success', 'home-logout');\n              } else {\n                ElMessage({\n                  message: '退出登录成功',\n                  type: 'success'\n                });\n              }\n              router.push('/');\n              _context.next = 13;\n              break;\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('退出登录失败:', _context.t0);\n              if (window.messageTracker) {\n                window.messageTracker.showMessage('退出登录失败', 'error', 'home-logout-error');\n              } else {\n                ElMessage({\n                  message: '退出登录失败',\n                  type: 'error'\n                });\n              }\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 9]]);\n      }));\n      return function handleLogout() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    // 获取最新帖子\n    var fetchLatestPosts = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              loading.value.posts = true;\n              _context2.prev = 1;\n              console.log('开始获取最新帖子...');\n              _context2.next = 5;\n              return getPostList({\n                page: 1,\n                page_size: 5,\n                ordering: '-created_at'\n              });\n            case 5:\n              response = _context2.sent;\n              console.log('最新帖子响应:', response);\n\n              // 增加更多的响应格式判断\n              if (response && response.count !== undefined && response.results) {\n                // 处理DRF分页响应\n                console.log('使用DRF分页响应格式处理最新帖子数据');\n                latestPosts.value = response.results || [];\n              } else if (response && response.code === 0 && response.data) {\n                // 处理自定义响应格式\n                console.log('使用自定义响应格式处理最新帖子数据');\n                if (response.data.results) {\n                  latestPosts.value = response.data.results || [];\n                } else if (Array.isArray(response.data)) {\n                  latestPosts.value = response.data || [];\n                }\n              } else if (response && response.status === 0 && response.data) {\n                // 处理另一种自定义响应格式\n                console.log('使用status=0格式处理最新帖子数据');\n                if (response.data.results) {\n                  latestPosts.value = response.data.results || [];\n                } else if (Array.isArray(response.data)) {\n                  latestPosts.value = response.data || [];\n                }\n              } else if (response && Array.isArray(response)) {\n                // 直接返回数组的情况\n                console.log('使用数组格式处理最新帖子数据');\n                latestPosts.value = response;\n              } else if (response && Array.isArray(response.results)) {\n                // 直接带有results属性的情况\n                console.log('使用带results属性的响应格式处理最新帖子数据');\n                latestPosts.value = response.results;\n              } else {\n                console.error('获取最新帖子失败:', response ? response.msg : '未知错误');\n                latestPosts.value = []; // 如果获取失败，设置为空数组\n              }\n              _context2.next = 15;\n              break;\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error('获取最新帖子失败:', _context2.t0);\n              // 使用更友好的错误提示\n              if (_context2.t0.response && _context2.t0.response.status === 401) {\n                console.log('未登录状态，使用空数组');\n                // 未登录状态不显示错误提示\n              } else {\n                ElMessage.error('获取最新帖子失败，请稍后再试');\n              }\n              latestPosts.value = []; // 如果发生错误，设置为空数组\n            case 15:\n              _context2.prev = 15;\n              loading.value.posts = false;\n              return _context2.finish(15);\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[1, 10, 15, 18]]);\n      }));\n      return function fetchLatestPosts() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 获取热门板块\n    var fetchHotBoards = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              loading.value.boards = true;\n              _context3.prev = 1;\n              console.log('开始获取热门板块...');\n              _context3.next = 5;\n              return getHotBoards(5);\n            case 5:\n              response = _context3.sent;\n              console.log('热门板块响应:', response);\n              if (response && response.status === 0 && response.data) {\n                // 处理Django REST framework自定义响应格式\n                console.log('使用status=0格式处理热门板块数据');\n                hotBoards.value = response.data || [];\n              } else if (response && response.code === 0 && response.data) {\n                // 处理另一种自定义响应格式\n                console.log('使用code=0格式处理热门板块数据');\n                hotBoards.value = response.data || [];\n              } else if (response && Array.isArray(response)) {\n                // 直接返回数组的情况\n                console.log('使用数组格式处理热门板块数据');\n                hotBoards.value = response;\n              } else {\n                console.error('获取热门板块失败:', response ? response.msg : '未知错误');\n                hotBoards.value = []; // 如果获取失败，设置为空数组\n              }\n              _context3.next = 15;\n              break;\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.error('获取热门板块失败:', _context3.t0);\n              ElMessage.error('获取热门板块失败，请稍后再试');\n              hotBoards.value = []; // 如果发生错误，设置为空数组\n            case 15:\n              _context3.prev = 15;\n              loading.value.boards = false;\n              return _context3.finish(15);\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[1, 10, 15, 18]]);\n      }));\n      return function fetchHotBoards() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    // 获取热门用户\n    var fetchHotUsers = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              loading.value.users = true;\n              _context4.prev = 1;\n              console.log('开始获取热门用户...');\n              _context4.next = 5;\n              return getHotUsers(5);\n            case 5:\n              response = _context4.sent;\n              console.log('热门用户响应:', response);\n              if (response && response.code === 0 && response.data) {\n                console.log('使用code=0格式处理热门用户数据');\n                hotUsers.value = response.data || [];\n              } else if (response && Array.isArray(response)) {\n                // 直接返回数组的情况\n                console.log('使用数组格式处理热门用户数据');\n                hotUsers.value = response;\n              } else if (response && response.status === 0 && response.data) {\n                // 另一种响应格式\n                console.log('使用status=0格式处理热门用户数据');\n                hotUsers.value = response.data || [];\n              } else {\n                console.error('获取热门用户失败:', response ? response.msg : '未知错误');\n                hotUsers.value = []; // 如果获取失败，设置为空数组\n              }\n              _context4.next = 15;\n              break;\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](1);\n              console.error('获取热门用户失败:', _context4.t0);\n              ElMessage.error('获取热门用户失败，请稍后再试');\n              hotUsers.value = []; // 如果发生错误，设置为空数组\n            case 15:\n              _context4.prev = 15;\n              loading.value.users = false;\n              return _context4.finish(15);\n            case 18:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[1, 10, 15, 18]]);\n      }));\n      return function fetchHotUsers() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    // 生命周期钩子\n    onMounted(function () {\n      // 加载首页数据\n      fetchLatestPosts();\n      fetchHotBoards();\n      fetchHotUsers();\n\n      // 添加重试机制，确保数据加载成功\n      setTimeout(function () {\n        // 如果首次加载失败，尝试重新加载\n        if (latestPosts.value.length === 0 && !loading.value.posts) {\n          console.log('首次加载帖子失败，尝试重新加载...');\n          fetchLatestPosts();\n        }\n        if (hotBoards.value.length === 0 && !loading.value.boards) {\n          console.log('首次加载板块失败，尝试重新加载...');\n          fetchHotBoards();\n        }\n      }, 2000); // 2秒后检查并重试\n    });\n    return {\n      isAuthenticated: isAuthenticated,\n      userInfo: userInfo,\n      isAdmin: isAdmin,\n      latestPosts: latestPosts,\n      hotBoards: hotBoards,\n      hotUsers: hotUsers,\n      loading: loading,\n      formatDate: formatDate,\n      goToLogin: goToLogin,\n      goToRegister: goToRegister,\n      goToProfile: goToProfile,\n      goToAdminDashboard: goToAdminDashboard,\n      goToUserManagement: goToUserManagement,\n      goToNewPost: goToNewPost,\n      handleLogout: handleLogout\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useRouter","useStore","ElMessage","View","ChatDotRound","Star","logout","getHotBoards","getHotUsers","getPostList","formatDateTime","UserAvatar","name","components","setup","router","store","isAuthenticated","getters","userInfo","isAdmin","value","role","latestPosts","hotBoards","hotUsers","loading","posts","boards","users","formatDate","date","goToLogin","push","goToRegister","goToProfile","goToAdminDashboard","goToUserManagement","goToNewPost","closeAll","handleLogout","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","sent","dispatch","window","messageTracker","showMessage","msg","message","type","t0","console","error","stop","apply","arguments","fetchLatestPosts","_ref2","_callee2","_callee2$","_context2","log","page","page_size","ordering","count","undefined","results","code","data","Array","isArray","status","finish","fetchHotBoards","_ref3","_callee3","_callee3$","_context3","fetchHotUsers","_ref4","_callee4","_callee4$","_context4","setTimeout","length"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\Home.vue"],"sourcesContent":["<template>\n  <div class=\"home-container\">\n    <el-container>\n      <el-main>\n        <div class=\"main-content\">\n          <el-row :gutter=\"20\">\n            <el-col :span=\"18\">\n              <div class=\"content-area\">\n                <div class=\"welcome-message\" v-if=\"isAuthenticated\">\n                  <h2>欢迎回来，{{ userInfo?.nickname || userInfo?.username }}！</h2>\n                  <p>今天有什么想法要分享吗？</p>\n                  <el-button type=\"primary\" @click=\"goToNewPost\">发布新帖</el-button>\n                </div>\n                <div class=\"welcome-message\" v-else>\n                  <h2>欢迎来到论坛系统</h2>\n                  <p>这里是一个交流和分享的平台，登录后可以发帖和参与讨论。</p>\n                  <el-button type=\"primary\" @click=\"goToLogin\">立即登录</el-button>\n                  <el-button @click=\"goToRegister\">注册账号</el-button>\n                </div>\n\n                <div class=\"section-title\">\n                  <h3>最新帖子</h3>\n                  <el-button text>查看更多</el-button>\n                </div>\n\n                <div class=\"post-list\">\n                  <div v-if=\"loading.posts\" class=\"loading-container\">\n                    <el-skeleton :rows=\"5\" animated />\n                  </div>\n                  <el-empty description=\"暂无帖子\" v-else-if=\"!latestPosts.length\"></el-empty>\n                  <div v-else>\n                    <div v-for=\"post in latestPosts\" :key=\"post.id\" class=\"post-item\">\n                      <div class=\"post-avatar\">\n                        <el-avatar :size=\"40\" :src=\"post.user?.avatar_url || ''\">\n                          {{ post.user?.nickname?.charAt(0) || post.user?.username?.charAt(0) || 'U' }}\n                        </el-avatar>\n                      </div>\n                      <div class=\"post-content\">\n                        <div class=\"post-title\">\n                          <router-link :to=\"`/posts/${post.id}`\">{{ post.title || '无标题' }}</router-link>\n                          <el-tag size=\"small\" type=\"success\" v-if=\"post.is_pinned\">置顶</el-tag>\n                          <el-tag size=\"small\" type=\"warning\" v-if=\"post.is_featured\">精华</el-tag>\n                        </div>\n                        <div class=\"post-info\">\n                          <span class=\"author\">{{ post.user?.nickname || post.user?.username || '匿名用户' }}</span>\n                          <span class=\"board\">{{ post.board_name || '未分类' }}</span>\n                          <span class=\"time\">{{ formatDate(post.created_at || new Date()) }}</span>\n                        </div>\n                        <div class=\"post-stats\">\n                          <span class=\"views\">\n                            <el-icon><View /></el-icon> {{ post.views || 0 }}\n                          </span>\n                          <span class=\"comments\">\n                            <el-icon><ChatDotRound /></el-icon> {{ post.comments_count || 0 }}\n                          </span>\n                          <span class=\"likes\">\n                            <el-icon><Star /></el-icon> {{ post.likes_count || 0 }}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </el-col>\n\n            <el-col :span=\"6\">\n              <div class=\"sidebar\">\n                <div class=\"sidebar-section\">\n                  <div class=\"section-title\">\n                    <h3>热门板块</h3>\n                  </div>\n                  <div class=\"board-list\">\n                    <div v-if=\"loading.boards\" class=\"loading-container\">\n                      <el-skeleton :rows=\"3\" animated />\n                    </div>\n                    <el-empty description=\"暂无板块\" v-else-if=\"!hotBoards.length\"></el-empty>\n                    <div v-else>\n                      <div v-for=\"board in hotBoards\" :key=\"board.id\" class=\"board-item\">\n                        <router-link :to=\"`/boards/${board.id}`\">{{ board.name }}</router-link>\n                        <span class=\"post-count\">{{ board.posts_count }}帖子</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"sidebar-section\">\n                  <div class=\"section-title\">\n                    <h3>热门用户</h3>\n                  </div>\n                  <div class=\"user-list\">\n                    <div v-if=\"loading.users\" class=\"loading-container\">\n                      <el-skeleton :rows=\"3\" animated />\n                    </div>\n                    <el-empty description=\"暂无用户\" v-else-if=\"!hotUsers.length\"></el-empty>\n                    <div v-else>\n                      <div v-for=\"user in hotUsers\" :key=\"user.id\" class=\"user-item\">\n                        <user-avatar :user=\"user\" :size=\"32\" />\n                        <span class=\"user-nickname\">{{ user.nickname || user.username }}</span>\n                        <span class=\"post-count\">{{ user.posts_count }}帖子</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </el-col>\n          </el-row>\n        </div>\n      </el-main>\n\n      <el-footer height=\"60px\">\n        <div class=\"footer-content\">\n          <p>© 2025 论坛系统 - 基于Vue + Django + MySQL的PC端论坛系统</p>\n        </div>\n      </el-footer>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { ElMessage } from 'element-plus'\nimport { View, ChatDotRound, Star } from '@element-plus/icons-vue'\nimport { logout } from '../api/user'\nimport { getHotBoards } from '../api/board'\nimport { getHotUsers } from '../api/profile'\nimport { getPostList } from '../api/post'\nimport { formatDateTime } from '../utils/index'\nimport UserAvatar from '../components/UserAvatar.vue'\n\nexport default {\n  name: 'Home',\n  components: {\n    View,\n    ChatDotRound,\n    Star,\n    UserAvatar\n  },\n  setup() {\n    const router = useRouter()\n    const store = useStore()\n\n    // 获取认证状态和用户信息\n    const isAuthenticated = computed(() => store.getters.isAuthenticated)\n    const userInfo = computed(() => store.getters.userInfo)\n\n    // 判断是否为管理员\n    const isAdmin = computed(() => {\n      return userInfo.value && userInfo.value.role === 'admin'\n    })\n\n    // 数据状态\n    const latestPosts = ref([])\n    const hotBoards = ref([])\n    const hotUsers = ref([])\n    const loading = ref({\n      posts: false,\n      boards: false,\n      users: false\n    })\n\n    // 格式化日期\n    const formatDate = (date) => {\n      return formatDateTime(date)\n    }\n\n    // 页面跳转方法\n    const goToLogin = () => router.push('/login')\n    const goToRegister = () => router.push('/register')\n    const goToProfile = () => router.push('/profile/me')\n    const goToAdminDashboard = () => router.push('/admin/dashboard')\n    const goToUserManagement = () => router.push('/admin/users')\n    const goToNewPost = () => {\n      // 清除可能的成功消息提示\n      ElMessage.closeAll()\n      router.push('/post/create')\n    }\n\n    // 退出登录\n    const handleLogout = async () => {\n      try {\n        const response = await logout()\n        store.dispatch('logout')\n        // 使用messageTracker替代直接调用ElMessage\n        if (window.messageTracker) {\n          window.messageTracker.showMessage(response.msg || '退出登录成功', 'success', 'home-logout');\n        } else {\n          ElMessage({\n            message: '退出登录成功',\n            type: 'success'\n          })\n        }\n        router.push('/')\n      } catch (error) {\n        console.error('退出登录失败:', error)\n        if (window.messageTracker) {\n          window.messageTracker.showMessage('退出登录失败', 'error', 'home-logout-error');\n        } else {\n          ElMessage({\n            message: '退出登录失败',\n            type: 'error'\n          })\n        }\n      }\n    }\n\n    // 获取最新帖子\n    const fetchLatestPosts = async () => {\n      loading.value.posts = true\n      try {\n        console.log('开始获取最新帖子...')\n        const response = await getPostList({\n          page: 1,\n          page_size: 5,\n          ordering: '-created_at'\n        })\n\n        console.log('最新帖子响应:', response)\n\n        // 增加更多的响应格式判断\n        if (response && response.count !== undefined && response.results) {\n          // 处理DRF分页响应\n          console.log('使用DRF分页响应格式处理最新帖子数据')\n          latestPosts.value = response.results || []\n        } else if (response && response.code === 0 && response.data) {\n          // 处理自定义响应格式\n          console.log('使用自定义响应格式处理最新帖子数据')\n          if (response.data.results) {\n            latestPosts.value = response.data.results || []\n          } else if (Array.isArray(response.data)) {\n            latestPosts.value = response.data || []\n          }\n        } else if (response && response.status === 0 && response.data) {\n          // 处理另一种自定义响应格式\n          console.log('使用status=0格式处理最新帖子数据')\n          if (response.data.results) {\n            latestPosts.value = response.data.results || []\n          } else if (Array.isArray(response.data)) {\n            latestPosts.value = response.data || []\n          }\n        } else if (response && Array.isArray(response)) {\n          // 直接返回数组的情况\n          console.log('使用数组格式处理最新帖子数据')\n          latestPosts.value = response\n        } else if (response && Array.isArray(response.results)) {\n          // 直接带有results属性的情况\n          console.log('使用带results属性的响应格式处理最新帖子数据')\n          latestPosts.value = response.results\n        } else {\n          console.error('获取最新帖子失败:', response ? response.msg : '未知错误')\n          latestPosts.value = [] // 如果获取失败，设置为空数组\n        }\n      } catch (error) {\n        console.error('获取最新帖子失败:', error)\n        // 使用更友好的错误提示\n        if (error.response && error.response.status === 401) {\n          console.log('未登录状态，使用空数组')\n          // 未登录状态不显示错误提示\n        } else {\n          ElMessage.error('获取最新帖子失败，请稍后再试')\n        }\n        latestPosts.value = [] // 如果发生错误，设置为空数组\n      } finally {\n        loading.value.posts = false\n      }\n    }\n\n    // 获取热门板块\n    const fetchHotBoards = async () => {\n      loading.value.boards = true\n      try {\n        console.log('开始获取热门板块...')\n        const response = await getHotBoards(5)\n\n        console.log('热门板块响应:', response)\n\n        if (response && response.status === 0 && response.data) {\n          // 处理Django REST framework自定义响应格式\n          console.log('使用status=0格式处理热门板块数据')\n          hotBoards.value = response.data || []\n        } else if (response && response.code === 0 && response.data) {\n          // 处理另一种自定义响应格式\n          console.log('使用code=0格式处理热门板块数据')\n          hotBoards.value = response.data || []\n        } else if (response && Array.isArray(response)) {\n          // 直接返回数组的情况\n          console.log('使用数组格式处理热门板块数据')\n          hotBoards.value = response\n        } else {\n          console.error('获取热门板块失败:', response ? response.msg : '未知错误')\n          hotBoards.value = [] // 如果获取失败，设置为空数组\n        }\n      } catch (error) {\n        console.error('获取热门板块失败:', error)\n        ElMessage.error('获取热门板块失败，请稍后再试')\n        hotBoards.value = [] // 如果发生错误，设置为空数组\n      } finally {\n        loading.value.boards = false\n      }\n    }\n\n    // 获取热门用户\n    const fetchHotUsers = async () => {\n      loading.value.users = true\n      try {\n        console.log('开始获取热门用户...')\n        const response = await getHotUsers(5)\n\n        console.log('热门用户响应:', response)\n\n        if (response && response.code === 0 && response.data) {\n          console.log('使用code=0格式处理热门用户数据')\n          hotUsers.value = response.data || []\n        } else if (response && Array.isArray(response)) {\n          // 直接返回数组的情况\n          console.log('使用数组格式处理热门用户数据')\n          hotUsers.value = response\n        } else if (response && response.status === 0 && response.data) {\n          // 另一种响应格式\n          console.log('使用status=0格式处理热门用户数据')\n          hotUsers.value = response.data || []\n        } else {\n          console.error('获取热门用户失败:', response ? response.msg : '未知错误')\n          hotUsers.value = [] // 如果获取失败，设置为空数组\n        }\n      } catch (error) {\n        console.error('获取热门用户失败:', error)\n        ElMessage.error('获取热门用户失败，请稍后再试')\n        hotUsers.value = [] // 如果发生错误，设置为空数组\n      } finally {\n        loading.value.users = false\n      }\n    }\n\n    // 生命周期钩子\n    onMounted(() => {\n      // 加载首页数据\n      fetchLatestPosts()\n      fetchHotBoards()\n      fetchHotUsers()\n      \n      // 添加重试机制，确保数据加载成功\n      setTimeout(() => {\n        // 如果首次加载失败，尝试重新加载\n        if (latestPosts.value.length === 0 && !loading.value.posts) {\n          console.log('首次加载帖子失败，尝试重新加载...')\n          fetchLatestPosts()\n        }\n        \n        if (hotBoards.value.length === 0 && !loading.value.boards) {\n          console.log('首次加载板块失败，尝试重新加载...')\n          fetchHotBoards()\n        }\n      }, 2000) // 2秒后检查并重试\n    })\n\n    return {\n      isAuthenticated,\n      userInfo,\n      isAdmin,\n      latestPosts,\n      hotBoards,\n      hotUsers,\n      loading,\n      formatDate,\n      goToLogin,\n      goToRegister,\n      goToProfile,\n      goToAdminDashboard,\n      goToUserManagement,\n      goToNewPost,\n      handleLogout\n    }\n  }\n}\n</script>\n\n<style scoped>\n.home-container {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.el-container {\n  min-height: 100vh;\n}\n\n.el-main {\n  padding: 20px;\n  background-color: #f5f7fa;\n}\n\n.main-content {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.content-area {\n  background-color: #fff;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n}\n\n.welcome-message {\n  background-color: #f0f9ff;\n  border-radius: 8px;\n  padding: 20px;\n  margin-bottom: 20px;\n  border-left: 4px solid #409eff;\n}\n\n.welcome-message h2 {\n  margin-top: 0;\n  color: #303133;\n}\n\n.section-title {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n  border-bottom: 1px solid #ebeef5;\n  padding-bottom: 10px;\n}\n\n.section-title h3 {\n  margin: 0;\n  font-size: 18px;\n  color: #303133;\n}\n\n.post-list {\n  margin-bottom: 20px;\n}\n\n.post-item {\n  display: flex;\n  padding: 15px 0;\n  border-bottom: 1px solid #ebeef5;\n}\n\n.post-avatar {\n  margin-right: 15px;\n}\n\n.post-content {\n  flex-grow: 1;\n}\n\n.post-title {\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 8px;\n  display: flex;\n  align-items: center;\n}\n\n.post-title a {\n  color: #303133;\n  text-decoration: none;\n  margin-right: 8px;\n}\n\n.post-title a:hover {\n  color: #409eff;\n}\n\n.post-info {\n  font-size: 12px;\n  color: #909399;\n  margin-bottom: 8px;\n}\n\n.post-info .author {\n  margin-right: 10px;\n}\n\n.post-info .board {\n  margin-right: 10px;\n  background-color: #f0f9ff;\n  color: #409eff;\n  padding: 2px 6px;\n  border-radius: 4px;\n}\n\n.post-stats {\n  font-size: 12px;\n  color: #909399;\n  display: flex;\n  gap: 15px;\n}\n\n.sidebar {\n  position: sticky;\n  top: 80px;\n}\n\n.sidebar-section {\n  background-color: #fff;\n  border-radius: 8px;\n  padding: 15px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n}\n\n.board-list, .user-list {\n  margin-top: 10px;\n}\n\n.board-item, .user-item {\n  display: flex;\n  align-items: center;\n  padding: 8px 0;\n  border-bottom: 1px solid #ebeef5;\n}\n\n.board-item a {\n  color: #303133;\n  text-decoration: none;\n  flex-grow: 1;\n}\n\n.board-item a:hover {\n  color: #409eff;\n}\n\n.post-count {\n  font-size: 12px;\n  color: #909399;\n}\n\n.user-item {\n  gap: 10px;\n}\n\n.user-nickname {\n  flex-grow: 1;\n  font-size: 14px;\n}\n\n.el-footer {\n  background-color: #fff;\n  border-top: 1px solid #ebeef5;\n}\n\n.footer-content {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #909399;\n  font-size: 14px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}