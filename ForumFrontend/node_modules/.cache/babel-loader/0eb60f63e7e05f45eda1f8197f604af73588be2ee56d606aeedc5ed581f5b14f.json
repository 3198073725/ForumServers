{"ast":null,"code":"'use strict';\n\nvar _objectWithoutProperties = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectWithoutProperties.js\")[\"default\"];\nvar _excluded = [\"leftTableRef\"];\nrequire(\"core-js/modules/es.error.to-string.js\");\nrequire(\"core-js/modules/es.date.to-string.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/es.regexp.to-string.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar tableGrid = require('../table-grid.js');\nfunction _isSlot(s) {\n  return typeof s === \"function\" || Object.prototype.toString.call(s) === \"[object Object]\" && !vue.isVNode(s);\n}\nvar LeftTable = function LeftTable(props, _ref) {\n  var slots = _ref.slots;\n  if (!props.columns.length) return;\n  var leftTableRef = props.leftTableRef,\n    rest = _objectWithoutProperties(props, _excluded);\n  return vue.createVNode(tableGrid[\"default\"], vue.mergeProps({\n    \"ref\": leftTableRef\n  }, rest), _isSlot(slots) ? slots : {\n    \"default\": function _default() {\n      return [slots];\n    }\n  });\n};\nvar LeftTable$1 = LeftTable;\nexports[\"default\"] = LeftTable$1;","map":{"version":3,"names":["props","columns","length","leftTableRef","rest","_objectWithoutProperties","_excluded","vue","createVNode","tableGrid","mergeProps","_isSlot","slots","default","LeftTable$1","LeftTable"],"sources":["../../../../../../../packages/components/table-v2/src/renderers/left-table.tsx"],"sourcesContent":["import Table from '../table-grid'\n\nimport type { FunctionalComponent, Ref } from 'vue'\nimport type { TableV2GridProps } from '../grid'\nimport type { TableGridInstance } from '../table-grid'\n\ntype LeftTableProps = TableV2GridProps & {\n  leftTableRef: Ref<TableGridInstance | undefined>\n}\n\nconst LeftTable: FunctionalComponent<LeftTableProps> = (props, { slots }) => {\n  if (!props.columns.length) return\n\n  const { leftTableRef, ...rest } = props\n\n  return (\n    <Table ref={leftTableRef} {...rest}>\n      {slots}\n    </Table>\n  )\n}\n\nexport default LeftTable\n"],"mappings":";;;;;;;;;;;;;;;;;gDAUM;EAAA,I;EAA2D,KAAAA,KAAA,CAAAC,OAAA,CAAAC,MAAA,EAAY;EAC3E,IAEMC,YAAA,GAAmBH,KAAA,CAAnBG,YAAA;IAAAC,IAAA,GAAAC,wBAAA,CAAmBL,KAAA,EAAAM,SAAA;EAAnB,OAANC,GAAA,CAAAC,WAAA,CAAAC,SAAA,aAAAF,GAAA,CAAAG,UAAA;IAEA,OAAAP;KACcC,IAAA,GAAAO,OAAA,CAAAC,KAAA,IAAAA,KAAA;IADd,oBAAAC,SAAA;MAAA,QAEKD,KAFL;IAAA;EAAA;AAAA;AAKD,IAAAE,WAAA,GAVDC,SAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}