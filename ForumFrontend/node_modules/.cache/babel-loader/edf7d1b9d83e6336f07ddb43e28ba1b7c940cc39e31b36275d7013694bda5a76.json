{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.date.to-string.js\");\nrequire(\"core-js/modules/es.number.constructor.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar core = require('@popperjs/core');\nvar iconsVue = require('@element-plus/icons-vue');\nvar shared = require('../props/shared.js');\nvar runtime = require('../../../../utils/vue/props/runtime.js');\nvar index = require('../../../../hooks/use-size/index.js');\nvar index$1 = require('../../../../hooks/use-empty-values/index.js');\nvar index$2 = require('../../../../hooks/use-aria/index.js');\nvar timePickerDefaultProps = runtime.buildProps(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n  id: {\n    type: runtime.definePropType([Array, String])\n  },\n  name: {\n    type: runtime.definePropType([Array, String])\n  },\n  popperClass: {\n    type: String,\n    \"default\": \"\"\n  },\n  format: String,\n  valueFormat: String,\n  dateFormat: String,\n  timeFormat: String,\n  type: {\n    type: String,\n    \"default\": \"\"\n  },\n  clearable: {\n    type: Boolean,\n    \"default\": true\n  },\n  clearIcon: {\n    type: runtime.definePropType([String, Object]),\n    \"default\": iconsVue.CircleClose\n  },\n  editable: {\n    type: Boolean,\n    \"default\": true\n  },\n  prefixIcon: {\n    type: runtime.definePropType([String, Object]),\n    \"default\": \"\"\n  },\n  size: index.useSizeProp,\n  readonly: Boolean,\n  disabled: Boolean,\n  placeholder: {\n    type: String,\n    \"default\": \"\"\n  },\n  popperOptions: {\n    type: runtime.definePropType(Object),\n    \"default\": function _default() {\n      return {};\n    }\n  },\n  modelValue: {\n    type: runtime.definePropType([Date, Array, String, Number]),\n    \"default\": \"\"\n  },\n  rangeSeparator: {\n    type: String,\n    \"default\": \"-\"\n  },\n  startPlaceholder: String,\n  endPlaceholder: String,\n  defaultValue: {\n    type: runtime.definePropType([Date, Array])\n  },\n  defaultTime: {\n    type: runtime.definePropType([Date, Array])\n  },\n  isRange: Boolean\n}, shared.disabledTimeListsProps), {}, {\n  disabledDate: {\n    type: Function\n  },\n  cellClassName: {\n    type: Function\n  },\n  shortcuts: {\n    type: Array,\n    \"default\": function _default() {\n      return [];\n    }\n  },\n  arrowControl: Boolean,\n  tabindex: {\n    type: runtime.definePropType([String, Number]),\n    \"default\": 0\n  },\n  validateEvent: {\n    type: Boolean,\n    \"default\": true\n  },\n  unlinkPanels: Boolean,\n  placement: {\n    type: runtime.definePropType(String),\n    values: core.placements,\n    \"default\": \"bottom\"\n  },\n  fallbackPlacements: {\n    type: runtime.definePropType(Array),\n    \"default\": [\"bottom\", \"top\", \"right\", \"left\"]\n  }\n}, index$1.useEmptyValuesProps), index$2.useAriaProps([\"ariaLabel\"])), {}, {\n  showNow: {\n    type: Boolean,\n    \"default\": true\n  }\n}));\nvar timePickerRangeTriggerProps = runtime.buildProps({\n  id: {\n    type: runtime.definePropType(Array)\n  },\n  name: {\n    type: runtime.definePropType(Array)\n  },\n  modelValue: {\n    type: runtime.definePropType([Array, String])\n  },\n  startPlaceholder: String,\n  endPlaceholder: String,\n  disabled: Boolean\n});\nvar timePickerRngeTriggerProps = timePickerRangeTriggerProps;\nexports.timePickerDefaultProps = timePickerDefaultProps;\nexports.timePickerRangeTriggerProps = timePickerRangeTriggerProps;\nexports.timePickerRngeTriggerProps = timePickerRngeTriggerProps;","map":{"version":3,"names":["timePickerDefaultProps","runtime","buildProps","_objectSpread","id","type","definePropType","Array","String","name","popperClass","format","valueFormat","dateFormat","timeFormat","clearable","Boolean","clearIcon","Object","iconsVue","CircleClose","editable","prefixIcon","size","index","useSizeProp","readonly","disabled","placeholder","popperOptions","default","modelValue","Date","Number","rangeSeparator","startPlaceholder","endPlaceholder","defaultValue","defaultTime","isRange","shared","disabledTimeListsProps","disabledDate","Function","cellClassName","shortcuts","arrowControl","tabindex","validateEvent","unlinkPanels","placement","values","core","placements","fallbackPlacements","index$1","useEmptyValuesProps","index$2","useAriaProps","showNow","timePickerRangeTriggerProps","timePickerRngeTriggerProps"],"sources":["../../../../../../../packages/components/time-picker/src/common/props.ts"],"sourcesContent":["import { placements } from '@popperjs/core'\nimport { buildProps, definePropType } from '@element-plus/utils'\nimport {\n  useAriaProps,\n  useEmptyValuesProps,\n  useSizeProp,\n} from '@element-plus/hooks'\nimport { CircleClose } from '@element-plus/icons-vue'\nimport { disabledTimeListsProps } from '../props/shared'\n\nimport type { Component, ExtractPropTypes } from 'vue'\nimport type { Options } from '@popperjs/core'\nimport type { Dayjs } from 'dayjs'\nimport type { Placement } from '@element-plus/components/popper'\n\nexport type SingleOrRange<T> = T | [T, T]\nexport type DateModelType = number | string | Date\nexport type ModelValueType = SingleOrRange<DateModelType> | string[]\nexport type DayOrDays = SingleOrRange<Dayjs>\nexport type DateOrDates = SingleOrRange<Date>\nexport type UserInput = SingleOrRange<string | null>\nexport type GetDisabledHours = (role: string, comparingDate?: Dayjs) => number[]\nexport type GetDisabledMinutes = (\n  hour: number,\n  role: string,\n  comparingDate?: Dayjs\n) => number[]\nexport type GetDisabledSeconds = (\n  hour: number,\n  minute: number,\n  role: string,\n  comparingDate?: Dayjs\n) => number[]\n\nexport const timePickerDefaultProps = buildProps({\n  /**\n   * @description same as `id` in native input\n   */\n  id: {\n    type: definePropType<SingleOrRange<string>>([Array, String]),\n  },\n  /**\n   * @description same as `name` in native input\n   */\n  name: {\n    type: definePropType<SingleOrRange<string>>([Array, String]),\n  },\n  /**\n   * @description custom class name for TimePicker's dropdown\n   */\n  popperClass: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description format of the displayed value in the input box\n   */\n  format: String,\n  /**\n   * @description optional, format of binding value. If not specified, the binding value will be a Date object\n   */\n  valueFormat: String,\n  /**\n   * @description optional, format of the date displayed value in TimePicker's dropdown\n   */\n  dateFormat: String,\n  /**\n   * @description optional, format of the time displayed value in TimePicker's dropdown\n   */\n  timeFormat: String,\n  /**\n   * @description type of the picker\n   */\n  type: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description whether to show clear button\n   */\n  clearable: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description Custom clear icon component\n   */\n  clearIcon: {\n    type: definePropType<string | Component>([String, Object]),\n    default: CircleClose,\n  },\n  /**\n   * @description whether the input is editable\n   */\n  editable: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description Custom prefix icon component\n   */\n  prefixIcon: {\n    type: definePropType<string | Component>([String, Object]),\n    default: '',\n  },\n  /**\n   * @description size of Input\n   */\n  size: useSizeProp,\n  /**\n   * @description whether TimePicker is read only\n   */\n  readonly: Boolean,\n  /**\n   * @description whether TimePicker is disabled\n   */\n  disabled: Boolean,\n  /**\n   * @description placeholder in non-range mode\n   */\n  placeholder: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description [popper.js](https://popper.js.org/docs/v2/) parameters\n   */\n  popperOptions: {\n    type: definePropType<Partial<Options>>(Object),\n    default: () => ({}),\n  },\n  /**\n   * @description binding value, if it is an array, the length should be 2\n   */\n  modelValue: {\n    type: definePropType<ModelValueType>([Date, Array, String, Number]),\n    default: '',\n  },\n  /**\n   * @description range separator\n   */\n  rangeSeparator: {\n    type: String,\n    default: '-',\n  },\n  /**\n   * @description placeholder for the start date in range mode\n   */\n  startPlaceholder: String,\n  /**\n   * @description placeholder for the end date in range mode\n   */\n  endPlaceholder: String,\n  /**\n   * @description optional, default date of the calendar\n   */\n  defaultValue: {\n    type: definePropType<SingleOrRange<Date>>([Date, Array]),\n  },\n  /**\n   * @description optional, the time value to use when selecting date range\n   */\n  defaultTime: {\n    type: definePropType<SingleOrRange<Date>>([Date, Array]),\n  },\n  /**\n   * @description whether to pick a time range\n   */\n  isRange: Boolean,\n  ...disabledTimeListsProps,\n  /**\n   * @description a function determining if a date is disabled with that date as its parameter. Should return a Boolean\n   */\n  disabledDate: {\n    type: Function,\n  },\n  /**\n   * @description set custom className\n   */\n  cellClassName: {\n    type: Function,\n  },\n  /**\n   * @description an object array to set shortcut options\n   */\n  shortcuts: {\n    type: Array,\n    default: () => [],\n  },\n  /**\n   * @description whether to pick time using arrow buttons\n   */\n  arrowControl: Boolean,\n  /**\n   * @description input tabindex\n   */\n  tabindex: {\n    type: definePropType<string | number>([String, Number]),\n    default: 0,\n  },\n  /**\n   * @description whether to trigger form validation\n   */\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description unlink two date-panels in range-picker\n   */\n  unlinkPanels: Boolean,\n  /**\n   * @description position of dropdown\n   */\n  placement: {\n    type: definePropType<Placement>(String),\n    values: placements,\n    default: 'bottom',\n  },\n  /**\n   * @description list of possible positions for dropdown\n   */\n  fallbackPlacements: {\n    type: definePropType<Placement[]>(Array),\n    default: ['bottom', 'top', 'right', 'left'],\n  },\n  ...useEmptyValuesProps,\n  ...useAriaProps(['ariaLabel']),\n  /**\n   * @description whether to show the now button\n   */\n  showNow: {\n    type: Boolean,\n    default: true,\n  },\n} as const)\n\nexport type TimePickerDefaultProps = ExtractPropTypes<\n  typeof timePickerDefaultProps\n>\n\nexport interface PickerOptions {\n  isValidValue: (date: DayOrDays) => boolean\n  handleKeydownInput: (event: KeyboardEvent) => void\n  parseUserInput: (value: UserInput) => DayOrDays\n  formatToString: (value: DayOrDays) => UserInput\n  getRangeAvailableTime: (date: DayOrDays) => DayOrDays\n  getDefaultValue: () => DayOrDays\n  panelReady: boolean\n  handleClear: () => void\n  handleFocusPicker?: () => void\n}\n\nexport const timePickerRangeTriggerProps = buildProps({\n  id: {\n    type: definePropType<string[]>(Array),\n  },\n  name: {\n    type: definePropType<string[]>(Array),\n  },\n  modelValue: {\n    type: definePropType<UserInput>([Array, String]),\n  },\n  startPlaceholder: String,\n  endPlaceholder: String,\n  disabled: Boolean,\n} as const)\n\n/**\n * @deprecated Use `timePickerRangeTriggerProps` instead. This will be removed in future versions.\n */\nexport const timePickerRngeTriggerProps = timePickerRangeTriggerProps\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}