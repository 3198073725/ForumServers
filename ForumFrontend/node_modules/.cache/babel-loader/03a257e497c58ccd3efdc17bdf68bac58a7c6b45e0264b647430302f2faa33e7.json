{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.array.filter.js\");\nrequire(\"core-js/modules/es.iterator.constructor.js\");\nrequire(\"core-js/modules/es.iterator.filter.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar index$2 = require('../../button/index.js');\nvar index$3 = require('../../icon/index.js');\nvar iconsVue = require('@element-plus/icons-vue');\nvar transfer = require('./transfer.js');\nvar transferPanel = require('./transfer-panel.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar useComputedData = require('./composables/use-computed-data.js');\nvar useMove = require('./composables/use-move.js');\nvar useCheckedChange = require('./composables/use-checked-change.js');\nvar index = require('../../../hooks/use-locale/index.js');\nvar index$1 = require('../../../hooks/use-namespace/index.js');\nvar useFormItem = require('../../form/src/hooks/use-form-item.js');\nvar usePropsAlias = require('./composables/use-props-alias.js');\nvar error = require('../../../utils/error.js');\nvar types = require('../../../utils/types.js');\nvar __default__ = vue.defineComponent({\n  name: \"ElTransfer\"\n});\nvar _sfc_main = /* @__PURE__ */vue.defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: transfer.transferProps,\n  emits: transfer.transferEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n      emit = _ref.emit;\n    var props = __props;\n    var slots = vue.useSlots();\n    var _index$useLocale = index.useLocale(),\n      t = _index$useLocale.t;\n    var ns = index$1.useNamespace(\"transfer\");\n    var _useFormItem$useFormI = useFormItem.useFormItem(),\n      formItem = _useFormItem$useFormI.formItem;\n    var checkedState = vue.reactive({\n      leftChecked: [],\n      rightChecked: []\n    });\n    var propsAlias = usePropsAlias.usePropsAlias(props);\n    var _useComputedData$useC = useComputedData.useComputedData(props),\n      sourceData = _useComputedData$useC.sourceData,\n      targetData = _useComputedData$useC.targetData;\n    var _useCheckedChange$use = useCheckedChange.useCheckedChange(checkedState, emit),\n      onSourceCheckedChange = _useCheckedChange$use.onSourceCheckedChange,\n      onTargetCheckedChange = _useCheckedChange$use.onTargetCheckedChange;\n    var _useMove$useMove = useMove.useMove(props, checkedState, emit),\n      addToLeft = _useMove$useMove.addToLeft,\n      addToRight = _useMove$useMove.addToRight;\n    var leftPanel = vue.ref();\n    var rightPanel = vue.ref();\n    var clearQuery = function clearQuery(which) {\n      switch (which) {\n        case \"left\":\n          leftPanel.value.query = \"\";\n          break;\n        case \"right\":\n          rightPanel.value.query = \"\";\n          break;\n      }\n    };\n    var hasButtonTexts = vue.computed(function () {\n      return props.buttonTexts.length === 2;\n    });\n    var leftPanelTitle = vue.computed(function () {\n      return props.titles[0] || t(\"el.transfer.titles.0\");\n    });\n    var rightPanelTitle = vue.computed(function () {\n      return props.titles[1] || t(\"el.transfer.titles.1\");\n    });\n    var panelFilterPlaceholder = vue.computed(function () {\n      return props.filterPlaceholder || t(\"el.transfer.filterPlaceholder\");\n    });\n    vue.watch(function () {\n      return props.modelValue;\n    }, function () {\n      var _a;\n      if (props.validateEvent) {\n        (_a = formItem == null ? void 0 : formItem.validate) == null ? void 0 : _a.call(formItem, \"change\")[\"catch\"](function (err) {\n          return error.debugWarn(err);\n        });\n      }\n    });\n    var optionRender = vue.computed(function () {\n      return function (option) {\n        var _a;\n        if (props.renderContent) return props.renderContent(vue.h, option);\n        var defaultSlotVNodes = (((_a = slots[\"default\"]) == null ? void 0 : _a.call(slots, {\n          option: option\n        })) || []).filter(function (node) {\n          return node.type !== vue.Comment;\n        });\n        if (defaultSlotVNodes.length) {\n          return defaultSlotVNodes;\n        }\n        return vue.h(\"span\", option[propsAlias.value.label] || option[propsAlias.value.key]);\n      };\n    });\n    expose({\n      clearQuery: clearQuery,\n      leftPanel: leftPanel,\n      rightPanel: rightPanel\n    });\n    return function (_ctx, _cache) {\n      return vue.openBlock(), vue.createElementBlock(\"div\", {\n        \"class\": vue.normalizeClass(vue.unref(ns).b())\n      }, [vue.createVNode(transferPanel[\"default\"], {\n        ref_key: \"leftPanel\",\n        ref: leftPanel,\n        data: vue.unref(sourceData),\n        \"option-render\": vue.unref(optionRender),\n        placeholder: vue.unref(panelFilterPlaceholder),\n        title: vue.unref(leftPanelTitle),\n        filterable: _ctx.filterable,\n        format: _ctx.format,\n        \"filter-method\": _ctx.filterMethod,\n        \"default-checked\": _ctx.leftDefaultChecked,\n        props: props.props,\n        onCheckedChange: vue.unref(onSourceCheckedChange)\n      }, {\n        empty: vue.withCtx(function () {\n          return [vue.renderSlot(_ctx.$slots, \"left-empty\")];\n        }),\n        \"default\": vue.withCtx(function () {\n          return [vue.renderSlot(_ctx.$slots, \"left-footer\")];\n        }),\n        _: 3\n      }, 8, [\"data\", \"option-render\", \"placeholder\", \"title\", \"filterable\", \"format\", \"filter-method\", \"default-checked\", \"props\", \"onCheckedChange\"]), vue.createElementVNode(\"div\", {\n        \"class\": vue.normalizeClass(vue.unref(ns).e(\"buttons\"))\n      }, [vue.createVNode(vue.unref(index$2.ElButton), {\n        type: \"primary\",\n        \"class\": vue.normalizeClass([vue.unref(ns).e(\"button\"), vue.unref(ns).is(\"with-texts\", vue.unref(hasButtonTexts))]),\n        disabled: vue.unref(types.isEmpty)(checkedState.rightChecked),\n        onClick: vue.unref(addToLeft)\n      }, {\n        \"default\": vue.withCtx(function () {\n          return [vue.createVNode(vue.unref(index$3.ElIcon), null, {\n            \"default\": vue.withCtx(function () {\n              return [vue.createVNode(vue.unref(iconsVue.ArrowLeft))];\n            }),\n            _: 1\n          }), !vue.unref(types.isUndefined)(_ctx.buttonTexts[0]) ? (vue.openBlock(), vue.createElementBlock(\"span\", {\n            key: 0\n          }, vue.toDisplayString(_ctx.buttonTexts[0]), 1)) : vue.createCommentVNode(\"v-if\", true)];\n        }),\n        _: 1\n      }, 8, [\"class\", \"disabled\", \"onClick\"]), vue.createVNode(vue.unref(index$2.ElButton), {\n        type: \"primary\",\n        \"class\": vue.normalizeClass([vue.unref(ns).e(\"button\"), vue.unref(ns).is(\"with-texts\", vue.unref(hasButtonTexts))]),\n        disabled: vue.unref(types.isEmpty)(checkedState.leftChecked),\n        onClick: vue.unref(addToRight)\n      }, {\n        \"default\": vue.withCtx(function () {\n          return [!vue.unref(types.isUndefined)(_ctx.buttonTexts[1]) ? (vue.openBlock(), vue.createElementBlock(\"span\", {\n            key: 0\n          }, vue.toDisplayString(_ctx.buttonTexts[1]), 1)) : vue.createCommentVNode(\"v-if\", true), vue.createVNode(vue.unref(index$3.ElIcon), null, {\n            \"default\": vue.withCtx(function () {\n              return [vue.createVNode(vue.unref(iconsVue.ArrowRight))];\n            }),\n            _: 1\n          })];\n        }),\n        _: 1\n      }, 8, [\"class\", \"disabled\", \"onClick\"])], 2), vue.createVNode(transferPanel[\"default\"], {\n        ref_key: \"rightPanel\",\n        ref: rightPanel,\n        data: vue.unref(targetData),\n        \"option-render\": vue.unref(optionRender),\n        placeholder: vue.unref(panelFilterPlaceholder),\n        filterable: _ctx.filterable,\n        format: _ctx.format,\n        \"filter-method\": _ctx.filterMethod,\n        title: vue.unref(rightPanelTitle),\n        \"default-checked\": _ctx.rightDefaultChecked,\n        props: props.props,\n        onCheckedChange: vue.unref(onTargetCheckedChange)\n      }, {\n        empty: vue.withCtx(function () {\n          return [vue.renderSlot(_ctx.$slots, \"right-empty\")];\n        }),\n        \"default\": vue.withCtx(function () {\n          return [vue.renderSlot(_ctx.$slots, \"right-footer\")];\n        }),\n        _: 3\n      }, 8, [\"data\", \"option-render\", \"placeholder\", \"filterable\", \"format\", \"filter-method\", \"title\", \"default-checked\", \"props\", \"onCheckedChange\"])], 2);\n    };\n  }\n}));\nvar Transfer = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"transfer.vue\"]]);\nexports[\"default\"] = Transfer;","map":{"version":3,"names":["name","slots","vue","useSlots","_index$useLocale","index","useLocale","t","ns","index$1","useNamespace","_useFormItem$useFormI","useFormItem","formItem","checkedState","reactive","leftChecked","rightChecked","propsAlias","usePropsAlias","props","_useComputedData$useC","useComputedData","sourceData","targetData","_useCheckedChange$use","useCheckedChange","emit","onSourceCheckedChange","onTargetCheckedChange","_useMove$useMove","useMove","addToLeft","addToRight","leftPanel","ref","rightPanel","clearQuery","which","value","query","hasButtonTexts","computed","buttonTexts","length","leftPanelTitle","titles","rightPanelTitle","panelFilterPlaceholder","filterPlaceholder","watch","modelValue","_a","validateEvent","validate","call","err","error","debugWarn","optionRender","option","renderContent","h","defaultSlotVNodes","filter","node","type","Comment","label","key","expose","_ctx","_cache","openBlock","createElementBlock","normalizeClass","unref","b","createVNode","transferPanel","ref_key","data","placeholder","title","filterable","format","filterMethod","leftDefaultChecked","onCheckedChange"],"sources":["../../../../../../packages/components/transfer/src/transfer.vue"],"sourcesContent":["<template>\n  <div :class=\"ns.b()\">\n    <transfer-panel\n      ref=\"leftPanel\"\n      :data=\"sourceData\"\n      :option-render=\"optionRender\"\n      :placeholder=\"panelFilterPlaceholder\"\n      :title=\"leftPanelTitle\"\n      :filterable=\"filterable\"\n      :format=\"format\"\n      :filter-method=\"filterMethod\"\n      :default-checked=\"leftDefaultChecked\"\n      :props=\"props.props\"\n      @checked-change=\"onSourceCheckedChange\"\n    >\n      <template #empty>\n        <slot name=\"left-empty\" />\n      </template>\n      <slot name=\"left-footer\" />\n    </transfer-panel>\n    <div :class=\"ns.e('buttons')\">\n      <el-button\n        type=\"primary\"\n        :class=\"[ns.e('button'), ns.is('with-texts', hasButtonTexts)]\"\n        :disabled=\"isEmpty(checkedState.rightChecked)\"\n        @click=\"addToLeft\"\n      >\n        <el-icon><arrow-left /></el-icon>\n        <span v-if=\"!isUndefined(buttonTexts[0])\">{{ buttonTexts[0] }}</span>\n      </el-button>\n      <el-button\n        type=\"primary\"\n        :class=\"[ns.e('button'), ns.is('with-texts', hasButtonTexts)]\"\n        :disabled=\"isEmpty(checkedState.leftChecked)\"\n        @click=\"addToRight\"\n      >\n        <span v-if=\"!isUndefined(buttonTexts[1])\">{{ buttonTexts[1] }}</span>\n        <el-icon><arrow-right /></el-icon>\n      </el-button>\n    </div>\n    <transfer-panel\n      ref=\"rightPanel\"\n      :data=\"targetData\"\n      :option-render=\"optionRender\"\n      :placeholder=\"panelFilterPlaceholder\"\n      :filterable=\"filterable\"\n      :format=\"format\"\n      :filter-method=\"filterMethod\"\n      :title=\"rightPanelTitle\"\n      :default-checked=\"rightDefaultChecked\"\n      :props=\"props.props\"\n      @checked-change=\"onTargetCheckedChange\"\n    >\n      <template #empty>\n        <slot name=\"right-empty\" />\n      </template>\n      <slot name=\"right-footer\" />\n    </transfer-panel>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { Comment, computed, h, reactive, ref, useSlots, watch } from 'vue'\nimport { debugWarn, isEmpty, isUndefined } from '@element-plus/utils'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { ElButton } from '@element-plus/components/button'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { useFormItem } from '@element-plus/components/form'\nimport { ArrowLeft, ArrowRight } from '@element-plus/icons-vue'\nimport { transferEmits, transferProps } from './transfer'\nimport {\n  useCheckedChange,\n  useComputedData,\n  useMove,\n  usePropsAlias,\n} from './composables'\nimport TransferPanel from './transfer-panel.vue'\n\nimport type {\n  TransferCheckedState,\n  TransferDataItem,\n  TransferDirection,\n} from './transfer'\nimport type { TransferPanelInstance } from './transfer-panel'\n\ndefineOptions({\n  name: 'ElTransfer',\n})\n\nconst props = defineProps(transferProps)\nconst emit = defineEmits(transferEmits)\nconst slots = useSlots()\n\nconst { t } = useLocale()\nconst ns = useNamespace('transfer')\nconst { formItem } = useFormItem()\n\nconst checkedState = reactive<TransferCheckedState>({\n  leftChecked: [],\n  rightChecked: [],\n})\n\nconst propsAlias = usePropsAlias(props)\n\nconst { sourceData, targetData } = useComputedData(props)\n\nconst { onSourceCheckedChange, onTargetCheckedChange } = useCheckedChange(\n  checkedState,\n  emit\n)\n\nconst { addToLeft, addToRight } = useMove(props, checkedState, emit)\n\nconst leftPanel = ref<TransferPanelInstance>()\nconst rightPanel = ref<TransferPanelInstance>()\n\nconst clearQuery = (which: TransferDirection) => {\n  switch (which) {\n    case 'left':\n      leftPanel.value!.query = ''\n      break\n    case 'right':\n      rightPanel.value!.query = ''\n      break\n  }\n}\n\nconst hasButtonTexts = computed(() => props.buttonTexts.length === 2)\n\nconst leftPanelTitle = computed(\n  () => props.titles[0] || t('el.transfer.titles.0')\n)\n\nconst rightPanelTitle = computed(\n  () => props.titles[1] || t('el.transfer.titles.1')\n)\n\nconst panelFilterPlaceholder = computed(\n  () => props.filterPlaceholder || t('el.transfer.filterPlaceholder')\n)\n\nwatch(\n  () => props.modelValue,\n  () => {\n    if (props.validateEvent) {\n      formItem?.validate?.('change').catch((err) => debugWarn(err))\n    }\n  }\n)\n\nconst optionRender = computed(() => (option: TransferDataItem) => {\n  if (props.renderContent) return props.renderContent(h, option)\n\n  const defaultSlotVNodes = (slots.default?.({ option }) || []).filter(\n    (node) => node.type !== Comment\n  )\n  if (defaultSlotVNodes.length) {\n    return defaultSlotVNodes\n  }\n\n  return h(\n    'span',\n    option[propsAlias.value.label] || option[propsAlias.value.key]\n  )\n})\n\ndefineExpose({\n  /** @description clear the filter keyword of a certain panel */\n  clearQuery,\n  /** @description left panel ref */\n  leftPanel,\n  /** @description right panel ref */\n  rightPanel,\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}