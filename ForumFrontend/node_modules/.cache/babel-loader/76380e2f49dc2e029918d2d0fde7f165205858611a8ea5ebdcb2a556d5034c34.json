{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport request from '@/utils/request';\n\n// 模拟帖子数据，用于API调用失败时返回\nexport var mockPosts = [{\n  id: 1,\n  title: '欢迎使用论坛系统',\n  content: '这是一个基于Vue和Django的论坛系统',\n  created_at: new Date().toISOString(),\n  views: 100,\n  likes_count: 50,\n  comments_count: 20,\n  is_pinned: true,\n  is_featured: false,\n  board_name: '公告板块',\n  user: {\n    id: 1,\n    username: 'admin',\n    nickname: '管理员',\n    avatar_url: ''\n  }\n}, {\n  id: 2,\n  title: '如何使用论坛的功能',\n  content: '本帖介绍论坛的基本功能和使用方法',\n  created_at: new Date(Date.now() - 86400000).toISOString(),\n  // 一天前\n  views: 85,\n  likes_count: 30,\n  comments_count: 15,\n  is_pinned: false,\n  is_featured: true,\n  board_name: '使用指南',\n  user: {\n    id: 2,\n    username: 'guide',\n    nickname: '指南员',\n    avatar_url: ''\n  }\n}, {\n  id: 3,\n  title: '分享一些有用的网站资源',\n  content: '这里收集了一些学习编程的好网站',\n  created_at: new Date(Date.now() - 172800000).toISOString(),\n  // 两天前\n  views: 65,\n  likes_count: 25,\n  comments_count: 10,\n  is_pinned: false,\n  is_featured: false,\n  board_name: '资源分享',\n  user: {\n    id: 3,\n    username: 'resource',\n    nickname: '资源达人',\n    avatar_url: ''\n  }\n}];\n\n// 获取模拟帖子详情\nexport function getMockPostDetail(id) {\n  var post = mockPosts.find(function (p) {\n    return p.id === Number(id);\n  }) || {\n    id: Number(id),\n    title: '模拟帖子内容',\n    content: '这是一个模拟的帖子内容，用于API调用失败时显示',\n    created_at: new Date().toISOString(),\n    views: 50,\n    likes_count: 10,\n    comments_count: 5,\n    is_pinned: false,\n    is_featured: false,\n    board_name: '模拟板块',\n    user: {\n      id: 999,\n      username: 'mock_user',\n      nickname: '模拟用户',\n      avatar_url: ''\n    }\n  };\n  return post;\n}\n\n// 获取帖子列表\nexport function getPostList(params) {\n  return request({\n    url: '/api/v1/posts/',\n    method: 'get',\n    params: params\n  })[\"catch\"](function (error) {\n    console.error('获取帖子列表失败，使用模拟数据', error);\n    // 返回模拟数据\n    return {\n      code: 0,\n      status: 0,\n      data: mockPosts,\n      count: mockPosts.length,\n      results: mockPosts\n    };\n  });\n}\n\n// 获取帖子详情\nexport function getPostDetail(id) {\n  return request({\n    url: \"/api/v1/posts/\".concat(id, \"/\"),\n    method: 'get'\n  }).then(function (response) {\n    // 如果响应成功，直接返回\n    if (response && (response.code === 0 || response.status === 0) && response.data) {\n      return response;\n    }\n\n    // 如果响应不成功或没有数据，使用模拟数据\n    console.log('帖子详情API返回异常或空数据，使用模拟数据');\n    var mockPost = getMockPostDetail(id);\n    return {\n      code: 0,\n      status: 0,\n      data: mockPost\n    };\n  })[\"catch\"](function (error) {\n    console.error(\"\\u83B7\\u53D6\\u5E16\\u5B50\\u8BE6\\u60C5(ID: \".concat(id, \")\\u5931\\u8D25\\uFF0C\\u4F7F\\u7528\\u6A21\\u62DF\\u6570\\u636E\"), error);\n    // 返回模拟数据\n    var mockPost = getMockPostDetail(id);\n    return {\n      code: 0,\n      status: 0,\n      data: mockPost\n    };\n  });\n}\n\n// 创建帖子\nexport function createPost(data) {\n  return request({\n    url: '/api/v1/posts/',\n    method: 'post',\n    data: data\n  });\n}\n\n// 更新帖子\nexport function updatePost(id, data) {\n  return request({\n    url: \"/api/v1/posts/\".concat(id, \"/\"),\n    method: 'put',\n    data: data\n  });\n}\n\n// 删除帖子\nexport function deletePost(id) {\n  return request({\n    url: \"/api/v1/posts/\".concat(id, \"/\"),\n    method: 'delete'\n  });\n}\n\n// 点赞/取消点赞帖子\nexport function likePost(id) {\n  return request({\n    url: \"/api/v1/posts/\".concat(id, \"/like/\"),\n    method: 'post'\n  });\n}\n\n// 收藏/取消收藏帖子\nexport function favoritePost(id) {\n  return request({\n    url: \"/api/v1/posts/\".concat(id, \"/favorite/\"),\n    method: 'post'\n  });\n}\n\n// 置顶/取消置顶帖子 (管理员)\nexport function pinPost(id) {\n  return request({\n    url: \"/api/v1/posts/\".concat(id, \"/pin/\"),\n    method: 'put'\n  });\n}\n\n// 加精/取消加精帖子 (管理员)\nexport function featurePost(id) {\n  return request({\n    url: \"/api/v1/posts/\".concat(id, \"/feature/\"),\n    method: 'put'\n  });\n}\n\n// 获取用户收藏的帖子列表\nexport function getUserFavorites() {\n  return request({\n    url: '/api/v1/posts/favorites/',\n    method: 'get'\n  });\n}","map":{"version":3,"names":["request","mockPosts","id","title","content","created_at","Date","toISOString","views","likes_count","comments_count","is_pinned","is_featured","board_name","user","username","nickname","avatar_url","now","getMockPostDetail","post","find","p","Number","getPostList","params","url","method","error","console","code","status","data","count","length","results","getPostDetail","concat","then","response","log","mockPost","createPost","updatePost","deletePost","likePost","favoritePost","pinPost","featurePost","getUserFavorites"],"sources":["H:/ForumServers/ForumFrontend/src/api/post.js"],"sourcesContent":["import request from '@/utils/request'\n\n// 模拟帖子数据，用于API调用失败时返回\nexport const mockPosts = [\n  {\n    id: 1,\n    title: '欢迎使用论坛系统',\n    content: '这是一个基于Vue和Django的论坛系统',\n    created_at: new Date().toISOString(),\n    views: 100,\n    likes_count: 50,\n    comments_count: 20,\n    is_pinned: true,\n    is_featured: false,\n    board_name: '公告板块',\n    user: {\n      id: 1,\n      username: 'admin',\n      nickname: '管理员',\n      avatar_url: ''\n    }\n  },\n  {\n    id: 2,\n    title: '如何使用论坛的功能',\n    content: '本帖介绍论坛的基本功能和使用方法',\n    created_at: new Date(Date.now() - 86400000).toISOString(), // 一天前\n    views: 85,\n    likes_count: 30,\n    comments_count: 15,\n    is_pinned: false,\n    is_featured: true,\n    board_name: '使用指南',\n    user: {\n      id: 2,\n      username: 'guide',\n      nickname: '指南员',\n      avatar_url: ''\n    }\n  },\n  {\n    id: 3,\n    title: '分享一些有用的网站资源',\n    content: '这里收集了一些学习编程的好网站',\n    created_at: new Date(Date.now() - 172800000).toISOString(), // 两天前\n    views: 65,\n    likes_count: 25,\n    comments_count: 10,\n    is_pinned: false,\n    is_featured: false,\n    board_name: '资源分享',\n    user: {\n      id: 3,\n      username: 'resource',\n      nickname: '资源达人',\n      avatar_url: ''\n    }\n  }\n]\n\n// 获取模拟帖子详情\nexport function getMockPostDetail(id) {\n  const post = mockPosts.find(p => p.id === Number(id)) || {\n    id: Number(id),\n    title: '模拟帖子内容',\n    content: '这是一个模拟的帖子内容，用于API调用失败时显示',\n    created_at: new Date().toISOString(),\n    views: 50,\n    likes_count: 10,\n    comments_count: 5,\n    is_pinned: false,\n    is_featured: false,\n    board_name: '模拟板块',\n    user: {\n      id: 999,\n      username: 'mock_user',\n      nickname: '模拟用户',\n      avatar_url: ''\n    }\n  }\n  return post\n}\n\n// 获取帖子列表\nexport function getPostList(params) {\n  return request({\n    url: '/api/v1/posts/',\n    method: 'get',\n    params\n  }).catch(error => {\n    console.error('获取帖子列表失败，使用模拟数据', error)\n    // 返回模拟数据\n    return {\n      code: 0,\n      status: 0,\n      data: mockPosts,\n      count: mockPosts.length,\n      results: mockPosts\n    }\n  })\n}\n\n// 获取帖子详情\nexport function getPostDetail(id) {\n  return request({\n    url: `/api/v1/posts/${id}/`,\n    method: 'get'\n  }).then(response => {\n    // 如果响应成功，直接返回\n    if (response && (response.code === 0 || response.status === 0) && response.data) {\n      return response;\n    }\n    \n    // 如果响应不成功或没有数据，使用模拟数据\n    console.log('帖子详情API返回异常或空数据，使用模拟数据');\n    const mockPost = getMockPostDetail(id);\n    return {\n      code: 0,\n      status: 0,\n      data: mockPost\n    };\n  }).catch(error => {\n    console.error(`获取帖子详情(ID: ${id})失败，使用模拟数据`, error)\n    // 返回模拟数据\n    const mockPost = getMockPostDetail(id)\n    return {\n      code: 0,\n      status: 0,\n      data: mockPost\n    }\n  })\n}\n\n// 创建帖子\nexport function createPost(data) {\n  return request({\n    url: '/api/v1/posts/',\n    method: 'post',\n    data\n  })\n}\n\n// 更新帖子\nexport function updatePost(id, data) {\n  return request({\n    url: `/api/v1/posts/${id}/`,\n    method: 'put',\n    data\n  })\n}\n\n// 删除帖子\nexport function deletePost(id) {\n  return request({\n    url: `/api/v1/posts/${id}/`,\n    method: 'delete'\n  })\n}\n\n// 点赞/取消点赞帖子\nexport function likePost(id) {\n  return request({\n    url: `/api/v1/posts/${id}/like/`,\n    method: 'post'\n  })\n}\n\n// 收藏/取消收藏帖子\nexport function favoritePost(id) {\n  return request({\n    url: `/api/v1/posts/${id}/favorite/`,\n    method: 'post'\n  })\n}\n\n// 置顶/取消置顶帖子 (管理员)\nexport function pinPost(id) {\n  return request({\n    url: `/api/v1/posts/${id}/pin/`,\n    method: 'put'\n  })\n}\n\n// 加精/取消加精帖子 (管理员)\nexport function featurePost(id) {\n  return request({\n    url: `/api/v1/posts/${id}/feature/`,\n    method: 'put'\n  })\n}\n\n// 获取用户收藏的帖子列表\nexport function getUserFavorites() {\n  return request({\n    url: '/api/v1/posts/favorites/',\n    method: 'get'\n  })\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}