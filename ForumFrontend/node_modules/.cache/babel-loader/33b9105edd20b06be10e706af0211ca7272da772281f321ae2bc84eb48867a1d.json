{"ast":null,"code":"import _regeneratorRuntime from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _typeof from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _asyncToGenerator from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nimport { User, Lock } from '@element-plus/icons-vue';\nimport { login } from '../api/user';\nexport default {\n  name: 'Login',\n  components: {\n    User: User,\n    Lock: Lock\n  },\n  setup: function setup() {\n    var router = useRouter();\n    var store = useStore();\n    var formRef = ref(null);\n    var loading = ref(false);\n\n    // 表单数据\n    var loginForm = reactive({\n      username: '',\n      password: ''\n    });\n\n    // 表单验证规则\n    var loginRules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }, {\n        min: 3,\n        max: 50,\n        message: '用户名长度应在3-50个字符之间',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        min: 6,\n        max: 20,\n        message: '密码长度应在6-20个字符之间',\n        trigger: 'blur'\n      }]\n    };\n\n    // 登录处理\n    var handleLogin = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, _response$data, token, user_info, errorMsg, responseData, fieldErrors, field;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return formRef.value.validate();\n            case 3:\n              // 显示加载状态\n              loading.value = true;\n\n              // 调用登录API\n              _context.next = 6;\n              return login(loginForm);\n            case 6:\n              response = _context.sent;\n              // 登录成功，保存token和用户信息\n              _response$data = response.data, token = _response$data.token, user_info = _response$data.user_info;\n              store.dispatch('login', {\n                token: token,\n                userInfo: user_info\n              });\n              ElMessage({\n                message: '登录成功',\n                type: 'success'\n              });\n\n              // 跳转到首页\n              router.push('/');\n              _context.next = 19;\n              break;\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('登录失败:', _context.t0);\n\n              // 处理后端返回的错误信息\n              errorMsg = '登录失败，请检查用户名和密码';\n              if (_context.t0.response && _context.t0.response.data) {\n                responseData = _context.t0.response.data;\n                if (responseData.msg && _typeof(responseData.msg) === 'object') {\n                  // 处理字段错误\n                  fieldErrors = [];\n                  for (field in responseData.msg) {\n                    if (Array.isArray(responseData.msg[field])) {\n                      fieldErrors.push(\"\".concat(field, \": \").concat(responseData.msg[field].join(', ')));\n                    } else {\n                      fieldErrors.push(\"\".concat(field, \": \").concat(responseData.msg[field]));\n                    }\n                  }\n                  if (fieldErrors.length > 0) {\n                    errorMsg = fieldErrors.join('\\n');\n                  }\n                } else if (responseData.msg) {\n                  errorMsg = responseData.msg;\n                }\n              } else if (_context.t0.message) {\n                errorMsg = _context.t0.message;\n              }\n              ElMessage({\n                message: errorMsg,\n                type: 'error',\n                dangerouslyUseHTMLString: true\n              });\n            case 19:\n              _context.prev = 19;\n              loading.value = false;\n              return _context.finish(19);\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 13, 19, 22]]);\n      }));\n      return function handleLogin() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    return {\n      loginForm: loginForm,\n      formRef: formRef,\n      loginRules: loginRules,\n      loading: loading,\n      handleLogin: handleLogin\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","useStore","ElMessage","User","Lock","login","name","components","setup","router","store","formRef","loading","loginForm","username","password","loginRules","required","message","trigger","min","max","handleLogin","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","_response$data","token","user_info","errorMsg","responseData","fieldErrors","field","wrap","_callee$","_context","prev","next","value","validate","sent","data","dispatch","userInfo","type","push","t0","console","error","msg","_typeof","Array","isArray","concat","join","length","dangerouslyUseHTMLString","finish","stop","apply","arguments"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-box\">\n      <div class=\"login-header\">\n        <h2>用户登录</h2>\n      </div>\n      <el-form\n        ref=\"formRef\"\n        :model=\"loginForm\"\n        :rules=\"loginRules\"\n        label-width=\"80px\"\n        class=\"login-form\"\n      >\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input\n            v-model=\"loginForm.username\"\n            placeholder=\"请输入用户名\"\n          >\n            <template #prefix>\n              <el-icon><User /></el-icon>\n            </template>\n          </el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input\n            v-model=\"loginForm.password\"\n            type=\"password\"\n            placeholder=\"请输入密码\"\n            show-password\n          >\n            <template #prefix>\n              <el-icon><Lock /></el-icon>\n            </template>\n          </el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button\n            type=\"primary\"\n            :loading=\"loading\"\n            @click=\"handleLogin\"\n            class=\"login-button\"\n          >登录</el-button>\n        </el-form-item>\n        <div class=\"login-options\">\n          <router-link to=\"/register\">没有账号？立即注册</router-link>\n          <router-link to=\"/forgot-password\">忘记密码？</router-link>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { ElMessage } from 'element-plus'\nimport { User, Lock } from '@element-plus/icons-vue'\nimport { login } from '../api/user'\n\nexport default {\n  name: 'Login',\n  components: {\n    User,\n    Lock\n  },\n  setup() {\n    const router = useRouter()\n    const store = useStore()\n    const formRef = ref(null)\n    const loading = ref(false)\n\n    // 表单数据\n    const loginForm = reactive({\n      username: '',\n      password: ''\n    })\n\n    // 表单验证规则\n    const loginRules = {\n      username: [\n        { required: true, message: '请输入用户名', trigger: 'blur' },\n        { min: 3, max: 50, message: '用户名长度应在3-50个字符之间', trigger: 'blur' }\n      ],\n      password: [\n        { required: true, message: '请输入密码', trigger: 'blur' },\n        { min: 6, max: 20, message: '密码长度应在6-20个字符之间', trigger: 'blur' }\n      ]\n    }\n\n    // 登录处理\n    const handleLogin = async () => {\n      try {\n        // 表单验证\n        await formRef.value.validate()\n\n        // 显示加载状态\n        loading.value = true\n\n        // 调用登录API\n        const response = await login(loginForm)\n\n        // 登录成功，保存token和用户信息\n        const { token, user_info } = response.data\n        store.dispatch('login', { token, userInfo: user_info })\n\n        ElMessage({\n          message: '登录成功',\n          type: 'success'\n        })\n\n        // 跳转到首页\n        router.push('/')\n      } catch (error) {\n        console.error('登录失败:', error)\n\n        // 处理后端返回的错误信息\n        let errorMsg = '登录失败，请检查用户名和密码'\n\n        if (error.response && error.response.data) {\n          const responseData = error.response.data\n\n          if (responseData.msg && typeof responseData.msg === 'object') {\n            // 处理字段错误\n            const fieldErrors = []\n            for (const field in responseData.msg) {\n              if (Array.isArray(responseData.msg[field])) {\n                fieldErrors.push(`${field}: ${responseData.msg[field].join(', ')}`)\n              } else {\n                fieldErrors.push(`${field}: ${responseData.msg[field]}`)\n              }\n            }\n            if (fieldErrors.length > 0) {\n              errorMsg = fieldErrors.join('\\n')\n            }\n          } else if (responseData.msg) {\n            errorMsg = responseData.msg\n          }\n        } else if (error.message) {\n          errorMsg = error.message\n        }\n\n        ElMessage({\n          message: errorMsg,\n          type: 'error',\n          dangerouslyUseHTMLString: true\n        })\n      } finally {\n        loading.value = false\n      }\n    }\n\n    return {\n      loginForm,\n      formRef,\n      loginRules,\n      loading,\n      handleLogin\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #f5f7fa;\n}\n\n.login-box {\n  width: 400px;\n  padding: 30px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.login-header {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.login-header h2 {\n  font-weight: 500;\n  color: #303133;\n}\n\n.login-form {\n  margin-top: 20px;\n}\n\n.login-button {\n  width: 100%;\n}\n\n.login-options {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 15px;\n  font-size: 14px;\n}\n\n.login-options a {\n  color: #409eff;\n  text-decoration: none;\n}\n\n.login-options a:hover {\n  text-decoration: underline;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}