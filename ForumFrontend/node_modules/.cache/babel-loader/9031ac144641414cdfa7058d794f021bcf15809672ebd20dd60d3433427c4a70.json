{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_avatar = _resolveComponent(\"el-avatar\");\n  return _openBlock(), _createBlock(_component_el_avatar, {\n    size: $props.size,\n    src: $setup.processedAvatarUrl,\n    onError: $setup.handleError\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createTextVNode(_toDisplayString($setup.fallbackText), 1 /* TEXT */)];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"size\", \"src\", \"onError\"]);\n}","map":{"version":3,"names":["_createBlock","_component_el_avatar","size","$props","src","$setup","processedAvatarUrl","onError","handleError","_withCtx","_createTextVNode","_toDisplayString","fallbackText","_"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\components\\UserAvatar.vue"],"sourcesContent":["<template>\n  <el-avatar \n    :size=\"size\" \n    :src=\"processedAvatarUrl\" \n    @error=\"handleError\"\n  >\n    {{ fallbackText }}\n  </el-avatar>\n</template>\n\n<script>\nimport { computed } from 'vue'\n\nexport default {\n  name: 'UserAvatar',\n  props: {\n    user: {\n      type: Object,\n      required: true\n    },\n    size: {\n      type: [Number, String],\n      default: 'default'\n    }\n  },\n  setup(props) {\n    // 处理头像URL，确保使用完整路径\n    const processedAvatarUrl = computed(() => {\n      const avatarUrl = props.user?.avatar_url\n      if (!avatarUrl) return ''\n      \n      // 如果已经是完整URL，直接返回\n      if (avatarUrl.startsWith('http')) {\n        return avatarUrl\n      }\n      \n      // 否则添加后端服务器地址\n      return `http://localhost:8000${avatarUrl}`\n    })\n\n    // 获取用于显示的文本（用户昵称或用户名的首字母）\n    const fallbackText = computed(() => {\n      if (!props.user) return 'U'\n      return props.user.nickname?.charAt(0) || props.user.username?.charAt(0) || 'U'\n    })\n\n    // 处理头像加载错误\n    const handleError = () => {\n      console.log('头像加载失败，使用文字替代')\n    }\n\n    return {\n      processedAvatarUrl,\n      fallbackText,\n      handleError\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* 可以添加自定义样式 */\n</style>\n"],"mappings":";;;uBACEA,YAAA,CAMYC,oBAAA;IALTC,IAAI,EAAEC,MAAA,CAAAD,IAAI;IACVE,GAAG,EAAEC,MAAA,CAAAC,kBAAkB;IACvBC,OAAK,EAAEF,MAAA,CAAAG;;IAJZ,WAAAC,QAAA,CAMI;MAAA,OAAkB,CANtBC,gBAAA,CAAAC,gBAAA,CAMON,MAAA,CAAAO,YAAY,iB;;IANnBC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}