{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar core = require('@vueuse/core');\nvar index$2 = require('../../teleport/index.js');\nvar mask = require('./mask2.js');\nvar content = require('./content.js');\nvar steps = require('./steps.js');\nvar tour = require('./tour.js');\nvar helper = require('./helper.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar types = require('../../../utils/types.js');\nvar index$1 = require('../../../hooks/use-z-index/index.js');\nvar event = require('../../../constants/event.js');\nvar __default__ = vue.defineComponent({\n  name: \"ElTour\"\n});\nvar _sfc_main = /* @__PURE__ */vue.defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: tour.tourProps,\n  emits: tour.tourEmits,\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var ns = index.useNamespace(\"tour\");\n    var total = vue.ref(0);\n    var currentStep = vue.ref();\n    var current = core.useVModel(props, \"current\", emit, {\n      passive: true\n    });\n    var currentTarget = vue.computed(function () {\n      var _a;\n      return (_a = currentStep.value) == null ? void 0 : _a.target;\n    });\n    var kls = vue.computed(function () {\n      return [ns.b(), mergedType.value === \"primary\" ? ns.m(\"primary\") : \"\"];\n    });\n    var mergedPlacement = vue.computed(function () {\n      var _a;\n      return ((_a = currentStep.value) == null ? void 0 : _a.placement) || props.placement;\n    });\n    var mergedContentStyle = vue.computed(function () {\n      var _a, _b;\n      return (_b = (_a = currentStep.value) == null ? void 0 : _a.contentStyle) != null ? _b : props.contentStyle;\n    });\n    var mergedMask = vue.computed(function () {\n      var _a, _b;\n      return (_b = (_a = currentStep.value) == null ? void 0 : _a.mask) != null ? _b : props.mask;\n    });\n    var mergedShowMask = vue.computed(function () {\n      return !!mergedMask.value && props.modelValue;\n    });\n    var mergedMaskStyle = vue.computed(function () {\n      return types.isBoolean(mergedMask.value) ? void 0 : mergedMask.value;\n    });\n    var mergedShowArrow = vue.computed(function () {\n      var _a, _b;\n      return !!currentTarget.value && ((_b = (_a = currentStep.value) == null ? void 0 : _a.showArrow) != null ? _b : props.showArrow);\n    });\n    var mergedScrollIntoViewOptions = vue.computed(function () {\n      var _a, _b;\n      return (_b = (_a = currentStep.value) == null ? void 0 : _a.scrollIntoViewOptions) != null ? _b : props.scrollIntoViewOptions;\n    });\n    var mergedType = vue.computed(function () {\n      var _a, _b;\n      return (_b = (_a = currentStep.value) == null ? void 0 : _a.type) != null ? _b : props.type;\n    });\n    var _index$1$useZIndex = index$1.useZIndex(),\n      nextZIndex = _index$1$useZIndex.nextZIndex;\n    var nowZIndex = nextZIndex();\n    var mergedZIndex = vue.computed(function () {\n      var _a;\n      return (_a = props.zIndex) != null ? _a : nowZIndex;\n    });\n    var _helper$useTarget = helper.useTarget(currentTarget, vue.toRef(props, \"modelValue\"), vue.toRef(props, \"gap\"), mergedMask, mergedScrollIntoViewOptions),\n      pos = _helper$useTarget.mergedPosInfo,\n      triggerTarget = _helper$useTarget.triggerTarget;\n    vue.watch(function () {\n      return props.modelValue;\n    }, function (val) {\n      if (!val) {\n        current.value = 0;\n      }\n    });\n    var onEscClose = function onEscClose() {\n      if (props.closeOnPressEscape) {\n        emit(event.UPDATE_MODEL_EVENT, false);\n        emit(\"close\", current.value);\n      }\n    };\n    var onUpdateTotal = function onUpdateTotal(val) {\n      total.value = val;\n    };\n    var slots = vue.useSlots();\n    vue.provide(helper.tourKey, {\n      currentStep: currentStep,\n      current: current,\n      total: total,\n      showClose: vue.toRef(props, \"showClose\"),\n      closeIcon: vue.toRef(props, \"closeIcon\"),\n      mergedType: mergedType,\n      ns: ns,\n      slots: slots,\n      updateModelValue: function updateModelValue(modelValue) {\n        emit(event.UPDATE_MODEL_EVENT, modelValue);\n      },\n      onClose: function onClose() {\n        emit(\"close\", current.value);\n      },\n      onFinish: function onFinish() {\n        emit(\"finish\");\n      },\n      onChange: function onChange() {\n        emit(event.CHANGE_EVENT, current.value);\n      }\n    });\n    return function (_ctx, _cache) {\n      return vue.openBlock(), vue.createElementBlock(vue.Fragment, null, [vue.createVNode(vue.unref(index$2.ElTeleport), {\n        to: _ctx.appendTo\n      }, {\n        \"default\": vue.withCtx(function () {\n          var _a, _b;\n          return [vue.createElementVNode(\"div\", vue.mergeProps({\n            \"class\": vue.unref(kls)\n          }, _ctx.$attrs), [vue.createVNode(mask[\"default\"], {\n            visible: vue.unref(mergedShowMask),\n            fill: (_a = vue.unref(mergedMaskStyle)) == null ? void 0 : _a.color,\n            style: vue.normalizeStyle((_b = vue.unref(mergedMaskStyle)) == null ? void 0 : _b.style),\n            pos: vue.unref(pos),\n            \"z-index\": vue.unref(mergedZIndex),\n            \"target-area-clickable\": _ctx.targetAreaClickable\n          }, null, 8, [\"visible\", \"fill\", \"style\", \"pos\", \"z-index\", \"target-area-clickable\"]), _ctx.modelValue ? (vue.openBlock(), vue.createBlock(content[\"default\"], {\n            key: vue.unref(current),\n            reference: vue.unref(triggerTarget),\n            placement: vue.unref(mergedPlacement),\n            \"show-arrow\": vue.unref(mergedShowArrow),\n            \"z-index\": vue.unref(mergedZIndex),\n            style: vue.normalizeStyle(vue.unref(mergedContentStyle)),\n            onClose: onEscClose\n          }, {\n            \"default\": vue.withCtx(function () {\n              return [vue.createVNode(vue.unref(steps[\"default\"]), {\n                current: vue.unref(current),\n                onUpdateTotal: onUpdateTotal\n              }, {\n                \"default\": vue.withCtx(function () {\n                  return [vue.renderSlot(_ctx.$slots, \"default\")];\n                }),\n                _: 3\n              }, 8, [\"current\"])];\n            }),\n            _: 3\n          }, 8, [\"reference\", \"placement\", \"show-arrow\", \"z-index\", \"style\"])) : vue.createCommentVNode(\"v-if\", true)], 16)];\n        }),\n        _: 3\n      }, 8, [\"to\"]), vue.createCommentVNode(\" just for IDE \"), vue.createCommentVNode(\"v-if\", true)], 64);\n    };\n  }\n}));\nvar Tour = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"tour.vue\"]]);\nexports[\"default\"] = Tour;","map":{"version":3,"names":["name","ns","index","useNamespace","total","vue","ref","currentStep","current","core","useVModel","props","emit","passive","currentTarget","computed","_a","value","target","kls","b","mergedType","m","mergedPlacement","placement","mergedContentStyle","_b","contentStyle","mergedMask","mask","mergedShowMask","modelValue","mergedMaskStyle","types","isBoolean","mergedShowArrow","showArrow","mergedScrollIntoViewOptions","scrollIntoViewOptions","type","_index$1$useZIndex","index$1","useZIndex","nextZIndex","nowZIndex","mergedZIndex","zIndex","_helper$useTarget","helper","useTarget","toRef","pos","mergedPosInfo","triggerTarget","watch","val","onEscClose","closeOnPressEscape","event","UPDATE_MODEL_EVENT","onUpdateTotal","slots","useSlots","provide","tourKey","showClose","closeIcon","updateModelValue","onClose","onFinish"],"sources":["../../../../../../packages/components/tour/src/tour.vue"],"sourcesContent":["<template>\n  <el-teleport :to=\"appendTo\">\n    <div :class=\"kls\" v-bind=\"$attrs\">\n      <el-tour-mask\n        :visible=\"mergedShowMask\"\n        :fill=\"mergedMaskStyle?.color\"\n        :style=\"mergedMaskStyle?.style\"\n        :pos=\"pos\"\n        :z-index=\"mergedZIndex\"\n        :target-area-clickable=\"targetAreaClickable\"\n      />\n      <el-tour-content\n        v-if=\"modelValue\"\n        :key=\"current\"\n        :reference=\"triggerTarget\"\n        :placement=\"mergedPlacement\"\n        :show-arrow=\"mergedShowArrow\"\n        :z-index=\"mergedZIndex\"\n        :style=\"mergedContentStyle\"\n        @close=\"onEscClose\"\n      >\n        <el-tour-steps :current=\"current\" @update-total=\"onUpdateTotal\">\n          <slot />\n        </el-tour-steps>\n      </el-tour-content>\n    </div>\n  </el-teleport>\n  <!-- just for IDE -->\n  <slot v-if=\"false\" name=\"indicators\" :current=\"current + 1\" :total=\"total\" />\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, provide, ref, toRef, useSlots, watch } from 'vue'\nimport { useVModel } from '@vueuse/core'\nimport { useNamespace, useZIndex } from '@element-plus/hooks'\nimport { isBoolean } from '@element-plus/utils'\nimport ElTeleport from '@element-plus/components/teleport'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport ElTourMask from './mask.vue'\nimport ElTourContent from './content.vue'\nimport ElTourSteps from './steps'\nimport { tourEmits, tourProps } from './tour'\nimport { tourKey, useTarget } from './helper'\nimport type { TourStepProps } from './step'\n\ndefineOptions({\n  name: 'ElTour',\n})\n\nconst props = defineProps(tourProps)\nconst emit = defineEmits(tourEmits)\n\nconst ns = useNamespace('tour')\nconst total = ref(0)\nconst currentStep = ref<TourStepProps>()\n\nconst current = useVModel(props, 'current', emit, {\n  passive: true,\n})\n\nconst currentTarget = computed(() => currentStep.value?.target)\n\nconst kls = computed(() => [\n  ns.b(),\n  mergedType.value === 'primary' ? ns.m('primary') : '',\n])\n\nconst mergedPlacement = computed(\n  () => currentStep.value?.placement || props.placement\n)\n\nconst mergedContentStyle = computed(\n  () => currentStep.value?.contentStyle ?? props.contentStyle\n)\n\nconst mergedMask = computed(() => currentStep.value?.mask ?? props.mask)\nconst mergedShowMask = computed(() => !!mergedMask.value && props.modelValue)\nconst mergedMaskStyle = computed(() =>\n  isBoolean(mergedMask.value) ? undefined : mergedMask.value\n)\n\nconst mergedShowArrow = computed(\n  () =>\n    !!currentTarget.value && (currentStep.value?.showArrow ?? props.showArrow)\n)\n\nconst mergedScrollIntoViewOptions = computed(\n  () => currentStep.value?.scrollIntoViewOptions ?? props.scrollIntoViewOptions\n)\nconst mergedType = computed(() => currentStep.value?.type ?? props.type)\n\nconst { nextZIndex } = useZIndex()\nconst nowZIndex = nextZIndex()\nconst mergedZIndex = computed(() => props.zIndex ?? nowZIndex)\n\nconst { mergedPosInfo: pos, triggerTarget } = useTarget(\n  currentTarget,\n  toRef(props, 'modelValue'),\n  toRef(props, 'gap'),\n  mergedMask,\n  mergedScrollIntoViewOptions\n)\n\nwatch(\n  () => props.modelValue,\n  (val) => {\n    if (!val) {\n      current.value = 0\n    }\n  }\n)\n\nconst onEscClose = () => {\n  if (props.closeOnPressEscape) {\n    emit(UPDATE_MODEL_EVENT, false)\n    emit('close', current.value)\n  }\n}\n\nconst onUpdateTotal = (val: number) => {\n  total.value = val\n}\n\nconst slots = useSlots()\n\nprovide(tourKey, {\n  currentStep,\n  current,\n  total,\n  showClose: toRef(props, 'showClose'),\n  closeIcon: toRef(props, 'closeIcon') as any,\n  mergedType: mergedType as any,\n  ns,\n  slots,\n  updateModelValue(modelValue) {\n    emit(UPDATE_MODEL_EVENT, modelValue)\n  },\n  onClose() {\n    emit('close', current.value)\n  },\n  onFinish() {\n    emit('finish')\n  },\n  onChange() {\n    emit(CHANGE_EVENT, current.value)\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}