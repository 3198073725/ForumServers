{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"];\nrequire(\"core-js/modules/es.error.cause.js\");\nrequire(\"core-js/modules/es.error.to-string.js\");\nrequire(\"core-js/modules/es.array.concat.js\");\nrequire(\"core-js/modules/es.array.filter.js\");\nrequire(\"core-js/modules/es.array.for-each.js\");\nrequire(\"core-js/modules/es.array.index-of.js\");\nrequire(\"core-js/modules/es.array.is-array.js\");\nrequire(\"core-js/modules/es.array.join.js\");\nrequire(\"core-js/modules/es.array.map.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.array.reduce.js\");\nrequire(\"core-js/modules/es.array.slice.js\");\nrequire(\"core-js/modules/es.array.splice.js\");\nrequire(\"core-js/modules/es.array.unshift.js\");\nrequire(\"core-js/modules/es.iterator.constructor.js\");\nrequire(\"core-js/modules/es.iterator.filter.js\");\nrequire(\"core-js/modules/es.iterator.for-each.js\");\nrequire(\"core-js/modules/es.iterator.map.js\");\nrequire(\"core-js/modules/es.iterator.reduce.js\");\nrequire(\"core-js/modules/es.object.keys.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nvar fast_diff_1 = __importDefault(require(\"fast-diff\"));\nvar lodash_clonedeep_1 = __importDefault(require(\"lodash.clonedeep\"));\nvar lodash_isequal_1 = __importDefault(require(\"lodash.isequal\"));\nvar AttributeMap_1 = __importDefault(require(\"./AttributeMap\"));\nvar Op_1 = __importDefault(require(\"./Op\"));\nvar NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()\nvar Delta = /** @class */function () {\n  function Delta(ops) {\n    // Assume we are given a well formed ops\n    if (Array.isArray(ops)) {\n      this.ops = ops;\n    } else if (ops != null && Array.isArray(ops.ops)) {\n      this.ops = ops.ops;\n    } else {\n      this.ops = [];\n    }\n  }\n  Delta.prototype.insert = function (arg, attributes) {\n    var newOp = {};\n    if (typeof arg === 'string' && arg.length === 0) {\n      return this;\n    }\n    newOp.insert = arg;\n    if (attributes != null && _typeof(attributes) === 'object' && Object.keys(attributes).length > 0) {\n      newOp.attributes = attributes;\n    }\n    return this.push(newOp);\n  };\n  Delta.prototype[\"delete\"] = function (length) {\n    if (length <= 0) {\n      return this;\n    }\n    return this.push({\n      \"delete\": length\n    });\n  };\n  Delta.prototype.retain = function (length, attributes) {\n    if (length <= 0) {\n      return this;\n    }\n    var newOp = {\n      retain: length\n    };\n    if (attributes != null && _typeof(attributes) === 'object' && Object.keys(attributes).length > 0) {\n      newOp.attributes = attributes;\n    }\n    return this.push(newOp);\n  };\n  Delta.prototype.push = function (newOp) {\n    var index = this.ops.length;\n    var lastOp = this.ops[index - 1];\n    newOp = lodash_clonedeep_1[\"default\"](newOp);\n    if (_typeof(lastOp) === 'object') {\n      if (typeof newOp[\"delete\"] === 'number' && typeof lastOp[\"delete\"] === 'number') {\n        this.ops[index - 1] = {\n          \"delete\": lastOp[\"delete\"] + newOp[\"delete\"]\n        };\n        return this;\n      }\n      // Since it does not matter if we insert before or after deleting at the same index,\n      // always prefer to insert first\n      if (typeof lastOp[\"delete\"] === 'number' && newOp.insert != null) {\n        index -= 1;\n        lastOp = this.ops[index - 1];\n        if (_typeof(lastOp) !== 'object') {\n          this.ops.unshift(newOp);\n          return this;\n        }\n      }\n      if (lodash_isequal_1[\"default\"](newOp.attributes, lastOp.attributes)) {\n        if (typeof newOp.insert === 'string' && typeof lastOp.insert === 'string') {\n          this.ops[index - 1] = {\n            insert: lastOp.insert + newOp.insert\n          };\n          if (_typeof(newOp.attributes) === 'object') {\n            this.ops[index - 1].attributes = newOp.attributes;\n          }\n          return this;\n        } else if (typeof newOp.retain === 'number' && typeof lastOp.retain === 'number') {\n          this.ops[index - 1] = {\n            retain: lastOp.retain + newOp.retain\n          };\n          if (_typeof(newOp.attributes) === 'object') {\n            this.ops[index - 1].attributes = newOp.attributes;\n          }\n          return this;\n        }\n      }\n    }\n    if (index === this.ops.length) {\n      this.ops.push(newOp);\n    } else {\n      this.ops.splice(index, 0, newOp);\n    }\n    return this;\n  };\n  Delta.prototype.chop = function () {\n    var lastOp = this.ops[this.ops.length - 1];\n    if (lastOp && lastOp.retain && !lastOp.attributes) {\n      this.ops.pop();\n    }\n    return this;\n  };\n  Delta.prototype.filter = function (predicate) {\n    return this.ops.filter(predicate);\n  };\n  Delta.prototype.forEach = function (predicate) {\n    this.ops.forEach(predicate);\n  };\n  Delta.prototype.map = function (predicate) {\n    return this.ops.map(predicate);\n  };\n  Delta.prototype.partition = function (predicate) {\n    var passed = [];\n    var failed = [];\n    this.forEach(function (op) {\n      var target = predicate(op) ? passed : failed;\n      target.push(op);\n    });\n    return [passed, failed];\n  };\n  Delta.prototype.reduce = function (predicate, initialValue) {\n    return this.ops.reduce(predicate, initialValue);\n  };\n  Delta.prototype.changeLength = function () {\n    return this.reduce(function (length, elem) {\n      if (elem.insert) {\n        return length + Op_1[\"default\"].length(elem);\n      } else if (elem[\"delete\"]) {\n        return length - elem[\"delete\"];\n      }\n      return length;\n    }, 0);\n  };\n  Delta.prototype.length = function () {\n    return this.reduce(function (length, elem) {\n      return length + Op_1[\"default\"].length(elem);\n    }, 0);\n  };\n  Delta.prototype.slice = function (start, end) {\n    if (start === void 0) {\n      start = 0;\n    }\n    if (end === void 0) {\n      end = Infinity;\n    }\n    var ops = [];\n    var iter = Op_1[\"default\"].iterator(this.ops);\n    var index = 0;\n    while (index < end && iter.hasNext()) {\n      var nextOp = void 0;\n      if (index < start) {\n        nextOp = iter.next(start - index);\n      } else {\n        nextOp = iter.next(end - index);\n        ops.push(nextOp);\n      }\n      index += Op_1[\"default\"].length(nextOp);\n    }\n    return new Delta(ops);\n  };\n  Delta.prototype.compose = function (other) {\n    var thisIter = Op_1[\"default\"].iterator(this.ops);\n    var otherIter = Op_1[\"default\"].iterator(other.ops);\n    var ops = [];\n    var firstOther = otherIter.peek();\n    if (firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null) {\n      var firstLeft = firstOther.retain;\n      while (thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft) {\n        firstLeft -= thisIter.peekLength();\n        ops.push(thisIter.next());\n      }\n      if (firstOther.retain - firstLeft > 0) {\n        otherIter.next(firstOther.retain - firstLeft);\n      }\n    }\n    var delta = new Delta(ops);\n    while (thisIter.hasNext() || otherIter.hasNext()) {\n      if (otherIter.peekType() === 'insert') {\n        delta.push(otherIter.next());\n      } else if (thisIter.peekType() === 'delete') {\n        delta.push(thisIter.next());\n      } else {\n        var length_1 = Math.min(thisIter.peekLength(), otherIter.peekLength());\n        var thisOp = thisIter.next(length_1);\n        var otherOp = otherIter.next(length_1);\n        if (typeof otherOp.retain === 'number') {\n          var newOp = {};\n          if (typeof thisOp.retain === 'number') {\n            newOp.retain = length_1;\n          } else {\n            newOp.insert = thisOp.insert;\n          }\n          // Preserve null when composing with a retain, otherwise remove it for inserts\n          var attributes = AttributeMap_1[\"default\"].compose(thisOp.attributes, otherOp.attributes, typeof thisOp.retain === 'number');\n          if (attributes) {\n            newOp.attributes = attributes;\n          }\n          delta.push(newOp);\n          // Optimization if rest of other is just retain\n          if (!otherIter.hasNext() && lodash_isequal_1[\"default\"](delta.ops[delta.ops.length - 1], newOp)) {\n            var rest = new Delta(thisIter.rest());\n            return delta.concat(rest).chop();\n          }\n          // Other op should be delete, we could be an insert or retain\n          // Insert + delete cancels out\n        } else if (typeof otherOp[\"delete\"] === 'number' && typeof thisOp.retain === 'number') {\n          delta.push(otherOp);\n        }\n      }\n    }\n    return delta.chop();\n  };\n  Delta.prototype.concat = function (other) {\n    var delta = new Delta(this.ops.slice());\n    if (other.ops.length > 0) {\n      delta.push(other.ops[0]);\n      delta.ops = delta.ops.concat(other.ops.slice(1));\n    }\n    return delta;\n  };\n  Delta.prototype.diff = function (other, cursor) {\n    if (this.ops === other.ops) {\n      return new Delta();\n    }\n    var strings = [this, other].map(function (delta) {\n      return delta.map(function (op) {\n        if (op.insert != null) {\n          return typeof op.insert === 'string' ? op.insert : NULL_CHARACTER;\n        }\n        var prep = delta === other ? 'on' : 'with';\n        throw new Error('diff() called ' + prep + ' non-document');\n      }).join('');\n    });\n    var retDelta = new Delta();\n    var diffResult = fast_diff_1[\"default\"](strings[0], strings[1], cursor);\n    var thisIter = Op_1[\"default\"].iterator(this.ops);\n    var otherIter = Op_1[\"default\"].iterator(other.ops);\n    diffResult.forEach(function (component) {\n      var length = component[1].length;\n      while (length > 0) {\n        var opLength = 0;\n        switch (component[0]) {\n          case fast_diff_1[\"default\"].INSERT:\n            opLength = Math.min(otherIter.peekLength(), length);\n            retDelta.push(otherIter.next(opLength));\n            break;\n          case fast_diff_1[\"default\"].DELETE:\n            opLength = Math.min(length, thisIter.peekLength());\n            thisIter.next(opLength);\n            retDelta[\"delete\"](opLength);\n            break;\n          case fast_diff_1[\"default\"].EQUAL:\n            opLength = Math.min(thisIter.peekLength(), otherIter.peekLength(), length);\n            var thisOp = thisIter.next(opLength);\n            var otherOp = otherIter.next(opLength);\n            if (lodash_isequal_1[\"default\"](thisOp.insert, otherOp.insert)) {\n              retDelta.retain(opLength, AttributeMap_1[\"default\"].diff(thisOp.attributes, otherOp.attributes));\n            } else {\n              retDelta.push(otherOp)[\"delete\"](opLength);\n            }\n            break;\n        }\n        length -= opLength;\n      }\n    });\n    return retDelta.chop();\n  };\n  Delta.prototype.eachLine = function (predicate, newline) {\n    if (newline === void 0) {\n      newline = '\\n';\n    }\n    var iter = Op_1[\"default\"].iterator(this.ops);\n    var line = new Delta();\n    var i = 0;\n    while (iter.hasNext()) {\n      if (iter.peekType() !== 'insert') {\n        return;\n      }\n      var thisOp = iter.peek();\n      var start = Op_1[\"default\"].length(thisOp) - iter.peekLength();\n      var index = typeof thisOp.insert === 'string' ? thisOp.insert.indexOf(newline, start) - start : -1;\n      if (index < 0) {\n        line.push(iter.next());\n      } else if (index > 0) {\n        line.push(iter.next(index));\n      } else {\n        if (predicate(line, iter.next(1).attributes || {}, i) === false) {\n          return;\n        }\n        i += 1;\n        line = new Delta();\n      }\n    }\n    if (line.length() > 0) {\n      predicate(line, {}, i);\n    }\n  };\n  Delta.prototype.invert = function (base) {\n    var inverted = new Delta();\n    this.reduce(function (baseIndex, op) {\n      if (op.insert) {\n        inverted[\"delete\"](Op_1[\"default\"].length(op));\n      } else if (op.retain && op.attributes == null) {\n        inverted.retain(op.retain);\n        return baseIndex + op.retain;\n      } else if (op[\"delete\"] || op.retain && op.attributes) {\n        var length_2 = op[\"delete\"] || op.retain;\n        var slice = base.slice(baseIndex, baseIndex + length_2);\n        slice.forEach(function (baseOp) {\n          if (op[\"delete\"]) {\n            inverted.push(baseOp);\n          } else if (op.retain && op.attributes) {\n            inverted.retain(Op_1[\"default\"].length(baseOp), AttributeMap_1[\"default\"].invert(op.attributes, baseOp.attributes));\n          }\n        });\n        return baseIndex + length_2;\n      }\n      return baseIndex;\n    }, 0);\n    return inverted.chop();\n  };\n  Delta.prototype.transform = function (arg, priority) {\n    if (priority === void 0) {\n      priority = false;\n    }\n    priority = !!priority;\n    if (typeof arg === 'number') {\n      return this.transformPosition(arg, priority);\n    }\n    var other = arg;\n    var thisIter = Op_1[\"default\"].iterator(this.ops);\n    var otherIter = Op_1[\"default\"].iterator(other.ops);\n    var delta = new Delta();\n    while (thisIter.hasNext() || otherIter.hasNext()) {\n      if (thisIter.peekType() === 'insert' && (priority || otherIter.peekType() !== 'insert')) {\n        delta.retain(Op_1[\"default\"].length(thisIter.next()));\n      } else if (otherIter.peekType() === 'insert') {\n        delta.push(otherIter.next());\n      } else {\n        var length_3 = Math.min(thisIter.peekLength(), otherIter.peekLength());\n        var thisOp = thisIter.next(length_3);\n        var otherOp = otherIter.next(length_3);\n        if (thisOp[\"delete\"]) {\n          // Our delete either makes their delete redundant or removes their retain\n          continue;\n        } else if (otherOp[\"delete\"]) {\n          delta.push(otherOp);\n        } else {\n          // We retain either their retain or insert\n          delta.retain(length_3, AttributeMap_1[\"default\"].transform(thisOp.attributes, otherOp.attributes, priority));\n        }\n      }\n    }\n    return delta.chop();\n  };\n  Delta.prototype.transformPosition = function (index, priority) {\n    if (priority === void 0) {\n      priority = false;\n    }\n    priority = !!priority;\n    var thisIter = Op_1[\"default\"].iterator(this.ops);\n    var offset = 0;\n    while (thisIter.hasNext() && offset <= index) {\n      var length_4 = thisIter.peekLength();\n      var nextType = thisIter.peekType();\n      thisIter.next();\n      if (nextType === 'delete') {\n        index -= Math.min(length_4, index - offset);\n        continue;\n      } else if (nextType === 'insert' && (offset < index || !priority)) {\n        index += length_4;\n      }\n      offset += length_4;\n    }\n    return index;\n  };\n  Delta.Op = Op_1[\"default\"];\n  Delta.AttributeMap = AttributeMap_1[\"default\"];\n  return Delta;\n}();\nmodule.exports = Delta;","map":{"version":3,"names":["fast_diff_1","__importDefault","require","lodash_clonedeep_1","lodash_isequal_1","AttributeMap_1","Op_1","NULL_CHARACTER","String","fromCharCode","Delta","ops","Array","isArray","prototype","insert","arg","attributes","newOp","length","_typeof","Object","keys","push","retain","index","lastOp","unshift","splice","chop","pop","filter","predicate","forEach","map","partition","passed","failed","op","target","reduce","initialValue","changeLength","elem","slice","start","end","Infinity","iter","iterator","hasNext","nextOp","next","compose","other","thisIter","otherIter","firstOther","peek","firstLeft","peekType","peekLength","delta","length_1","Math","min","thisOp","otherOp","rest","concat","diff","cursor","strings","prep","Error","join","retDelta","diffResult","component","opLength","INSERT","DELETE","EQUAL","eachLine","newline","line","i","indexOf","invert","base","inverted","baseIndex","length_2","baseOp","transform","priority","transformPosition","length_3","offset","length_4","nextType","Op","AttributeMap","module","exports"],"sources":["../src/Delta.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}