{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.array.concat.js\");\nrequire(\"core-js/modules/es.array.every.js\");\nrequire(\"core-js/modules/es.array.find-index.js\");\nrequire(\"core-js/modules/es.iterator.constructor.js\");\nrequire(\"core-js/modules/es.iterator.every.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar index$2 = require('../../scrollbar/index.js');\nvar mentionDropdown = require('./mention-dropdown.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar index$1 = require('../../../hooks/use-locale/index.js');\nvar scroll = require('../../../utils/dom/scroll.js');\nvar __default__ = vue.defineComponent({\n  name: \"ElMentionDropdown\"\n});\nvar _sfc_main = /* @__PURE__ */vue.defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: mentionDropdown.mentionDropdownProps,\n  emits: mentionDropdown.mentionDropdownEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n      emit = _ref.emit;\n    var props = __props;\n    var ns = index.useNamespace(\"mention\");\n    var _index$1$useLocale = index$1.useLocale(),\n      t = _index$1$useLocale.t;\n    var hoveringIndex = vue.ref(-1);\n    var scrollbarRef = vue.ref();\n    var optionRefs = vue.ref();\n    var dropdownRef = vue.ref();\n    var optionkls = function optionkls(item, index) {\n      return [ns.be(\"dropdown\", \"item\"), ns.is(\"hovering\", hoveringIndex.value === index), ns.is(\"disabled\", item.disabled || props.disabled)];\n    };\n    var handleSelect = function handleSelect(item) {\n      if (item.disabled || props.disabled) return;\n      emit(\"select\", item);\n    };\n    var handleMouseEnter = function handleMouseEnter(index) {\n      hoveringIndex.value = index;\n    };\n    var filteredAllDisabled = vue.computed(function () {\n      return props.disabled || props.options.every(function (item) {\n        return item.disabled;\n      });\n    });\n    var hoverOption = vue.computed(function () {\n      return props.options[hoveringIndex.value];\n    });\n    var selectHoverOption = function selectHoverOption() {\n      if (!hoverOption.value) return;\n      emit(\"select\", hoverOption.value);\n    };\n    var _navigateOptions = function navigateOptions(direction) {\n      var options = props.options;\n      if (options.length === 0 || filteredAllDisabled.value) return;\n      if (direction === \"next\") {\n        hoveringIndex.value++;\n        if (hoveringIndex.value === options.length) {\n          hoveringIndex.value = 0;\n        }\n      } else if (direction === \"prev\") {\n        hoveringIndex.value--;\n        if (hoveringIndex.value < 0) {\n          hoveringIndex.value = options.length - 1;\n        }\n      }\n      var option = options[hoveringIndex.value];\n      if (option.disabled) {\n        _navigateOptions(direction);\n        return;\n      }\n      vue.nextTick(function () {\n        return scrollToOption(option);\n      });\n    };\n    var scrollToOption = function scrollToOption(option) {\n      var _a, _b, _c, _d;\n      var options = props.options;\n      var index = options.findIndex(function (item) {\n        return item.value === option.value;\n      });\n      var target = (_a = optionRefs.value) == null ? void 0 : _a[index];\n      if (target) {\n        var menu = (_c = (_b = dropdownRef.value) == null ? void 0 : _b.querySelector) == null ? void 0 : _c.call(_b, \".\".concat(ns.be(\"dropdown\", \"wrap\")));\n        if (menu) {\n          scroll.scrollIntoView(menu, target);\n        }\n      }\n      (_d = scrollbarRef.value) == null ? void 0 : _d.handleScroll();\n    };\n    var resetHoveringIndex = function resetHoveringIndex() {\n      if (filteredAllDisabled.value || props.options.length === 0) {\n        hoveringIndex.value = -1;\n      } else {\n        hoveringIndex.value = 0;\n      }\n    };\n    vue.watch(function () {\n      return props.options;\n    }, resetHoveringIndex, {\n      immediate: true\n    });\n    expose({\n      hoveringIndex: hoveringIndex,\n      navigateOptions: _navigateOptions,\n      selectHoverOption: selectHoverOption,\n      hoverOption: hoverOption\n    });\n    return function (_ctx, _cache) {\n      return vue.openBlock(), vue.createElementBlock(\"div\", {\n        ref_key: \"dropdownRef\",\n        ref: dropdownRef,\n        \"class\": vue.normalizeClass(vue.unref(ns).b(\"dropdown\"))\n      }, [_ctx.$slots.header ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n        key: 0,\n        \"class\": vue.normalizeClass(vue.unref(ns).be(\"dropdown\", \"header\"))\n      }, [vue.renderSlot(_ctx.$slots, \"header\")], 2)) : vue.createCommentVNode(\"v-if\", true), vue.withDirectives(vue.createVNode(vue.unref(index$2.ElScrollbar), {\n        id: _ctx.contentId,\n        ref_key: \"scrollbarRef\",\n        ref: scrollbarRef,\n        tag: \"ul\",\n        \"wrap-class\": vue.unref(ns).be(\"dropdown\", \"wrap\"),\n        \"view-class\": vue.unref(ns).be(\"dropdown\", \"list\"),\n        role: \"listbox\",\n        \"aria-label\": _ctx.ariaLabel,\n        \"aria-orientation\": \"vertical\"\n      }, {\n        \"default\": vue.withCtx(function () {\n          return [(vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(_ctx.options, function (item, index) {\n            return vue.openBlock(), vue.createElementBlock(\"li\", {\n              id: \"\".concat(_ctx.contentId, \"-\").concat(index),\n              ref_for: true,\n              ref_key: \"optionRefs\",\n              ref: optionRefs,\n              key: index,\n              \"class\": vue.normalizeClass(optionkls(item, index)),\n              role: \"option\",\n              \"aria-disabled\": item.disabled || _ctx.disabled || void 0,\n              \"aria-selected\": hoveringIndex.value === index,\n              onMousemove: function onMousemove($event) {\n                return handleMouseEnter(index);\n              },\n              onClick: vue.withModifiers(function ($event) {\n                return handleSelect(item);\n              }, [\"stop\"])\n            }, [vue.renderSlot(_ctx.$slots, \"label\", {\n              item: item,\n              index: index\n            }, function () {\n              var _a;\n              return [vue.createElementVNode(\"span\", null, vue.toDisplayString((_a = item.label) != null ? _a : item.value), 1)];\n            })], 42, [\"id\", \"aria-disabled\", \"aria-selected\", \"onMousemove\", \"onClick\"]);\n          }), 128))];\n        }),\n        _: 3\n      }, 8, [\"id\", \"wrap-class\", \"view-class\", \"aria-label\"]), [[vue.vShow, _ctx.options.length > 0 && !_ctx.loading]]), _ctx.loading ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n        key: 1,\n        \"class\": vue.normalizeClass(vue.unref(ns).be(\"dropdown\", \"loading\"))\n      }, [vue.renderSlot(_ctx.$slots, \"loading\", {}, function () {\n        return [vue.createTextVNode(vue.toDisplayString(vue.unref(t)(\"el.mention.loading\")), 1)];\n      })], 2)) : vue.createCommentVNode(\"v-if\", true), _ctx.$slots.footer ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n        key: 2,\n        \"class\": vue.normalizeClass(vue.unref(ns).be(\"dropdown\", \"footer\"))\n      }, [vue.renderSlot(_ctx.$slots, \"footer\")], 2)) : vue.createCommentVNode(\"v-if\", true)], 2);\n    };\n  }\n}));\nvar ElMentionDropdown = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"mention-dropdown.vue\"]]);\nexports[\"default\"] = ElMentionDropdown;","map":{"version":3,"names":["name","ns","index","useNamespace","_index$1$useLocale","index$1","useLocale","t","hoveringIndex","vue","ref","scrollbarRef","optionRefs","dropdownRef","optionkls","item","be","is","value","disabled","props","handleSelect","emit","handleMouseEnter","filteredAllDisabled","computed","options","every","hoverOption","selectHoverOption","navigateOptions","direction","length","option","nextTick","scrollToOption","_a","_b","_c","_d","findIndex","target","menu","querySelector","call","concat","scroll","scrollIntoView","handleScroll","resetHoveringIndex","watch","immediate","expose"],"sources":["../../../../../../packages/components/mention/src/mention-dropdown.vue"],"sourcesContent":["<template>\n  <div ref=\"dropdownRef\" :class=\"ns.b('dropdown')\">\n    <div v-if=\"$slots.header\" :class=\"ns.be('dropdown', 'header')\">\n      <slot name=\"header\" />\n    </div>\n    <el-scrollbar\n      v-show=\"options.length > 0 && !loading\"\n      :id=\"contentId\"\n      ref=\"scrollbarRef\"\n      tag=\"ul\"\n      :wrap-class=\"ns.be('dropdown', 'wrap')\"\n      :view-class=\"ns.be('dropdown', 'list')\"\n      role=\"listbox\"\n      :aria-label=\"ariaLabel\"\n      aria-orientation=\"vertical\"\n    >\n      <li\n        v-for=\"(item, index) in options\"\n        :id=\"`${contentId}-${index}`\"\n        ref=\"optionRefs\"\n        :key=\"index\"\n        :class=\"optionkls(item, index)\"\n        role=\"option\"\n        :aria-disabled=\"item.disabled || disabled || undefined\"\n        :aria-selected=\"hoveringIndex === index\"\n        @mousemove=\"handleMouseEnter(index)\"\n        @click.stop=\"handleSelect(item)\"\n      >\n        <slot name=\"label\" :item=\"item\" :index=\"index\">\n          <span>{{ item.label ?? item.value }}</span>\n        </slot>\n      </li>\n    </el-scrollbar>\n    <div v-if=\"loading\" :class=\"ns.be('dropdown', 'loading')\">\n      <slot name=\"loading\"> {{ t('el.mention.loading') }} </slot>\n    </div>\n    <div v-if=\"$slots.footer\" :class=\"ns.be('dropdown', 'footer')\">\n      <slot name=\"footer\" />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, nextTick, ref, watch } from 'vue'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { scrollIntoView } from '@element-plus/utils'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport { mentionDropdownEmits, mentionDropdownProps } from './mention-dropdown'\n\nimport type { MentionOption } from './types'\n\ndefineOptions({\n  name: 'ElMentionDropdown',\n})\n\nconst props = defineProps(mentionDropdownProps)\nconst emit = defineEmits(mentionDropdownEmits)\n\nconst ns = useNamespace('mention')\nconst { t } = useLocale()\nconst hoveringIndex = ref(-1)\n\nconst scrollbarRef = ref<InstanceType<typeof ElScrollbar>>()\nconst optionRefs = ref<HTMLElement[]>()\nconst dropdownRef = ref<HTMLElement>()\n\nconst optionkls = (item: MentionOption, index: number) => [\n  ns.be('dropdown', 'item'),\n  ns.is('hovering', hoveringIndex.value === index),\n  ns.is('disabled', item.disabled || props.disabled),\n]\n\nconst handleSelect = (item: MentionOption) => {\n  if (item.disabled || props.disabled) return\n  emit('select', item)\n}\n\nconst handleMouseEnter = (index: number) => {\n  hoveringIndex.value = index\n}\n\nconst filteredAllDisabled = computed(\n  () => props.disabled || props.options.every((item) => item.disabled)\n)\n\nconst hoverOption = computed(() => props.options[hoveringIndex.value])\n\nconst selectHoverOption = () => {\n  if (!hoverOption.value) return\n  emit('select', hoverOption.value)\n}\n\nconst navigateOptions = (direction: 'next' | 'prev') => {\n  const { options } = props\n  if (options.length === 0 || filteredAllDisabled.value) return\n\n  if (direction === 'next') {\n    hoveringIndex.value++\n    if (hoveringIndex.value === options.length) {\n      hoveringIndex.value = 0\n    }\n  } else if (direction === 'prev') {\n    hoveringIndex.value--\n    if (hoveringIndex.value < 0) {\n      hoveringIndex.value = options.length - 1\n    }\n  }\n  const option = options[hoveringIndex.value]\n  if (option.disabled) {\n    navigateOptions(direction)\n    return\n  }\n  nextTick(() => scrollToOption(option))\n}\n\nconst scrollToOption = (option: MentionOption) => {\n  const { options } = props\n\n  const index = options.findIndex((item) => item.value === option.value)\n  const target = optionRefs.value?.[index]\n\n  if (target) {\n    const menu = dropdownRef.value?.querySelector?.(\n      `.${ns.be('dropdown', 'wrap')}`\n    )\n    if (menu) {\n      scrollIntoView(menu as HTMLElement, target)\n    }\n  }\n  scrollbarRef.value?.handleScroll()\n}\n\nconst resetHoveringIndex = () => {\n  if (filteredAllDisabled.value || props.options.length === 0) {\n    hoveringIndex.value = -1\n  } else {\n    hoveringIndex.value = 0\n  }\n}\n\nwatch(() => props.options, resetHoveringIndex, {\n  immediate: true,\n})\n\ndefineExpose({\n  hoveringIndex,\n  navigateOptions,\n  selectHoverOption,\n  hoverOption,\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}