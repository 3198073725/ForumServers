{"ast":null,"code":"import _regeneratorRuntime from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport { ref, computed, watch, nextTick, onMounted, onUnmounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nimport { Close, Minus, ArrowUp, Send, Loading } from '@element-plus/icons-vue';\nimport wsManager from '@/utils/websocket';\nimport { sendMessage as sendMessageApi } from '@/api/messages';\nexport default {\n  name: 'ChatWindow',\n  props: {\n    userId: {\n      type: [Number, String],\n      required: true\n    }\n  },\n  emits: ['close'],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var store = useStore();\n    var messageContainer = ref(null);\n    var messageText = ref('');\n    var minimized = ref(false);\n    var loading = ref(true);\n    var loadingMore = ref(false);\n\n    // 计算属性\n    var currentUser = computed(function () {\n      return store.state.user;\n    });\n    var currentUserId = computed(function () {\n      return store.getters.userId;\n    });\n    var messages = computed(function () {\n      return store.getters['chat/messagesByUserId'](props.userId) || [];\n    });\n    var hasMoreMessages = computed(function () {\n      return store.getters['chat/hasMoreMessages'](props.userId);\n    });\n    var chatUser = computed(function () {\n      // 这里应该从用户缓存中获取用户信息\n      // 简单实现，实际应用中应该有更完善的用户信息获取机制\n      return {\n        id: props.userId,\n        username: \"\\u7528\\u6237\".concat(props.userId),\n        nickname: null,\n        avatar_url: null\n      };\n    });\n\n    // 按时间排序的消息列表\n    var sortedMessages = computed(function () {\n      return _toConsumableArray(messages.value).sort(function (a, b) {\n        return new Date(a.timestamp) - new Date(b.timestamp);\n      });\n    });\n\n    // 监听消息列表变化，自动滚动到底部\n    watch(sortedMessages, function () {\n      nextTick(function () {\n        scrollToBottom();\n      });\n    });\n\n    // 初始化\n    onMounted(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            // 连接WebSocket\n            wsManager.connectChat(props.userId);\n\n            // 加载消息历史\n            _context.next = 3;\n            return loadMessages();\n          case 3:\n            // 标记消息为已读\n            store.dispatch('chat/markMessagesAsRead', props.userId);\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    })));\n\n    // 组件销毁时断开WebSocket连接\n    onUnmounted(function () {\n      wsManager.disconnectChat(props.userId);\n    });\n\n    // 加载消息\n    var loadMessages = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              loading.value = true;\n              _context2.prev = 1;\n              _context2.next = 4;\n              return store.dispatch('chat/fetchMessagesWithUser', {\n                userId: props.userId,\n                page: 1\n              });\n            case 4:\n              // 滚动到底部\n              nextTick(function () {\n                scrollToBottom();\n              });\n              _context2.next = 11;\n              break;\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error('加载消息失败:', _context2.t0);\n              ElMessage.error('加载消息失败');\n            case 11:\n              _context2.prev = 11;\n              loading.value = false;\n              return _context2.finish(11);\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[1, 7, 11, 14]]);\n      }));\n      return function loadMessages() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    // 加载更多消息\n    var loadMoreMessages = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(loadingMore.value || !hasMoreMessages.value)) {\n                _context3.next = 2;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 2:\n              loadingMore.value = true;\n              _context3.prev = 3;\n              _context3.next = 6;\n              return store.dispatch('chat/loadMoreMessages', props.userId);\n            case 6:\n              _context3.next = 12;\n              break;\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](3);\n              console.error('加载更多消息失败:', _context3.t0);\n              ElMessage.error('加载更多消息失败');\n            case 12:\n              _context3.prev = 12;\n              loadingMore.value = false;\n              return _context3.finish(12);\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[3, 8, 12, 15]]);\n      }));\n      return function loadMoreMessages() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    // 发送消息\n    var sendMessage = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var content;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              content = messageText.value.trim();\n              if (content) {\n                _context4.next = 3;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 3:\n              _context4.prev = 3;\n              // 通过WebSocket发送消息\n              wsManager.sendChatMessage(props.userId, content);\n\n              // 备用方案：通过API发送消息\n              _context4.next = 7;\n              return sendMessageApi(props.userId, content);\n            case 7:\n              // 清空输入框\n              messageText.value = '';\n              _context4.next = 14;\n              break;\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](3);\n              console.error('发送消息失败:', _context4.t0);\n              ElMessage.error('发送消息失败');\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[3, 10]]);\n      }));\n      return function sendMessage() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    // 滚动到底部\n    var scrollToBottom = function scrollToBottom() {\n      if (messageContainer.value) {\n        messageContainer.value.scrollTop = messageContainer.value.scrollHeight;\n      }\n    };\n\n    // 最小化聊天窗口\n    var minimize = function minimize() {\n      minimized.value = true;\n    };\n\n    // 最大化聊天窗口\n    var maximize = function maximize() {\n      minimized.value = false;\n      // 恢复窗口后滚动到底部\n      nextTick(function () {\n        scrollToBottom();\n      });\n    };\n\n    // 切换最小化/最大化\n    var toggleMinimize = function toggleMinimize() {\n      minimized.value = !minimized.value;\n      if (!minimized.value) {\n        nextTick(function () {\n          scrollToBottom();\n        });\n      }\n    };\n\n    // 关闭聊天窗口\n    var closeChat = function closeChat() {\n      emit('close', props.userId);\n    };\n\n    // 格式化时间\n    var formatTime = function formatTime(timestamp) {\n      var date = new Date(timestamp);\n      var now = new Date();\n      var isToday = date.toDateString() === now.toDateString();\n      var isYesterday = new Date(now - 86400000).toDateString() === date.toDateString();\n\n      // 格式化时间部分\n      var hours = date.getHours().toString().padStart(2, '0');\n      var minutes = date.getMinutes().toString().padStart(2, '0');\n      var timeStr = \"\".concat(hours, \":\").concat(minutes);\n\n      // 今天的消息只显示时间\n      if (isToday) {\n        return timeStr;\n      }\n\n      // 昨天的消息显示\"昨天 HH:MM\"\n      if (isYesterday) {\n        return \"\\u6628\\u5929 \".concat(timeStr);\n      }\n\n      // 今年的消息显示\"MM-DD HH:MM\"\n      if (date.getFullYear() === now.getFullYear()) {\n        var month = (date.getMonth() + 1).toString().padStart(2, '0');\n        var day = date.getDate().toString().padStart(2, '0');\n        return \"\".concat(month, \"-\").concat(day, \" \").concat(timeStr);\n      }\n\n      // 其他情况显示完整日期\"YYYY-MM-DD HH:MM\"\n      return \"\".concat(date.getFullYear(), \"-\").concat((date.getMonth() + 1).toString().padStart(2, '0'), \"-\").concat(date.getDate().toString().padStart(2, '0'), \" \").concat(timeStr);\n    };\n    return {\n      messageContainer: messageContainer,\n      messageText: messageText,\n      minimized: minimized,\n      loading: loading,\n      loadingMore: loadingMore,\n      currentUser: currentUser,\n      currentUserId: currentUserId,\n      messages: messages,\n      sortedMessages: sortedMessages,\n      hasMoreMessages: hasMoreMessages,\n      chatUser: chatUser,\n      loadMessages: loadMessages,\n      loadMoreMessages: loadMoreMessages,\n      sendMessage: sendMessage,\n      minimize: minimize,\n      maximize: maximize,\n      toggleMinimize: toggleMinimize,\n      closeChat: closeChat,\n      formatTime: formatTime,\n      // 图标\n      Close: Close,\n      Minus: Minus,\n      ArrowUp: ArrowUp,\n      Send: Send,\n      Loading: Loading\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","watch","nextTick","onMounted","onUnmounted","useStore","ElMessage","Close","Minus","ArrowUp","Send","Loading","wsManager","sendMessage","sendMessageApi","name","props","userId","type","Number","String","required","emits","setup","_ref","emit","store","messageContainer","messageText","minimized","loading","loadingMore","currentUser","state","user","currentUserId","getters","messages","hasMoreMessages","chatUser","id","username","concat","nickname","avatar_url","sortedMessages","_toConsumableArray","value","sort","a","b","Date","timestamp","scrollToBottom","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","connectChat","loadMessages","dispatch","stop","disconnectChat","_ref3","_callee2","_callee2$","_context2","page","t0","console","error","finish","apply","arguments","loadMoreMessages","_ref4","_callee3","_callee3$","_context3","abrupt","_ref5","_callee4","content","_callee4$","_context4","trim","sendChatMessage","scrollTop","scrollHeight","minimize","maximize","toggleMinimize","closeChat","formatTime","date","now","isToday","toDateString","isYesterday","hours","getHours","toString","padStart","minutes","getMinutes","timeStr","getFullYear","month","getMonth","day","getDate"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\components\\ChatWindow.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-window\" :class=\"{ 'is-minimized': minimized }\">\r\n    <!-- 聊天窗口标题栏 -->\r\n    <div class=\"chat-header\" @click=\"toggleMinimize\">\r\n      <div class=\"user-info\">\r\n        <el-avatar :size=\"24\" :src=\"chatUser.avatar_url\" />\r\n        <span class=\"username\">{{ chatUser.nickname || chatUser.username }}</span>\r\n      </div>\r\n      <div class=\"header-actions\">\r\n        <el-button v-if=\"!minimized\" class=\"action-button\" :icon=\"Minus\" circle @click.stop=\"minimize\" />\r\n        <el-button v-else class=\"action-button\" :icon=\"ArrowUp\" circle @click.stop=\"maximize\" />\r\n        <el-button class=\"action-button\" :icon=\"Close\" circle @click.stop=\"closeChat\" />\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 聊天消息区域 -->\r\n    <div v-if=\"!minimized\" class=\"chat-body\">\r\n      <div class=\"message-container\" ref=\"messageContainer\">\r\n        <div v-if=\"loading\" class=\"loading-messages\">\r\n          <el-icon class=\"is-loading\"><Loading /></el-icon>\r\n          <span>加载中...</span>\r\n        </div>\r\n        \r\n        <div v-else-if=\"messages.length === 0\" class=\"no-messages\">\r\n          <p>暂无消息记录，发送一条消息开始聊天吧！</p>\r\n        </div>\r\n        \r\n        <template v-else>\r\n          <div v-if=\"hasMoreMessages\" class=\"load-more\">\r\n            <el-button type=\"text\" @click=\"loadMoreMessages\" :loading=\"loadingMore\">\r\n              加载更多消息\r\n            </el-button>\r\n          </div>\r\n          \r\n          <div \r\n            v-for=\"message in sortedMessages\" \r\n            :key=\"message.id\" \r\n            class=\"message\" \r\n            :class=\"{ 'outgoing': message.senderId === currentUserId }\"\r\n          >\r\n            <el-avatar \r\n              v-if=\"message.senderId !== currentUserId\" \r\n              :size=\"32\" \r\n              :src=\"chatUser.avatar_url\" \r\n            />\r\n            \r\n            <div class=\"message-content\">\r\n              <div class=\"message-text\">{{ message.content }}</div>\r\n              <div class=\"message-time\">{{ formatTime(message.timestamp) }}</div>\r\n            </div>\r\n            \r\n            <el-avatar \r\n              v-if=\"message.senderId === currentUserId\" \r\n              :size=\"32\" \r\n              :src=\"currentUser.avatar_url\" \r\n            />\r\n          </div>\r\n        </template>\r\n      </div>\r\n      \r\n      <!-- 消息输入区域 -->\r\n      <div class=\"message-input\">\r\n        <el-input\r\n          v-model=\"messageText\"\r\n          type=\"textarea\"\r\n          :rows=\"2\"\r\n          placeholder=\"输入消息...\"\r\n          resize=\"none\"\r\n          @keydown.enter.prevent=\"sendMessage\"\r\n        />\r\n        <el-button type=\"primary\" :icon=\"Send\" @click=\"sendMessage\" :disabled=\"!messageText.trim()\">\r\n          发送\r\n        </el-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, watch, nextTick, onMounted, onUnmounted } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { ElMessage } from 'element-plus';\r\nimport { Close, Minus, ArrowUp, Send, Loading } from '@element-plus/icons-vue';\r\nimport wsManager from '@/utils/websocket';\r\nimport { sendMessage as sendMessageApi } from '@/api/messages';\r\n\r\nexport default {\r\n  name: 'ChatWindow',\r\n  props: {\r\n    userId: {\r\n      type: [Number, String],\r\n      required: true\r\n    }\r\n  },\r\n  emits: ['close'],\r\n  setup(props, { emit }) {\r\n    const store = useStore();\r\n    const messageContainer = ref(null);\r\n    const messageText = ref('');\r\n    const minimized = ref(false);\r\n    const loading = ref(true);\r\n    const loadingMore = ref(false);\r\n    \r\n    // 计算属性\r\n    const currentUser = computed(() => store.state.user);\r\n    const currentUserId = computed(() => store.getters.userId);\r\n    const messages = computed(() => store.getters['chat/messagesByUserId'](props.userId) || []);\r\n    const hasMoreMessages = computed(() => store.getters['chat/hasMoreMessages'](props.userId));\r\n    const chatUser = computed(() => {\r\n      // 这里应该从用户缓存中获取用户信息\r\n      // 简单实现，实际应用中应该有更完善的用户信息获取机制\r\n      return {\r\n        id: props.userId,\r\n        username: `用户${props.userId}`,\r\n        nickname: null,\r\n        avatar_url: null\r\n      };\r\n    });\r\n    \r\n    // 按时间排序的消息列表\r\n    const sortedMessages = computed(() => {\r\n      return [...messages.value].sort((a, b) => {\r\n        return new Date(a.timestamp) - new Date(b.timestamp);\r\n      });\r\n    });\r\n    \r\n    // 监听消息列表变化，自动滚动到底部\r\n    watch(sortedMessages, () => {\r\n      nextTick(() => {\r\n        scrollToBottom();\r\n      });\r\n    });\r\n    \r\n    // 初始化\r\n    onMounted(async () => {\r\n      // 连接WebSocket\r\n      wsManager.connectChat(props.userId);\r\n      \r\n      // 加载消息历史\r\n      await loadMessages();\r\n      \r\n      // 标记消息为已读\r\n      store.dispatch('chat/markMessagesAsRead', props.userId);\r\n    });\r\n    \r\n    // 组件销毁时断开WebSocket连接\r\n    onUnmounted(() => {\r\n      wsManager.disconnectChat(props.userId);\r\n    });\r\n    \r\n    // 加载消息\r\n    const loadMessages = async () => {\r\n      loading.value = true;\r\n      try {\r\n        await store.dispatch('chat/fetchMessagesWithUser', {\r\n          userId: props.userId,\r\n          page: 1\r\n        });\r\n        \r\n        // 滚动到底部\r\n        nextTick(() => {\r\n          scrollToBottom();\r\n        });\r\n      } catch (error) {\r\n        console.error('加载消息失败:', error);\r\n        ElMessage.error('加载消息失败');\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // 加载更多消息\r\n    const loadMoreMessages = async () => {\r\n      if (loadingMore.value || !hasMoreMessages.value) return;\r\n      \r\n      loadingMore.value = true;\r\n      try {\r\n        await store.dispatch('chat/loadMoreMessages', props.userId);\r\n      } catch (error) {\r\n        console.error('加载更多消息失败:', error);\r\n        ElMessage.error('加载更多消息失败');\r\n      } finally {\r\n        loadingMore.value = false;\r\n      }\r\n    };\r\n    \r\n    // 发送消息\r\n    const sendMessage = async () => {\r\n      const content = messageText.value.trim();\r\n      if (!content) return;\r\n      \r\n      try {\r\n        // 通过WebSocket发送消息\r\n        wsManager.sendChatMessage(props.userId, content);\r\n        \r\n        // 备用方案：通过API发送消息\r\n        await sendMessageApi(props.userId, content);\r\n        \r\n        // 清空输入框\r\n        messageText.value = '';\r\n      } catch (error) {\r\n        console.error('发送消息失败:', error);\r\n        ElMessage.error('发送消息失败');\r\n      }\r\n    };\r\n    \r\n    // 滚动到底部\r\n    const scrollToBottom = () => {\r\n      if (messageContainer.value) {\r\n        messageContainer.value.scrollTop = messageContainer.value.scrollHeight;\r\n      }\r\n    };\r\n    \r\n    // 最小化聊天窗口\r\n    const minimize = () => {\r\n      minimized.value = true;\r\n    };\r\n    \r\n    // 最大化聊天窗口\r\n    const maximize = () => {\r\n      minimized.value = false;\r\n      // 恢复窗口后滚动到底部\r\n      nextTick(() => {\r\n        scrollToBottom();\r\n      });\r\n    };\r\n    \r\n    // 切换最小化/最大化\r\n    const toggleMinimize = () => {\r\n      minimized.value = !minimized.value;\r\n      if (!minimized.value) {\r\n        nextTick(() => {\r\n          scrollToBottom();\r\n        });\r\n      }\r\n    };\r\n    \r\n    // 关闭聊天窗口\r\n    const closeChat = () => {\r\n      emit('close', props.userId);\r\n    };\r\n    \r\n    // 格式化时间\r\n    const formatTime = (timestamp) => {\r\n      const date = new Date(timestamp);\r\n      const now = new Date();\r\n      const isToday = date.toDateString() === now.toDateString();\r\n      const isYesterday = new Date(now - 86400000).toDateString() === date.toDateString();\r\n      \r\n      // 格式化时间部分\r\n      const hours = date.getHours().toString().padStart(2, '0');\r\n      const minutes = date.getMinutes().toString().padStart(2, '0');\r\n      const timeStr = `${hours}:${minutes}`;\r\n      \r\n      // 今天的消息只显示时间\r\n      if (isToday) {\r\n        return timeStr;\r\n      }\r\n      \r\n      // 昨天的消息显示\"昨天 HH:MM\"\r\n      if (isYesterday) {\r\n        return `昨天 ${timeStr}`;\r\n      }\r\n      \r\n      // 今年的消息显示\"MM-DD HH:MM\"\r\n      if (date.getFullYear() === now.getFullYear()) {\r\n        const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n        const day = date.getDate().toString().padStart(2, '0');\r\n        return `${month}-${day} ${timeStr}`;\r\n      }\r\n      \r\n      // 其他情况显示完整日期\"YYYY-MM-DD HH:MM\"\r\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${timeStr}`;\r\n    };\r\n    \r\n    return {\r\n      messageContainer,\r\n      messageText,\r\n      minimized,\r\n      loading,\r\n      loadingMore,\r\n      currentUser,\r\n      currentUserId,\r\n      messages,\r\n      sortedMessages,\r\n      hasMoreMessages,\r\n      chatUser,\r\n      loadMessages,\r\n      loadMoreMessages,\r\n      sendMessage,\r\n      minimize,\r\n      maximize,\r\n      toggleMinimize,\r\n      closeChat,\r\n      formatTime,\r\n      // 图标\r\n      Close,\r\n      Minus,\r\n      ArrowUp,\r\n      Send,\r\n      Loading\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chat-window {\r\n  width: 320px;\r\n  height: 400px;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: fixed;\r\n  bottom: 0;\r\n  right: 20px;\r\n  z-index: 1000;\r\n  transition: height 0.3s;\r\n}\r\n\r\n.chat-window.is-minimized {\r\n  height: 40px;\r\n}\r\n\r\n.chat-header {\r\n  height: 40px;\r\n  padding: 0 10px;\r\n  background-color: #409eff;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  cursor: pointer;\r\n  user-select: none;\r\n}\r\n\r\n.user-info {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.username {\r\n  margin-left: 8px;\r\n  font-weight: bold;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.header-actions {\r\n  display: flex;\r\n  gap: 5px;\r\n}\r\n\r\n.action-button {\r\n  padding: 2px;\r\n  color: white;\r\n  background: transparent;\r\n  border: none;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.chat-body {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n}\r\n\r\n.message-container {\r\n  flex: 1;\r\n  padding: 10px;\r\n  overflow-y: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.loading-messages {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  color: #909399;\r\n}\r\n\r\n.no-messages {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  color: #909399;\r\n  text-align: center;\r\n}\r\n\r\n.load-more {\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.message {\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n  align-items: flex-start;\r\n}\r\n\r\n.message.outgoing {\r\n  flex-direction: row-reverse;\r\n}\r\n\r\n.message-content {\r\n  max-width: 70%;\r\n  margin: 0 8px;\r\n}\r\n\r\n.message-text {\r\n  padding: 8px 12px;\r\n  border-radius: 4px;\r\n  background-color: #f4f4f5;\r\n  word-break: break-word;\r\n  line-height: 1.4;\r\n}\r\n\r\n.message.outgoing .message-text {\r\n  background-color: #ecf5ff;\r\n  color: #409eff;\r\n}\r\n\r\n.message-time {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  margin-top: 4px;\r\n  text-align: right;\r\n}\r\n\r\n.message.outgoing .message-time {\r\n  text-align: left;\r\n}\r\n\r\n.message-input {\r\n  padding: 10px;\r\n  border-top: 1px solid #ebeef5;\r\n  display: flex;\r\n  align-items: flex-end;\r\n}\r\n\r\n.message-input .el-input {\r\n  margin-right: 10px;\r\n}\r\n\r\n.message-input .el-button {\r\n  height: 40px;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}