{"ast":null,"code":"import _regeneratorRuntime from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport { getPostDetail, likePost, favoritePost, pinPost, featurePost, deletePost } from '@/api/post';\nimport { getPostComments, createComment, replyComment, updateComment, deleteComment } from '@/api/comment';\nimport { formatDate } from '@/utils/index';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'PostDetail',\n  data: function data() {\n    return {\n      loading: false,\n      commentsLoading: false,\n      post: {},\n      isLiked: false,\n      isFavorited: false,\n      comments: [],\n      commentsTotal: 0,\n      commentsQuery: {\n        page: 1,\n        limit: 10\n      },\n      commentContent: '',\n      replyingTo: null,\n      replyContent: '',\n      editCommentDialogVisible: false,\n      editCommentContent: '',\n      currentEditingComment: null\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters(['isLogin', 'isAdmin', 'userId'])), {}, {\n    canManagePost: function canManagePost() {\n      return this.isLogin && (this.isAdmin || this.post.user && this.post.user.id === this.userId);\n    }\n  }),\n  created: function created() {\n    var postId = this.$route.params.id;\n    if (postId) {\n      this.fetchPostDetail(postId);\n      this.fetchComments(postId);\n    } else {\n      this.$router.push({\n        name: 'PostList'\n      });\n    }\n  },\n  methods: {\n    formatDate: formatDate,\n    // 获取帖子详情\n    fetchPostDetail: function fetchPostDetail(id) {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.loading = true;\n              _context.prev = 1;\n              _context.next = 4;\n              return getPostDetail(id);\n            case 4:\n              response = _context.sent;\n              if (response.code === 0) {\n                _this.post = response.data;\n                // 检查是否已点赞和收藏\n                _this.checkLikeAndFavorite();\n              } else {\n                _this.$message.error(response.msg || '获取帖子详情失败');\n              }\n              _context.next = 12;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('获取帖子详情失败:', _context.t0);\n              _this.$message.error('获取帖子详情失败');\n            case 12:\n              _context.prev = 12;\n              _this.loading = false;\n              return _context.finish(12);\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 8, 12, 15]]);\n      }))();\n    },\n    // 检查是否已点赞和收藏\n    checkLikeAndFavorite: function checkLikeAndFavorite() {\n      // 这里需要调用后端API检查是否已点赞和收藏\n      // 由于我们没有实现这个API，这里先模拟一下\n      this.isLiked = false;\n      this.isFavorited = false;\n    },\n    // 获取评论列表\n    fetchComments: function fetchComments(postId) {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this2.commentsLoading = true;\n              _context2.prev = 1;\n              _context2.next = 4;\n              return getPostComments(postId);\n            case 4:\n              response = _context2.sent;\n              if (response.code === 0) {\n                _this2.comments = response.data.results || [];\n                _this2.commentsTotal = response.data.count || 0;\n              } else {\n                _this2.$message.error(response.msg || '获取评论列表失败');\n              }\n              _context2.next = 12;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error('获取评论列表失败:', _context2.t0);\n              _this2.$message.error('获取评论列表失败');\n            case 12:\n              _context2.prev = 12;\n              _this2.commentsLoading = false;\n              return _context2.finish(12);\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[1, 8, 12, 15]]);\n      }))();\n    },\n    // 评论分页变化\n    handleCommentsPageChange: function handleCommentsPageChange(page) {\n      this.commentsQuery.page = page;\n      this.fetchComments(this.post.id);\n    },\n    // 前往板块页面\n    goToBoard: function goToBoard() {\n      if (this.post.board) {\n        this.$router.push({\n          name: 'BoardDetail',\n          params: {\n            id: this.post.board.id\n          }\n        });\n      }\n    },\n    // 点赞帖子\n    handleLike: function handleLike() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (_this3.isLogin) {\n                _context3.next = 4;\n                break;\n              }\n              _this3.$message.warning('请先登录');\n              _this3.$router.push({\n                name: 'Login',\n                query: {\n                  redirect: _this3.$route.fullPath\n                }\n              });\n              return _context3.abrupt(\"return\");\n            case 4:\n              _context3.prev = 4;\n              _context3.next = 7;\n              return likePost(_this3.post.id);\n            case 7:\n              response = _context3.sent;\n              if (response.code === 0) {\n                _this3.isLiked = !_this3.isLiked;\n                // 更新点赞数\n                if (_this3.isLiked) {\n                  _this3.post.likes_count++;\n                } else {\n                  _this3.post.likes_count--;\n                }\n                _this3.$message.success(response.msg || (_this3.isLiked ? '点赞成功' : '取消点赞成功'));\n              } else {\n                _this3.$message.error(response.msg || '操作失败');\n              }\n              _context3.next = 15;\n              break;\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](4);\n              console.error('点赞操作失败:', _context3.t0);\n              _this3.$message.error('点赞操作失败');\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[4, 11]]);\n      }))();\n    },\n    // 收藏帖子\n    handleFavorite: function handleFavorite() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (_this4.isLogin) {\n                _context4.next = 4;\n                break;\n              }\n              _this4.$message.warning('请先登录');\n              _this4.$router.push({\n                name: 'Login',\n                query: {\n                  redirect: _this4.$route.fullPath\n                }\n              });\n              return _context4.abrupt(\"return\");\n            case 4:\n              _context4.prev = 4;\n              _context4.next = 7;\n              return favoritePost(_this4.post.id);\n            case 7:\n              response = _context4.sent;\n              if (response.code === 0) {\n                _this4.isFavorited = !_this4.isFavorited;\n                _this4.$message.success(response.msg || (_this4.isFavorited ? '收藏成功' : '取消收藏成功'));\n              } else {\n                _this4.$message.error(response.msg || '操作失败');\n              }\n              _context4.next = 15;\n              break;\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](4);\n              console.error('收藏操作失败:', _context4.t0);\n              _this4.$message.error('收藏操作失败');\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[4, 11]]);\n      }))();\n    },\n    // 帖子更多操作\n    handleCommand: function handleCommand(command) {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.t0 = command;\n              _context5.next = _context5.t0 === 'edit' ? 3 : _context5.t0 === 'delete' ? 5 : _context5.t0 === 'pin' ? 7 : _context5.t0 === 'feature' ? 9 : 11;\n              break;\n            case 3:\n              _this5.$router.push({\n                name: 'PostEdit',\n                params: {\n                  id: _this5.post.id\n                }\n              });\n              return _context5.abrupt(\"break\", 11);\n            case 5:\n              _this5.handleDeletePost();\n              return _context5.abrupt(\"break\", 11);\n            case 7:\n              _this5.handlePinPost();\n              return _context5.abrupt(\"break\", 11);\n            case 9:\n              _this5.handleFeaturePost();\n              return _context5.abrupt(\"break\", 11);\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }))();\n    },\n    // 删除帖子\n    handleDeletePost: function handleDeletePost() {\n      var _this6 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return _this6.$confirm('确定要删除这篇帖子吗？', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n              });\n            case 3:\n              _context6.next = 5;\n              return deletePost(_this6.post.id);\n            case 5:\n              response = _context6.sent;\n              if (response.code === 0) {\n                _this6.$message.success(response.msg || '删除成功');\n                // 返回帖子列表页\n                _this6.$router.push({\n                  name: 'PostList'\n                });\n              } else {\n                _this6.$message.error(response.msg || '删除失败');\n              }\n              _context6.next = 12;\n              break;\n            case 9:\n              _context6.prev = 9;\n              _context6.t0 = _context6[\"catch\"](0);\n              if (_context6.t0 !== 'cancel') {\n                console.error('删除帖子失败:', _context6.t0);\n                _this6.$message.error('删除帖子失败');\n              }\n            case 12:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, null, [[0, 9]]);\n      }))();\n    },\n    // 置顶/取消置顶帖子\n    handlePinPost: function handlePinPost() {\n      var _this7 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return pinPost(_this7.post.id);\n            case 3:\n              response = _context7.sent;\n              if (response.code === 0) {\n                _this7.post.is_pinned = !_this7.post.is_pinned;\n                _this7.$message.success(response.msg || (_this7.post.is_pinned ? '置顶成功' : '取消置顶成功'));\n              } else {\n                _this7.$message.error(response.msg || '操作失败');\n              }\n              _context7.next = 11;\n              break;\n            case 7:\n              _context7.prev = 7;\n              _context7.t0 = _context7[\"catch\"](0);\n              console.error('置顶操作失败:', _context7.t0);\n              _this7.$message.error('置顶操作失败');\n            case 11:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, null, [[0, 7]]);\n      }))();\n    },\n    // 加精/取消加精帖子\n    handleFeaturePost: function handleFeaturePost() {\n      var _this8 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return featurePost(_this8.post.id);\n            case 3:\n              response = _context8.sent;\n              if (response.code === 0) {\n                _this8.post.is_featured = !_this8.post.is_featured;\n                _this8.$message.success(response.msg || (_this8.post.is_featured ? '加精成功' : '取消加精成功'));\n              } else {\n                _this8.$message.error(response.msg || '操作失败');\n              }\n              _context8.next = 11;\n              break;\n            case 7:\n              _context8.prev = 7;\n              _context8.t0 = _context8[\"catch\"](0);\n              console.error('加精操作失败:', _context8.t0);\n              _this8.$message.error('加精操作失败');\n            case 11:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, null, [[0, 7]]);\n      }))();\n    },\n    // 提交评论\n    submitComment: function submitComment() {\n      var _this9 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              if (_this9.isLogin) {\n                _context9.next = 4;\n                break;\n              }\n              _this9.$message.warning('请先登录');\n              _this9.$router.push({\n                name: 'Login',\n                query: {\n                  redirect: _this9.$route.fullPath\n                }\n              });\n              return _context9.abrupt(\"return\");\n            case 4:\n              if (_this9.commentContent.trim()) {\n                _context9.next = 7;\n                break;\n              }\n              _this9.$message.warning('评论内容不能为空');\n              return _context9.abrupt(\"return\");\n            case 7:\n              _context9.prev = 7;\n              _context9.next = 10;\n              return createComment({\n                post: _this9.post.id,\n                content: _this9.commentContent\n              });\n            case 10:\n              response = _context9.sent;\n              if (response.code === 0) {\n                _this9.$message.success(response.msg || '评论发表成功');\n                _this9.commentContent = '';\n                // 刷新评论列表\n                _this9.fetchComments(_this9.post.id);\n                // 更新帖子评论数\n                _this9.post.comments_count++;\n              } else {\n                _this9.$message.error(response.msg || '评论发表失败');\n              }\n              _context9.next = 18;\n              break;\n            case 14:\n              _context9.prev = 14;\n              _context9.t0 = _context9[\"catch\"](7);\n              console.error('评论发表失败:', _context9.t0);\n              _this9.$message.error('评论发表失败');\n            case 18:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, null, [[7, 14]]);\n      }))();\n    },\n    // 回复评论\n    handleReply: function handleReply(comment) {\n      var reply = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      if (!this.isLogin) {\n        this.$message.warning('请先登录');\n        this.$router.push({\n          name: 'Login',\n          query: {\n            redirect: this.$route.fullPath\n          }\n        });\n        return;\n      }\n      this.replyingTo = comment.id;\n      this.replyContent = reply ? \"@\".concat(reply.user.nickname || reply.user.username, \" \") : '';\n    },\n    // 取消回复\n    cancelReply: function cancelReply() {\n      this.replyingTo = null;\n      this.replyContent = '';\n    },\n    // 提交回复\n    submitReply: function submitReply(comment) {\n      var _this0 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee0() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee0$(_context0) {\n          while (1) switch (_context0.prev = _context0.next) {\n            case 0:\n              if (_this0.isLogin) {\n                _context0.next = 4;\n                break;\n              }\n              _this0.$message.warning('请先登录');\n              _this0.$router.push({\n                name: 'Login',\n                query: {\n                  redirect: _this0.$route.fullPath\n                }\n              });\n              return _context0.abrupt(\"return\");\n            case 4:\n              if (_this0.replyContent.trim()) {\n                _context0.next = 7;\n                break;\n              }\n              _this0.$message.warning('回复内容不能为空');\n              return _context0.abrupt(\"return\");\n            case 7:\n              _context0.prev = 7;\n              _context0.next = 10;\n              return replyComment(_this0.post.id, comment.id, _this0.replyContent);\n            case 10:\n              response = _context0.sent;\n              if (response.code === 0) {\n                _this0.$message.success(response.msg || '回复发表成功');\n                _this0.replyingTo = null;\n                _this0.replyContent = '';\n                // 刷新评论列表\n                _this0.fetchComments(_this0.post.id);\n                // 更新帖子评论数\n                _this0.post.comments_count++;\n              } else {\n                _this0.$message.error(response.msg || '回复发表失败');\n              }\n              _context0.next = 18;\n              break;\n            case 14:\n              _context0.prev = 14;\n              _context0.t0 = _context0[\"catch\"](7);\n              console.error('回复发表失败:', _context0.t0);\n              _this0.$message.error('回复发表失败');\n            case 18:\n            case \"end\":\n              return _context0.stop();\n          }\n        }, _callee0, null, [[7, 14]]);\n      }))();\n    },\n    // 判断是否可以管理评论\n    canManageComment: function canManageComment(comment) {\n      return this.isLogin && (this.isAdmin || comment.user && comment.user.id === this.userId);\n    },\n    // 评论操作\n    handleCommentCommand: function handleCommentCommand(command, comment) {\n      switch (command) {\n        case 'edit':\n          this.handleEditComment(comment);\n          break;\n        case 'delete':\n          this.handleDeleteComment(comment);\n          break;\n      }\n    },\n    // 编辑评论\n    handleEditComment: function handleEditComment(comment) {\n      this.currentEditingComment = comment;\n      this.editCommentContent = comment.content;\n      this.editCommentDialogVisible = true;\n    },\n    // 提交编辑评论\n    submitEditComment: function submitEditComment() {\n      var _this1 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee1() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee1$(_context1) {\n          while (1) switch (_context1.prev = _context1.next) {\n            case 0:\n              if (_this1.editCommentContent.trim()) {\n                _context1.next = 3;\n                break;\n              }\n              _this1.$message.warning('评论内容不能为空');\n              return _context1.abrupt(\"return\");\n            case 3:\n              _context1.prev = 3;\n              _context1.next = 6;\n              return updateComment(_this1.currentEditingComment.id, {\n                content: _this1.editCommentContent\n              });\n            case 6:\n              response = _context1.sent;\n              if (response.code === 0) {\n                _this1.$message.success(response.msg || '评论更新成功');\n                _this1.editCommentDialogVisible = false;\n                // 刷新评论列表\n                _this1.fetchComments(_this1.post.id);\n              } else {\n                _this1.$message.error(response.msg || '评论更新失败');\n              }\n              _context1.next = 14;\n              break;\n            case 10:\n              _context1.prev = 10;\n              _context1.t0 = _context1[\"catch\"](3);\n              console.error('评论更新失败:', _context1.t0);\n              _this1.$message.error('评论更新失败');\n            case 14:\n            case \"end\":\n              return _context1.stop();\n          }\n        }, _callee1, null, [[3, 10]]);\n      }))();\n    },\n    // 删除评论\n    handleDeleteComment: function handleDeleteComment(comment) {\n      var _this10 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              _context10.next = 3;\n              return _this10.$confirm('确定要删除这条评论吗？', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n              });\n            case 3:\n              _context10.next = 5;\n              return deleteComment(comment.id);\n            case 5:\n              response = _context10.sent;\n              if (response.code === 0) {\n                _this10.$message.success(response.msg || '删除成功');\n                // 刷新评论列表\n                _this10.fetchComments(_this10.post.id);\n                // 更新帖子评论数\n                _this10.post.comments_count--;\n              } else {\n                _this10.$message.error(response.msg || '删除失败');\n              }\n              _context10.next = 12;\n              break;\n            case 9:\n              _context10.prev = 9;\n              _context10.t0 = _context10[\"catch\"](0);\n              if (_context10.t0 !== 'cancel') {\n                console.error('删除评论失败:', _context10.t0);\n                _this10.$message.error('删除评论失败');\n              }\n            case 12:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, null, [[0, 9]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["getPostDetail","likePost","favoritePost","pinPost","featurePost","deletePost","getPostComments","createComment","replyComment","updateComment","deleteComment","formatDate","mapGetters","name","data","loading","commentsLoading","post","isLiked","isFavorited","comments","commentsTotal","commentsQuery","page","limit","commentContent","replyingTo","replyContent","editCommentDialogVisible","editCommentContent","currentEditingComment","computed","_objectSpread","canManagePost","isLogin","isAdmin","user","id","userId","created","postId","$route","params","fetchPostDetail","fetchComments","$router","push","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","sent","code","checkLikeAndFavorite","$message","error","msg","t0","console","finish","stop","_this2","_callee2","_callee2$","_context2","results","count","handleCommentsPageChange","goToBoard","board","handleLike","_this3","_callee3","_callee3$","_context3","warning","query","redirect","fullPath","abrupt","likes_count","success","handleFavorite","_this4","_callee4","_callee4$","_context4","handleCommand","command","_this5","_callee5","_callee5$","_context5","handleDeletePost","handlePinPost","handleFeaturePost","_this6","_callee6","_callee6$","_context6","$confirm","confirmButtonText","cancelButtonText","type","_this7","_callee7","_callee7$","_context7","is_pinned","_this8","_callee8","_callee8$","_context8","is_featured","submitComment","_this9","_callee9","_callee9$","_context9","trim","content","comments_count","handleReply","comment","reply","arguments","length","undefined","concat","nickname","username","cancelReply","submitReply","_this0","_callee0","_callee0$","_context0","canManageComment","handleCommentCommand","handleEditComment","handleDeleteComment","submitEditComment","_this1","_callee1","_callee1$","_context1","_this10","_callee10","_callee10$","_context10"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\post\\PostDetail.vue"],"sourcesContent":["<template>\n  <div class=\"post-detail-container\">\n    <!-- 帖子详情卡片 -->\n    <el-card class=\"post-detail-card\">\n      <div v-if=\"loading\" class=\"loading-container\">\n        <el-skeleton :rows=\"10\" animated />\n      </div>\n      <div v-else>\n        <div class=\"post-header\">\n          <h1 class=\"post-title\">\n            <el-tag v-if=\"post.is_pinned\" size=\"medium\" type=\"danger\">置顶</el-tag>\n            <el-tag v-if=\"post.is_featured\" size=\"medium\" type=\"success\">精华</el-tag>\n            {{ post.title }}\n          </h1>\n          <div class=\"post-meta\">\n            <div class=\"post-author\">\n              <el-avatar :size=\"40\" :src=\"post.user?.avatar_url || ''\">\n                {{ post.user?.nickname?.charAt(0) || post.user?.username?.charAt(0) || 'U' }}\n              </el-avatar>\n              <div class=\"author-info\">\n                <div class=\"author-name\">{{ post.user?.nickname || post.user?.username }}</div>\n                <div class=\"post-time\">发布于 {{ formatDate(post.created_at) }}</div>\n              </div>\n            </div>\n            <div class=\"post-board\" @click=\"goToBoard\">\n              <i class=\"el-icon-s-grid\"></i>\n              <span>{{ post.board?.name }}</span>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"post-content\">\n          {{ post.content }}\n        </div>\n\n        <div class=\"post-footer\">\n          <div class=\"post-stats\">\n            <span><i class=\"el-icon-view\"></i> {{ post.views }}</span>\n            <span><i class=\"el-icon-star-on\"></i> {{ post.likes_count }}</span>\n            <span><i class=\"el-icon-chat-dot-round\"></i> {{ post.comments_count }}</span>\n          </div>\n          <div class=\"post-actions\">\n            <el-button\n              :type=\"isLiked ? 'primary' : 'default'\"\n              size=\"small\"\n              icon=\"el-icon-star-on\"\n              @click=\"handleLike\"\n            >\n              {{ isLiked ? '已点赞' : '点赞' }}\n            </el-button>\n            <el-button\n              :type=\"isFavorited ? 'warning' : 'default'\"\n              size=\"small\"\n              icon=\"el-icon-collection-tag\"\n              @click=\"handleFavorite\"\n            >\n              {{ isFavorited ? '已收藏' : '收藏' }}\n            </el-button>\n            <el-dropdown v-if=\"canManagePost\" trigger=\"click\" @command=\"handleCommand\">\n              <el-button size=\"small\" icon=\"el-icon-more\">\n                更多\n              </el-button>\n              <el-dropdown-menu slot=\"dropdown\">\n                <el-dropdown-item command=\"edit\">编辑帖子</el-dropdown-item>\n                <el-dropdown-item command=\"delete\" divided>删除帖子</el-dropdown-item>\n                <el-dropdown-item v-if=\"isAdmin\" command=\"pin\" divided>\n                  {{ post.is_pinned ? '取消置顶' : '置顶' }}\n                </el-dropdown-item>\n                <el-dropdown-item v-if=\"isAdmin\" command=\"feature\">\n                  {{ post.is_featured ? '取消加精' : '加精' }}\n                </el-dropdown-item>\n              </el-dropdown-menu>\n            </el-dropdown>\n          </div>\n        </div>\n      </div>\n    </el-card>\n\n    <!-- 评论区 -->\n    <el-card class=\"comments-card\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span>评论区 ({{ post.comments_count || 0 }})</span>\n      </div>\n\n      <!-- 发表评论 -->\n      <div class=\"comment-form\">\n        <el-input\n          v-model=\"commentContent\"\n          type=\"textarea\"\n          :rows=\"3\"\n          placeholder=\"发表你的评论...\"\n          :disabled=\"!isLogin\"\n        ></el-input>\n        <div class=\"comment-form-footer\">\n          <el-button\n            type=\"primary\"\n            :disabled=\"!isLogin || !commentContent.trim()\"\n            @click=\"submitComment\"\n          >\n            发表评论\n          </el-button>\n          <div v-if=\"!isLogin\" class=\"login-tip\">\n            请先 <router-link :to=\"{ name: 'Login', query: { redirect: $route.fullPath } }\">登录</router-link> 后发表评论\n          </div>\n        </div>\n      </div>\n\n      <!-- 评论列表 -->\n      <div v-if=\"commentsLoading\" class=\"loading-container\">\n        <el-skeleton :rows=\"5\" animated />\n      </div>\n      <div v-else-if=\"comments.length === 0\" class=\"empty-comments\">\n        <i class=\"el-icon-chat-dot-round\"></i>\n        <p>暂无评论，快来发表第一条评论吧！</p>\n      </div>\n      <div v-else class=\"comments-list\">\n        <div\n          v-for=\"comment in comments\"\n          :key=\"comment.id\"\n          class=\"comment-item\"\n        >\n          <div class=\"comment-header\">\n            <div class=\"comment-author\">\n              <el-avatar :size=\"32\" :src=\"comment.user?.avatar_url || ''\">\n                {{ comment.user?.nickname?.charAt(0) || comment.user?.username?.charAt(0) || 'U' }}\n              </el-avatar>\n              <div class=\"author-info\">\n                <div class=\"author-name\">{{ comment.user?.nickname || comment.user?.username }}</div>\n                <div class=\"comment-time\">{{ formatDate(comment.created_at) }}</div>\n              </div>\n            </div>\n            <div class=\"comment-actions\">\n              <el-button type=\"text\" size=\"mini\" @click=\"handleReply(comment)\">回复</el-button>\n              <el-dropdown v-if=\"canManageComment(comment)\" trigger=\"click\" @command=\"(cmd) => handleCommentCommand(cmd, comment)\">\n                <el-button type=\"text\" size=\"mini\" icon=\"el-icon-more\"></el-button>\n                <el-dropdown-menu slot=\"dropdown\">\n                  <el-dropdown-item command=\"edit\">编辑</el-dropdown-item>\n                  <el-dropdown-item command=\"delete\" divided>删除</el-dropdown-item>\n                </el-dropdown-menu>\n              </el-dropdown>\n            </div>\n          </div>\n\n          <div class=\"comment-content\">\n            {{ comment.content }}\n          </div>\n\n          <!-- 回复表单 -->\n          <div v-if=\"replyingTo === comment.id\" class=\"reply-form\">\n            <el-input\n              v-model=\"replyContent\"\n              type=\"textarea\"\n              :rows=\"2\"\n              placeholder=\"回复评论...\"\n            ></el-input>\n            <div class=\"reply-form-footer\">\n              <el-button size=\"small\" @click=\"cancelReply\">取消</el-button>\n              <el-button\n                type=\"primary\"\n                size=\"small\"\n                :disabled=\"!replyContent.trim()\"\n                @click=\"submitReply(comment)\"\n              >\n                回复\n              </el-button>\n            </div>\n          </div>\n\n          <!-- 回复列表 -->\n          <div v-if=\"comment.replies && comment.replies.length > 0\" class=\"replies-list\">\n            <div\n              v-for=\"reply in comment.replies\"\n              :key=\"reply.id\"\n              class=\"reply-item\"\n            >\n              <div class=\"reply-header\">\n                <div class=\"reply-author\">\n                  <el-avatar :size=\"24\" :src=\"reply.user?.avatar_url || ''\">\n                    {{ reply.user?.nickname?.charAt(0) || reply.user?.username?.charAt(0) || 'U' }}\n                  </el-avatar>\n                  <div class=\"author-info\">\n                    <div class=\"author-name\">{{ reply.user?.nickname || reply.user?.username }}</div>\n                    <div class=\"reply-time\">{{ formatDate(reply.created_at) }}</div>\n                  </div>\n                </div>\n                <div class=\"reply-actions\">\n                  <el-button type=\"text\" size=\"mini\" @click=\"handleReply(comment, reply)\">回复</el-button>\n                  <el-dropdown v-if=\"canManageComment(reply)\" trigger=\"click\" @command=\"(cmd) => handleCommentCommand(cmd, reply)\">\n                    <el-button type=\"text\" size=\"mini\" icon=\"el-icon-more\"></el-button>\n                    <el-dropdown-menu slot=\"dropdown\">\n                      <el-dropdown-item command=\"edit\">编辑</el-dropdown-item>\n                      <el-dropdown-item command=\"delete\" divided>删除</el-dropdown-item>\n                    </el-dropdown-menu>\n                  </el-dropdown>\n                </div>\n              </div>\n\n              <div class=\"reply-content\">\n                {{ reply.content }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 评论分页 -->\n      <div v-if=\"comments.length > 0\" class=\"pagination-container\">\n        <el-pagination\n          background\n          layout=\"prev, pager, next\"\n          :total=\"commentsTotal\"\n          :page-size=\"commentsQuery.limit\"\n          v-model:current-page=\"commentsQuery.page\"\n          @current-change=\"handleCommentsPageChange\"\n        >\n        </el-pagination>\n      </div>\n    </el-card>\n\n    <!-- 编辑评论对话框 -->\n    <el-dialog\n      title=\"编辑评论\"\n      v-model:visible=\"editCommentDialogVisible\"\n      width=\"500px\"\n    >\n      <el-input\n        v-model=\"editCommentContent\"\n        type=\"textarea\"\n        :rows=\"4\"\n        placeholder=\"请输入评论内容\"\n      ></el-input>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"editCommentDialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitEditComment\">确 定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { getPostDetail, likePost, favoritePost, pinPost, featurePost, deletePost } from '@/api/post'\nimport { getPostComments, createComment, replyComment, updateComment, deleteComment } from '@/api/comment'\nimport { formatDate } from '@/utils/index'\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'PostDetail',\n  data() {\n    return {\n      loading: false,\n      commentsLoading: false,\n      post: {},\n      isLiked: false,\n      isFavorited: false,\n      comments: [],\n      commentsTotal: 0,\n      commentsQuery: {\n        page: 1,\n        limit: 10\n      },\n      commentContent: '',\n      replyingTo: null,\n      replyContent: '',\n      editCommentDialogVisible: false,\n      editCommentContent: '',\n      currentEditingComment: null\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'isLogin',\n      'isAdmin',\n      'userId'\n    ]),\n    canManagePost() {\n      return this.isLogin && (\n        this.isAdmin ||\n        (this.post.user && this.post.user.id === this.userId)\n      )\n    }\n  },\n  created() {\n    const postId = this.$route.params.id\n    if (postId) {\n      this.fetchPostDetail(postId)\n      this.fetchComments(postId)\n    } else {\n      this.$router.push({ name: 'PostList' })\n    }\n  },\n  methods: {\n    formatDate,\n\n    // 获取帖子详情\n    async fetchPostDetail(id) {\n      this.loading = true\n      try {\n        const response = await getPostDetail(id)\n        if (response.code === 0) {\n          this.post = response.data\n          // 检查是否已点赞和收藏\n          this.checkLikeAndFavorite()\n        } else {\n          this.$message.error(response.msg || '获取帖子详情失败')\n        }\n      } catch (error) {\n        console.error('获取帖子详情失败:', error)\n        this.$message.error('获取帖子详情失败')\n      } finally {\n        this.loading = false\n      }\n    },\n\n    // 检查是否已点赞和收藏\n    checkLikeAndFavorite() {\n      // 这里需要调用后端API检查是否已点赞和收藏\n      // 由于我们没有实现这个API，这里先模拟一下\n      this.isLiked = false\n      this.isFavorited = false\n    },\n\n    // 获取评论列表\n    async fetchComments(postId) {\n      this.commentsLoading = true\n      try {\n        const response = await getPostComments(postId)\n        if (response.code === 0) {\n          this.comments = response.data.results || []\n          this.commentsTotal = response.data.count || 0\n        } else {\n          this.$message.error(response.msg || '获取评论列表失败')\n        }\n      } catch (error) {\n        console.error('获取评论列表失败:', error)\n        this.$message.error('获取评论列表失败')\n      } finally {\n        this.commentsLoading = false\n      }\n    },\n\n    // 评论分页变化\n    handleCommentsPageChange(page) {\n      this.commentsQuery.page = page\n      this.fetchComments(this.post.id)\n    },\n\n    // 前往板块页面\n    goToBoard() {\n      if (this.post.board) {\n        this.$router.push({ name: 'BoardDetail', params: { id: this.post.board.id } })\n      }\n    },\n\n    // 点赞帖子\n    async handleLike() {\n      if (!this.isLogin) {\n        this.$message.warning('请先登录')\n        this.$router.push({ name: 'Login', query: { redirect: this.$route.fullPath } })\n        return\n      }\n\n      try {\n        const response = await likePost(this.post.id)\n        if (response.code === 0) {\n          this.isLiked = !this.isLiked\n          // 更新点赞数\n          if (this.isLiked) {\n            this.post.likes_count++\n          } else {\n            this.post.likes_count--\n          }\n          this.$message.success(response.msg || (this.isLiked ? '点赞成功' : '取消点赞成功'))\n        } else {\n          this.$message.error(response.msg || '操作失败')\n        }\n      } catch (error) {\n        console.error('点赞操作失败:', error)\n        this.$message.error('点赞操作失败')\n      }\n    },\n\n    // 收藏帖子\n    async handleFavorite() {\n      if (!this.isLogin) {\n        this.$message.warning('请先登录')\n        this.$router.push({ name: 'Login', query: { redirect: this.$route.fullPath } })\n        return\n      }\n\n      try {\n        const response = await favoritePost(this.post.id)\n        if (response.code === 0) {\n          this.isFavorited = !this.isFavorited\n          this.$message.success(response.msg || (this.isFavorited ? '收藏成功' : '取消收藏成功'))\n        } else {\n          this.$message.error(response.msg || '操作失败')\n        }\n      } catch (error) {\n        console.error('收藏操作失败:', error)\n        this.$message.error('收藏操作失败')\n      }\n    },\n\n    // 帖子更多操作\n    async handleCommand(command) {\n      switch (command) {\n        case 'edit':\n          this.$router.push({ name: 'PostEdit', params: { id: this.post.id } })\n          break\n        case 'delete':\n          this.handleDeletePost()\n          break\n        case 'pin':\n          this.handlePinPost()\n          break\n        case 'feature':\n          this.handleFeaturePost()\n          break\n      }\n    },\n\n    // 删除帖子\n    async handleDeletePost() {\n      try {\n        await this.$confirm('确定要删除这篇帖子吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n\n        const response = await deletePost(this.post.id)\n        if (response.code === 0) {\n          this.$message.success(response.msg || '删除成功')\n          // 返回帖子列表页\n          this.$router.push({ name: 'PostList' })\n        } else {\n          this.$message.error(response.msg || '删除失败')\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除帖子失败:', error)\n          this.$message.error('删除帖子失败')\n        }\n      }\n    },\n\n    // 置顶/取消置顶帖子\n    async handlePinPost() {\n      try {\n        const response = await pinPost(this.post.id)\n        if (response.code === 0) {\n          this.post.is_pinned = !this.post.is_pinned\n          this.$message.success(response.msg || (this.post.is_pinned ? '置顶成功' : '取消置顶成功'))\n        } else {\n          this.$message.error(response.msg || '操作失败')\n        }\n      } catch (error) {\n        console.error('置顶操作失败:', error)\n        this.$message.error('置顶操作失败')\n      }\n    },\n\n    // 加精/取消加精帖子\n    async handleFeaturePost() {\n      try {\n        const response = await featurePost(this.post.id)\n        if (response.code === 0) {\n          this.post.is_featured = !this.post.is_featured\n          this.$message.success(response.msg || (this.post.is_featured ? '加精成功' : '取消加精成功'))\n        } else {\n          this.$message.error(response.msg || '操作失败')\n        }\n      } catch (error) {\n        console.error('加精操作失败:', error)\n        this.$message.error('加精操作失败')\n      }\n    },\n\n    // 提交评论\n    async submitComment() {\n      if (!this.isLogin) {\n        this.$message.warning('请先登录')\n        this.$router.push({ name: 'Login', query: { redirect: this.$route.fullPath } })\n        return\n      }\n\n      if (!this.commentContent.trim()) {\n        this.$message.warning('评论内容不能为空')\n        return\n      }\n\n      try {\n        const response = await createComment({\n          post: this.post.id,\n          content: this.commentContent\n        })\n\n        if (response.code === 0) {\n          this.$message.success(response.msg || '评论发表成功')\n          this.commentContent = ''\n          // 刷新评论列表\n          this.fetchComments(this.post.id)\n          // 更新帖子评论数\n          this.post.comments_count++\n        } else {\n          this.$message.error(response.msg || '评论发表失败')\n        }\n      } catch (error) {\n        console.error('评论发表失败:', error)\n        this.$message.error('评论发表失败')\n      }\n    },\n\n    // 回复评论\n    handleReply(comment, reply = null) {\n      if (!this.isLogin) {\n        this.$message.warning('请先登录')\n        this.$router.push({ name: 'Login', query: { redirect: this.$route.fullPath } })\n        return\n      }\n\n      this.replyingTo = comment.id\n      this.replyContent = reply ? `@${reply.user.nickname || reply.user.username} ` : ''\n    },\n\n    // 取消回复\n    cancelReply() {\n      this.replyingTo = null\n      this.replyContent = ''\n    },\n\n    // 提交回复\n    async submitReply(comment) {\n      if (!this.isLogin) {\n        this.$message.warning('请先登录')\n        this.$router.push({ name: 'Login', query: { redirect: this.$route.fullPath } })\n        return\n      }\n\n      if (!this.replyContent.trim()) {\n        this.$message.warning('回复内容不能为空')\n        return\n      }\n\n      try {\n        const response = await replyComment(\n          this.post.id,\n          comment.id,\n          this.replyContent\n        )\n\n        if (response.code === 0) {\n          this.$message.success(response.msg || '回复发表成功')\n          this.replyingTo = null\n          this.replyContent = ''\n          // 刷新评论列表\n          this.fetchComments(this.post.id)\n          // 更新帖子评论数\n          this.post.comments_count++\n        } else {\n          this.$message.error(response.msg || '回复发表失败')\n        }\n      } catch (error) {\n        console.error('回复发表失败:', error)\n        this.$message.error('回复发表失败')\n      }\n    },\n\n    // 判断是否可以管理评论\n    canManageComment(comment) {\n      return this.isLogin && (\n        this.isAdmin ||\n        (comment.user && comment.user.id === this.userId)\n      )\n    },\n\n    // 评论操作\n    handleCommentCommand(command, comment) {\n      switch (command) {\n        case 'edit':\n          this.handleEditComment(comment)\n          break\n        case 'delete':\n          this.handleDeleteComment(comment)\n          break\n      }\n    },\n\n    // 编辑评论\n    handleEditComment(comment) {\n      this.currentEditingComment = comment\n      this.editCommentContent = comment.content\n      this.editCommentDialogVisible = true\n    },\n\n    // 提交编辑评论\n    async submitEditComment() {\n      if (!this.editCommentContent.trim()) {\n        this.$message.warning('评论内容不能为空')\n        return\n      }\n\n      try {\n        const response = await updateComment(this.currentEditingComment.id, {\n          content: this.editCommentContent\n        })\n\n        if (response.code === 0) {\n          this.$message.success(response.msg || '评论更新成功')\n          this.editCommentDialogVisible = false\n          // 刷新评论列表\n          this.fetchComments(this.post.id)\n        } else {\n          this.$message.error(response.msg || '评论更新失败')\n        }\n      } catch (error) {\n        console.error('评论更新失败:', error)\n        this.$message.error('评论更新失败')\n      }\n    },\n\n    // 删除评论\n    async handleDeleteComment(comment) {\n      try {\n        await this.$confirm('确定要删除这条评论吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n\n        const response = await deleteComment(comment.id)\n        if (response.code === 0) {\n          this.$message.success(response.msg || '删除成功')\n          // 刷新评论列表\n          this.fetchComments(this.post.id)\n          // 更新帖子评论数\n          this.post.comments_count--\n        } else {\n          this.$message.error(response.msg || '删除失败')\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除评论失败:', error)\n          this.$message.error('删除评论失败')\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.post-detail-container {\n  padding: 20px;\n}\n\n.post-detail-card,\n.comments-card {\n  margin-bottom: 20px;\n}\n\n.loading-container {\n  padding: 20px 0;\n}\n\n.post-header {\n  margin-bottom: 20px;\n}\n\n.post-title {\n  font-size: 24px;\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n}\n\n.post-title .el-tag {\n  margin-right: 10px;\n}\n\n.post-meta {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.post-author {\n  display: flex;\n  align-items: center;\n}\n\n.author-info {\n  margin-left: 10px;\n}\n\n.author-name {\n  font-weight: bold;\n}\n\n.post-time,\n.comment-time,\n.reply-time {\n  font-size: 12px;\n  color: #909399;\n}\n\n.post-board {\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  color: #409EFF;\n}\n\n.post-board i {\n  margin-right: 5px;\n}\n\n.post-content {\n  line-height: 1.6;\n  margin-bottom: 20px;\n  white-space: pre-wrap;\n}\n\n.post-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 15px;\n  border-top: 1px solid #EBEEF5;\n}\n\n.post-stats {\n  display: flex;\n  color: #909399;\n}\n\n.post-stats span {\n  margin-right: 15px;\n  display: flex;\n  align-items: center;\n}\n\n.post-stats span i {\n  margin-right: 5px;\n}\n\n.post-actions {\n  display: flex;\n  align-items: center;\n}\n\n.post-actions .el-button {\n  margin-left: 10px;\n}\n\n.comment-form {\n  margin-bottom: 20px;\n}\n\n.comment-form-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 10px;\n}\n\n.login-tip {\n  font-size: 14px;\n  color: #909399;\n}\n\n.login-tip a {\n  color: #409EFF;\n  text-decoration: none;\n}\n\n.empty-comments {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 40px 0;\n  color: #909399;\n}\n\n.empty-comments i {\n  font-size: 48px;\n  margin-bottom: 10px;\n}\n\n.comments-list {\n  margin-bottom: 20px;\n}\n\n.comment-item {\n  padding: 15px 0;\n  border-bottom: 1px solid #EBEEF5;\n}\n\n.comment-item:last-child {\n  border-bottom: none;\n}\n\n.comment-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.comment-author {\n  display: flex;\n  align-items: center;\n}\n\n.comment-actions {\n  display: flex;\n  align-items: center;\n}\n\n.comment-content {\n  line-height: 1.6;\n  margin-bottom: 10px;\n  white-space: pre-wrap;\n}\n\n.reply-form {\n  margin: 10px 0 10px 40px;\n}\n\n.reply-form-footer {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 10px;\n}\n\n.replies-list {\n  margin-left: 40px;\n  margin-top: 10px;\n  padding: 10px;\n  background-color: #F5F7FA;\n  border-radius: 4px;\n}\n\n.reply-item {\n  padding: 10px 0;\n  border-bottom: 1px solid #EBEEF5;\n}\n\n.reply-item:last-child {\n  border-bottom: none;\n}\n\n.reply-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n}\n\n.reply-author {\n  display: flex;\n  align-items: center;\n}\n\n.reply-actions {\n  display: flex;\n  align-items: center;\n}\n\n.reply-content {\n  line-height: 1.6;\n  white-space: pre-wrap;\n}\n\n.pagination-container {\n  text-align: center;\n  margin-top: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}