{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nvar _defineProperty = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/defineProperty.js\")[\"default\"];\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar runtime = require('../../utils/vue/props/runtime.js');\nvar types = require('../../utils/types.js');\nvar shared = require('@vue/shared');\nvar core = require('@vueuse/core');\nvar _prop = runtime.buildProp({\n  type: runtime.definePropType(Boolean),\n  \"default\": null\n});\nvar _event = runtime.buildProp({\n  type: runtime.definePropType(Function)\n});\nvar createModelToggleComposable = function createModelToggleComposable(name) {\n  var updateEventKey = \"update:\".concat(name);\n  var updateEventKeyRaw = \"onUpdate:\".concat(name);\n  var useModelToggleEmits2 = [updateEventKey];\n  var useModelToggleProps2 = _defineProperty(_defineProperty({}, name, _prop), updateEventKeyRaw, _event);\n  var useModelToggle2 = function useModelToggle2(_ref) {\n    var indicator = _ref.indicator,\n      toggleReason = _ref.toggleReason,\n      shouldHideWhenRouteChanges = _ref.shouldHideWhenRouteChanges,\n      shouldProceed = _ref.shouldProceed,\n      onShow = _ref.onShow,\n      onHide = _ref.onHide;\n    var instance = vue.getCurrentInstance();\n    var emit = instance.emit;\n    var props = instance.props;\n    var hasUpdateHandler = vue.computed(function () {\n      return shared.isFunction(props[updateEventKeyRaw]);\n    });\n    var isModelBindingAbsent = vue.computed(function () {\n      return props[name] === null;\n    });\n    var doShow = function doShow(event) {\n      if (indicator.value === true) {\n        return;\n      }\n      indicator.value = true;\n      if (toggleReason) {\n        toggleReason.value = event;\n      }\n      if (shared.isFunction(onShow)) {\n        onShow(event);\n      }\n    };\n    var doHide = function doHide(event) {\n      if (indicator.value === false) {\n        return;\n      }\n      indicator.value = false;\n      if (toggleReason) {\n        toggleReason.value = event;\n      }\n      if (shared.isFunction(onHide)) {\n        onHide(event);\n      }\n    };\n    var show = function show(event) {\n      if (props.disabled === true || shared.isFunction(shouldProceed) && !shouldProceed()) return;\n      var shouldEmit = hasUpdateHandler.value && core.isClient;\n      if (shouldEmit) {\n        emit(updateEventKey, true);\n      }\n      if (isModelBindingAbsent.value || !shouldEmit) {\n        doShow(event);\n      }\n    };\n    var hide = function hide(event) {\n      if (props.disabled === true || !core.isClient) return;\n      var shouldEmit = hasUpdateHandler.value && core.isClient;\n      if (shouldEmit) {\n        emit(updateEventKey, false);\n      }\n      if (isModelBindingAbsent.value || !shouldEmit) {\n        doHide(event);\n      }\n    };\n    var onChange = function onChange(val) {\n      if (!types.isBoolean(val)) return;\n      if (props.disabled && val) {\n        if (hasUpdateHandler.value) {\n          emit(updateEventKey, false);\n        }\n      } else if (indicator.value !== val) {\n        if (val) {\n          doShow();\n        } else {\n          doHide();\n        }\n      }\n    };\n    var toggle = function toggle() {\n      if (indicator.value) {\n        hide();\n      } else {\n        show();\n      }\n    };\n    vue.watch(function () {\n      return props[name];\n    }, onChange);\n    if (shouldHideWhenRouteChanges && instance.appContext.config.globalProperties.$route !== void 0) {\n      vue.watch(function () {\n        return _objectSpread({}, instance.proxy.$route);\n      }, function () {\n        if (shouldHideWhenRouteChanges.value && indicator.value) {\n          hide();\n        }\n      });\n    }\n    vue.onMounted(function () {\n      onChange(props[name]);\n    });\n    return {\n      hide: hide,\n      show: show,\n      toggle: toggle,\n      hasUpdateHandler: hasUpdateHandler\n    };\n  };\n  return {\n    useModelToggle: useModelToggle2,\n    useModelToggleProps: useModelToggleProps2,\n    useModelToggleEmits: useModelToggleEmits2\n  };\n};\nvar _createModelToggleCom = createModelToggleComposable(\"modelValue\"),\n  useModelToggle = _createModelToggleCom.useModelToggle,\n  useModelToggleProps = _createModelToggleCom.useModelToggleProps,\n  useModelToggleEmits = _createModelToggleCom.useModelToggleEmits;\nexports.createModelToggleComposable = createModelToggleComposable;\nexports.useModelToggle = useModelToggle;\nexports.useModelToggleEmits = useModelToggleEmits;\nexports.useModelToggleProps = useModelToggleProps;","map":{"version":3,"names":["_prop","runtime","buildProp","type","definePropType","Boolean","_event","Function","createModelToggleComposable","name","updateEventKey","concat","updateEventKeyRaw","useModelToggleEmits2","useModelToggleProps2","_defineProperty","useModelToggle2","_ref","indicator","toggleReason","shouldHideWhenRouteChanges","shouldProceed","onShow","onHide","instance","vue","getCurrentInstance","emit","props","hasUpdateHandler","computed","shared","isFunction","isModelBindingAbsent","doShow","event","value","doHide","show","disabled","shouldEmit","core","isClient","hide","onChange","val","types","isBoolean","toggle","watch","appContext","config","globalProperties","$route","_objectSpread","proxy","onMounted","useModelToggle","useModelToggleProps","useModelToggleEmits","_createModelToggleCom"],"sources":["../../../../../packages/hooks/use-model-toggle/index.ts"],"sourcesContent":["import { computed, getCurrentInstance, onMounted, watch } from 'vue'\nimport {\n  buildProp,\n  definePropType,\n  isBoolean,\n  isClient,\n  isFunction,\n} from '@element-plus/utils'\nimport type { ExtractPropType } from '@element-plus/utils'\nimport type { RouteLocationNormalizedLoaded } from 'vue-router'\n\nimport type { ComponentPublicInstance, ExtractPropTypes, Ref } from 'vue'\n\nconst _prop = buildProp({\n  type: definePropType<boolean | null>(Boolean),\n  default: null,\n} as const)\nconst _event = buildProp({\n  type: definePropType<(val: boolean) => void>(Function),\n} as const)\n\nexport type UseModelTogglePropsRaw<T extends string> = {\n  [K in T]: typeof _prop\n} & {\n  [K in `onUpdate:${T}`]: typeof _event\n}\n\nexport type UseModelTogglePropsGeneric<T extends string> = {\n  [K in T]: ExtractPropType<typeof _prop>\n} & {\n  [K in `onUpdate:${T}`]: ExtractPropType<typeof _event>\n}\n\nexport const createModelToggleComposable = <T extends string>(name: T) => {\n  const updateEventKey = `update:${name}` as const\n  const updateEventKeyRaw = `onUpdate:${name}` as const\n  const useModelToggleEmits = [updateEventKey]\n\n  const useModelToggleProps = {\n    [name]: _prop,\n    [updateEventKeyRaw]: _event,\n  } as UseModelTogglePropsRaw<T>\n\n  const useModelToggle = ({\n    indicator,\n    toggleReason,\n    shouldHideWhenRouteChanges,\n    shouldProceed,\n    onShow,\n    onHide,\n  }: ModelToggleParams) => {\n    const instance = getCurrentInstance()!\n    const { emit } = instance\n    const props = instance.props as UseModelTogglePropsGeneric<T> & {\n      disabled: boolean\n    }\n    const hasUpdateHandler = computed(() =>\n      isFunction(props[updateEventKeyRaw])\n    )\n    // when it matches the default value we say this is absent\n    // though this could be mistakenly passed from the user but we need to rule out that\n    // condition\n    const isModelBindingAbsent = computed(() => props[name] === null)\n\n    const doShow = (event?: Event) => {\n      if (indicator.value === true) {\n        return\n      }\n\n      indicator.value = true\n      if (toggleReason) {\n        toggleReason.value = event\n      }\n      if (isFunction(onShow)) {\n        onShow(event)\n      }\n    }\n\n    const doHide = (event?: Event) => {\n      if (indicator.value === false) {\n        return\n      }\n\n      indicator.value = false\n      if (toggleReason) {\n        toggleReason.value = event\n      }\n      if (isFunction(onHide)) {\n        onHide(event)\n      }\n    }\n\n    const show = (event?: Event) => {\n      if (\n        props.disabled === true ||\n        (isFunction(shouldProceed) && !shouldProceed())\n      )\n        return\n\n      const shouldEmit = hasUpdateHandler.value && isClient\n\n      if (shouldEmit) {\n        emit(updateEventKey, true)\n      }\n\n      if (isModelBindingAbsent.value || !shouldEmit) {\n        doShow(event)\n      }\n    }\n\n    const hide = (event?: Event) => {\n      if (props.disabled === true || !isClient) return\n\n      const shouldEmit = hasUpdateHandler.value && isClient\n\n      if (shouldEmit) {\n        emit(updateEventKey, false)\n      }\n\n      if (isModelBindingAbsent.value || !shouldEmit) {\n        doHide(event)\n      }\n    }\n\n    const onChange = (val: boolean) => {\n      if (!isBoolean(val)) return\n      if (props.disabled && val) {\n        if (hasUpdateHandler.value) {\n          emit(updateEventKey, false)\n        }\n      } else if (indicator.value !== val) {\n        if (val) {\n          doShow()\n        } else {\n          doHide()\n        }\n      }\n    }\n\n    const toggle = () => {\n      if (indicator.value) {\n        hide()\n      } else {\n        show()\n      }\n    }\n\n    watch(() => props[name], onChange)\n\n    if (\n      shouldHideWhenRouteChanges &&\n      instance.appContext.config.globalProperties.$route !== undefined\n    ) {\n      watch(\n        () => ({\n          ...(\n            instance.proxy as ComponentPublicInstance<{\n              $route: RouteLocationNormalizedLoaded\n            }>\n          ).$route,\n        }),\n        () => {\n          if (shouldHideWhenRouteChanges.value && indicator.value) {\n            hide()\n          }\n        }\n      )\n    }\n\n    onMounted(() => {\n      onChange(props[name])\n    })\n\n    return {\n      hide,\n      show,\n      toggle,\n      hasUpdateHandler,\n    }\n  }\n\n  return {\n    useModelToggle,\n    useModelToggleProps,\n    useModelToggleEmits,\n  }\n}\n\nconst { useModelToggle, useModelToggleProps, useModelToggleEmits } =\n  createModelToggleComposable('modelValue')\n\nexport { useModelToggle, useModelToggleEmits, useModelToggleProps }\n\nexport type UseModelToggleProps = ExtractPropTypes<typeof useModelToggleProps>\n\nexport type ModelToggleParams = {\n  indicator: Ref<boolean>\n  toggleReason?: Ref<Event | undefined>\n  shouldHideWhenRouteChanges?: Ref<boolean>\n  shouldProceed?: () => boolean\n  onShow?: (event?: Event) => void\n  onHide?: (event?: Event) => void\n}\n"],"mappings":";;;;;;;;;;;;;AAQA,IAAMA,KAAK,GAAGC,OAAA,CAAAC,SAAS,CAAC;EACtBC,IAAI,EAAEF,OAAA,CAAAG,cAAc,CAACC,OAAO,CAAC;EAC7B,WAAS;AACX,CAAC,CAAC;AACF,IAAMC,MAAM,GAAGL,OAAA,CAAAC,SAAS,CAAC;EACvBC,IAAI,EAAEF,OAAA,CAAAG,cAAc,CAACG,QAAQ;AAC/B,CAAC,CAAC;AACU,IAACC,2BAA2B,GAAG,SAA9BA,2BAA2BA,CAAIC,IAAI,EAAK;EACnD,IAAMC,cAAc,aAAAC,MAAA,CAAaF,IAAI,CAAE;EACvC,IAAMG,iBAAiB,eAAAD,MAAA,CAAeF,IAAI,CAAE;EAC5C,IAAMI,oBAAoB,GAAG,CAACH,cAAc,CAAC;EAC7C,IAAMI,oBAAoB,GAAAC,eAAA,CAAAA,eAAA,KACvBN,IAAI,EAAGT,KAAK,GACZY,iBAAiB,EAAGN,MAAM,CAC5B;EACD,IAAMU,eAAe,GAAG,SAAlBA,eAAeA,CAAAC,IAAA,EAOf;IAAA,IANJC,SAAS,GAAAD,IAAA,CAATC,SAAS;MACTC,YAAY,GAAAF,IAAA,CAAZE,YAAY;MACZC,0BAA0B,GAAAH,IAAA,CAA1BG,0BAA0B;MAC1BC,aAAa,GAAAJ,IAAA,CAAbI,aAAa;MACbC,MAAM,GAAAL,IAAA,CAANK,MAAM;MACNC,MAAM,GAAAN,IAAA,CAANM,MAAM;IAEN,IAAMC,QAAQ,GAAGC,GAAA,CAAAC,kBAAkB,EAAE;IACrC,IAAQC,IAAI,GAAKH,QAAQ,CAAjBG,IAAI;IACZ,IAAMC,KAAK,GAAGJ,QAAQ,CAACI,KAAK;IAC5B,IAAMC,gBAAgB,GAAGJ,GAAA,CAAAK,QAAQ,CAAC;MAAA,OAAMC,MAAA,CAAAC,UAAU,CAACJ,KAAK,CAAChB,iBAAiB,CAAC,CAAC;IAAA,EAAC;IAC7E,IAAMqB,oBAAoB,GAAGR,GAAA,CAAAK,QAAQ,CAAC;MAAA,OAAMF,KAAK,CAACnB,IAAI,CAAC,KAAK,IAAI;IAAA,EAAC;IACjE,IAAMyB,MAAM,GAAG,SAATA,MAAMA,CAAIC,KAAK,EAAK;MACxB,IAAIjB,SAAS,CAACkB,KAAK,KAAK,IAAI,EAAE;QAC5B;MACR;MACMlB,SAAS,CAACkB,KAAK,GAAG,IAAI;MACtB,IAAIjB,YAAY,EAAE;QAChBA,YAAY,CAACiB,KAAK,GAAGD,KAAK;MAClC;MACM,IAAIJ,MAAA,CAAAC,UAAU,CAACV,MAAM,CAAC,EAAE;QACtBA,MAAM,CAACa,KAAK,CAAC;MACrB;IACA,CAAK;IACD,IAAME,MAAM,GAAG,SAATA,MAAMA,CAAIF,KAAK,EAAK;MACxB,IAAIjB,SAAS,CAACkB,KAAK,KAAK,KAAK,EAAE;QAC7B;MACR;MACMlB,SAAS,CAACkB,KAAK,GAAG,KAAK;MACvB,IAAIjB,YAAY,EAAE;QAChBA,YAAY,CAACiB,KAAK,GAAGD,KAAK;MAClC;MACM,IAAIJ,MAAA,CAAAC,UAAU,CAACT,MAAM,CAAC,EAAE;QACtBA,MAAM,CAACY,KAAK,CAAC;MACrB;IACA,CAAK;IACD,IAAMG,IAAI,GAAG,SAAPA,IAAIA,CAAIH,KAAK,EAAK;MACtB,IAAIP,KAAK,CAACW,QAAQ,KAAK,IAAI,IAAIR,MAAA,CAAAC,UAAU,CAACX,aAAa,CAAC,IAAI,CAACA,aAAa,EAAE,EAC1E;MACF,IAAMmB,UAAU,GAAGX,gBAAgB,CAACO,KAAK,IAAIK,IAAA,CAAAC,QAAQ;MACrD,IAAIF,UAAU,EAAE;QACdb,IAAI,CAACjB,cAAc,EAAE,IAAI,CAAC;MAClC;MACM,IAAIuB,oBAAoB,CAACG,KAAK,IAAI,CAACI,UAAU,EAAE;QAC7CN,MAAM,CAACC,KAAK,CAAC;MACrB;IACA,CAAK;IACD,IAAMQ,IAAI,GAAG,SAAPA,IAAIA,CAAIR,KAAK,EAAK;MACtB,IAAIP,KAAK,CAACW,QAAQ,KAAK,IAAI,IAAI,CAACE,IAAA,CAAAC,QAAQ,EACtC;MACF,IAAMF,UAAU,GAAGX,gBAAgB,CAACO,KAAK,IAAIK,IAAA,CAAAC,QAAQ;MACrD,IAAIF,UAAU,EAAE;QACdb,IAAI,CAACjB,cAAc,EAAE,KAAK,CAAC;MACnC;MACM,IAAIuB,oBAAoB,CAACG,KAAK,IAAI,CAACI,UAAU,EAAE;QAC7CH,MAAM,CAACF,KAAK,CAAC;MACrB;IACA,CAAK;IACD,IAAMS,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,GAAG,EAAK;MACxB,IAAI,CAACC,KAAA,CAAAC,SAAS,CAACF,GAAG,CAAC,EACjB;MACF,IAAIjB,KAAK,CAACW,QAAQ,IAAIM,GAAG,EAAE;QACzB,IAAIhB,gBAAgB,CAACO,KAAK,EAAE;UAC1BT,IAAI,CAACjB,cAAc,EAAE,KAAK,CAAC;QACrC;MACA,CAAO,MAAM,IAAIQ,SAAS,CAACkB,KAAK,KAAKS,GAAG,EAAE;QAClC,IAAIA,GAAG,EAAE;UACPX,MAAM,EAAE;QAClB,CAAS,MAAM;UACLG,MAAM,EAAE;QAClB;MACA;IACA,CAAK;IACD,IAAMW,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;MACnB,IAAI9B,SAAS,CAACkB,KAAK,EAAE;QACnBO,IAAI,EAAE;MACd,CAAO,MAAM;QACLL,IAAI,EAAE;MACd;IACA,CAAK;IACDb,GAAA,CAAAwB,KAAK,CAAC;MAAA,OAAMrB,KAAK,CAACnB,IAAI,CAAC;IAAA,GAAEmC,QAAQ,CAAC;IAClC,IAAIxB,0BAA0B,IAAII,QAAQ,CAAC0B,UAAU,CAACC,MAAM,CAACC,gBAAgB,CAACC,MAAM,KAAK,KAAK,CAAC,EAAE;MAC/F5B,GAAA,CAAAwB,KAAK,CAAC;QAAA,OAAAK,aAAA,KACD9B,QAAQ,CAAC+B,KAAK,CAACF,MAAM;MAAA,CACxB,EAAE,YAAM;QACR,IAAIjC,0BAA0B,CAACgB,KAAK,IAAIlB,SAAS,CAACkB,KAAK,EAAE;UACvDO,IAAI,EAAE;QAChB;MACA,CAAO,CAAC;IACR;IACIlB,GAAA,CAAA+B,SAAS,CAAC,YAAM;MACdZ,QAAQ,CAAChB,KAAK,CAACnB,IAAI,CAAC,CAAC;IAC3B,CAAK,CAAC;IACF,OAAO;MACLkC,IAAI,EAAJA,IAAI;MACJL,IAAI,EAAJA,IAAI;MACJU,MAAM,EAANA,MAAM;MACNnB,gBAAgB,EAAhBA;IACN,CAAK;EACL,CAAG;EACD,OAAO;IACL4B,cAAc,EAAEzC,eAAe;IAC/B0C,mBAAmB,EAAE5C,oBAAoB;IACzC6C,mBAAmB,EAAE9C;EACzB,CAAG;AACH;AACK,IAAA+C,qBAAA,GAAgEpD,2BAA2B,CAAC,YAAY;EAArGiD,cAAc,GAAAG,qBAAA,CAAdH,cAAc;EAAEC,mBAAmB,GAAAE,qBAAA,CAAnBF,mBAAmB;EAAEC,mBAAmB,GAAAC,qBAAA,CAAnBD,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}