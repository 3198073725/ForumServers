{"ast":null,"code":"import _toConsumableArray from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, withKeys as _withKeys, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"post-list-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"filter-container\"\n};\nvar _hoisted_3 = {\n  \"class\": \"filter-item\"\n};\nvar _hoisted_4 = {\n  \"class\": \"filter-item\"\n};\nvar _hoisted_5 = {\n  \"class\": \"filter-item\"\n};\nvar _hoisted_6 = {\n  \"class\": \"filter-item\"\n};\nvar _hoisted_7 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_8 = {\n  key: 1\n};\nvar _hoisted_9 = {\n  key: 0,\n  \"class\": \"empty-posts\"\n};\nvar _hoisted_10 = {\n  key: 1,\n  \"class\": \"post-list\"\n};\nvar _hoisted_11 = [\"onClick\"];\nvar _hoisted_12 = {\n  \"class\": \"post-title\"\n};\nvar _hoisted_13 = {\n  \"class\": \"post-meta\"\n};\nvar _hoisted_14 = {\n  \"class\": \"post-board\"\n};\nvar _hoisted_15 = [\"onClick\"];\nvar _hoisted_16 = {\n  \"class\": \"post-stats\"\n};\nvar _hoisted_17 = {\n  \"class\": \"post-time\"\n};\nvar _hoisted_18 = {\n  \"class\": \"pagination-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_option = _resolveComponent(\"el-option\");\n  var _component_el_select = _resolveComponent(\"el-select\");\n  var _component_Search = _resolveComponent(\"Search\");\n  var _component_el_icon = _resolveComponent(\"el-icon\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  var _component_Document = _resolveComponent(\"Document\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_Grid = _resolveComponent(\"Grid\");\n  var _component_User = _resolveComponent(\"User\");\n  var _component_View = _resolveComponent(\"View\");\n  var _component_Star = _resolveComponent(\"Star\");\n  var _component_ChatDotRound = _resolveComponent(\"ChatDotRound\");\n  var _component_el_pagination = _resolveComponent(\"el-pagination\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 顶部过滤器 \"), _createVNode(_component_el_card, {\n    \"class\": \"filter-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_select, {\n        modelValue: $data.listQuery.board,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return $data.listQuery.board = $event;\n        }),\n        placeholder: \"选择板块\",\n        clearable: \"\",\n        onChange: $options.handleFilter,\n        style: {\n          \"width\": \"120px\"\n        }\n      }, {\n        \"default\": _withCtx(function () {\n          return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.boardOptions, function (board) {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: board.id,\n              label: board.name,\n              value: board.id\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_select, {\n        modelValue: $data.listQuery.ordering,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n          return $data.listQuery.ordering = $event;\n        }),\n        placeholder: \"排序方式\",\n        onChange: $options.handleFilter,\n        style: {\n          \"width\": \"120px\"\n        }\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_option, {\n            label: \"最新发布\",\n            value: \"-created_at\"\n          }), _createVNode(_component_el_option, {\n            label: \"最多浏览\",\n            value: \"-views\"\n          }), _createVNode(_component_el_option, {\n            label: \"最多点赞\",\n            value: \"-likes_count\"\n          }), _createVNode(_component_el_option, {\n            label: \"最多评论\",\n            value: \"-comments_count\"\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_input, {\n        modelValue: $data.listQuery.search,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n          return $data.listQuery.search = $event;\n        }),\n        placeholder: \"搜索帖子\",\n        style: {\n          \"width\": \"200px\"\n        },\n        clearable: \"\",\n        onKeyup: _withKeys($options.handleFilter, [\"enter\"]),\n        onClear: $options.handleFilter\n      }, {\n        append: _withCtx(function () {\n          return [_createVNode(_component_el_button, {\n            onClick: $options.handleFilter\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_icon, null, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_Search)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\", \"onKeyup\", \"onClear\"])]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.handleCreatePost\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[3] || (_cache[3] = [_createTextVNode(\"发布新帖\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [3]\n      }, 8 /* PROPS */, [\"onClick\"])])])];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 帖子列表 \"), _createVNode(_component_el_card, {\n    \"class\": \"post-list-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createVNode(_component_el_skeleton, {\n        rows: 10,\n        animated: \"\"\n      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [$data.posts.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createVNode(_component_el_icon, {\n        size: 48\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_Document)];\n        }),\n        _: 1 /* STABLE */\n      }), _cache[4] || (_cache[4] = _createElementVNode(\"p\", null, \"暂无帖子，快来发布第一篇帖子吧！\", -1 /* HOISTED */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, function (post) {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: post.id,\n          \"class\": \"post-item\",\n          onClick: function onClick($event) {\n            return $options.viewPost(post);\n          }\n        }, [_createElementVNode(\"div\", _hoisted_12, [post.is_pinned ? (_openBlock(), _createBlock(_component_el_tag, {\n          key: 0,\n          size: \"small\",\n          type: \"danger\"\n        }, {\n          \"default\": _withCtx(function () {\n            return _toConsumableArray(_cache[5] || (_cache[5] = [_createTextVNode(\"置顶\")]));\n          }),\n          _: 1 /* STABLE */,\n          __: [5]\n        })) : _createCommentVNode(\"v-if\", true), post.is_featured ? (_openBlock(), _createBlock(_component_el_tag, {\n          key: 1,\n          size: \"small\",\n          type: \"success\"\n        }, {\n          \"default\": _withCtx(function () {\n            return _toConsumableArray(_cache[6] || (_cache[6] = [_createTextVNode(\"精华\")]));\n          }),\n          _: 1 /* STABLE */,\n          __: [6]\n        })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"span\", null, _toDisplayString(post.title), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_createVNode(_component_el_icon, null, {\n          \"default\": _withCtx(function () {\n            return [_createVNode(_component_Grid)];\n          }),\n          _: 1 /* STABLE */\n        }), _createElementVNode(\"span\", null, _toDisplayString(post.board_name), 1 /* TEXT */)]), _createElementVNode(\"div\", {\n          \"class\": \"post-author\",\n          onClick: _withModifiers(function ($event) {\n            var _post$user;\n            return $options.goToUserProfile((_post$user = post.user) === null || _post$user === void 0 ? void 0 : _post$user.id);\n          }, [\"stop\"]),\n          style: {\n            \"cursor\": \"pointer\"\n          }\n        }, [_createVNode(_component_el_icon, null, {\n          \"default\": _withCtx(function () {\n            return [_createVNode(_component_User)];\n          }),\n          _: 1 /* STABLE */\n        }), _createElementVNode(\"span\", null, _toDisplayString(post.user.nickname || post.user.username), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_15), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"span\", null, [_createVNode(_component_el_icon, null, {\n          \"default\": _withCtx(function () {\n            return [_createVNode(_component_View)];\n          }),\n          _: 1 /* STABLE */\n        }), _createTextVNode(\" \" + _toDisplayString(post.views), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_createVNode(_component_el_icon, null, {\n          \"default\": _withCtx(function () {\n            return [_createVNode(_component_Star)];\n          }),\n          _: 1 /* STABLE */\n        }), _createTextVNode(\" \" + _toDisplayString(post.likes_count), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_createVNode(_component_el_icon, null, {\n          \"default\": _withCtx(function () {\n            return [_createVNode(_component_ChatDotRound)];\n          }),\n          _: 1 /* STABLE */\n        }), _createTextVNode(\" \" + _toDisplayString(post.comments_count), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_17, _toDisplayString($options.formatDate(post.created_at)), 1 /* TEXT */)])], 8 /* PROPS */, _hoisted_11);\n      }), 128 /* KEYED_FRAGMENT */))])), _createCommentVNode(\" 分页 \"), _createElementVNode(\"div\", _hoisted_18, [_createVNode(_component_el_pagination, {\n        background: \"\",\n        layout: \"prev, pager, next\",\n        total: $data.total,\n        \"page-size\": $data.listQuery.limit,\n        \"current-page\": $data.listQuery.page,\n        onCurrentChange: $options.handlePageChange\n      }, null, 8 /* PROPS */, [\"total\", \"page-size\", \"current-page\", \"onCurrentChange\"])])]))];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_el_card","_withCtx","_createElementVNode","_hoisted_2","_hoisted_3","_component_el_select","modelValue","$data","listQuery","board","_cache","$event","placeholder","clearable","onChange","$options","handleFilter","style","_Fragment","_renderList","boardOptions","_createBlock","_component_el_option","id","label","name","value","_","_hoisted_4","ordering","_hoisted_5","_component_el_input","search","onKeyup","_withKeys","onClear","append","_component_el_button","onClick","_component_el_icon","_component_Search","_hoisted_6","type","handleCreatePost","_createTextVNode","__","loading","_hoisted_7","_component_el_skeleton","rows","animated","_hoisted_8","posts","length","_hoisted_9","size","_component_Document","_hoisted_10","post","viewPost","_hoisted_12","is_pinned","_component_el_tag","_toConsumableArray","is_featured","_toDisplayString","title","_hoisted_13","_hoisted_14","_component_Grid","board_name","_withModifiers","_post$user","goToUserProfile","user","_component_User","nickname","username","_hoisted_15","_hoisted_16","_component_View","views","_component_Star","likes_count","_component_ChatDotRound","comments_count","_hoisted_17","formatDate","created_at","_hoisted_11","_hoisted_18","_component_el_pagination","background","layout","total","limit","page","onCurrentChange","handlePageChange"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\post\\PostList.vue"],"sourcesContent":["<template>\n  <div class=\"post-list-container\">\n    <!-- 顶部过滤器 -->\n    <el-card class=\"filter-card\">\n      <div class=\"filter-container\">\n        <div class=\"filter-item\">\n          <el-select v-model=\"listQuery.board\" placeholder=\"选择板块\" clearable @change=\"handleFilter\" style=\"width: 120px;\">\n            <el-option\n              v-for=\"board in boardOptions\"\n              :key=\"board.id\"\n              :label=\"board.name\"\n              :value=\"board.id\"\n            >\n            </el-option>\n          </el-select>\n        </div>\n\n        <div class=\"filter-item\">\n          <el-select v-model=\"listQuery.ordering\" placeholder=\"排序方式\" @change=\"handleFilter\" style=\"width: 120px;\">\n            <el-option label=\"最新发布\" value=\"-created_at\"></el-option>\n            <el-option label=\"最多浏览\" value=\"-views\"></el-option>\n            <el-option label=\"最多点赞\" value=\"-likes_count\"></el-option>\n            <el-option label=\"最多评论\" value=\"-comments_count\"></el-option>\n          </el-select>\n        </div>\n\n        <div class=\"filter-item\">\n          <el-input\n            v-model=\"listQuery.search\"\n            placeholder=\"搜索帖子\"\n            style=\"width: 200px;\"\n            clearable\n            @keyup.enter=\"handleFilter\"\n            @clear=\"handleFilter\"\n          >\n            <template #append>\n              <el-button @click=\"handleFilter\">\n                <el-icon><Search /></el-icon>\n              </el-button>\n            </template>\n          </el-input>\n        </div>\n\n        <div class=\"filter-item\">\n          <el-button type=\"primary\" @click=\"handleCreatePost\">发布新帖</el-button>\n        </div>\n      </div>\n    </el-card>\n\n    <!-- 帖子列表 -->\n    <el-card class=\"post-list-card\">\n      <div v-if=\"loading\" class=\"loading-container\">\n        <el-skeleton :rows=\"10\" animated />\n      </div>\n      <div v-else>\n        <div v-if=\"posts.length === 0\" class=\"empty-posts\">\n          <el-icon :size=\"48\">\n            <Document />\n          </el-icon>\n          <p>暂无帖子，快来发布第一篇帖子吧！</p>\n        </div>\n        <div v-else class=\"post-list\">\n          <div\n            v-for=\"post in posts\"\n            :key=\"post.id\"\n            class=\"post-item\"\n            @click=\"viewPost(post)\"\n          >\n            <div class=\"post-title\">\n              <el-tag v-if=\"post.is_pinned\" size=\"small\" type=\"danger\">置顶</el-tag>\n              <el-tag v-if=\"post.is_featured\" size=\"small\" type=\"success\">精华</el-tag>\n              <span>{{ post.title }}</span>\n            </div>\n            <div class=\"post-meta\">\n              <div class=\"post-board\">\n                <el-icon><Grid /></el-icon>\n                <span>{{ post.board_name }}</span>\n              </div>\n              <div class=\"post-author\" @click.stop=\"goToUserProfile(post.user?.id)\" style=\"cursor: pointer;\">\n                <el-icon><User /></el-icon>\n                <span>{{ post.user.nickname || post.user.username }}</span>\n              </div>\n              <div class=\"post-stats\">\n                <span>\n                  <el-icon><View /></el-icon>\n                  {{ post.views }}\n                </span>\n                <span>\n                  <el-icon><Star /></el-icon>\n                  {{ post.likes_count }}\n                </span>\n                <span>\n                  <el-icon><ChatDotRound /></el-icon>\n                  {{ post.comments_count }}\n                </span>\n              </div>\n              <div class=\"post-time\">{{ formatDate(post.created_at) }}</div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 分页 -->\n        <div class=\"pagination-container\">\n          <el-pagination\n            background\n            layout=\"prev, pager, next\"\n            :total=\"total\"\n            :page-size=\"listQuery.limit\"\n            :current-page=\"listQuery.page\"\n            @current-change=\"handlePageChange\"\n          >\n          </el-pagination>\n        </div>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { getPostList } from '@/api/post'\nimport { getBoardList } from '@/api/board'\nimport { formatDateTime } from '@/utils/index'\nimport { mapGetters } from 'vuex'\n\n// 是否启用调试日志\nconst DEBUG = false;\n\n// 自定义日志函数，可以通过DEBUG开关控制\nconst log = (...args) => {\n  if (DEBUG) {\n    console.log(...args);\n  }\n};\n\n// 格式化日期函数\nconst formatDate = (date) => {\n  return formatDateTime(date)\n}\n\nexport default {\n  name: 'PostList',\n  data() {\n    return {\n      loading: false,\n      posts: [],\n      total: 0,\n      boardOptions: [],\n      listQuery: {\n        page: 1,\n        limit: 10,\n        board: null,\n        ordering: '-created_at',\n        search: ''\n      }\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'isLoggedIn'\n    ]),\n    isLogin() {\n      return this.isLoggedIn\n    }\n  },\n  created() {\n    log('PostList组件created，登录状态:', this.isLogin, '认证状态:', this.isAuthenticated)\n    this.fetchBoardOptions()\n    this.fetchPosts()\n  },\n  methods: {\n    formatDate,\n\n    // 获取板块选项\n    async fetchBoardOptions() {\n      try {\n        const response = await getBoardList()\n        if (response.code === 0) {\n          this.boardOptions = response.data\n        }\n      } catch (error) {\n        log('获取板块列表失败:', error)\n      }\n    },\n\n    // 获取帖子列表\n    async fetchPosts() {\n      this.loading = true\n      try {\n        const params = {\n          page: this.listQuery.page,\n          page_size: this.listQuery.limit,\n          ordering: this.listQuery.ordering\n        }\n\n        if (this.listQuery.board) {\n          params.board = this.listQuery.board\n        }\n\n        if (this.listQuery.search) {\n          params.search = this.listQuery.search\n        }\n\n        log('组件开始获取帖子列表，参数:', params)\n        const response = await getPostList(params)\n        log('组件收到帖子列表响应:', response)\n        \n        // 处理响应\n        this.processPostsResponse(response)\n      } catch (error) {\n        log('获取帖子列表失败:', error)\n        // 设置空列表\n        this.posts = []\n        this.total = 0\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    // 处理帖子列表响应\n    processPostsResponse(response) {\n      // 关闭调试日志\n      const DEBUG_THIS = false;\n      \n      // 如果响应为空，设置空帖子列表\n      if (!response) {\n        if (DEBUG_THIS) console.log('帖子列表响应为空，设置空帖子列表');\n        this.posts = [];\n        this.total = 0;\n        return;\n      }\n      \n      if (DEBUG_THIS) console.log('处理帖子列表响应:', response);\n      \n      // 提取帖子数据和总数\n      let posts = [];\n      let total = 0;\n      \n      try {\n      if (response.data && response.data.results) {\n        // 标准格式：{data: {results: [...], count: 10}}\n          if (DEBUG_THIS) console.log('标准格式响应');\n          posts = response.data.results || [];\n          total = response.data.count || 0;\n      } else if (response.results) {\n        // 直接结果格式：{results: [...], count: 10}\n          if (DEBUG_THIS) console.log('直接结果格式响应');\n          posts = response.results || [];\n          total = response.count || 0;\n      } else if (Array.isArray(response)) {\n        // 数组格式：[...]\n          if (DEBUG_THIS) console.log('数组格式响应');\n          posts = response;\n          total = response.length;\n      } else if (response.data && Array.isArray(response.data)) {\n        // 数组包装格式：{data: [...]}\n          if (DEBUG_THIS) console.log('数组包装格式响应');\n          posts = response.data;\n          total = response.data.length;\n        } else {\n          // 其他情况，尝试从响应中提取有用信息\n          if (DEBUG_THIS) console.log('无法识别的响应格式，尝试提取数据');\n          \n          if (response.data && typeof response.data === 'object') {\n            // 尝试将data作为单个帖子对象\n            if (DEBUG_THIS) console.log('尝试将data作为单个帖子对象');\n            posts = [response.data];\n            total = 1;\n          } else if (typeof response === 'object' && !Array.isArray(response)) {\n            // 尝试将整个响应作为单个帖子对象\n            if (DEBUG_THIS) console.log('尝试将整个响应作为单个帖子对象');\n            posts = [response];\n            total = 1;\n      } else {\n            // 无法提取，使用空数组\n            if (DEBUG_THIS) console.log('无法从响应中提取帖子数据，使用空数组');\n            this.posts = [];\n            this.total = 0;\n            return;\n          }\n        }\n        \n        // 确保posts是数组\n        if (!Array.isArray(posts)) {\n          if (DEBUG_THIS) console.log('帖子数据不是数组，使用空数组');\n          this.posts = [];\n          this.total = 0;\n          return;\n      }\n      \n      // 确保帖子数据有效\n        posts = posts.filter(post => post && typeof post === 'object');\n        \n        if (DEBUG_THIS) console.log('过滤后的帖子数据:', posts);\n      \n      // 确保每个帖子对象包含必要的字段\n      posts = posts.map(post => {\n        // 确保user字段存在\n        const user = post.user || {\n          id: 0,\n          username: 'unknown',\n          nickname: '未知用户',\n          avatar_url: ''\n          };\n        \n        // 确保board_name字段存在\n          let board_name = post.board_name;\n        if (!board_name && post.board) {\n          if (typeof post.board === 'object') {\n              board_name = post.board.name;\n          } else {\n              board_name = '板块' + post.board;\n          }\n        }\n        \n        // 返回处理后的帖子对象\n        return {\n          ...post,\n          user,\n          board_name: board_name || '未知板块',\n          title: post.title || '无标题',\n          content: post.content || '',\n          created_at: post.created_at || new Date().toISOString(),\n          views: post.views || 0,\n          likes_count: post.likes_count || 0,\n          comments_count: post.comments_count || 0,\n          is_pinned: post.is_pinned || false,\n          is_featured: post.is_featured || false\n          };\n        });\n        \n        if (DEBUG_THIS) console.log('最终处理后的帖子数据:', posts);\n      \n        this.posts = posts;\n        this.total = total;\n      } catch (error) {\n        console.error('处理帖子列表响应时发生错误:', error);\n        // 出现错误时，确保显示空列表而不是崩溃\n        this.posts = [];\n        this.total = 0;\n      }\n    },\n\n    // 筛选\n    handleFilter() {\n      this.listQuery.page = 1\n      this.fetchPosts()\n    },\n\n    // 页码变化\n    handlePageChange(page) {\n      this.listQuery.page = page\n      this.fetchPosts()\n    },\n\n    // 查看帖子\n    viewPost(post) {\n      this.$router.push({ name: 'PostDetail', params: { id: post.id } })\n    },\n\n    // 跳转到用户主页\n    goToUserProfile(userId) {\n      if (userId) {\n        this.$router.push({ name: 'UserProfile', params: { id: userId } });\n        // 阻止冒泡，避免触发查看帖子\n        event.stopPropagation();\n      } else {\n        this.$message.warning('无法获取用户信息');\n      }\n    },\n\n    // 创建帖子\n    handleCreatePost() {\n      log('点击发布新帖按钮, 登录状态:', this.isLogin, '认证状态:', this.isAuthenticated)\n\n      if (!this.isLogin) {\n        log('未登录，跳转到登录页面')\n        this.$message.warning('请先登录才能发布帖子')\n        this.$router.push({ name: 'Login', query: { redirect: '/post/create' } })\n        return\n      }\n\n      log('已登录，跳转到发帖页面')\n      // 清除可能的成功消息提示\n      this.$message.closeAll()\n      this.$router.push({ name: 'PostCreate' })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.post-list-container {\n  padding: 20px;\n}\n\n.filter-card,\n.post-list-card {\n  margin-bottom: 20px;\n}\n\n.filter-container {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.filter-item {\n  margin-right: 15px;\n  margin-bottom: 10px;\n}\n\n/* 确保下拉框有足够宽度 */\n:deep(.el-select) {\n  min-width: 120px;\n}\n\n:deep(.el-select .el-input) {\n  width: 100%;\n}\n\n:deep(.el-select-dropdown__item) {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.loading-container {\n  padding: 20px 0;\n}\n\n.empty-posts {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 40px 0;\n  color: #909399;\n}\n\n.empty-posts .el-icon {\n  margin-bottom: 10px;\n}\n\n.post-list {\n  margin-bottom: 20px;\n}\n\n.post-item {\n  padding: 15px;\n  border-bottom: 1px solid #EBEEF5;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.post-item:hover {\n  background-color: #F5F7FA;\n}\n\n.post-item:last-child {\n  border-bottom: none;\n}\n\n.post-title {\n  font-size: 16px;\n  font-weight: bold;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n}\n\n.post-title .el-tag {\n  margin-right: 8px;\n}\n\n.post-meta {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 13px;\n  color: #909399;\n}\n\n.post-board,\n.post-author {\n  display: flex;\n  align-items: center;\n}\n\n.post-board .el-icon,\n.post-author .el-icon {\n  margin-right: 5px;\n}\n\n.post-stats {\n  display: flex;\n}\n\n.post-stats span {\n  margin-right: 15px;\n  display: flex;\n  align-items: center;\n}\n\n.post-stats span .el-icon {\n  margin-right: 5px;\n}\n\n.pagination-container {\n  text-align: center;\n  margin-top: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}