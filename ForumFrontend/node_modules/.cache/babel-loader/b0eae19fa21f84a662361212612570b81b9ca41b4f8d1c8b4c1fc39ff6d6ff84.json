{"ast":null,"code":"import _toConsumableArray from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"ranking-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"ranking-section\"\n};\nvar _hoisted_3 = {\n  \"class\": \"section-header\"\n};\nvar _hoisted_4 = {\n  \"class\": \"ranking-list\"\n};\nvar _hoisted_5 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_6 = {\n  key: 2,\n  \"class\": \"ranking-items\"\n};\nvar _hoisted_7 = {\n  \"class\": \"user-avatar\"\n};\nvar _hoisted_8 = {\n  \"class\": \"user-info\"\n};\nvar _hoisted_9 = {\n  \"class\": \"user-name\"\n};\nvar _hoisted_10 = {\n  \"class\": \"user-stats\"\n};\nvar _hoisted_11 = {\n  \"class\": \"register-time\"\n};\nvar _hoisted_12 = {\n  \"class\": \"ranking-value\"\n};\nvar _hoisted_13 = {\n  \"class\": \"ranking-section\"\n};\nvar _hoisted_14 = {\n  \"class\": \"section-header\"\n};\nvar _hoisted_15 = {\n  \"class\": \"ranking-list\"\n};\nvar _hoisted_16 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_17 = {\n  key: 2,\n  \"class\": \"ranking-items\"\n};\nvar _hoisted_18 = {\n  \"class\": \"post-info\"\n};\nvar _hoisted_19 = {\n  \"class\": \"post-title\"\n};\nvar _hoisted_20 = {\n  \"class\": \"post-meta\"\n};\nvar _hoisted_21 = {\n  \"class\": \"ranking-stats\"\n};\nvar _hoisted_22 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_23 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_24 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_25 = {\n  \"class\": \"ranking-section\"\n};\nvar _hoisted_26 = {\n  \"class\": \"section-header\"\n};\nvar _hoisted_27 = {\n  \"class\": \"ranking-list\"\n};\nvar _hoisted_28 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_29 = {\n  key: 2,\n  \"class\": \"ranking-items\"\n};\nvar _hoisted_30 = {\n  \"class\": \"board-info\"\n};\nvar _hoisted_31 = {\n  \"class\": \"board-name\"\n};\nvar _hoisted_32 = {\n  \"class\": \"board-description\"\n};\nvar _hoisted_33 = {\n  \"class\": \"ranking-stats\"\n};\nvar _hoisted_34 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_35 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_36 = {\n  \"class\": \"stat-item\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_option = _resolveComponent(\"el-option\");\n  var _component_el_select = _resolveComponent(\"el-select\");\n  var _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  var _component_el_empty = _resolveComponent(\"el-empty\");\n  var _component_user_avatar = _resolveComponent(\"user-avatar\");\n  var _component_router_link = _resolveComponent(\"router-link\");\n  var _component_Collection = _resolveComponent(\"Collection\");\n  var _component_el_icon = _resolveComponent(\"el-icon\");\n  var _component_StarFilled = _resolveComponent(\"StarFilled\");\n  var _component_Timer = _resolveComponent(\"Timer\");\n  var _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_View = _resolveComponent(\"View\");\n  var _component_ChatDotRound = _resolveComponent(\"ChatDotRound\");\n  var _component_Star = _resolveComponent(\"Star\");\n  var _component_Document = _resolveComponent(\"Document\");\n  var _component_User = _resolveComponent(\"User\");\n  var _component_el_tabs = _resolveComponent(\"el-tabs\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[9] || (_cache[9] = _createElementVNode(\"div\", {\n    \"class\": \"page-header\"\n  }, [_createElementVNode(\"h1\", null, \"排行榜\"), _createElementVNode(\"p\", null, \"查看论坛中最活跃的用户、最热门的帖子和板块\")], -1 /* HOISTED */)), _createVNode(_component_el_tabs, {\n    modelValue: $setup.activeTab,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n      return $setup.activeTab = $event;\n    }),\n    \"class\": \"ranking-tabs\",\n    onTabClick: $setup.handleTabChange\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_tab_pane, {\n        label: \"用户排行\",\n        name: \"users\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"活跃用户排行\", -1 /* HOISTED */)), _createVNode(_component_el_select, {\n            modelValue: $setup.userRankingType,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n              return $setup.userRankingType = $event;\n            }),\n            placeholder: \"排序方式\",\n            size: \"small\",\n            onChange: $setup.handleUserRankingTypeChange\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_option, {\n                label: \"发帖数量\",\n                value: \"posts_count\"\n              }), _createVNode(_component_el_option, {\n                label: \"获赞数量\",\n                value: \"likes_received\"\n              }), _createVNode(_component_el_option, {\n                label: \"注册时间\",\n                value: \"join_date\"\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]), _createElementVNode(\"div\", _hoisted_4, [$setup.loading.users ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_el_skeleton, {\n            rows: 10,\n            animated: \"\"\n          })])) : !$setup.userRanking.length ? (_openBlock(), _createBlock(_component_el_empty, {\n            key: 1,\n            description: \"暂无数据\"\n          })) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.userRanking, function (user, index) {\n            return _openBlock(), _createElementBlock(\"div\", {\n              key: user.id,\n              \"class\": \"ranking-item\"\n            }, [_createElementVNode(\"div\", {\n              \"class\": _normalizeClass([\"rank-number\", {\n                'top-three': index < 3\n              }])\n            }, _toDisplayString(index + 1), 3 /* TEXT, CLASS */), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_user_avatar, {\n              user: user,\n              size: 40\n            }, null, 8 /* PROPS */, [\"user\"])]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_router_link, {\n              to: \"/profile/\".concat(user.id)\n            }, {\n              \"default\": _withCtx(function () {\n                return [_createTextVNode(_toDisplayString(user.nickname || user.username), 1 /* TEXT */)];\n              }),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"span\", null, [_createVNode(_component_el_icon, null, {\n              \"default\": _withCtx(function () {\n                return [_createVNode(_component_Collection)];\n              }),\n              _: 1 /* STABLE */\n            }), _createTextVNode(\" 发帖: \" + _toDisplayString(user.posts_count || 0), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_createVNode(_component_el_icon, null, {\n              \"default\": _withCtx(function () {\n                return [_createVNode(_component_StarFilled)];\n              }),\n              _: 1 /* STABLE */\n            }), _createTextVNode(\" 获赞: \" + _toDisplayString(user.likes_received || 0), 1 /* TEXT */)]), _createElementVNode(\"span\", _hoisted_11, [_createVNode(_component_el_icon, null, {\n              \"default\": _withCtx(function () {\n                return [_createVNode(_component_Timer)];\n              }),\n              _: 1 /* STABLE */\n            }), _createTextVNode(\" 注册于: \" + _toDisplayString($setup.formatDate(user.created_at || user.date_joined)), 1 /* TEXT */)])])]), _createElementVNode(\"div\", _hoisted_12, _toDisplayString($setup.getRankingValue(user, $setup.userRankingType)), 1 /* TEXT */)]);\n          }), 128 /* KEYED_FRAGMENT */))]))])])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_tab_pane, {\n        label: \"帖子排行\",\n        name: \"posts\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_cache[5] || (_cache[5] = _createElementVNode(\"h2\", null, \"热门帖子排行\", -1 /* HOISTED */)), _createVNode(_component_el_select, {\n            modelValue: $setup.postRankingType,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n              return $setup.postRankingType = $event;\n            }),\n            placeholder: \"排序方式\",\n            size: \"small\",\n            onChange: $setup.handlePostRankingTypeChange\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_option, {\n                label: \"浏览量\",\n                value: \"views\"\n              }), _createVNode(_component_el_option, {\n                label: \"评论数\",\n                value: \"comments_count\"\n              }), _createVNode(_component_el_option, {\n                label: \"点赞数\",\n                value: \"likes_count\"\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]), _createElementVNode(\"div\", _hoisted_15, [$setup.loading.posts ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_createVNode(_component_el_skeleton, {\n            rows: 10,\n            animated: \"\"\n          })])) : !$setup.postRanking.length ? (_openBlock(), _createBlock(_component_el_empty, {\n            key: 1,\n            description: \"暂无数据\"\n          })) : (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.postRanking, function (post, index) {\n            return _openBlock(), _createElementBlock(\"div\", {\n              key: post.id,\n              \"class\": \"ranking-item\"\n            }, [_createElementVNode(\"div\", {\n              \"class\": _normalizeClass([\"rank-number\", {\n                'top-three': index < 3\n              }])\n            }, _toDisplayString(index + 1), 3 /* TEXT, CLASS */), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [_createVNode(_component_router_link, {\n              to: \"/posts/\".concat(post.id)\n            }, {\n              \"default\": _withCtx(function () {\n                return [_createTextVNode(_toDisplayString(post.title), 1 /* TEXT */)];\n              }),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), post.is_pinned ? (_openBlock(), _createBlock(_component_el_tag, {\n              key: 0,\n              size: \"small\",\n              type: \"success\"\n            }, {\n              \"default\": _withCtx(function () {\n                return _toConsumableArray(_cache[6] || (_cache[6] = [_createTextVNode(\"置顶\")]));\n              }),\n              _: 1 /* STABLE */,\n              __: [6]\n            })) : _createCommentVNode(\"v-if\", true), post.is_featured ? (_openBlock(), _createBlock(_component_el_tag, {\n              key: 1,\n              size: \"small\",\n              type: \"warning\"\n            }, {\n              \"default\": _withCtx(function () {\n                return _toConsumableArray(_cache[7] || (_cache[7] = [_createTextVNode(\"精华\")]));\n              }),\n              _: 1 /* STABLE */,\n              __: [7]\n            })) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"span\", null, \"作者: \" + _toDisplayString(post.user.nickname || post.user.username), 1 /* TEXT */), _createElementVNode(\"span\", null, \"板块: \" + _toDisplayString(post.board_name), 1 /* TEXT */), _createElementVNode(\"span\", null, \"发布于: \" + _toDisplayString($setup.formatDate(post.created_at)), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, [_createVNode(_component_el_icon, null, {\n              \"default\": _withCtx(function () {\n                return [_createVNode(_component_View)];\n              }),\n              _: 1 /* STABLE */\n            }), _createTextVNode(\" \" + _toDisplayString(post.views || 0), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_23, [_createVNode(_component_el_icon, null, {\n              \"default\": _withCtx(function () {\n                return [_createVNode(_component_ChatDotRound)];\n              }),\n              _: 1 /* STABLE */\n            }), _createTextVNode(\" \" + _toDisplayString(post.comments_count || 0), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_24, [_createVNode(_component_el_icon, null, {\n              \"default\": _withCtx(function () {\n                return [_createVNode(_component_Star)];\n              }),\n              _: 1 /* STABLE */\n            }), _createTextVNode(\" \" + _toDisplayString(post.likes_count || 0), 1 /* TEXT */)])])]);\n          }), 128 /* KEYED_FRAGMENT */))]))])])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_tab_pane, {\n        label: \"板块排行\",\n        name: \"boards\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"div\", _hoisted_26, [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"热门板块排行\", -1 /* HOISTED */)), _createVNode(_component_el_select, {\n            modelValue: $setup.boardRankingType,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n              return $setup.boardRankingType = $event;\n            }),\n            placeholder: \"排序方式\",\n            size: \"small\",\n            onChange: $setup.handleBoardRankingTypeChange\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_option, {\n                label: \"帖子数量\",\n                value: \"posts_count\"\n              }), _createVNode(_component_el_option, {\n                label: \"用户数量\",\n                value: \"users_count\"\n              }), _createVNode(_component_el_option, {\n                label: \"总浏览量\",\n                value: \"total_views\"\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]), _createElementVNode(\"div\", _hoisted_27, [$setup.loading.boards ? (_openBlock(), _createElementBlock(\"div\", _hoisted_28, [_createVNode(_component_el_skeleton, {\n            rows: 10,\n            animated: \"\"\n          })])) : !$setup.boardRanking.length ? (_openBlock(), _createBlock(_component_el_empty, {\n            key: 1,\n            description: \"暂无数据\"\n          })) : (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.boardRanking, function (board, index) {\n            return _openBlock(), _createElementBlock(\"div\", {\n              key: board.id,\n              \"class\": \"ranking-item\"\n            }, [_createElementVNode(\"div\", {\n              \"class\": _normalizeClass([\"rank-number\", {\n                'top-three': index < 3\n              }])\n            }, _toDisplayString(index + 1), 3 /* TEXT, CLASS */), _createElementVNode(\"div\", _hoisted_30, [_createElementVNode(\"div\", _hoisted_31, [_createVNode(_component_router_link, {\n              to: \"/boards/\".concat(board.id)\n            }, {\n              \"default\": _withCtx(function () {\n                return [_createTextVNode(_toDisplayString(board.name), 1 /* TEXT */)];\n              }),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]), _createElementVNode(\"div\", _hoisted_32, _toDisplayString(board.description), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_33, [_createElementVNode(\"div\", _hoisted_34, [_createVNode(_component_el_icon, null, {\n              \"default\": _withCtx(function () {\n                return [_createVNode(_component_Document)];\n              }),\n              _: 1 /* STABLE */\n            }), _createTextVNode(\" \" + _toDisplayString(board.posts_count || 0) + \" 帖子 \", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_35, [_createVNode(_component_el_icon, null, {\n              \"default\": _withCtx(function () {\n                return [_createVNode(_component_User)];\n              }),\n              _: 1 /* STABLE */\n            }), _createTextVNode(\" \" + _toDisplayString(board.users_count || 0) + \" 用户 \", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_36, [_createVNode(_component_el_icon, null, {\n              \"default\": _withCtx(function () {\n                return [_createVNode(_component_View)];\n              }),\n              _: 1 /* STABLE */\n            }), _createTextVNode(\" \" + _toDisplayString(board.total_views || 0) + \" 浏览 \", 1 /* TEXT */)])])]);\n          }), 128 /* KEYED_FRAGMENT */))]))])])];\n        }),\n        _: 1 /* STABLE */\n      })];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"onTabClick\"])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_el_tabs","modelValue","$setup","activeTab","_cache","$event","onTabClick","handleTabChange","_withCtx","_component_el_tab_pane","label","name","_hoisted_2","_hoisted_3","_component_el_select","userRankingType","placeholder","size","onChange","handleUserRankingTypeChange","_component_el_option","value","_","_hoisted_4","loading","users","_hoisted_5","_component_el_skeleton","rows","animated","userRanking","length","_createBlock","_component_el_empty","description","_hoisted_6","_Fragment","_renderList","user","index","id","_normalizeClass","_hoisted_7","_component_user_avatar","_hoisted_8","_hoisted_9","_component_router_link","to","concat","_createTextVNode","_toDisplayString","nickname","username","_hoisted_10","_component_el_icon","_component_Collection","posts_count","_component_StarFilled","likes_received","_hoisted_11","_component_Timer","formatDate","created_at","date_joined","_hoisted_12","getRankingValue","_hoisted_13","_hoisted_14","postRankingType","handlePostRankingTypeChange","_hoisted_15","posts","_hoisted_16","postRanking","_hoisted_17","post","_hoisted_18","_hoisted_19","title","is_pinned","_component_el_tag","type","_toConsumableArray","__","_createCommentVNode","is_featured","_hoisted_20","board_name","_hoisted_21","_hoisted_22","_component_View","views","_hoisted_23","_component_ChatDotRound","comments_count","_hoisted_24","_component_Star","likes_count","_hoisted_25","_hoisted_26","boardRankingType","handleBoardRankingTypeChange","_hoisted_27","boards","_hoisted_28","boardRanking","_hoisted_29","board","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_component_Document","_hoisted_35","_component_User","users_count","_hoisted_36","total_views"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\Ranking.vue"],"sourcesContent":["<template>\r\n  <div class=\"ranking-container\">\r\n    <div class=\"page-header\">\r\n      <h1>排行榜</h1>\r\n      <p>查看论坛中最活跃的用户、最热门的帖子和板块</p>\r\n    </div>\r\n\r\n    <el-tabs v-model=\"activeTab\" class=\"ranking-tabs\" @tab-click=\"handleTabChange\">\r\n      <el-tab-pane label=\"用户排行\" name=\"users\">\r\n        <div class=\"ranking-section\">\r\n          <div class=\"section-header\">\r\n            <h2>活跃用户排行</h2>\r\n            <el-select v-model=\"userRankingType\" placeholder=\"排序方式\" size=\"small\" @change=\"handleUserRankingTypeChange\">\r\n              <el-option label=\"发帖数量\" value=\"posts_count\" />\r\n              <el-option label=\"获赞数量\" value=\"likes_received\" />\r\n              <el-option label=\"注册时间\" value=\"join_date\" />\r\n            </el-select>\r\n          </div>\r\n\r\n          <div class=\"ranking-list\">\r\n            <div v-if=\"loading.users\" class=\"loading-container\">\r\n              <el-skeleton :rows=\"10\" animated />\r\n            </div>\r\n            <el-empty description=\"暂无数据\" v-else-if=\"!userRanking.length\"></el-empty>\r\n            <div v-else class=\"ranking-items\">\r\n              <div v-for=\"(user, index) in userRanking\" :key=\"user.id\" class=\"ranking-item\">\r\n                <div class=\"rank-number\" :class=\"{ 'top-three': index < 3 }\">{{ index + 1 }}</div>\r\n                <div class=\"user-avatar\">\r\n                  <user-avatar :user=\"user\" :size=\"40\" />\r\n                </div>\r\n                <div class=\"user-info\">\r\n                  <div class=\"user-name\">\r\n                    <router-link :to=\"`/profile/${user.id}`\">{{ user.nickname || user.username }}</router-link>\r\n                  </div>\r\n                  <div class=\"user-stats\">\r\n                    <span>\r\n                      <el-icon><Collection /></el-icon> 发帖: {{ user.posts_count || 0 }}\r\n                    </span>\r\n                    <span>\r\n                      <el-icon><StarFilled /></el-icon> 获赞: {{ user.likes_received || 0 }}\r\n                    </span>\r\n                    <span class=\"register-time\">\r\n                      <el-icon><Timer /></el-icon> 注册于: {{ formatDate(user.created_at || user.date_joined) }}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"ranking-value\">\r\n                  {{ getRankingValue(user, userRankingType) }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n\r\n      <el-tab-pane label=\"帖子排行\" name=\"posts\">\r\n        <div class=\"ranking-section\">\r\n          <div class=\"section-header\">\r\n            <h2>热门帖子排行</h2>\r\n            <el-select v-model=\"postRankingType\" placeholder=\"排序方式\" size=\"small\" @change=\"handlePostRankingTypeChange\">\r\n              <el-option label=\"浏览量\" value=\"views\" />\r\n              <el-option label=\"评论数\" value=\"comments_count\" />\r\n              <el-option label=\"点赞数\" value=\"likes_count\" />\r\n            </el-select>\r\n          </div>\r\n\r\n          <div class=\"ranking-list\">\r\n            <div v-if=\"loading.posts\" class=\"loading-container\">\r\n              <el-skeleton :rows=\"10\" animated />\r\n            </div>\r\n            <el-empty description=\"暂无数据\" v-else-if=\"!postRanking.length\"></el-empty>\r\n            <div v-else class=\"ranking-items\">\r\n              <div v-for=\"(post, index) in postRanking\" :key=\"post.id\" class=\"ranking-item\">\r\n                <div class=\"rank-number\" :class=\"{ 'top-three': index < 3 }\">{{ index + 1 }}</div>\r\n                <div class=\"post-info\">\r\n                  <div class=\"post-title\">\r\n                    <router-link :to=\"`/posts/${post.id}`\">{{ post.title }}</router-link>\r\n                    <el-tag size=\"small\" type=\"success\" v-if=\"post.is_pinned\">置顶</el-tag>\r\n                    <el-tag size=\"small\" type=\"warning\" v-if=\"post.is_featured\">精华</el-tag>\r\n                  </div>\r\n                  <div class=\"post-meta\">\r\n                    <span>作者: {{ post.user.nickname || post.user.username }}</span>\r\n                    <span>板块: {{ post.board_name }}</span>\r\n                    <span>发布于: {{ formatDate(post.created_at) }}</span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"ranking-stats\">\r\n                  <div class=\"stat-item\">\r\n                    <el-icon><View /></el-icon> {{ post.views || 0 }}\r\n                  </div>\r\n                  <div class=\"stat-item\">\r\n                    <el-icon><ChatDotRound /></el-icon> {{ post.comments_count || 0 }}\r\n                  </div>\r\n                  <div class=\"stat-item\">\r\n                    <el-icon><Star /></el-icon> {{ post.likes_count || 0 }}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n\r\n      <el-tab-pane label=\"板块排行\" name=\"boards\">\r\n        <div class=\"ranking-section\">\r\n          <div class=\"section-header\">\r\n            <h2>热门板块排行</h2>\r\n            <el-select v-model=\"boardRankingType\" placeholder=\"排序方式\" size=\"small\" @change=\"handleBoardRankingTypeChange\">\r\n              <el-option label=\"帖子数量\" value=\"posts_count\" />\r\n              <el-option label=\"用户数量\" value=\"users_count\" />\r\n              <el-option label=\"总浏览量\" value=\"total_views\" />\r\n            </el-select>\r\n          </div>\r\n\r\n          <div class=\"ranking-list\">\r\n            <div v-if=\"loading.boards\" class=\"loading-container\">\r\n              <el-skeleton :rows=\"10\" animated />\r\n            </div>\r\n            <el-empty description=\"暂无数据\" v-else-if=\"!boardRanking.length\"></el-empty>\r\n            <div v-else class=\"ranking-items\">\r\n              <div v-for=\"(board, index) in boardRanking\" :key=\"board.id\" class=\"ranking-item\">\r\n                <div class=\"rank-number\" :class=\"{ 'top-three': index < 3 }\">{{ index + 1 }}</div>\r\n                <div class=\"board-info\">\r\n                  <div class=\"board-name\">\r\n                    <router-link :to=\"`/boards/${board.id}`\">{{ board.name }}</router-link>\r\n                  </div>\r\n                  <div class=\"board-description\">\r\n                    {{ board.description }}\r\n                  </div>\r\n                </div>\r\n                <div class=\"ranking-stats\">\r\n                  <div class=\"stat-item\">\r\n                    <el-icon><Document /></el-icon> {{ board.posts_count || 0 }} 帖子\r\n                  </div>\r\n                  <div class=\"stat-item\">\r\n                    <el-icon><User /></el-icon> {{ board.users_count || 0 }} 用户\r\n                  </div>\r\n                  <div class=\"stat-item\">\r\n                    <el-icon><View /></el-icon> {{ board.total_views || 0 }} 浏览\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted, watch } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\nimport { View, ChatDotRound, Star, Document, User, Timer, Collection, StarFilled } from '@element-plus/icons-vue'\r\nimport { getHotUsers } from '../api/profile'\r\nimport { getPostList } from '../api/post'\r\nimport { getHotBoards } from '../api/board'\r\nimport { formatDateTime } from '../utils/index'\r\nimport UserAvatar from '../components/UserAvatar.vue'\r\n\r\nexport default {\r\n  name: 'Ranking',\r\n  components: {\r\n    UserAvatar,\r\n    View,\r\n    ChatDotRound,\r\n    Star,\r\n    Document,\r\n    User,\r\n    Timer,\r\n    Collection,\r\n    StarFilled\r\n  },\r\n  setup() {\r\n    const activeTab = ref('users')\r\n    const userRankingType = ref('posts_count')\r\n    const postRankingType = ref('views')\r\n    const boardRankingType = ref('posts_count')\r\n\r\n    const userRanking = ref([])\r\n    const postRanking = ref([])\r\n    const boardRanking = ref([])\r\n\r\n    const loading = reactive({\r\n      users: false,\r\n      posts: false,\r\n      boards: false\r\n    })\r\n\r\n    // 是否启用调试日志\r\n    const DEBUG = false;\r\n\r\n    // 自定义日志函数，可以通过DEBUG开关控制\r\n    const log = (...args) => {\r\n      if (DEBUG) {\r\n        console.log(...args);\r\n      }\r\n    };\r\n\r\n    // 格式化日期\r\n    const formatDate = (date) => {\r\n      if (!date) return '未知'\r\n      \r\n      try {\r\n        // 对于注册时间，使用更友好的格式\r\n        const dateObj = new Date(date)\r\n        if (isNaN(dateObj.getTime())) return '格式错误'\r\n        \r\n        const now = new Date()\r\n        const diffYears = now.getFullYear() - dateObj.getFullYear()\r\n        \r\n        if (diffYears > 0) {\r\n          // 超过一年显示年月日\r\n          return formatDateTime(date, 'YYYY年MM月DD日')\r\n        } else {\r\n          // 不到一年显示月日和具体时间\r\n          return formatDateTime(date, 'MM月DD日 HH:mm')\r\n        }\r\n      } catch (error) {\r\n        console.error('日期格式化错误:', error)\r\n        return '格式错误'\r\n      }\r\n    }\r\n\r\n    // 根据排序类型获取排行值\r\n    const getRankingValue = (item, type) => {\r\n      switch (type) {\r\n        case 'posts_count':\r\n          return `${item.posts_count || 0} 帖子`\r\n        case 'likes_received':\r\n          return `${item.likes_received || 0} 获赞`\r\n        case 'join_date':\r\n          return formatDate(item.created_at || item.date_joined)\r\n        default:\r\n          return item[type] || 0\r\n      }\r\n    }\r\n\r\n    // 获取用户排行\r\n    const fetchUserRanking = async () => {\r\n      loading.users = true\r\n      try {\r\n        const response = await getHotUsers(20)\r\n        \r\n        if (response && response.code === 0 && response.data) {\r\n          userRanking.value = response.data\r\n        } else if (response && Array.isArray(response)) {\r\n          userRanking.value = response\r\n        } else if (response && response.status === 0 && response.data) {\r\n          userRanking.value = response.data\r\n        } else {\r\n          console.error('获取用户排行失败:', response ? response.msg : '未知错误')\r\n          userRanking.value = []\r\n        }\r\n        \r\n        // 根据当前选择的排序类型排序\r\n        sortUserRanking()\r\n      } catch (error) {\r\n        console.error('获取用户排行失败:', error)\r\n        ElMessage.error('获取用户排行失败，请稍后再试')\r\n        userRanking.value = []\r\n      } finally {\r\n        loading.users = false\r\n      }\r\n    }\r\n\r\n    // 获取帖子排行\r\n    const fetchPostRanking = async () => {\r\n      loading.posts = true\r\n      try {\r\n        const response = await getPostList({\r\n          page: 1,\r\n          page_size: 20,\r\n          ordering: `-${postRankingType.value}`\r\n        })\r\n\r\n        if (response && response.count !== undefined) {\r\n          postRanking.value = response.results || []\r\n        } else if (response && response.code === 0 && response.data && response.data.results) {\r\n          postRanking.value = response.data.results || []\r\n        } else if (response && response.code === 0 && Array.isArray(response.data)) {\r\n          postRanking.value = response.data || []\r\n        } else {\r\n          console.error('获取帖子排行失败:', response ? response.msg : '未知错误')\r\n          postRanking.value = []\r\n        }\r\n      } catch (error) {\r\n        console.error('获取帖子排行失败:', error)\r\n        ElMessage.error('获取帖子排行失败，请稍后再试')\r\n        postRanking.value = []\r\n      } finally {\r\n        loading.posts = false\r\n      }\r\n    }\r\n\r\n    // 获取板块排行\r\n    const fetchBoardRanking = async () => {\r\n      loading.boards = true\r\n      try {\r\n        const response = await getHotBoards(20)\r\n\r\n        if (response && response.status === 0 && response.data) {\r\n          boardRanking.value = response.data\r\n        } else if (response && response.code === 0 && response.data) {\r\n          boardRanking.value = response.data\r\n        } else if (response && Array.isArray(response)) {\r\n          boardRanking.value = response\r\n        } else {\r\n          console.error('获取板块排行失败:', response ? response.msg : '未知错误')\r\n          boardRanking.value = []\r\n        }\r\n        \r\n        // 根据当前选择的排序类型排序\r\n        sortBoardRanking()\r\n      } catch (error) {\r\n        console.error('获取板块排行失败:', error)\r\n        ElMessage.error('获取板块排行失败，请稍后再试')\r\n        boardRanking.value = []\r\n      } finally {\r\n        loading.boards = false\r\n      }\r\n    }\r\n\r\n    // 排序用户排行榜\r\n    const sortUserRanking = () => {\r\n      userRanking.value.sort((a, b) => {\r\n        const valueA = a[userRankingType.value] || 0\r\n        const valueB = b[userRankingType.value] || 0\r\n        \r\n        if (userRankingType.value === 'join_date') {\r\n          // 注册时间从早到晚\r\n          const dateA = a.created_at || a.date_joined\r\n          const dateB = b.created_at || b.date_joined\r\n          return new Date(dateA) - new Date(dateB)\r\n        } else {\r\n          // 其他从高到低\r\n          return valueB - valueA\r\n        }\r\n      })\r\n    }\r\n\r\n    // 排序板块排行榜\r\n    const sortBoardRanking = () => {\r\n      boardRanking.value.sort((a, b) => {\r\n        const valueA = a[boardRankingType.value] || 0\r\n        const valueB = b[boardRankingType.value] || 0\r\n        return valueB - valueA\r\n      })\r\n    }\r\n\r\n    // 用户排行榜排序方式变更\r\n    const handleUserRankingTypeChange = (type) => {\r\n      userRankingType.value = type;\r\n      log('用户排行榜排序方式变更为:', userRankingType.value);\r\n      fetchUserRanking();\r\n    };\r\n\r\n    // 帖子排行榜排序方式变更\r\n    const handlePostRankingTypeChange = (type) => {\r\n      postRankingType.value = type;\r\n      log('帖子排行榜排序方式变更为:', postRankingType.value);\r\n      fetchPostRanking();\r\n    };\r\n\r\n    // 板块排行榜排序方式变更\r\n    const handleBoardRankingTypeChange = (type) => {\r\n      boardRankingType.value = type;\r\n      log('板块排行榜排序方式变更为:', boardRankingType.value);\r\n      fetchBoardRanking();\r\n    };\r\n\r\n    // 标签页切换\r\n    const handleTabChange = (tab) => {\r\n      log('标签页切换为:', tab.props.name);\r\n      // 根据标签页加载对应数据\r\n      switch (tab.props.name) {\r\n        case 'users':\r\n          if (!userRanking.value.length) {\r\n            fetchUserRanking();\r\n          }\r\n          break;\r\n        case 'posts':\r\n          if (!postRanking.value.length) {\r\n            fetchPostRanking();\r\n          }\r\n          break;\r\n        case 'boards':\r\n          if (!boardRanking.value.length) {\r\n            fetchBoardRanking();\r\n          }\r\n          break;\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      // 加载默认标签页的数据\r\n      fetchUserRanking()\r\n    })\r\n\r\n    return {\r\n      activeTab,\r\n      userRankingType,\r\n      postRankingType,\r\n      boardRankingType,\r\n      userRanking,\r\n      postRanking,\r\n      boardRanking,\r\n      loading,\r\n      formatDate,\r\n      getRankingValue,\r\n      handleUserRankingTypeChange,\r\n      handlePostRankingTypeChange,\r\n      handleBoardRankingTypeChange,\r\n      handleTabChange\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.ranking-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.page-header {\r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n  position: relative;\r\n}\r\n\r\n.page-header::after {\r\n  content: '';\r\n  position: absolute;\r\n  bottom: -10px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 80px;\r\n  height: 3px;\r\n  background: linear-gradient(90deg, #409eff, #67c23a);\r\n  border-radius: 3px;\r\n}\r\n\r\n.page-header h1 {\r\n  font-size: 32px;\r\n  color: #303133;\r\n  margin-bottom: 12px;\r\n  font-weight: 600;\r\n}\r\n\r\n.page-header p {\r\n  color: #606266;\r\n  font-size: 16px;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.ranking-tabs {\r\n  background-color: #fff;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);\r\n  padding: 25px;\r\n}\r\n\r\n.section-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 25px;\r\n  border-bottom: 1px solid #ebeef5;\r\n  padding-bottom: 15px;\r\n}\r\n\r\n.section-header h2 {\r\n  margin: 0;\r\n  font-size: 22px;\r\n  width: 200px;\r\n  color: #303133;\r\n  position: relative;\r\n  padding-left: 15px;\r\n}\r\n\r\n.section-header h2::before {\r\n  content: '';\r\n  position: absolute;\r\n  left: 0;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 4px;\r\n  height: 20px;\r\n  background: #409eff;\r\n  border-radius: 2px;\r\n}\r\n\r\n.ranking-list {\r\n  margin-top: 25px;\r\n}\r\n\r\n.ranking-items {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 18px;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(10px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.ranking-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 18px;\r\n  background-color: #ffffff;\r\n  border-radius: 12px;\r\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\r\n  border: 1px solid #ebeef5;\r\n  margin-bottom: 0;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\r\n  position: relative;\r\n  overflow: hidden;\r\n  animation: fadeIn 0.5s ease-out forwards;\r\n  animation-delay: calc(0.05s * var(--index, 0));\r\n}\r\n\r\n.ranking-item:nth-child(1) { --index: 1; }\r\n.ranking-item:nth-child(2) { --index: 2; }\r\n.ranking-item:nth-child(3) { --index: 3; }\r\n.ranking-item:nth-child(4) { --index: 4; }\r\n.ranking-item:nth-child(5) { --index: 5; }\r\n.ranking-item:nth-child(6) { --index: 6; }\r\n.ranking-item:nth-child(7) { --index: 7; }\r\n.ranking-item:nth-child(8) { --index: 8; }\r\n.ranking-item:nth-child(9) { --index: 9; }\r\n.ranking-item:nth-child(10) { --index: 10; }\r\n.ranking-item:nth-child(n+11) { --index: 11; }\r\n\r\n.ranking-item::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 4px;\r\n  height: 100%;\r\n  background: transparent;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.ranking-item:hover::before {\r\n  background: linear-gradient(to bottom, #409eff, #67c23a);\r\n}\r\n\r\n.ranking-item:hover {\r\n  transform: translateY(-3px) scale(1.01);\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);\r\n  border-color: #dcdfe6;\r\n}\r\n\r\n.rank-number {\r\n  width: 36px;\r\n  height: 36px;\r\n  border-radius: 50%;\r\n  background-color: #909399;\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  margin-right: 15px;\r\n  font-size: 16px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.rank-number.top-three:nth-child(1) {\r\n  background: linear-gradient(135deg, #f56c6c, #e74c3c);\r\n  font-size: 18px;\r\n}\r\n\r\n.rank-number.top-three:nth-child(3n+2) {\r\n  background: linear-gradient(135deg, #e6a23c, #f39c12);\r\n  font-size: 17px;\r\n}\r\n\r\n.rank-number.top-three:nth-child(3n+3) {\r\n  background: linear-gradient(135deg, #67c23a, #27ae60);\r\n  font-size: 16px;\r\n}\r\n\r\n.user-avatar {\r\n  margin-right: 18px;\r\n  position: relative;\r\n}\r\n\r\n.user-avatar::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: -3px;\r\n  left: -3px;\r\n  right: -3px;\r\n  bottom: -3px;\r\n  border-radius: 50%;\r\n  border: 2px solid transparent;\r\n  opacity: 0;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.ranking-item:hover .user-avatar::after {\r\n  opacity: 1;\r\n  border-color: #409eff;\r\n}\r\n\r\n.user-info, .post-info, .board-info {\r\n  flex: 1;\r\n}\r\n\r\n.user-name, .post-title, .board-name {\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.user-name a, .post-title a, .board-name a {\r\n  color: #303133;\r\n  text-decoration: none;\r\n  transition: color 0.2s;\r\n}\r\n\r\n.user-name a:hover, .post-title a:hover, .board-name a:hover {\r\n  color: #409eff;\r\n}\r\n\r\n.user-stats, .post-meta {\r\n  display: flex;\r\n  gap: 15px;\r\n  color: #909399;\r\n  font-size: 13px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.user-stats span, .post-meta span {\r\n  background-color: #f5f7fa;\r\n  padding: 4px 10px;\r\n  border-radius: 4px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n}\r\n\r\n.user-stats span .el-icon, .post-meta span .el-icon {\r\n  font-size: 14px;\r\n}\r\n\r\n.user-stats .register-time {\r\n  background-color: #f0f9eb;\r\n  color: #67c23a;\r\n}\r\n\r\n.board-description {\r\n  color: #606266;\r\n  font-size: 14px;\r\n  margin-top: 5px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n}\r\n\r\n.ranking-value {\r\n  font-weight: bold;\r\n  color: #409eff;\r\n  margin-left: 15px;\r\n  background-color: #ecf5ff;\r\n  padding: 4px 12px;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  white-space: nowrap;\r\n}\r\n\r\n.ranking-stats {\r\n  display: flex;\r\n  gap: 15px;\r\n}\r\n\r\n.stat-item {\r\n  display: flex;\r\n  align-items: center;\r\n  color: #606266;\r\n  font-size: 14px;\r\n  background-color: #f5f7fa;\r\n  padding: 4px 10px;\r\n  border-radius: 6px;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.stat-item:hover {\r\n  background-color: #ecf5ff;\r\n  color: #409eff;\r\n}\r\n\r\n.stat-item .el-icon {\r\n  margin-right: 5px;\r\n  font-size: 16px;\r\n}\r\n\r\n.loading-container {\r\n  padding: 30px 0;\r\n}\r\n\r\n/* 添加响应式样式 */\r\n@media screen and (max-width: 768px) {\r\n  .ranking-item {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    padding: 15px;\r\n  }\r\n  \r\n  .rank-number {\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .user-avatar {\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .user-stats, .post-meta {\r\n    flex-direction: column;\r\n    gap: 5px;\r\n  }\r\n  \r\n  .ranking-value, .ranking-stats {\r\n    margin-top: 10px;\r\n    margin-left: 0;\r\n  }\r\n}\r\n</style> "],"mappings":";;;;;;EACO,SAAM;AAAmB;;EAQnB,SAAM;AAAiB;;EACrB,SAAM;AAAgB;;EAStB,SAAM;AAAc;;EAnBnCA,GAAA;EAoBsC,SAAM;;;EApB5CA,GAAA;EAwBwB,SAAM;;;EAGT,SAAM;AAAa;;EAGnB,SAAM;AAAW;;EACf,SAAM;AAAW;;EAGjB,SAAM;AAAY;;EAOf,SAAM;AAAe;;EAK1B,SAAM;AAAe;;EAU7B,SAAM;AAAiB;;EACrB,SAAM;AAAgB;;EAStB,SAAM;AAAc;;EAlEnCA,GAAA;EAmEsC,SAAM;;;EAnE5CA,GAAA;EAuEwB,SAAM;;;EAGT,SAAM;AAAW;;EACf,SAAM;AAAY;;EAKlB,SAAM;AAAW;;EAMnB,SAAM;AAAe;;EACnB,SAAM;AAAW;;EAGjB,SAAM;AAAW;;EAGjB,SAAM;AAAW;;EAW3B,SAAM;AAAiB;;EACrB,SAAM;AAAgB;;EAStB,SAAM;AAAc;;EAlHnCA,GAAA;EAmHuC,SAAM;;;EAnH7CA,GAAA;EAuHwB,SAAM;;;EAGT,SAAM;AAAY;;EAChB,SAAM;AAAY;;EAGlB,SAAM;AAAmB;;EAI3B,SAAM;AAAe;;EACnB,SAAM;AAAW;;EAGjB,SAAM;AAAW;;EAGjB,SAAM;AAAW;;;;;;;;;;;;;;;;;;;;uBAxItCC,mBAAA,CAkJM,OAlJNC,UAkJM,G,0BAjJJC,mBAAA,CAGM;IAHD,SAAM;EAAa,IACtBA,mBAAA,CAAY,YAAR,KAAG,GACPA,mBAAA,CAA4B,WAAzB,uBAAqB,E,sBAG1BC,YAAA,CA2IUC,kBAAA;IAlJdC,UAAA,EAOsBC,MAAA,CAAAC,SAAS;IAP/B,uBAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAOsBH,MAAA,CAAAC,SAAS,GAAAE,MAAA;IAAA;IAAE,SAAM,cAAc;IAAEC,UAAS,EAAEJ,MAAA,CAAAK;;IAPlE,WAAAC,QAAA,CAQM;MAAA,OA6Cc,CA7CdT,YAAA,CA6CcU,sBAAA;QA7CDC,KAAK,EAAC,MAAM;QAACC,IAAI,EAAC;;QARrC,WAAAH,QAAA,CASQ;UAAA,OA2CM,CA3CNV,mBAAA,CA2CM,OA3CNc,UA2CM,GA1CJd,mBAAA,CAOM,OAPNe,UAOM,G,0BANJf,mBAAA,CAAe,YAAX,QAAM,sBACVC,YAAA,CAIYe,oBAAA;YAhBxBb,UAAA,EAYgCC,MAAA,CAAAa,eAAe;YAZ/C,uBAAAX,MAAA,QAAAA,MAAA,gBAAAC,MAAA;cAAA,OAYgCH,MAAA,CAAAa,eAAe,GAAAV,MAAA;YAAA;YAAEW,WAAW,EAAC,MAAM;YAACC,IAAI,EAAC,OAAO;YAAEC,QAAM,EAAEhB,MAAA,CAAAiB;;YAZ1F,WAAAX,QAAA,CAac;cAAA,OAA8C,CAA9CT,YAAA,CAA8CqB,oBAAA;gBAAnCV,KAAK,EAAC,MAAM;gBAACW,KAAK,EAAC;kBAC9BtB,YAAA,CAAiDqB,oBAAA;gBAAtCV,KAAK,EAAC,MAAM;gBAACW,KAAK,EAAC;kBAC9BtB,YAAA,CAA4CqB,oBAAA;gBAAjCV,KAAK,EAAC,MAAM;gBAACW,KAAK,EAAC;;;YAf5CC,CAAA;2DAmBUxB,mBAAA,CAgCM,OAhCNyB,UAgCM,GA/BOrB,MAAA,CAAAsB,OAAO,CAACC,KAAK,I,cAAxB7B,mBAAA,CAEM,OAFN8B,UAEM,GADJ3B,YAAA,CAAmC4B,sBAAA;YAArBC,IAAI,EAAE,EAAE;YAAEC,QAAQ,EAAR;mBAEe3B,MAAA,CAAA4B,WAAW,CAACC,MAAM,I,cAA3DC,YAAA,CAAwEC,mBAAA;YAvBpFtC,GAAA;YAuBsBuC,WAAW,EAAC;+BACtBtC,mBAAA,CA0BM,OA1BNuC,UA0BM,I,kBAzBJvC,mBAAA,CAwBMwC,SAAA,QAjDpBC,WAAA,CAyB2CnC,MAAA,CAAA4B,WAAW,EAzBtD,UAyB2BQ,IAAI,EAAEC,KAAK;iCAAxB3C,mBAAA,CAwBM;cAxBqCD,GAAG,EAAE2C,IAAI,CAACE,EAAE;cAAE,SAAM;gBAC7D1C,mBAAA,CAAkF;cAA7E,SA1BrB2C,eAAA,EA0B2B,aAAa;gBAAA,aAAwBF,KAAK;cAAA;gCAAWA,KAAK,6BACrEzC,mBAAA,CAEM,OAFN4C,UAEM,GADJ3C,YAAA,CAAuC4C,sBAAA;cAAzBL,IAAI,EAAEA,IAAI;cAAGrB,IAAI,EAAE;iDAEnCnB,mBAAA,CAeM,OAfN8C,UAeM,GAdJ9C,mBAAA,CAEM,OAFN+C,UAEM,GADJ9C,YAAA,CAA2F+C,sBAAA;cAA7EC,EAAE,cAAAC,MAAA,CAAcV,IAAI,CAACE,EAAE;;cAhCzD,WAAAhC,QAAA,CAgC6D;gBAAA,OAAoC,CAhCjGyC,gBAAA,CAAAC,gBAAA,CAgCgEZ,IAAI,CAACa,QAAQ,IAAIb,IAAI,CAACc,QAAQ,iB;;cAhC9F9B,CAAA;2DAkCkBxB,mBAAA,CAUM,OAVNuD,WAUM,GATJvD,mBAAA,CAEO,eADLC,YAAA,CAAiCuD,kBAAA;cApCvD,WAAA9C,QAAA,CAoC+B;gBAAA,OAAc,CAAdT,YAAA,CAAcwD,qBAAA,E;;cApC7CjC,CAAA;gBAAA2B,gBAAA,CAoCuD,OAAK,GAAAC,gBAAA,CAAGZ,IAAI,CAACkB,WAAW,sB,GAE3D1D,mBAAA,CAEO,eADLC,YAAA,CAAiCuD,kBAAA;cAvCvD,WAAA9C,QAAA,CAuC+B;gBAAA,OAAc,CAAdT,YAAA,CAAc0D,qBAAA,E;;cAvC7CnC,CAAA;gBAAA2B,gBAAA,CAuCuD,OAAK,GAAAC,gBAAA,CAAGZ,IAAI,CAACoB,cAAc,sB,GAE9D5D,mBAAA,CAEO,QAFP6D,WAEO,GADL5D,YAAA,CAA4BuD,kBAAA;cA1ClD,WAAA9C,QAAA,CA0C+B;gBAAA,OAAS,CAATT,YAAA,CAAS6D,gBAAA,E;;cA1CxCtC,CAAA;gBAAA2B,gBAAA,CA0CkD,QAAM,GAAAC,gBAAA,CAAGhD,MAAA,CAAA2D,UAAU,CAACvB,IAAI,CAACwB,UAAU,IAAIxB,IAAI,CAACyB,WAAW,kB,OAIzFjE,mBAAA,CAEM,OAFNkE,WAEM,EAAAd,gBAAA,CADDhD,MAAA,CAAA+D,eAAe,CAAC3B,IAAI,EAAEpC,MAAA,CAAAa,eAAe,kB;;;QA/C1DO,CAAA;UAuDMvB,YAAA,CA8CcU,sBAAA;QA9CDC,KAAK,EAAC,MAAM;QAACC,IAAI,EAAC;;QAvDrC,WAAAH,QAAA,CAwDQ;UAAA,OA4CM,CA5CNV,mBAAA,CA4CM,OA5CNoE,WA4CM,GA3CJpE,mBAAA,CAOM,OAPNqE,WAOM,G,0BANJrE,mBAAA,CAAe,YAAX,QAAM,sBACVC,YAAA,CAIYe,oBAAA;YA/DxBb,UAAA,EA2DgCC,MAAA,CAAAkE,eAAe;YA3D/C,uBAAAhE,MAAA,QAAAA,MAAA,gBAAAC,MAAA;cAAA,OA2DgCH,MAAA,CAAAkE,eAAe,GAAA/D,MAAA;YAAA;YAAEW,WAAW,EAAC,MAAM;YAACC,IAAI,EAAC,OAAO;YAAEC,QAAM,EAAEhB,MAAA,CAAAmE;;YA3D1F,WAAA7D,QAAA,CA4Dc;cAAA,OAAuC,CAAvCT,YAAA,CAAuCqB,oBAAA;gBAA5BV,KAAK,EAAC,KAAK;gBAACW,KAAK,EAAC;kBAC7BtB,YAAA,CAAgDqB,oBAAA;gBAArCV,KAAK,EAAC,KAAK;gBAACW,KAAK,EAAC;kBAC7BtB,YAAA,CAA6CqB,oBAAA;gBAAlCV,KAAK,EAAC,KAAK;gBAACW,KAAK,EAAC;;;YA9D3CC,CAAA;2DAkEUxB,mBAAA,CAiCM,OAjCNwE,WAiCM,GAhCOpE,MAAA,CAAAsB,OAAO,CAAC+C,KAAK,I,cAAxB3E,mBAAA,CAEM,OAFN4E,WAEM,GADJzE,YAAA,CAAmC4B,sBAAA;YAArBC,IAAI,EAAE,EAAE;YAAEC,QAAQ,EAAR;mBAEe3B,MAAA,CAAAuE,WAAW,CAAC1C,MAAM,I,cAA3DC,YAAA,CAAwEC,mBAAA;YAtEpFtC,GAAA;YAsEsBuC,WAAW,EAAC;+BACtBtC,mBAAA,CA2BM,OA3BN8E,WA2BM,I,kBA1BJ9E,mBAAA,CAyBMwC,SAAA,QAjGpBC,WAAA,CAwE2CnC,MAAA,CAAAuE,WAAW,EAxEtD,UAwE2BE,IAAI,EAAEpC,KAAK;iCAAxB3C,mBAAA,CAyBM;cAzBqCD,GAAG,EAAEgF,IAAI,CAACnC,EAAE;cAAE,SAAM;gBAC7D1C,mBAAA,CAAkF;cAA7E,SAzErB2C,eAAA,EAyE2B,aAAa;gBAAA,aAAwBF,KAAK;cAAA;gCAAWA,KAAK,6BACrEzC,mBAAA,CAWM,OAXN8E,WAWM,GAVJ9E,mBAAA,CAIM,OAJN+E,WAIM,GAHJ9E,YAAA,CAAqE+C,sBAAA;cAAvDC,EAAE,YAAAC,MAAA,CAAY2B,IAAI,CAACnC,EAAE;;cA5EvD,WAAAhC,QAAA,CA4E2D;gBAAA,OAAgB,CA5E3EyC,gBAAA,CAAAC,gBAAA,CA4E8DyB,IAAI,CAACG,KAAK,iB;;cA5ExExD,CAAA;yDA6E8DqD,IAAI,CAACI,SAAS,I,cAAxD/C,YAAA,CAAqEgD,iBAAA;cA7EzFrF,GAAA;cA6E4BsB,IAAI,EAAC,OAAO;cAACgE,IAAI,EAAC;;cA7E9C,WAAAzE,QAAA,CA6E8E;gBAAA,OAAA0E,kBAAA,CAAE9E,MAAA,QAAAA,MAAA,OA7EhF6C,gBAAA,CA6E8E,IAAE,E;;cA7EhF3B,CAAA;cAAA6D,EAAA;kBAAAC,mBAAA,gBA8E8DT,IAAI,CAACU,WAAW,I,cAA1DrD,YAAA,CAAuEgD,iBAAA;cA9E3FrF,GAAA;cA8E4BsB,IAAI,EAAC,OAAO;cAACgE,IAAI,EAAC;;cA9E9C,WAAAzE,QAAA,CA8EgF;gBAAA,OAAA0E,kBAAA,CAAE9E,MAAA,QAAAA,MAAA,OA9ElF6C,gBAAA,CA8EgF,IAAE,E;;cA9ElF3B,CAAA;cAAA6D,EAAA;kBAAAC,mBAAA,e,GAgFkBtF,mBAAA,CAIM,OAJNwF,WAIM,GAHJxF,mBAAA,CAA+D,cAAzD,MAAI,GAAAoD,gBAAA,CAAGyB,IAAI,CAACrC,IAAI,CAACa,QAAQ,IAAIwB,IAAI,CAACrC,IAAI,CAACc,QAAQ,kBACrDtD,mBAAA,CAAsC,cAAhC,MAAI,GAAAoD,gBAAA,CAAGyB,IAAI,CAACY,UAAU,kBAC5BzF,mBAAA,CAAmD,cAA7C,OAAK,GAAAoD,gBAAA,CAAGhD,MAAA,CAAA2D,UAAU,CAACc,IAAI,CAACb,UAAU,kB,KAG5ChE,mBAAA,CAUM,OAVN0F,WAUM,GATJ1F,mBAAA,CAEM,OAFN2F,WAEM,GADJ1F,YAAA,CAA2BuD,kBAAA;cAxF/C,WAAA9C,QAAA,CAwF6B;gBAAA,OAAQ,CAART,YAAA,CAAQ2F,eAAA,E;;cAxFrCpE,CAAA;gBAAA2B,gBAAA,CAwF+C,GAAC,GAAAC,gBAAA,CAAGyB,IAAI,CAACgB,KAAK,sB,GAE3C7F,mBAAA,CAEM,OAFN8F,WAEM,GADJ7F,YAAA,CAAmCuD,kBAAA;cA3FvD,WAAA9C,QAAA,CA2F6B;gBAAA,OAAgB,CAAhBT,YAAA,CAAgB8F,uBAAA,E;;cA3F7CvE,CAAA;gBAAA2B,gBAAA,CA2FuD,GAAC,GAAAC,gBAAA,CAAGyB,IAAI,CAACmB,cAAc,sB,GAE5DhG,mBAAA,CAEM,OAFNiG,WAEM,GADJhG,YAAA,CAA2BuD,kBAAA;cA9F/C,WAAA9C,QAAA,CA8F6B;gBAAA,OAAQ,CAART,YAAA,CAAQiG,eAAA,E;;cA9FrC1E,CAAA;gBAAA2B,gBAAA,CA8F+C,GAAC,GAAAC,gBAAA,CAAGyB,IAAI,CAACsB,WAAW,sB;;;QA9FnE3E,CAAA;UAuGMvB,YAAA,CA0CcU,sBAAA;QA1CDC,KAAK,EAAC,MAAM;QAACC,IAAI,EAAC;;QAvGrC,WAAAH,QAAA,CAwGQ;UAAA,OAwCM,CAxCNV,mBAAA,CAwCM,OAxCNoG,WAwCM,GAvCJpG,mBAAA,CAOM,OAPNqG,WAOM,G,0BANJrG,mBAAA,CAAe,YAAX,QAAM,sBACVC,YAAA,CAIYe,oBAAA;YA/GxBb,UAAA,EA2GgCC,MAAA,CAAAkG,gBAAgB;YA3GhD,uBAAAhG,MAAA,QAAAA,MAAA,gBAAAC,MAAA;cAAA,OA2GgCH,MAAA,CAAAkG,gBAAgB,GAAA/F,MAAA;YAAA;YAAEW,WAAW,EAAC,MAAM;YAACC,IAAI,EAAC,OAAO;YAAEC,QAAM,EAAEhB,MAAA,CAAAmG;;YA3G3F,WAAA7F,QAAA,CA4Gc;cAAA,OAA8C,CAA9CT,YAAA,CAA8CqB,oBAAA;gBAAnCV,KAAK,EAAC,MAAM;gBAACW,KAAK,EAAC;kBAC9BtB,YAAA,CAA8CqB,oBAAA;gBAAnCV,KAAK,EAAC,MAAM;gBAACW,KAAK,EAAC;kBAC9BtB,YAAA,CAA8CqB,oBAAA;gBAAnCV,KAAK,EAAC,MAAM;gBAACW,KAAK,EAAC;;;YA9G5CC,CAAA;2DAkHUxB,mBAAA,CA6BM,OA7BNwG,WA6BM,GA5BOpG,MAAA,CAAAsB,OAAO,CAAC+E,MAAM,I,cAAzB3G,mBAAA,CAEM,OAFN4G,WAEM,GADJzG,YAAA,CAAmC4B,sBAAA;YAArBC,IAAI,EAAE,EAAE;YAAEC,QAAQ,EAAR;mBAEe3B,MAAA,CAAAuG,YAAY,CAAC1E,MAAM,I,cAA5DC,YAAA,CAAyEC,mBAAA;YAtHrFtC,GAAA;YAsHsBuC,WAAW,EAAC;+BACtBtC,mBAAA,CAuBM,OAvBN8G,WAuBM,I,kBAtBJ9G,mBAAA,CAqBMwC,SAAA,QA7IpBC,WAAA,CAwH4CnC,MAAA,CAAAuG,YAAY,EAxHxD,UAwH2BE,KAAK,EAAEpE,KAAK;iCAAzB3C,mBAAA,CAqBM;cArBuCD,GAAG,EAAEgH,KAAK,CAACnE,EAAE;cAAE,SAAM;gBAChE1C,mBAAA,CAAkF;cAA7E,SAzHrB2C,eAAA,EAyH2B,aAAa;gBAAA,aAAwBF,KAAK;cAAA;gCAAWA,KAAK,6BACrEzC,mBAAA,CAOM,OAPN8G,WAOM,GANJ9G,mBAAA,CAEM,OAFN+G,WAEM,GADJ9G,YAAA,CAAuE+C,sBAAA;cAAzDC,EAAE,aAAAC,MAAA,CAAa2D,KAAK,CAACnE,EAAE;;cA5HzD,WAAAhC,QAAA,CA4H6D;gBAAA,OAAgB,CA5H7EyC,gBAAA,CAAAC,gBAAA,CA4HgEyD,KAAK,CAAChG,IAAI,iB;;cA5H1EW,CAAA;2DA8HkBxB,mBAAA,CAEM,OAFNgH,WAEM,EAAA5D,gBAAA,CADDyD,KAAK,CAACzE,WAAW,iB,GAGxBpC,mBAAA,CAUM,OAVNiH,WAUM,GATJjH,mBAAA,CAEM,OAFNkH,WAEM,GADJjH,YAAA,CAA+BuD,kBAAA;cApInD,WAAA9C,QAAA,CAoI6B;gBAAA,OAAY,CAAZT,YAAA,CAAYkH,mBAAA,E;;cApIzC3F,CAAA;gBAAA2B,gBAAA,CAoImD,GAAC,GAAAC,gBAAA,CAAGyD,KAAK,CAACnD,WAAW,SAAQ,MAC9D,gB,GACA1D,mBAAA,CAEM,OAFNoH,WAEM,GADJnH,YAAA,CAA2BuD,kBAAA;cAvI/C,WAAA9C,QAAA,CAuI6B;gBAAA,OAAQ,CAART,YAAA,CAAQoH,eAAA,E;;cAvIrC7F,CAAA;gBAAA2B,gBAAA,CAuI+C,GAAC,GAAAC,gBAAA,CAAGyD,KAAK,CAACS,WAAW,SAAQ,MAC1D,gB,GACAtH,mBAAA,CAEM,OAFNuH,WAEM,GADJtH,YAAA,CAA2BuD,kBAAA;cA1I/C,WAAA9C,QAAA,CA0I6B;gBAAA,OAAQ,CAART,YAAA,CAAQ2F,eAAA,E;;cA1IrCpE,CAAA;gBAAA2B,gBAAA,CA0I+C,GAAC,GAAAC,gBAAA,CAAGyD,KAAK,CAACW,WAAW,SAAQ,MAC1D,gB;;;QA3IlBhG,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}