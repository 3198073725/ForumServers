{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar badge = require('./badge.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar types = require('../../../utils/types.js');\nvar style = require('../../../utils/dom/style.js');\nvar __default__ = vue.defineComponent({\n  name: \"ElBadge\"\n});\nvar _sfc_main = /* @__PURE__ */vue.defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: badge.badgeProps,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var ns = index.useNamespace(\"badge\");\n    var content = vue.computed(function () {\n      if (props.isDot) return \"\";\n      if (types.isNumber(props.value) && types.isNumber(props.max)) {\n        return props.max < props.value ? \"\".concat(props.max, \"+\") : \"\".concat(props.value);\n      }\n      return \"\".concat(props.value);\n    });\n    var style$1 = vue.computed(function () {\n      var _a, _b, _c, _d, _e;\n      return [{\n        backgroundColor: props.color,\n        marginRight: style.addUnit(-((_b = (_a = props.offset) == null ? void 0 : _a[0]) != null ? _b : 0)),\n        marginTop: style.addUnit((_d = (_c = props.offset) == null ? void 0 : _c[1]) != null ? _d : 0)\n      }, (_e = props.badgeStyle) != null ? _e : {}];\n    });\n    expose({\n      content: content\n    });\n    return function (_ctx, _cache) {\n      return vue.openBlock(), vue.createElementBlock(\"div\", {\n        \"class\": vue.normalizeClass(vue.unref(ns).b())\n      }, [vue.renderSlot(_ctx.$slots, \"default\"), vue.createVNode(vue.Transition, {\n        name: \"\".concat(vue.unref(ns).namespace.value, \"-zoom-in-center\"),\n        persisted: \"\"\n      }, {\n        \"default\": vue.withCtx(function () {\n          return [vue.withDirectives(vue.createElementVNode(\"sup\", {\n            \"class\": vue.normalizeClass([vue.unref(ns).e(\"content\"), vue.unref(ns).em(\"content\", _ctx.type), vue.unref(ns).is(\"fixed\", !!_ctx.$slots[\"default\"]), vue.unref(ns).is(\"dot\", _ctx.isDot), vue.unref(ns).is(\"hide-zero\", !_ctx.showZero && props.value === 0), _ctx.badgeClass]),\n            style: vue.normalizeStyle(vue.unref(style$1))\n          }, [vue.renderSlot(_ctx.$slots, \"content\", {\n            value: vue.unref(content)\n          }, function () {\n            return [vue.createTextVNode(vue.toDisplayString(vue.unref(content)), 1)];\n          })], 6), [[vue.vShow, !_ctx.hidden && (vue.unref(content) || _ctx.isDot || _ctx.$slots.content)]])];\n        }),\n        _: 3\n      }, 8, [\"name\"])], 2);\n    };\n  }\n}));\nvar Badge = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"badge.vue\"]]);\nexports[\"default\"] = Badge;","map":{"version":3,"names":["name","ns","index","useNamespace","content","vue","computed","props","isDot","types","isNumber","value","max","concat","style$1","_a","_b","_c","_d","_e","backgroundColor","color","marginRight","style","addUnit","offset","marginTop","badgeStyle","expose"],"sources":["../../../../../../packages/components/badge/src/badge.vue"],"sourcesContent":["<template>\n  <div :class=\"ns.b()\">\n    <slot />\n    <transition :name=\"`${ns.namespace.value}-zoom-in-center`\">\n      <sup\n        v-show=\"!hidden && (content || isDot || $slots.content)\"\n        :class=\"[\n          ns.e('content'),\n          ns.em('content', type),\n          ns.is('fixed', !!$slots.default),\n          ns.is('dot', isDot),\n          ns.is('hide-zero', !showZero && props.value === 0),\n          badgeClass,\n        ]\"\n        :style=\"style\"\n      >\n        <slot name=\"content\" :value=\"content\">\n          {{ content }}\n        </slot>\n      </sup>\n    </transition>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { addUnit, isNumber } from '@element-plus/utils'\nimport { badgeProps } from './badge'\nimport type { StyleValue } from 'vue'\n\ndefineOptions({\n  name: 'ElBadge',\n})\n\nconst props = defineProps(badgeProps)\n\nconst ns = useNamespace('badge')\n\nconst content = computed<string>(() => {\n  if (props.isDot) return ''\n  if (isNumber(props.value) && isNumber(props.max)) {\n    return props.max < props.value ? `${props.max}+` : `${props.value}`\n  }\n  return `${props.value}`\n})\n\nconst style = computed<StyleValue>(() => {\n  return [\n    {\n      backgroundColor: props.color,\n      marginRight: addUnit(-(props.offset?.[0] ?? 0)),\n      marginTop: addUnit(props.offset?.[1] ?? 0),\n    },\n    props.badgeStyle ?? {},\n  ]\n})\n\ndefineExpose({\n  /** @description badge content */\n  content,\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;qCA+Bc;EACZA,IAAM;AACR;;;;;;IAIM,IAAAC,EAAA,GAAKC,KAAA,CAAAC,YAAA,CAAa,OAAO;IAEzB,IAAAC,OAAA,GAAUC,GAAA,CAAAC,QAAA,CAAiB,YAAM;MACjC,IAAAC,KAAA,CAAMC,KAAA,EACV;MACS,IAAAC,KAAA,CAAAC,QAAA,CAAAH,KAAY,CAAAI,KAAA,KAAcF,KAAA,CAAAC,QAAA,CAAGH,KAAA,CAAMK,GAAG;QAC/C,OAAAL,KAAA,CAAAK,GAAA,GAAAL,KAAA,CAAAI,KAAA,MAAAE,MAAA,CAAAN,KAAA,CAAAK,GAAA,YAAAC,MAAA,CAAAN,KAAA,CAAAI,KAAA;MACA;MACD,UAAAE,MAAA,CAAAN,KAAA,CAAAI,KAAA;IAED,CAAM;IACG,IAAAG,OAAA,GAAAT,GAAA,CAAAC,QAAA;MACL,IAAAS,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA;MAAA,QACyB;QAEvBC,eAAmB,EAAAb,KAAA,CAAAc,KAAe;QACpCC,WAAA,EAAAC,KAAA,CAAAC,OAAA,IAAAR,EAAA,IAAAD,EAAA,GAAAR,KAAA,CAAAkB,MAAA,qBAAAV,EAAA,eAAAC,EAAA;QACAU,SAAA,EAAAH,KAAA,CAAAC,OAAoB,CAAC,CAAAN,EAAA,IAAAD,EAAA,GAAAV,KAAA,CAAAkB,MAAA,qBAAAR,EAAA,eAAAC,EAAA;MAAA,CACvB,EACD,CAAAC,EAAA,GAAAZ,KAAA,CAAAoB,UAAA,YAAAR,EAAA,MAEY;IAAA;IAEXS,MAAA;MACDxB,OAAA,EAAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}