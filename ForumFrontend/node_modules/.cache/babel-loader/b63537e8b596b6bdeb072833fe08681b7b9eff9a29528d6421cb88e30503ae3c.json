{"ast":null,"code":"import _typeof from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport request from '@/utils/request';\n\n// 是否启用调试日志\nvar DEBUG = false;\n\n// 自定义日志函数，可以通过DEBUG开关控制\nvar log = function log() {\n  if (DEBUG) {\n    var _console;\n    (_console = console).log.apply(_console, arguments);\n  }\n};\n\n// 获取板块列表\nexport function getBoardList(params) {\n  // 关闭调试日志\n  var DEBUG_THIS = false;\n  if (DEBUG_THIS) console.log(\"\\u5F00\\u59CB\\u8BF7\\u6C42\\u677F\\u5757\\u5217\\u8868API\\uFF0C\\u53C2\\u6570:\", params);\n  return request({\n    url: '/api/v1/boards/',\n    method: 'get',\n    params: params\n  }).then(function (response) {\n    if (DEBUG_THIS) console.log(\"\\u677F\\u5757\\u5217\\u8868API\\u539F\\u59CB\\u54CD\\u5E94:\", response);\n\n    // 检查响应格式并统一处理\n    var formattedResponse = {\n      code: 0,\n      status: 0,\n      msg: '',\n      data: []\n    };\n\n    // 如果响应是Django REST Framework的分页格式\n    if (response && response.count !== undefined && Array.isArray(response.results)) {\n      if (DEBUG_THIS) console.log('处理Django REST Framework分页格式响应');\n      formattedResponse.data = response.results;\n      return formattedResponse;\n    }\n\n    // 如果响应已经是我们期望的格式\n    if (response && response.code === 0 && response.data) {\n      if (DEBUG_THIS) console.log('响应已经是期望的格式');\n      return response;\n    }\n\n    // 如果响应是直接的数组\n    if (Array.isArray(response)) {\n      if (DEBUG_THIS) console.log('响应是数组格式');\n      formattedResponse.data = response;\n      return formattedResponse;\n    }\n\n    // 如果响应是对象但格式不完全匹配\n    if (response && _typeof(response) === 'object') {\n      if (DEBUG_THIS) console.log('响应是对象但格式不完全匹配');\n\n      // 检查response.data是否存在且为数组\n      if (response.data && Array.isArray(response.data)) {\n        formattedResponse.data = response.data;\n      }\n      // 检查response.results是否存在且为数组\n      else if (response.results && Array.isArray(response.results)) {\n        formattedResponse.data = response.results;\n      }\n      // 如果data存在但不是数组，尝试包装它\n      else if (response.data) {\n        formattedResponse.data = [response.data];\n      }\n      // 如果都不存在，尝试将整个response作为单个结果\n      else {\n        formattedResponse.data = [response];\n      }\n      if (DEBUG_THIS) console.log('格式化后的响应:', formattedResponse);\n      return formattedResponse;\n    }\n\n    // 如果无法处理响应，返回空结果\n    if (DEBUG_THIS) console.log('无法处理响应，返回空结果');\n    return formattedResponse;\n  })[\"catch\"](function (error) {\n    var _error$response, _error$response2;\n    console.error('获取板块列表失败', error);\n    // 返回错误信息\n    return {\n      code: (error === null || error === void 0 || (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) || 500,\n      status: (error === null || error === void 0 || (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) || 500,\n      message: (error === null || error === void 0 ? void 0 : error.message) || '网络错误，请稍后再试',\n      data: []\n    };\n  });\n}\n\n// 获取板块详情\nexport function getBoardDetail(id) {\n  return request({\n    url: \"/api/v1/boards/\".concat(id, \"/\"),\n    method: 'get'\n  })[\"catch\"](function (error) {\n    var _error$response3, _error$response4;\n    console.error(\"\\u83B7\\u53D6\\u677F\\u5757\\u8BE6\\u60C5(ID: \".concat(id, \")\\u5931\\u8D25\"), error);\n    // 返回错误信息\n    return {\n      code: (error === null || error === void 0 || (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) || 500,\n      status: (error === null || error === void 0 || (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) || 500,\n      message: (error === null || error === void 0 ? void 0 : error.message) || '网络错误，请稍后再试',\n      data: null\n    };\n  });\n}\n\n// 获取热门板块\nexport function getHotBoards() {\n  var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n  return request({\n    url: '/api/v1/boards/hot/',\n    method: 'get',\n    params: {\n      limit: limit\n    }\n  })[\"catch\"](function (error) {\n    var _error$response5, _error$response6;\n    console.error('获取热门板块失败', error);\n    // 返回错误信息\n    return {\n      code: (error === null || error === void 0 || (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) || 500,\n      status: (error === null || error === void 0 || (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) || 500,\n      message: (error === null || error === void 0 ? void 0 : error.message) || '网络错误，请稍后再试',\n      data: []\n    };\n  });\n}\n\n// 创建板块 (管理员)\nexport function createBoard(data) {\n  return request({\n    url: '/api/v1/boards/',\n    method: 'post',\n    data: data\n  });\n}\n\n// 更新板块 (管理员)\nexport function updateBoard(id, data) {\n  return request({\n    url: \"/api/v1/boards/\".concat(id, \"/\"),\n    method: 'put',\n    data: data\n  });\n}\n\n// 删除板块 (管理员)\nexport function deleteBoard(id) {\n  return request({\n    url: \"/api/v1/boards/\".concat(id, \"/\"),\n    method: 'delete'\n  });\n}\n\n// 重新排序板块 (管理员)\nexport function reorderBoards(data) {\n  return request({\n    url: '/api/v1/boards/reorder/',\n    method: 'post',\n    data: data\n  });\n}\n\n// 获取所有用户组 (管理员)\nexport function getGroups() {\n  return request({\n    url: '/api/v1/boards/groups/',\n    method: 'get'\n  });\n}\n\n// 获取所有用户 (管理员)\nexport function getUsers() {\n  return request({\n    url: '/api/v1/boards/users/',\n    method: 'get'\n  });\n}","map":{"version":3,"names":["request","DEBUG","log","_console","console","apply","arguments","getBoardList","params","DEBUG_THIS","url","method","then","response","formattedResponse","code","status","msg","data","count","undefined","Array","isArray","results","_typeof","error","_error$response","_error$response2","message","getBoardDetail","id","concat","_error$response3","_error$response4","getHotBoards","limit","length","_error$response5","_error$response6","createBoard","updateBoard","deleteBoard","reorderBoards","getGroups","getUsers"],"sources":["H:/ForumServers/ForumFrontend/src/api/board.js"],"sourcesContent":["import request from '@/utils/request'\n\n// 是否启用调试日志\nconst DEBUG = false;\n\n// 自定义日志函数，可以通过DEBUG开关控制\nconst log = (...args) => {\n  if (DEBUG) {\n    console.log(...args);\n  }\n};\n\n// 获取板块列表\nexport function getBoardList(params) {\n  // 关闭调试日志\n  const DEBUG_THIS = false;\n  \n  if (DEBUG_THIS) console.log(`开始请求板块列表API，参数:`, params);\n  \n  return request({\n    url: '/api/v1/boards/',\n    method: 'get',\n    params\n  }).then(response => {\n    if (DEBUG_THIS) console.log(`板块列表API原始响应:`, response);\n    \n    // 检查响应格式并统一处理\n    let formattedResponse = {\n      code: 0,\n      status: 0,\n      msg: '',\n      data: []\n    };\n    \n    // 如果响应是Django REST Framework的分页格式\n    if (response && response.count !== undefined && Array.isArray(response.results)) {\n      if (DEBUG_THIS) console.log('处理Django REST Framework分页格式响应');\n      formattedResponse.data = response.results;\n      return formattedResponse;\n    }\n    \n    // 如果响应已经是我们期望的格式\n    if (response && response.code === 0 && response.data) {\n      if (DEBUG_THIS) console.log('响应已经是期望的格式');\n      return response;\n    }\n    \n    // 如果响应是直接的数组\n    if (Array.isArray(response)) {\n      if (DEBUG_THIS) console.log('响应是数组格式');\n      formattedResponse.data = response;\n      return formattedResponse;\n    }\n    \n    // 如果响应是对象但格式不完全匹配\n    if (response && typeof response === 'object') {\n      if (DEBUG_THIS) console.log('响应是对象但格式不完全匹配');\n      \n      // 检查response.data是否存在且为数组\n      if (response.data && Array.isArray(response.data)) {\n        formattedResponse.data = response.data;\n      } \n      // 检查response.results是否存在且为数组\n      else if (response.results && Array.isArray(response.results)) {\n        formattedResponse.data = response.results;\n      }\n      // 如果data存在但不是数组，尝试包装它\n      else if (response.data) {\n        formattedResponse.data = [response.data];\n      }\n      // 如果都不存在，尝试将整个response作为单个结果\n      else {\n        formattedResponse.data = [response];\n      }\n      \n      if (DEBUG_THIS) console.log('格式化后的响应:', formattedResponse);\n      return formattedResponse;\n    }\n    \n    // 如果无法处理响应，返回空结果\n    if (DEBUG_THIS) console.log('无法处理响应，返回空结果');\n    return formattedResponse;\n  }).catch(error => {\n    console.error('获取板块列表失败', error);\n    // 返回错误信息\n    return {\n      code: error?.response?.status || 500,\n      status: error?.response?.status || 500,\n      message: error?.message || '网络错误，请稍后再试',\n      data: []\n    };\n  });\n}\n\n// 获取板块详情\nexport function getBoardDetail(id) {\n  return request({\n    url: `/api/v1/boards/${id}/`,\n    method: 'get'\n  }).catch(error => {\n    console.error(`获取板块详情(ID: ${id})失败`, error)\n    // 返回错误信息\n    return {\n      code: error?.response?.status || 500,\n      status: error?.response?.status || 500,\n      message: error?.message || '网络错误，请稍后再试',\n      data: null\n    }\n  })\n}\n\n// 获取热门板块\nexport function getHotBoards(limit = 5) {\n  return request({\n    url: '/api/v1/boards/hot/',\n    method: 'get',\n    params: { limit }\n  }).catch(error => {\n    console.error('获取热门板块失败', error)\n    // 返回错误信息\n    return {\n      code: error?.response?.status || 500,\n      status: error?.response?.status || 500,\n      message: error?.message || '网络错误，请稍后再试',\n      data: []\n    }\n  })\n}\n\n// 创建板块 (管理员)\nexport function createBoard(data) {\n  return request({\n    url: '/api/v1/boards/',\n    method: 'post',\n    data\n  })\n}\n\n// 更新板块 (管理员)\nexport function updateBoard(id, data) {\n  return request({\n    url: `/api/v1/boards/${id}/`,\n    method: 'put',\n    data\n  })\n}\n\n// 删除板块 (管理员)\nexport function deleteBoard(id) {\n  return request({\n    url: `/api/v1/boards/${id}/`,\n    method: 'delete'\n  })\n}\n\n// 重新排序板块 (管理员)\nexport function reorderBoards(data) {\n  return request({\n    url: '/api/v1/boards/reorder/',\n    method: 'post',\n    data\n  })\n}\n\n// 获取所有用户组 (管理员)\nexport function getGroups() {\n  return request({\n    url: '/api/v1/boards/groups/',\n    method: 'get'\n  })\n}\n\n// 获取所有用户 (管理员)\nexport function getUsers() {\n  return request({\n    url: '/api/v1/boards/users/',\n    method: 'get'\n  })\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}