{"ast":null,"code":"import _regeneratorRuntime from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { formatDateTime } from '@/utils/index';\n\n// 格式化日期函数\nvar formatDate = function formatDate(date) {\n  return formatDateTime(date);\n};\nexport default {\n  name: 'AdminDashboard',\n  setup: function setup() {\n    var router = useRouter();\n    var store = useStore();\n    var loading = ref(false);\n\n    // 用户信息\n    var userInfo = computed(function () {\n      return store.getters.userInfo;\n    });\n\n    // 统计卡片数据\n    var statCards = ref([{\n      title: '用户总数',\n      value: 128,\n      icon: 'el-icon-user',\n      color: '#409EFF'\n    }, {\n      title: '帖子总数',\n      value: 256,\n      icon: 'el-icon-document',\n      color: '#67C23A'\n    }, {\n      title: '评论总数',\n      value: 512,\n      icon: 'el-icon-chat-dot-round',\n      color: '#E6A23C'\n    }, {\n      title: '今日访问',\n      value: 64,\n      icon: 'el-icon-view',\n      color: '#F56C6C'\n    }]);\n\n    // 最近注册用户\n    var recentUsers = ref([{\n      id: 5,\n      username: 'user3',\n      email: 'user3@example.com',\n      created_at: '2023-05-19T10:30:00Z'\n    }, {\n      id: 4,\n      username: 'user2',\n      email: 'user2@example.com',\n      created_at: '2023-05-18T14:20:00Z'\n    }, {\n      id: 3,\n      username: 'user1',\n      email: 'user1@example.com',\n      created_at: '2023-05-17T09:15:00Z'\n    }]);\n\n    // 最新帖子\n    var recentPosts = ref([{\n      id: 5,\n      title: '如何使用Vue3的Composition API',\n      user: {\n        id: 3,\n        username: 'user1'\n      },\n      created_at: '2023-05-19T11:30:00Z'\n    }, {\n      id: 4,\n      title: 'Django REST Framework最佳实践',\n      user: {\n        id: 2,\n        username: 'moderator'\n      },\n      created_at: '2023-05-18T16:45:00Z'\n    }, {\n      id: 3,\n      title: 'MySQL性能优化技巧',\n      user: {\n        id: 1,\n        username: 'admin'\n      },\n      created_at: '2023-05-17T14:20:00Z'\n    }]);\n\n    // 获取仪表盘数据\n    var fetchDashboardData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              loading.value = true;\n              try {\n                // 模拟API调用\n                setTimeout(function () {\n                  loading.value = false;\n                }, 500);\n\n                // 实际API调用\n                // const response = await getDashboardData()\n                // if (response.code === 0) {\n                //   statCards.value[0].value = response.data.users_count\n                //   statCards.value[1].value = response.data.posts_count\n                //   statCards.value[2].value = response.data.comments_count\n                //   statCards.value[3].value = response.data.today_visits\n                //   recentUsers.value = response.data.recent_users\n                //   recentPosts.value = response.data.recent_posts\n                // } else {\n                //   ElMessage.error(response.msg || '获取仪表盘数据失败')\n                // }\n              } catch (error) {\n                console.error('获取仪表盘数据失败:', error);\n              } finally {\n                loading.value = false;\n              }\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function fetchDashboardData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    // 查看用户\n    var viewUser = function viewUser(user) {\n      router.push({\n        name: 'UserProfile',\n        params: {\n          id: user.id\n        }\n      });\n    };\n\n    // 查看帖子\n    var viewPost = function viewPost(post) {\n      router.push({\n        name: 'PostDetail',\n        params: {\n          id: post.id\n        }\n      });\n    };\n\n    // 跳转到用户管理页面\n    var goToUserManagement = function goToUserManagement() {\n      router.push({\n        name: 'UserManagement'\n      });\n    };\n\n    // 跳转到帖子列表页面\n    var goToPostList = function goToPostList() {\n      router.push({\n        name: 'PostList'\n      });\n    };\n\n    // 生命周期钩子\n    onMounted(function () {\n      fetchDashboardData();\n    });\n    return {\n      loading: loading,\n      userInfo: userInfo,\n      statCards: statCards,\n      recentUsers: recentUsers,\n      recentPosts: recentPosts,\n      formatDate: formatDate,\n      viewUser: viewUser,\n      viewPost: viewPost,\n      goToUserManagement: goToUserManagement,\n      goToPostList: goToPostList\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useRouter","useStore","formatDateTime","formatDate","date","name","setup","router","store","loading","userInfo","getters","statCards","title","value","icon","color","recentUsers","id","username","email","created_at","recentPosts","user","fetchDashboardData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","setTimeout","error","console","stop","apply","arguments","viewUser","push","params","viewPost","post","goToUserManagement","goToPostList"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\admin\\Dashboard.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <el-row :gutter=\"20\">\n      <!-- 统计卡片 -->\n      <el-col :span=\"6\" v-for=\"(item, index) in statCards\" :key=\"index\">\n        <el-card class=\"stat-card\" :body-style=\"{ padding: '20px' }\">\n          <div class=\"stat-icon\" :style=\"{ backgroundColor: item.color }\">\n            <i :class=\"item.icon\"></i>\n          </div>\n          <div class=\"stat-info\">\n            <div class=\"stat-title\">{{ item.title }}</div>\n            <div class=\"stat-value\">{{ item.value }}</div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\n      <!-- 最近注册用户 -->\n      <el-col :span=\"12\">\n        <el-card class=\"box-card\">\n          <template #header>\n            <div class=\"clearfix\">\n            <span>最近注册用户</span>\n            <el-button style=\"float: right; padding: 3px 0\" link @click=\"goToUserManagement\">\n              查看全部\n            </el-button>\n            </div>\n          </template>\n          <div v-if=\"loading\" class=\"loading-container\">\n            <el-skeleton :rows=\"5\" animated />\n          </div>\n          <div v-else>\n            <el-table :data=\"recentUsers\" style=\"width: 100%\">\n              <el-table-column prop=\"username\" label=\"用户名\" width=\"120\"></el-table-column>\n              <el-table-column prop=\"email\" label=\"邮箱\" width=\"180\"></el-table-column>\n              <el-table-column prop=\"created_at\" label=\"注册时间\">\n                <template #default=\"scope\">\n                  {{ formatDate(scope.row.created_at) }}\n                </template>\n              </el-table-column>\n              <el-table-column label=\"操作\" width=\"100\" align=\"center\">\n                <template #default=\"scope\">\n                  <el-button size=\"small\" link @click=\"viewUser(scope.row)\">查看</el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n        </el-card>\n      </el-col>\n\n      <!-- 最新帖子 -->\n      <el-col :span=\"12\">\n        <el-card class=\"box-card\">\n          <template #header>\n            <div class=\"clearfix\">\n            <span>最新帖子</span>\n            <el-button style=\"float: right; padding: 3px 0\" type=\"link\" @click=\"goToPostList\">\n              查看更多\n            </el-button>\n            </div>\n          </template>\n          <div v-if=\"loading\" class=\"loading-container\">\n            <el-skeleton :rows=\"5\" animated />\n          </div>\n          <div v-else>\n            <el-table :data=\"recentPosts\" style=\"width: 100%\">\n              <el-table-column prop=\"title\" label=\"标题\" width=\"200\"></el-table-column>\n              <el-table-column prop=\"user.username\" label=\"作者\" width=\"100\"></el-table-column>\n              <el-table-column prop=\"created_at\" label=\"发布时间\">\n                <template #default=\"scope\">\n                  {{ formatDate(scope.row.created_at) }}\n                </template>\n              </el-table-column>\n              <el-table-column label=\"操作\" width=\"100\" align=\"center\">\n                <template #default=\"scope\">\n                  <el-button size=\"mini\" type=\"link\" @click=\"viewPost(scope.row)\">查看</el-button>\n                  <el-button size=\"mini\" type=\"danger\" @click=\"deletePost(scope.row)\">删除</el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\n      <!-- 系统信息 -->\n      <el-col :span=\"24\">\n        <el-card class=\"box-card\">\n          <template #header>\n            <div class=\"clearfix\">\n            <span>系统信息</span>\n            </div>\n          </template>\n          <div v-if=\"loading\" class=\"loading-container\">\n            <el-skeleton :rows=\"5\" animated />\n          </div>\n          <div v-else class=\"system-info\">\n            <el-descriptions title=\"基本信息\" :column=\"3\" border>\n              <el-descriptions-item label=\"系统名称\">论坛系统</el-descriptions-item>\n              <el-descriptions-item label=\"版本\">1.0.0</el-descriptions-item>\n              <el-descriptions-item label=\"运行环境\">Vue + Django + MySQL</el-descriptions-item>\n              <el-descriptions-item label=\"数据库\">MySQL</el-descriptions-item>\n              <el-descriptions-item label=\"缓存\">Redis</el-descriptions-item>\n              <el-descriptions-item label=\"上传限制\">10MB</el-descriptions-item>\n            </el-descriptions>\n\n            <el-descriptions title=\"管理员信息\" :column=\"3\" border style=\"margin-top: 20px;\">\n              <el-descriptions-item label=\"当前管理员\">{{ userInfo?.username }}</el-descriptions-item>\n              <el-descriptions-item label=\"登录时间\">{{ formatDate(userInfo?.last_login) }}</el-descriptions-item>\n              <el-descriptions-item label=\"IP地址\">127.0.0.1</el-descriptions-item>\n            </el-descriptions>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { formatDateTime } from '@/utils/index'\n\n// 格式化日期函数\nconst formatDate = (date) => {\n  return formatDateTime(date)\n}\n\nexport default {\n  name: 'AdminDashboard',\n  setup() {\n    const router = useRouter()\n    const store = useStore()\n\n    const loading = ref(false)\n\n    // 用户信息\n    const userInfo = computed(() => store.getters.userInfo)\n\n    // 统计卡片数据\n    const statCards = ref([\n      {\n        title: '用户总数',\n        value: 128,\n        icon: 'el-icon-user',\n        color: '#409EFF'\n      },\n      {\n        title: '帖子总数',\n        value: 256,\n        icon: 'el-icon-document',\n        color: '#67C23A'\n      },\n      {\n        title: '评论总数',\n        value: 512,\n        icon: 'el-icon-chat-dot-round',\n        color: '#E6A23C'\n      },\n      {\n        title: '今日访问',\n        value: 64,\n        icon: 'el-icon-view',\n        color: '#F56C6C'\n      }\n    ])\n\n    // 最近注册用户\n    const recentUsers = ref([\n      {\n        id: 5,\n        username: 'user3',\n        email: 'user3@example.com',\n        created_at: '2023-05-19T10:30:00Z'\n      },\n      {\n        id: 4,\n        username: 'user2',\n        email: 'user2@example.com',\n        created_at: '2023-05-18T14:20:00Z'\n      },\n      {\n        id: 3,\n        username: 'user1',\n        email: 'user1@example.com',\n        created_at: '2023-05-17T09:15:00Z'\n      }\n    ])\n\n    // 最新帖子\n    const recentPosts = ref([\n      {\n        id: 5,\n        title: '如何使用Vue3的Composition API',\n        user: { id: 3, username: 'user1' },\n        created_at: '2023-05-19T11:30:00Z'\n      },\n      {\n        id: 4,\n        title: 'Django REST Framework最佳实践',\n        user: { id: 2, username: 'moderator' },\n        created_at: '2023-05-18T16:45:00Z'\n      },\n      {\n        id: 3,\n        title: 'MySQL性能优化技巧',\n        user: { id: 1, username: 'admin' },\n        created_at: '2023-05-17T14:20:00Z'\n      }\n    ])\n\n    // 获取仪表盘数据\n    const fetchDashboardData = async () => {\n      loading.value = true\n      try {\n        // 模拟API调用\n        setTimeout(() => {\n          loading.value = false\n        }, 500)\n\n        // 实际API调用\n        // const response = await getDashboardData()\n        // if (response.code === 0) {\n        //   statCards.value[0].value = response.data.users_count\n        //   statCards.value[1].value = response.data.posts_count\n        //   statCards.value[2].value = response.data.comments_count\n        //   statCards.value[3].value = response.data.today_visits\n        //   recentUsers.value = response.data.recent_users\n        //   recentPosts.value = response.data.recent_posts\n        // } else {\n        //   ElMessage.error(response.msg || '获取仪表盘数据失败')\n        // }\n      } catch (error) {\n        console.error('获取仪表盘数据失败:', error)\n      } finally {\n        loading.value = false\n      }\n    }\n\n    // 查看用户\n    const viewUser = (user) => {\n      router.push({ name: 'UserProfile', params: { id: user.id } })\n    }\n\n    // 查看帖子\n    const viewPost = (post) => {\n      router.push({ name: 'PostDetail', params: { id: post.id } })\n    }\n\n    // 跳转到用户管理页面\n    const goToUserManagement = () => {\n      router.push({ name: 'UserManagement' })\n    }\n\n    // 跳转到帖子列表页面\n    const goToPostList = () => {\n      router.push({ name: 'PostList' })\n    }\n\n    // 生命周期钩子\n    onMounted(() => {\n      fetchDashboardData()\n    })\n\n    return {\n      loading,\n      userInfo,\n      statCards,\n      recentUsers,\n      recentPosts,\n      formatDate,\n      viewUser,\n      viewPost,\n      goToUserManagement,\n      goToPostList\n    }\n  }\n}\n</script>\n\n<style scoped>\n.dashboard-container {\n  padding: 20px;\n}\n\n.stat-card {\n  height: 120px;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n}\n\n.stat-icon {\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 20px;\n}\n\n.stat-icon i {\n  font-size: 40px;\n  color: white;\n}\n\n.stat-info {\n  flex: 1;\n}\n\n.stat-title {\n  font-size: 16px;\n  color: #606266;\n  margin-bottom: 10px;\n}\n\n.stat-value {\n  font-size: 24px;\n  font-weight: bold;\n  color: #303133;\n}\n\n.loading-container {\n  padding: 20px 0;\n}\n\n.system-info {\n  margin-top: 10px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}