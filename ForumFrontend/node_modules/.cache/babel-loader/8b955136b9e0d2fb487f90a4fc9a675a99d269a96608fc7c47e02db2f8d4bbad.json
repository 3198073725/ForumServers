{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/defineProperty.js\")[\"default\"];\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.number.constructor.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar index = require('../../../hooks/use-size/index.js');\nvar index$1 = require('../../../hooks/use-aria/index.js');\nvar event = require('../../../constants/event.js');\nvar shared = require('@vue/shared');\nvar types = require('../../../utils/types.js');\nvar defaultProps = {\n  label: \"label\",\n  value: \"value\",\n  disabled: \"disabled\"\n};\nvar segmentedProps = runtime.buildProps(_objectSpread({\n  direction: {\n    type: runtime.definePropType(String),\n    \"default\": \"horizontal\"\n  },\n  options: {\n    type: runtime.definePropType(Array),\n    \"default\": function _default() {\n      return [];\n    }\n  },\n  modelValue: {\n    type: [String, Number, Boolean],\n    \"default\": void 0\n  },\n  props: {\n    type: runtime.definePropType(Object),\n    \"default\": function _default() {\n      return defaultProps;\n    }\n  },\n  block: Boolean,\n  size: index.useSizeProp,\n  disabled: Boolean,\n  validateEvent: {\n    type: Boolean,\n    \"default\": true\n  },\n  id: String,\n  name: String\n}, index$1.useAriaProps([\"ariaLabel\"])));\nvar segmentedEmits = _defineProperty(_defineProperty({}, event.UPDATE_MODEL_EVENT, function (val) {\n  return shared.isString(val) || types.isNumber(val) || types.isBoolean(val);\n}), event.CHANGE_EVENT, function (val) {\n  return shared.isString(val) || types.isNumber(val) || types.isBoolean(val);\n});\nexports.defaultProps = defaultProps;\nexports.segmentedEmits = segmentedEmits;\nexports.segmentedProps = segmentedProps;","map":{"version":3,"names":["defaultProps","label","value","disabled","segmentedProps","runtime","buildProps","_objectSpread","direction","type","definePropType","String","options","Array","default","modelValue","Number","Boolean","props","Object","block","size","index","useSizeProp","validateEvent","id","name","index$1","useAriaProps","segmentedEmits","_defineProperty","event","UPDATE_MODEL_EVENT","val","shared","isString","types","isNumber","isBoolean","CHANGE_EVENT"],"sources":["../../../../../../packages/components/segmented/src/segmented.ts"],"sourcesContent":["import {\n  buildProps,\n  definePropType,\n  isBoolean,\n  isNumber,\n  isString,\n} from '@element-plus/utils'\nimport { useAriaProps, useSizeProp } from '@element-plus/hooks'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\n\nimport type { Option } from './types'\nimport type { ExtractPropTypes } from 'vue'\nimport type Segmented from './segmented.vue'\n\nexport interface Props {\n  label?: string\n  value?: string\n  disabled?: string\n}\n\nexport const defaultProps: Required<Props> = {\n  label: 'label',\n  value: 'value',\n  disabled: 'disabled',\n}\n\nexport const segmentedProps = buildProps({\n  direction: {\n    type: definePropType<'vertical' | 'horizontal'>(String),\n    default: 'horizontal',\n  },\n  /**\n   * @description options of segmented\n   */\n  options: {\n    type: definePropType<Option[]>(Array),\n    default: () => [],\n  },\n  /**\n   * @description binding value\n   */\n  modelValue: {\n    type: [String, Number, Boolean],\n    default: undefined,\n  },\n  /**\n   * @description configuration options, see the following table\n   */\n  props: {\n    type: definePropType<Props>(Object),\n    default: () => defaultProps,\n  },\n  /**\n   * @description fit width of parent content\n   */\n  block: Boolean,\n  /**\n   * @description size of component\n   */\n  size: useSizeProp,\n  /**\n   * @description whether segmented is disabled\n   */\n  disabled: Boolean,\n  /**\n   * @description whether to trigger form validation\n   */\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description native input id\n   */\n  id: String,\n  /**\n   * @description native `name` attribute\n   */\n  name: String,\n  ...useAriaProps(['ariaLabel']),\n})\n\nexport type SegmentedProps = ExtractPropTypes<typeof segmentedProps>\n\nexport const segmentedEmits = {\n  [UPDATE_MODEL_EVENT]: (val: any) =>\n    isString(val) || isNumber(val) || isBoolean(val),\n  [CHANGE_EVENT]: (val: any) =>\n    isString(val) || isNumber(val) || isBoolean(val),\n}\nexport type SegmentedEmits = typeof segmentedEmits\n\nexport type SegmentedInstance = InstanceType<typeof Segmented> & unknown\n"],"mappings":";;;;;;;;;;;;;;;AASY,IAACA,YAAY,GAAG;EAC1BC,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE,OAAO;EACdC,QAAQ,EAAE;AACZ;AACY,IAACC,cAAc,GAAGC,OAAA,CAAAC,UAAU,CAAAC,aAAA;EACtCC,SAAS,EAAE;IACTC,IAAI,EAAEJ,OAAA,CAAAK,cAAc,CAACC,MAAM,CAAC;IAC5B,WAAS;EACb,CAAG;EACDC,OAAO,EAAE;IACPH,IAAI,EAAEJ,OAAA,CAAAK,cAAc,CAACG,KAAK,CAAC;IAC3B,WAAS,SAATC,QAAOA,CAAA;MAAA,OAAQ,EAAE;IAAA;EACrB,CAAG;EACDC,UAAU,EAAE;IACVN,IAAI,EAAE,CAACE,MAAM,EAAEK,MAAM,EAAEC,OAAO,CAAC;IAC/B,WAAS,KAAK;EAClB,CAAG;EACDC,KAAK,EAAE;IACLT,IAAI,EAAEJ,OAAA,CAAAK,cAAc,CAACS,MAAM,CAAC;IAC5B,WAAS,SAATL,QAAOA,CAAA;MAAA,OAAQd,YAAY;IAAA;EAC/B,CAAG;EACDoB,KAAK,EAAEH,OAAO;EACdI,IAAI,EAAEC,KAAA,CAAAC,WAAW;EACjBpB,QAAQ,EAAEc,OAAO;EACjBO,aAAa,EAAE;IACbf,IAAI,EAAEQ,OAAO;IACb,WAAS;EACb,CAAG;EACDQ,EAAE,EAAEd,MAAM;EACVe,IAAI,EAAEf;AAAM,GACTgB,OAAA,CAAAC,YAAY,CAAC,CAAC,WAAW,CAAC,CAAC,CAC/B;AACW,IAACC,cAAc,GAAAC,eAAA,CAAAA,eAAA,KACxBC,KAAA,CAAAC,kBAAkB,EAAG,UAACC,GAAG;EAAA,OAAKC,MAAA,CAAAC,QAAQ,CAACF,GAAG,CAAC,IAAIG,KAAA,CAAAC,QAAQ,CAACJ,GAAG,CAAC,IAAIG,KAAA,CAAAE,SAAS,CAACL,GAAG,CAAC;AAAA,IAC9EF,KAAA,CAAAQ,YAAY,EAAG,UAACN,GAAG;EAAA,OAAKC,MAAA,CAAAC,QAAQ,CAACF,GAAG,CAAC,IAAIG,KAAA,CAAAC,QAAQ,CAACJ,GAAG,CAAC,IAAIG,KAAA,CAAAE,SAAS,CAACL,GAAG,CAAC;AAAA,EAC3E","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}