{"ast":null,"code":"import _regeneratorRuntime from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport { computed, onMounted, ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport { Bell, Loading } from '@element-plus/icons-vue';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'NotificationBell',\n  setup: function setup() {\n    var store = useStore();\n    var router = useRouter();\n    var loading = ref(false);\n\n    // 从Vuex获取通知数据\n    var notifications = computed(function () {\n      return store.state.notifications.notifications;\n    });\n    var unreadCount = computed(function () {\n      return store.state.notifications.unreadCount;\n    });\n    var hasUnread = computed(function () {\n      return unreadCount.value > 0;\n    });\n\n    // 加载通知数据\n    var loadNotifications = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              loading.value = true;\n              _context.prev = 1;\n              _context.next = 4;\n              return store.dispatch('notifications/fetchNotifications');\n            case 4:\n              _context.next = 10;\n              break;\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('加载通知失败:', _context.t0);\n              ElMessage.error('获取通知失败');\n            case 10:\n              _context.prev = 10;\n              loading.value = false;\n              return _context.finish(10);\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 6, 10, 13]]);\n      }));\n      return function loadNotifications() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    // 初始化WebSocket连接\n    var initWebSocket = function initWebSocket() {\n      if (store.getters.isLoggedIn) {\n        // 这里需要根据实际情况实现WebSocket的初始化\n      }\n    };\n\n    // 标记通知为已读\n    var markAsRead = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(notificationId) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return store.dispatch('notifications/markAsRead', notificationId);\n            case 3:\n              _context2.next = 8;\n              break;\n            case 5:\n              _context2.prev = 5;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('标记通知已读失败:', _context2.t0);\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 5]]);\n      }));\n      return function markAsRead(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 标记所有通知为已读\n    var markAllAsRead = function markAllAsRead(event) {\n      event.stopPropagation();\n      store.dispatch('notifications/markAllAsRead');\n    };\n\n    // 处理通知点击\n    var handleNotificationClick = function handleNotificationClick(notification) {\n      // 如果未读，标记为已读\n      if (!notification.is_read) {\n        markAsRead(notification.id);\n      }\n\n      // 根据通知类型跳转到相应页面\n      navigateByNotification(notification);\n    };\n\n    // 查看所有通知\n    var viewAllNotifications = function viewAllNotifications() {\n      router.push('/notifications');\n    };\n\n    // 根据通知类型导航\n    var navigateByNotification = function navigateByNotification(notification) {\n      if (notification.target_type === 'post' && notification.target_id) {\n        router.push(\"/posts/\".concat(notification.target_id));\n      } else if (notification.target_type === 'comment' && notification.target_id) {\n        // 评论通知可能需要先获取评论所属的帖子ID\n        router.push(\"/comments/\".concat(notification.target_id));\n      } else {\n        // 默认跳转到通知列表页\n        router.push('/notifications');\n      }\n    };\n\n    // 处理下拉菜单命令\n    var handleCommand = function handleCommand(command) {\n      if (command === 'viewAll') {\n        viewAllNotifications();\n      } else if (command.type === 'view') {\n        handleNotificationClick(command);\n      }\n    };\n\n    // 格式化时间\n    var formatTime = function formatTime(timestamp) {\n      var date = new Date(timestamp);\n      var now = new Date();\n      var diff = now - date;\n\n      // 小于1分钟\n      if (diff < 60000) {\n        return '刚刚';\n      }\n      // 小于1小时\n      else if (diff < 3600000) {\n        return \"\".concat(Math.floor(diff / 60000), \"\\u5206\\u949F\\u524D\");\n      }\n      // 小于24小时\n      else if (diff < 86400000) {\n        return \"\".concat(Math.floor(diff / 3600000), \"\\u5C0F\\u65F6\\u524D\");\n      }\n      // 小于30天\n      else if (diff < 2592000000) {\n        return \"\".concat(Math.floor(diff / 86400000), \"\\u5929\\u524D\");\n      }\n      // 其他情况显示完整日期\n      else {\n        return \"\".concat(date.getFullYear(), \"-\").concat(String(date.getMonth() + 1).padStart(2, '0'), \"-\").concat(String(date.getDate()).padStart(2, '0'));\n      }\n    };\n    onMounted(function () {\n      // 加载未读通知数量\n      store.dispatch('notifications/fetchUnreadNotificationCount');\n\n      // 初始化WebSocket\n      initWebSocket();\n    });\n    return {\n      notifications: notifications,\n      unreadCount: unreadCount,\n      hasUnread: hasUnread,\n      loading: loading,\n      markAsRead: markAsRead,\n      markAllAsRead: markAllAsRead,\n      handleNotificationClick: handleNotificationClick,\n      viewAllNotifications: viewAllNotifications,\n      handleCommand: handleCommand,\n      formatTime: formatTime,\n      // 图标\n      Bell: Bell,\n      Loading: Loading\n    };\n  }\n};","map":{"version":3,"names":["computed","onMounted","ref","useStore","useRouter","Bell","Loading","ElMessage","name","setup","store","router","loading","notifications","state","unreadCount","hasUnread","value","loadNotifications","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","dispatch","t0","console","error","finish","stop","apply","arguments","initWebSocket","getters","isLoggedIn","markAsRead","_ref2","_callee2","notificationId","_callee2$","_context2","_x","markAllAsRead","event","stopPropagation","handleNotificationClick","notification","is_read","id","navigateByNotification","viewAllNotifications","push","target_type","target_id","concat","handleCommand","command","type","formatTime","timestamp","date","Date","now","diff","Math","floor","getFullYear","String","getMonth","padStart","getDate"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\components\\NotificationBell.vue"],"sourcesContent":["<template>\r\n  <div class=\"notification-bell\">\r\n    <el-badge :value=\"unreadCount\" :max=\"99\" :hidden=\"unreadCount <= 0\" class=\"notification-badge\">\r\n      <el-dropdown trigger=\"click\" @command=\"handleCommand\">\r\n        <el-button class=\"bell-button\" :icon=\"Bell\" circle />\r\n        <template #dropdown>\r\n          <el-dropdown-menu class=\"notification-dropdown\">\r\n            <div class=\"notification-header\">\r\n              <span>消息通知</span>\r\n              <el-button v-if=\"hasUnread\" type=\"text\" @click=\"markAllAsRead\">全部已读</el-button>\r\n            </div>\r\n            <el-divider />\r\n            <div v-if=\"loading\" class=\"notification-loading\">\r\n              <el-icon class=\"is-loading\"><Loading /></el-icon>\r\n              <span>加载中...</span>\r\n            </div>\r\n            <template v-else>\r\n              <div v-if=\"notifications.length === 0\" class=\"no-notification\">\r\n                暂无通知\r\n              </div>\r\n              <template v-else>\r\n                <el-dropdown-item \r\n                  v-for=\"notification in notifications.slice(0, 5)\" \r\n                  :key=\"notification.id\"\r\n                  :class=\"{ 'notification-unread': !notification.is_read }\"\r\n                  :command=\"{ type: 'view', id: notification.id }\"\r\n                >\r\n                  <div class=\"notification-item\">\r\n                    <div class=\"notification-title\">\r\n                      {{ notification.title }}\r\n                      <span v-if=\"!notification.is_read\" class=\"unread-dot\"></span>\r\n                    </div>\r\n                    <div class=\"notification-content\">{{ notification.content }}</div>\r\n                    <div class=\"notification-time\">{{ formatTime(notification.created_at) }}</div>\r\n                  </div>\r\n                </el-dropdown-item>\r\n                <el-divider v-if=\"notifications.length > 5\" />\r\n                <el-dropdown-item v-if=\"notifications.length > 5\" command=\"viewAll\">\r\n                  <div class=\"view-all\">查看全部</div>\r\n                </el-dropdown-item>\r\n              </template>\r\n            </template>\r\n          </el-dropdown-menu>\r\n        </template>\r\n      </el-dropdown>\r\n    </el-badge>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { computed, onMounted, ref } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\nimport { Bell, Loading } from '@element-plus/icons-vue'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'NotificationBell',\r\n  setup() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const loading = ref(false)\r\n    \r\n    // 从Vuex获取通知数据\r\n    const notifications = computed(() => store.state.notifications.notifications)\r\n    const unreadCount = computed(() => store.state.notifications.unreadCount)\r\n    const hasUnread = computed(() => unreadCount.value > 0)\r\n    \r\n    // 加载通知数据\r\n    const loadNotifications = async () => {\r\n      loading.value = true\r\n      try {\r\n        await store.dispatch('notifications/fetchNotifications')\r\n      } catch (error) {\r\n        console.error('加载通知失败:', error)\r\n        ElMessage.error('获取通知失败')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n    \r\n    // 初始化WebSocket连接\r\n    const initWebSocket = () => {\r\n      if (store.getters.isLoggedIn) {\r\n        // 这里需要根据实际情况实现WebSocket的初始化\r\n      }\r\n    }\r\n    \r\n    // 标记通知为已读\r\n    const markAsRead = async (notificationId) => {\r\n      try {\r\n        // 使用WebSocket标记已读\r\n        // webSocketManager.markNotificationRead(notificationId)\r\n        \r\n        // 备用方案：使用API标记已读\r\n        await store.dispatch('notifications/markAsRead', notificationId)\r\n      } catch (error) {\r\n        console.error('标记通知已读失败:', error)\r\n      }\r\n    }\r\n    \r\n    // 标记所有通知为已读\r\n    const markAllAsRead = (event) => {\r\n      event.stopPropagation()\r\n      store.dispatch('notifications/markAllAsRead')\r\n    }\r\n    \r\n    // 处理通知点击\r\n    const handleNotificationClick = (notification) => {\r\n      // 如果未读，标记为已读\r\n      if (!notification.is_read) {\r\n        markAsRead(notification.id)\r\n      }\r\n      \r\n      // 根据通知类型跳转到相应页面\r\n      navigateByNotification(notification)\r\n    }\r\n    \r\n    // 查看所有通知\r\n    const viewAllNotifications = () => {\r\n      router.push('/notifications')\r\n    }\r\n    \r\n    // 根据通知类型导航\r\n    const navigateByNotification = (notification) => {\r\n      if (notification.target_type === 'post' && notification.target_id) {\r\n        router.push(`/posts/${notification.target_id}`)\r\n      } else if (notification.target_type === 'comment' && notification.target_id) {\r\n        // 评论通知可能需要先获取评论所属的帖子ID\r\n        router.push(`/comments/${notification.target_id}`)\r\n      } else {\r\n        // 默认跳转到通知列表页\r\n        router.push('/notifications')\r\n      }\r\n    }\r\n    \r\n    // 处理下拉菜单命令\r\n    const handleCommand = (command) => {\r\n      if (command === 'viewAll') {\r\n        viewAllNotifications()\r\n      } else if (command.type === 'view') {\r\n        handleNotificationClick(command)\r\n      }\r\n    }\r\n    \r\n    // 格式化时间\r\n    const formatTime = (timestamp) => {\r\n      const date = new Date(timestamp)\r\n      const now = new Date()\r\n      const diff = now - date\r\n      \r\n      // 小于1分钟\r\n      if (diff < 60000) {\r\n        return '刚刚'\r\n      }\r\n      // 小于1小时\r\n      else if (diff < 3600000) {\r\n        return `${Math.floor(diff / 60000)}分钟前`\r\n      }\r\n      // 小于24小时\r\n      else if (diff < 86400000) {\r\n        return `${Math.floor(diff / 3600000)}小时前`\r\n      }\r\n      // 小于30天\r\n      else if (diff < 2592000000) {\r\n        return `${Math.floor(diff / 86400000)}天前`\r\n      }\r\n      // 其他情况显示完整日期\r\n      else {\r\n        return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`\r\n      }\r\n    }\r\n    \r\n    onMounted(() => {\r\n      // 加载未读通知数量\r\n      store.dispatch('notifications/fetchUnreadNotificationCount')\r\n      \r\n      // 初始化WebSocket\r\n      initWebSocket()\r\n    })\r\n    \r\n    return {\r\n      notifications,\r\n      unreadCount,\r\n      hasUnread,\r\n      loading,\r\n      markAsRead,\r\n      markAllAsRead,\r\n      handleNotificationClick,\r\n      viewAllNotifications,\r\n      handleCommand,\r\n      formatTime,\r\n      // 图标\r\n      Bell,\r\n      Loading\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.notification-bell {\r\n  display: inline-block;\r\n}\r\n\r\n.notification-badge {\r\n  margin-right: 10px;\r\n}\r\n\r\n.bell-button {\r\n  font-size: 18px;\r\n  padding: 8px;\r\n}\r\n\r\n.notification-dropdown {\r\n  width: 320px;\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.notification-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 15px;\r\n  font-weight: bold;\r\n}\r\n\r\n.notification-loading {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100px;\r\n}\r\n\r\n.notification-loading span {\r\n  margin-left: 10px;\r\n}\r\n\r\n.no-notification {\r\n  text-align: center;\r\n  color: #909399;\r\n  padding: 20px 0;\r\n}\r\n\r\n.notification-item {\r\n  padding: 5px 0;\r\n}\r\n\r\n.notification-title {\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.notification-content {\r\n  color: #606266;\r\n  font-size: 13px;\r\n  margin-bottom: 5px;\r\n  white-space: normal;\r\n  word-break: break-all;\r\n  line-height: 1.4;\r\n}\r\n\r\n.notification-time {\r\n  color: #909399;\r\n  font-size: 12px;\r\n  text-align: right;\r\n}\r\n\r\n.notification-unread {\r\n  background-color: #f0f9ff;\r\n}\r\n\r\n.unread-dot {\r\n  width: 8px;\r\n  height: 8px;\r\n  border-radius: 50%;\r\n  background-color: #409EFF;\r\n  display: inline-block;\r\n}\r\n\r\n.view-all {\r\n  text-align: center;\r\n  color: #409EFF;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}