{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"change-password-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    \"class\": \"password-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_cache[5] || (_cache[5] = _createElementVNode(\"div\", {\n        slot: \"header\",\n        \"class\": \"clearfix\"\n      }, [_createElementVNode(\"span\", null, \"修改密码\")], -1 /* HOISTED */)), _createVNode(_component_el_form, {\n        ref: \"passwordForm\",\n        model: $setup.passwordForm,\n        rules: $setup.passwordRules,\n        \"label-width\": \"100px\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"当前密码\",\n            prop: \"old_password\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.passwordForm.old_password,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n                  return $setup.passwordForm.old_password = $event;\n                }),\n                type: \"password\",\n                placeholder: \"请输入当前密码\",\n                \"show-password\": \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"新密码\",\n            prop: \"new_password\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.passwordForm.new_password,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return $setup.passwordForm.new_password = $event;\n                }),\n                type: \"password\",\n                placeholder: \"请输入新密码\",\n                \"show-password\": \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"确认新密码\",\n            prop: \"confirm_password\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.passwordForm.confirm_password,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                  return $setup.passwordForm.confirm_password = $event;\n                }),\n                type: \"password\",\n                placeholder: \"请再次输入新密码\",\n                \"show-password\": \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, null, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_button, {\n                onClick: $setup.cancel\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[3] || (_cache[3] = [_createTextVNode(\"取消\")]);\n                }),\n                _: 1 /* STABLE */,\n                __: [3]\n              }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n                type: \"primary\",\n                onClick: $setup.submitForm,\n                loading: $setup.submitting\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[4] || (_cache[4] = [_createTextVNode(\"确认修改\")]);\n                }),\n                _: 1 /* STABLE */,\n                __: [4]\n              }, 8 /* PROPS */, [\"onClick\", \"loading\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\", \"rules\"])];\n    }),\n    _: 1 /* STABLE */,\n    __: [5]\n  })]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createVNode","_component_el_card","_withCtx","_createElementVNode","slot","_component_el_form","ref","model","$setup","passwordForm","rules","passwordRules","_component_el_form_item","label","prop","_component_el_input","modelValue","old_password","_cache","$event","type","placeholder","_","new_password","confirm_password","_component_el_button","onClick","cancel","_createTextVNode","__","submitForm","loading","submitting"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\user\\ChangePassword.vue"],"sourcesContent":["<template>\n  <div class=\"change-password-container\">\n    <el-card class=\"password-card\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span>修改密码</span>\n      </div>\n\n      <el-form\n        ref=\"passwordForm\"\n        :model=\"passwordForm\"\n        :rules=\"passwordRules\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"当前密码\" prop=\"old_password\">\n          <el-input\n            v-model=\"passwordForm.old_password\"\n            type=\"password\"\n            placeholder=\"请输入当前密码\"\n            show-password\n          ></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"新密码\" prop=\"new_password\">\n          <el-input\n            v-model=\"passwordForm.new_password\"\n            type=\"password\"\n            placeholder=\"请输入新密码\"\n            show-password\n          ></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"确认新密码\" prop=\"confirm_password\">\n          <el-input\n            v-model=\"passwordForm.confirm_password\"\n            type=\"password\"\n            placeholder=\"请再次输入新密码\"\n            show-password\n          ></el-input>\n        </el-form-item>\n\n        <el-form-item>\n          <el-button @click=\"cancel\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitForm\" :loading=\"submitting\">确认修改</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { ElMessage } from 'element-plus'\nimport { changePassword } from '@/api/profile'\n\nexport default {\n  name: 'ChangePassword',\n  setup() {\n    const router = useRouter()\n    const store = useStore()\n    const passwordForm = ref({\n      old_password: '',\n      new_password: '',\n      confirm_password: ''\n    })\n\n    const validateConfirmPassword = (rule, value, callback) => {\n      if (value !== passwordForm.value.new_password) {\n        callback(new Error('两次输入的密码不一致'))\n      } else {\n        callback()\n      }\n    }\n\n    const passwordRules = {\n      old_password: [\n        { required: true, message: '请输入当前密码', trigger: 'blur' }\n      ],\n      new_password: [\n        { required: true, message: '请输入新密码', trigger: 'blur' },\n        { min: 6, message: '密码长度不能少于6个字符', trigger: 'blur' }\n      ],\n      confirm_password: [\n        { required: true, message: '请再次输入新密码', trigger: 'blur' },\n        { validator: validateConfirmPassword, trigger: 'blur' }\n      ]\n    }\n\n    const submitting = ref(false)\n\n    const submitForm = async () => {\n      const formEl = document.querySelector('.change-password-container .el-form')\n      if (!formEl) return\n\n      formEl.validate(async (valid) => {\n        if (valid) {\n          submitting.value = true\n          try {\n            const response = await changePassword(passwordForm.value)\n            if (response.code === 0) {\n              ElMessage.success(response.msg || '密码修改成功，请重新登录')\n\n              // 退出登录\n              store.dispatch('logout')\n              router.push('/login')\n            } else {\n              ElMessage.error(response.msg || '密码修改失败')\n            }\n          } catch (error) {\n            console.error('密码修改失败:', error)\n            ElMessage.error('密码修改失败')\n          } finally {\n            submitting.value = false\n          }\n        } else {\n          return false\n        }\n      })\n    }\n\n    const cancel = () => {\n      router.push('/profile/me')\n    }\n\n    return {\n      passwordForm,\n      passwordRules,\n      submitting,\n      submitForm,\n      cancel\n    }\n  }\n}\n</script>\n\n<style scoped>\n.change-password-container {\n  padding: 20px;\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.password-card {\n  margin-bottom: 20px;\n}\n</style>\n"],"mappings":";;EACO,SAAM;AAA2B;;;;;;;uBAAtCA,mBAAA,CA6CM,OA7CNC,UA6CM,GA5CJC,YAAA,CA2CUC,kBAAA;IA3CD,SAAM;EAAe;IAFlC,WAAAC,QAAA,CAGM;MAAA,OAEM,C,0BAFNC,mBAAA,CAEM;QAFDC,IAAI,EAAC,QAAQ;QAAC,SAAM;UACvBD,mBAAA,CAAiB,cAAX,MAAI,E,sBAGZH,YAAA,CAqCUK,kBAAA;QApCRC,GAAG,EAAC,cAAc;QACjBC,KAAK,EAAEC,MAAA,CAAAC,YAAY;QACnBC,KAAK,EAAEF,MAAA,CAAAG,aAAa;QACrB,aAAW,EAAC;;QAXpB,WAAAT,QAAA,CAaQ;UAAA,OAOe,CAPfF,YAAA,CAOeY,uBAAA;YAPDC,KAAK,EAAC,MAAM;YAACC,IAAI,EAAC;;YAbxC,WAAAZ,QAAA,CAcU;cAAA,OAKY,CALZF,YAAA,CAKYe,mBAAA;gBAnBtBC,UAAA,EAeqBR,MAAA,CAAAC,YAAY,CAACQ,YAAY;gBAf9C,uBAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;kBAAA,OAeqBX,MAAA,CAAAC,YAAY,CAACQ,YAAY,GAAAE,MAAA;gBAAA;gBAClCC,IAAI,EAAC,UAAU;gBACfC,WAAW,EAAC,SAAS;gBACrB,eAAa,EAAb;;;YAlBZC,CAAA;cAsBQtB,YAAA,CAOeY,uBAAA;YAPDC,KAAK,EAAC,KAAK;YAACC,IAAI,EAAC;;YAtBvC,WAAAZ,QAAA,CAuBU;cAAA,OAKY,CALZF,YAAA,CAKYe,mBAAA;gBA5BtBC,UAAA,EAwBqBR,MAAA,CAAAC,YAAY,CAACc,YAAY;gBAxB9C,uBAAAL,MAAA,QAAAA,MAAA,gBAAAC,MAAA;kBAAA,OAwBqBX,MAAA,CAAAC,YAAY,CAACc,YAAY,GAAAJ,MAAA;gBAAA;gBAClCC,IAAI,EAAC,UAAU;gBACfC,WAAW,EAAC,QAAQ;gBACpB,eAAa,EAAb;;;YA3BZC,CAAA;cA+BQtB,YAAA,CAOeY,uBAAA;YAPDC,KAAK,EAAC,OAAO;YAACC,IAAI,EAAC;;YA/BzC,WAAAZ,QAAA,CAgCU;cAAA,OAKY,CALZF,YAAA,CAKYe,mBAAA;gBArCtBC,UAAA,EAiCqBR,MAAA,CAAAC,YAAY,CAACe,gBAAgB;gBAjClD,uBAAAN,MAAA,QAAAA,MAAA,gBAAAC,MAAA;kBAAA,OAiCqBX,MAAA,CAAAC,YAAY,CAACe,gBAAgB,GAAAL,MAAA;gBAAA;gBACtCC,IAAI,EAAC,UAAU;gBACfC,WAAW,EAAC,UAAU;gBACtB,eAAa,EAAb;;;YApCZC,CAAA;cAwCQtB,YAAA,CAGeY,uBAAA;YA3CvB,WAAAV,QAAA,CAyCU;cAAA,OAAyC,CAAzCF,YAAA,CAAyCyB,oBAAA;gBAA7BC,OAAK,EAAElB,MAAA,CAAAmB;cAAM;gBAzCnC,WAAAzB,QAAA,CAyCqC;kBAAA,OAAEgB,MAAA,QAAAA,MAAA,OAzCvCU,gBAAA,CAyCqC,IAAE,E;;gBAzCvCN,CAAA;gBAAAO,EAAA;8CA0CU7B,YAAA,CAAoFyB,oBAAA;gBAAzEL,IAAI,EAAC,SAAS;gBAAEM,OAAK,EAAElB,MAAA,CAAAsB,UAAU;gBAAGC,OAAO,EAAEvB,MAAA,CAAAwB;;gBA1ClE,WAAA9B,QAAA,CA0C8E;kBAAA,OAAIgB,MAAA,QAAAA,MAAA,OA1ClFU,gBAAA,CA0C8E,MAAI,E;;gBA1ClFN,CAAA;gBAAAO,EAAA;;;YAAAP,CAAA;;;QAAAA,CAAA;;;IAAAA,CAAA;IAAAO,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}