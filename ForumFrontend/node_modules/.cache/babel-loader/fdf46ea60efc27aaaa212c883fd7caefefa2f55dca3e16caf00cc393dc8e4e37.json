{"ast":null,"code":"import request from '@/utils/request';\n\n// 获取板块列表\nexport function getBoardList(params) {\n  return request({\n    url: '/api/v1/boards/',\n    method: 'get',\n    params: params\n  })[\"catch\"](function (error) {\n    var _error$response, _error$response2;\n    console.error('获取板块列表失败', error);\n    // 返回错误信息\n    return {\n      code: (error === null || error === void 0 || (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) || 500,\n      status: (error === null || error === void 0 || (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) || 500,\n      message: (error === null || error === void 0 ? void 0 : error.message) || '网络错误，请稍后再试',\n      data: []\n    };\n  });\n}\n\n// 获取板块详情\nexport function getBoardDetail(id) {\n  return request({\n    url: \"/api/v1/boards/\".concat(id, \"/\"),\n    method: 'get'\n  })[\"catch\"](function (error) {\n    var _error$response3, _error$response4;\n    console.error(\"\\u83B7\\u53D6\\u677F\\u5757\\u8BE6\\u60C5(ID: \".concat(id, \")\\u5931\\u8D25\"), error);\n    // 返回错误信息\n    return {\n      code: (error === null || error === void 0 || (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) || 500,\n      status: (error === null || error === void 0 || (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) || 500,\n      message: (error === null || error === void 0 ? void 0 : error.message) || '网络错误，请稍后再试',\n      data: null\n    };\n  });\n}\n\n// 获取热门板块\nexport function getHotBoards() {\n  var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n  return request({\n    url: '/api/v1/boards/hot/',\n    method: 'get',\n    params: {\n      limit: limit\n    }\n  })[\"catch\"](function (error) {\n    var _error$response5, _error$response6;\n    console.error('获取热门板块失败', error);\n    // 返回错误信息\n    return {\n      code: (error === null || error === void 0 || (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) || 500,\n      status: (error === null || error === void 0 || (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) || 500,\n      message: (error === null || error === void 0 ? void 0 : error.message) || '网络错误，请稍后再试',\n      data: []\n    };\n  });\n}\n\n// 创建板块 (管理员)\nexport function createBoard(data) {\n  return request({\n    url: '/api/v1/boards/',\n    method: 'post',\n    data: data\n  });\n}\n\n// 更新板块 (管理员)\nexport function updateBoard(id, data) {\n  return request({\n    url: \"/api/v1/boards/\".concat(id, \"/\"),\n    method: 'put',\n    data: data\n  });\n}\n\n// 删除板块 (管理员)\nexport function deleteBoard(id) {\n  return request({\n    url: \"/api/v1/boards/\".concat(id, \"/\"),\n    method: 'delete'\n  });\n}\n\n// 重新排序板块 (管理员)\nexport function reorderBoards(data) {\n  return request({\n    url: '/api/v1/boards/reorder/',\n    method: 'post',\n    data: data\n  });\n}\n\n// 获取所有用户组 (管理员)\nexport function getGroups() {\n  return request({\n    url: '/api/v1/boards/groups/',\n    method: 'get'\n  });\n}\n\n// 获取所有用户 (管理员)\nexport function getUsers() {\n  return request({\n    url: '/api/v1/boards/users/',\n    method: 'get'\n  });\n}","map":{"version":3,"names":["request","getBoardList","params","url","method","error","_error$response","_error$response2","console","code","response","status","message","data","getBoardDetail","id","concat","_error$response3","_error$response4","getHotBoards","limit","arguments","length","undefined","_error$response5","_error$response6","createBoard","updateBoard","deleteBoard","reorderBoards","getGroups","getUsers"],"sources":["H:/ForumServers/ForumFrontend/src/api/board.js"],"sourcesContent":["import request from '@/utils/request'\n\n// 获取板块列表\nexport function getBoardList(params) {\n  return request({\n    url: '/api/v1/boards/',\n    method: 'get',\n    params\n  }).catch(error => {\n    console.error('获取板块列表失败', error)\n    // 返回错误信息\n    return {\n      code: error?.response?.status || 500,\n      status: error?.response?.status || 500,\n      message: error?.message || '网络错误，请稍后再试',\n      data: []\n    }\n  })\n}\n\n// 获取板块详情\nexport function getBoardDetail(id) {\n  return request({\n    url: `/api/v1/boards/${id}/`,\n    method: 'get'\n  }).catch(error => {\n    console.error(`获取板块详情(ID: ${id})失败`, error)\n    // 返回错误信息\n    return {\n      code: error?.response?.status || 500,\n      status: error?.response?.status || 500,\n      message: error?.message || '网络错误，请稍后再试',\n      data: null\n    }\n  })\n}\n\n// 获取热门板块\nexport function getHotBoards(limit = 5) {\n  return request({\n    url: '/api/v1/boards/hot/',\n    method: 'get',\n    params: { limit }\n  }).catch(error => {\n    console.error('获取热门板块失败', error)\n    // 返回错误信息\n    return {\n      code: error?.response?.status || 500,\n      status: error?.response?.status || 500,\n      message: error?.message || '网络错误，请稍后再试',\n      data: []\n    }\n  })\n}\n\n// 创建板块 (管理员)\nexport function createBoard(data) {\n  return request({\n    url: '/api/v1/boards/',\n    method: 'post',\n    data\n  })\n}\n\n// 更新板块 (管理员)\nexport function updateBoard(id, data) {\n  return request({\n    url: `/api/v1/boards/${id}/`,\n    method: 'put',\n    data\n  })\n}\n\n// 删除板块 (管理员)\nexport function deleteBoard(id) {\n  return request({\n    url: `/api/v1/boards/${id}/`,\n    method: 'delete'\n  })\n}\n\n// 重新排序板块 (管理员)\nexport function reorderBoards(data) {\n  return request({\n    url: '/api/v1/boards/reorder/',\n    method: 'post',\n    data\n  })\n}\n\n// 获取所有用户组 (管理员)\nexport function getGroups() {\n  return request({\n    url: '/api/v1/boards/groups/',\n    method: 'get'\n  })\n}\n\n// 获取所有用户 (管理员)\nexport function getUsers() {\n  return request({\n    url: '/api/v1/boards/users/',\n    method: 'get'\n  })\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}