{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed, onMounted, ref, watch } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter, useRoute } from 'vue-router';\nimport NotificationBell from '@/components/NotificationBell.vue';\nimport ChatWindow from '@/components/ChatWindow.vue';\nimport webSocketManager from '@/utils/websocket';\nexport default {\n  name: 'App',\n  components: {\n    NotificationBell: NotificationBell,\n    ChatWindow: ChatWindow\n  },\n  setup: function setup() {\n    var store = useStore();\n    var router = useRouter();\n    var route = useRoute();\n\n    // 登录状态\n    var isLoggedIn = computed(function () {\n      return store.getters.isLoggedIn;\n    });\n    var isAdmin = computed(function () {\n      return store.getters.isAdmin;\n    });\n    var user = computed(function () {\n      return store.state.user;\n    });\n\n    // 当前激活的路由\n    var activeRoute = computed(function () {\n      return route.path;\n    });\n\n    // 聊天窗口状态\n    var showChatWindow = computed(function () {\n      return !!store.state.currentChatUserId;\n    });\n    var currentChatUserId = computed(function () {\n      return store.state.currentChatUserId;\n    });\n\n    // 路由导航\n    var goToLogin = function goToLogin() {\n      return router.push('/login');\n    };\n    var goToRegister = function goToRegister() {\n      return router.push('/register');\n    };\n\n    // 处理下拉菜单命令\n    var handleCommand = function handleCommand(command) {\n      switch (command) {\n        case 'profile':\n          router.push(\"/user/\".concat(user.value.id));\n          break;\n        case 'messages':\n          router.push('/messages');\n          break;\n        case 'admin':\n          router.push('/admin');\n          break;\n        case 'logout':\n          logout();\n          break;\n      }\n    };\n\n    // 登出\n    var logout = function logout() {\n      // 关闭所有WebSocket连接\n      webSocketManager.closeAllConnections();\n\n      // 登出并重定向到首页\n      store.dispatch('logout');\n      router.push('/');\n    };\n\n    // 关闭聊天窗口\n    var closeChatWindow = function closeChatWindow() {\n      store.commit('setCurrentChatUserId', null);\n    };\n\n    // 初始化WebSocket连接\n    var initWebSockets = function initWebSockets() {\n      if (isLoggedIn.value) {\n        // 初始化通知WebSocket\n        webSocketManager.initNotificationSocket();\n      }\n    };\n\n    // 监听登录状态变化\n    watch(isLoggedIn, function (newValue) {\n      if (newValue) {\n        // 用户登录后初始化WebSocket\n        initWebSockets();\n      } else {\n        // 用户登出后关闭WebSocket\n        webSocketManager.closeAllConnections();\n      }\n    });\n    onMounted(function () {\n      // 页面加载时初始化WebSocket\n      initWebSockets();\n    });\n    return {\n      isLoggedIn: isLoggedIn,\n      isAdmin: isAdmin,\n      user: user,\n      activeRoute: activeRoute,\n      showChatWindow: showChatWindow,\n      currentChatUserId: currentChatUserId,\n      goToLogin: goToLogin,\n      goToRegister: goToRegister,\n      handleCommand: handleCommand,\n      closeChatWindow: closeChatWindow\n    };\n  }\n};","map":{"version":3,"names":["computed","onMounted","ref","watch","useStore","useRouter","useRoute","NotificationBell","ChatWindow","webSocketManager","name","components","setup","store","router","route","isLoggedIn","getters","isAdmin","user","state","activeRoute","path","showChatWindow","currentChatUserId","goToLogin","push","goToRegister","handleCommand","command","concat","value","id","logout","closeAllConnections","dispatch","closeChatWindow","commit","initWebSockets","initNotificationSocket","newValue"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>\n        <div class=\"header-content\">\n          <div class=\"logo\">\n            <router-link to=\"/\">论坛系统</router-link>\n          </div>\n          <div class=\"nav\">\n            <el-menu mode=\"horizontal\" :router=\"true\" :default-active=\"activeRoute\">\n              <el-menu-item index=\"/\">首页</el-menu-item>\n              <el-menu-item index=\"/ranking\">排行榜</el-menu-item>\n              <!-- 更多菜单项 -->\n            </el-menu>\n          </div>\n          <div class=\"user-actions\">\n            <template v-if=\"isLoggedIn\">\n              <!-- 通知铃铛 -->\n              <NotificationBell />\n              \n              <!-- 用户头像和下拉菜单 -->\n              <el-dropdown trigger=\"click\" @command=\"handleCommand\">\n                <div class=\"user-avatar\">\n                  <UserAvatar :user=\"user\" />\n                  <span class=\"username\">{{ user.nickname || user.username }}</span>\n                </div>\n                <template #dropdown>\n                  <el-dropdown-menu>\n                    <el-dropdown-item command=\"profile\">个人中心</el-dropdown-item>\n                    <el-dropdown-item command=\"messages\">我的私信</el-dropdown-item>\n                    <el-dropdown-item v-if=\"isAdmin\" command=\"admin\">管理后台</el-dropdown-item>\n                    <el-dropdown-item divided command=\"logout\">退出登录</el-dropdown-item>\n                  </el-dropdown-menu>\n                </template>\n              </el-dropdown>\n            </template>\n            <template v-else>\n              <el-button type=\"primary\" @click=\"goToLogin\">登录</el-button>\n              <el-button @click=\"goToRegister\">注册</el-button>\n            </template>\n          </div>\n        </div>\n      </el-header>\n      \n      <el-main>\n        <router-view />\n      </el-main>\n      \n      <el-footer>\n        <div class=\"footer-content\">\n          <p>© {{ new Date().getFullYear() }} 论坛系统 - 基于Vue + Django的现代化论坛</p>\n        </div>\n      </el-footer>\n    </el-container>\n    \n    <!-- 聊天窗口 -->\n    <div v-if=\"showChatWindow\" class=\"chat-window-container\">\n      <ChatWindow \n        :userId=\"currentChatUserId\" \n        @close=\"closeChatWindow\" \n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed, onMounted, ref, watch } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRouter, useRoute } from 'vue-router'\nimport NotificationBell from '@/components/NotificationBell.vue'\nimport ChatWindow from '@/components/ChatWindow.vue'\nimport webSocketManager from '@/utils/websocket'\n\nexport default {\n  name: 'App',\n  components: {\n    NotificationBell,\n    ChatWindow\n  },\n  setup() {\n    const store = useStore()\n    const router = useRouter()\n    const route = useRoute()\n    \n    // 登录状态\n    const isLoggedIn = computed(() => store.getters.isLoggedIn)\n    const isAdmin = computed(() => store.getters.isAdmin)\n    const user = computed(() => store.state.user)\n    \n    // 当前激活的路由\n    const activeRoute = computed(() => route.path)\n    \n    // 聊天窗口状态\n    const showChatWindow = computed(() => !!store.state.currentChatUserId)\n    const currentChatUserId = computed(() => store.state.currentChatUserId)\n    \n    // 路由导航\n    const goToLogin = () => router.push('/login')\n    const goToRegister = () => router.push('/register')\n    \n    // 处理下拉菜单命令\n    const handleCommand = (command) => {\n      switch (command) {\n        case 'profile':\n          router.push(`/user/${user.value.id}`)\n          break\n        case 'messages':\n          router.push('/messages')\n          break\n        case 'admin':\n          router.push('/admin')\n          break\n        case 'logout':\n          logout()\n          break\n      }\n    }\n    \n    // 登出\n    const logout = () => {\n      // 关闭所有WebSocket连接\n      webSocketManager.closeAllConnections()\n      \n      // 登出并重定向到首页\n      store.dispatch('logout')\n      router.push('/')\n    }\n    \n    // 关闭聊天窗口\n    const closeChatWindow = () => {\n      store.commit('setCurrentChatUserId', null)\n    }\n    \n    // 初始化WebSocket连接\n    const initWebSockets = () => {\n      if (isLoggedIn.value) {\n        // 初始化通知WebSocket\n        webSocketManager.initNotificationSocket()\n      }\n    }\n    \n    // 监听登录状态变化\n    watch(isLoggedIn, (newValue) => {\n      if (newValue) {\n        // 用户登录后初始化WebSocket\n        initWebSockets()\n      } else {\n        // 用户登出后关闭WebSocket\n        webSocketManager.closeAllConnections()\n      }\n    })\n    \n    onMounted(() => {\n      // 页面加载时初始化WebSocket\n      initWebSockets()\n    })\n    \n    return {\n      isLoggedIn,\n      isAdmin,\n      user,\n      activeRoute,\n      showChatWindow,\n      currentChatUserId,\n      goToLogin,\n      goToRegister,\n      handleCommand,\n      closeChatWindow\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Helvetica Neue', Helvetica, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  min-height: 100vh;\n}\n\n.el-container {\n  min-height: 100vh;\n}\n\n.el-header {\n  background-color: #fff;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n  padding: 0;\n}\n\n.header-content {\n  max-width: 1200px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  height: 60px;\n}\n\n.logo {\n  font-size: 20px;\n  font-weight: bold;\n  margin-right: 40px;\n}\n\n.logo a {\n  color: #409eff;\n  text-decoration: none;\n}\n\n.nav {\n  flex: 1;\n}\n\n.user-actions {\n  display: flex;\n  align-items: center;\n}\n\n.user-avatar {\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n}\n\n.username {\n  margin-left: 8px;\n  font-size: 14px;\n}\n\n.el-main {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.el-footer {\n  background-color: #f5f7fa;\n  color: #909399;\n  text-align: center;\n  padding: 20px 0;\n}\n\n.footer-content {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n/* 聊天窗口容器 */\n.chat-window-container {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 350px;\n  height: 500px;\n  z-index: 1000;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  overflow: hidden;\n}\n</style>\n"],"mappings":";AAkEA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,GAAG,EAAEC,KAAI,QAAS,KAAI;AACpD,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,SAAS,EAAEC,QAAO,QAAS,YAAW;AAC/C,OAAOC,gBAAe,MAAO,mCAAkC;AAC/D,OAAOC,UAAS,MAAO,6BAA4B;AACnD,OAAOC,gBAAe,MAAO,mBAAkB;AAE/C,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVJ,gBAAgB,EAAhBA,gBAAgB;IAChBC,UAAS,EAATA;EACF,CAAC;EACDI,KAAK,WAALA,KAAKA,CAAA,EAAG;IACN,IAAMC,KAAI,GAAIT,QAAQ,CAAC;IACvB,IAAMU,MAAK,GAAIT,SAAS,CAAC;IACzB,IAAMU,KAAI,GAAIT,QAAQ,CAAC;;IAEvB;IACA,IAAMU,UAAS,GAAIhB,QAAQ,CAAC;MAAA,OAAMa,KAAK,CAACI,OAAO,CAACD,UAAU;IAAA;IAC1D,IAAME,OAAM,GAAIlB,QAAQ,CAAC;MAAA,OAAMa,KAAK,CAACI,OAAO,CAACC,OAAO;IAAA;IACpD,IAAMC,IAAG,GAAInB,QAAQ,CAAC;MAAA,OAAMa,KAAK,CAACO,KAAK,CAACD,IAAI;IAAA;;IAE5C;IACA,IAAME,WAAU,GAAIrB,QAAQ,CAAC;MAAA,OAAMe,KAAK,CAACO,IAAI;IAAA;;IAE7C;IACA,IAAMC,cAAa,GAAIvB,QAAQ,CAAC;MAAA,OAAM,CAAC,CAACa,KAAK,CAACO,KAAK,CAACI,iBAAiB;IAAA;IACrE,IAAMA,iBAAgB,GAAIxB,QAAQ,CAAC;MAAA,OAAMa,KAAK,CAACO,KAAK,CAACI,iBAAiB;IAAA;;IAEtE;IACA,IAAMC,SAAQ,GAAI,SAAZA,SAAQA,CAAA;MAAA,OAAUX,MAAM,CAACY,IAAI,CAAC,QAAQ;IAAA;IAC5C,IAAMC,YAAW,GAAI,SAAfA,YAAWA,CAAA;MAAA,OAAUb,MAAM,CAACY,IAAI,CAAC,WAAW;IAAA;;IAElD;IACA,IAAME,aAAY,GAAI,SAAhBA,aAAYA,CAAKC,OAAO,EAAK;MACjC,QAAQA,OAAO;QACb,KAAK,SAAS;UACZf,MAAM,CAACY,IAAI,UAAAI,MAAA,CAAUX,IAAI,CAACY,KAAK,CAACC,EAAE,CAAE;UACpC;QACF,KAAK,UAAU;UACblB,MAAM,CAACY,IAAI,CAAC,WAAW;UACvB;QACF,KAAK,OAAO;UACVZ,MAAM,CAACY,IAAI,CAAC,QAAQ;UACpB;QACF,KAAK,QAAQ;UACXO,MAAM,CAAC;UACP;MACJ;IACF;;IAEA;IACA,IAAMA,MAAK,GAAI,SAATA,MAAKA,CAAA,EAAU;MACnB;MACAxB,gBAAgB,CAACyB,mBAAmB,CAAC;;MAErC;MACArB,KAAK,CAACsB,QAAQ,CAAC,QAAQ;MACvBrB,MAAM,CAACY,IAAI,CAAC,GAAG;IACjB;;IAEA;IACA,IAAMU,eAAc,GAAI,SAAlBA,eAAcA,CAAA,EAAU;MAC5BvB,KAAK,CAACwB,MAAM,CAAC,sBAAsB,EAAE,IAAI;IAC3C;;IAEA;IACA,IAAMC,cAAa,GAAI,SAAjBA,cAAaA,CAAA,EAAU;MAC3B,IAAItB,UAAU,CAACe,KAAK,EAAE;QACpB;QACAtB,gBAAgB,CAAC8B,sBAAsB,CAAC;MAC1C;IACF;;IAEA;IACApC,KAAK,CAACa,UAAU,EAAE,UAACwB,QAAQ,EAAK;MAC9B,IAAIA,QAAQ,EAAE;QACZ;QACAF,cAAc,CAAC;MACjB,OAAO;QACL;QACA7B,gBAAgB,CAACyB,mBAAmB,CAAC;MACvC;IACF,CAAC;IAEDjC,SAAS,CAAC,YAAM;MACd;MACAqC,cAAc,CAAC;IACjB,CAAC;IAED,OAAO;MACLtB,UAAU,EAAVA,UAAU;MACVE,OAAO,EAAPA,OAAO;MACPC,IAAI,EAAJA,IAAI;MACJE,WAAW,EAAXA,WAAW;MACXE,cAAc,EAAdA,cAAc;MACdC,iBAAiB,EAAjBA,iBAAiB;MACjBC,SAAS,EAATA,SAAS;MACTE,YAAY,EAAZA,YAAY;MACZC,aAAa,EAAbA,aAAa;MACbQ,eAAc,EAAdA;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}