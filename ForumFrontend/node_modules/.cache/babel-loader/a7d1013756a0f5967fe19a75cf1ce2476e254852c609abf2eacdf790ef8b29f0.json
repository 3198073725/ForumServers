{"ast":null,"code":"import _toConsumableArray from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock, withKeys as _withKeys, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"board-detail-container\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_3 = {\n  key: 1,\n  \"class\": \"board-header\"\n};\nvar _hoisted_4 = {\n  \"class\": \"board-title\"\n};\nvar _hoisted_5 = {\n  \"class\": \"board-description\"\n};\nvar _hoisted_6 = {\n  \"class\": \"board-meta\"\n};\nvar _hoisted_7 = {\n  \"class\": \"board-actions\"\n};\nvar _hoisted_8 = {\n  \"class\": \"clearfix\"\n};\nvar _hoisted_9 = {\n  \"class\": \"post-filter\"\n};\nvar _hoisted_10 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_11 = {\n  key: 1\n};\nvar _hoisted_12 = {\n  key: 0,\n  \"class\": \"empty-posts\"\n};\nvar _hoisted_13 = {\n  key: 1,\n  \"class\": \"post-list\"\n};\nvar _hoisted_14 = [\"onClick\"];\nvar _hoisted_15 = {\n  \"class\": \"post-title\"\n};\nvar _hoisted_16 = {\n  \"class\": \"post-meta\"\n};\nvar _hoisted_17 = {\n  \"class\": \"post-author\"\n};\nvar _hoisted_18 = {\n  \"class\": \"post-stats\"\n};\nvar _hoisted_19 = {\n  \"class\": \"post-time\"\n};\nvar _hoisted_20 = {\n  \"class\": \"pagination-container\"\n};\nvar _hoisted_21 = {\n  \"class\": \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _component_el_option = _resolveComponent(\"el-option\");\n  var _component_el_select = _resolveComponent(\"el-select\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_el_pagination = _resolveComponent(\"el-pagination\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 板块信息卡片 \"), _createVNode(_component_el_card, {\n    \"class\": \"board-info-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_skeleton, {\n        rows: 3,\n        animated: \"\"\n      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[5] || (_cache[5] = _createElementVNode(\"i\", {\n        \"class\": \"el-icon-s-grid\"\n      }, null, -1 /* HOISTED */)), _createElementVNode(\"h2\", null, _toDisplayString($data.board.name), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_5, _toDisplayString($data.board.description), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"span\", null, \"帖子数: \" + _toDisplayString($data.board.posts_count || 0), 1 /* TEXT */), _createElementVNode(\"span\", null, \"创建时间: \" + _toDisplayString($options.formatDate($data.board.created_at)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.handleCreatePost\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[6] || (_cache[6] = [_createTextVNode(\"发布新帖\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [6]\n      }, 8 /* PROPS */, [\"onClick\"]), _ctx.isAdmin ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 0,\n        type: \"link\",\n        onClick: $options.handleEditBoard\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[7] || (_cache[7] = [_createTextVNode(\"编辑板块\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [7]\n      }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])]))];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 帖子列表 \"), _createVNode(_component_el_card, {\n    \"class\": \"post-list-card\"\n  }, {\n    header: _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_8, [_cache[8] || (_cache[8] = _createElementVNode(\"span\", null, \"帖子列表\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_el_select, {\n        modelValue: $data.listQuery.ordering,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return $data.listQuery.ordering = $event;\n        }),\n        placeholder: \"排序方式\",\n        onChange: $options.fetchPosts\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_option, {\n            label: \"最新发布\",\n            value: \"-created_at\"\n          }), _createVNode(_component_el_option, {\n            label: \"最多浏览\",\n            value: \"-views\"\n          }), _createVNode(_component_el_option, {\n            label: \"最多点赞\",\n            value: \"-likes_count\"\n          }), _createVNode(_component_el_option, {\n            label: \"最多评论\",\n            value: \"-comments_count\"\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\", \"onChange\"]), _createVNode(_component_el_input, {\n        modelValue: $data.listQuery.search,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n          return $data.listQuery.search = $event;\n        }),\n        placeholder: \"搜索帖子\",\n        style: {\n          \"width\": \"200px\",\n          \"margin-left\": \"10px\"\n        },\n        clearable: \"\",\n        onKeyup: _withKeys($options.fetchPosts, [\"enter\"]),\n        onClear: $options.fetchPosts\n      }, {\n        append: _withCtx(function () {\n          return [_createVNode(_component_el_button, {\n            icon: \"el-icon-search\",\n            onClick: $options.fetchPosts\n          }, null, 8 /* PROPS */, [\"onClick\"])];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\", \"onKeyup\", \"onClear\"])])])];\n    }),\n    \"default\": _withCtx(function () {\n      return [$data.postsLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createVNode(_component_el_skeleton, {\n        rows: 5,\n        animated: \"\"\n      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [$data.posts.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, _cache[9] || (_cache[9] = [_createElementVNode(\"i\", {\n        \"class\": \"el-icon-document\"\n      }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"暂无帖子，快来发布第一篇帖子吧！\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, function (post) {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: post && post.id || _ctx.index,\n          \"class\": \"post-item\",\n          onClick: function onClick($event) {\n            return $options.viewPost(post);\n          }\n        }, [_createElementVNode(\"div\", _hoisted_15, [post && post.is_pinned ? (_openBlock(), _createBlock(_component_el_tag, {\n          key: 0,\n          size: \"small\",\n          type: \"danger\"\n        }, {\n          \"default\": _withCtx(function () {\n            return _toConsumableArray(_cache[10] || (_cache[10] = [_createTextVNode(\"置顶\")]));\n          }),\n          _: 1 /* STABLE */,\n          __: [10]\n        })) : _createCommentVNode(\"v-if\", true), post && post.is_featured ? (_openBlock(), _createBlock(_component_el_tag, {\n          key: 1,\n          size: \"small\",\n          type: \"success\"\n        }, {\n          \"default\": _withCtx(function () {\n            return _toConsumableArray(_cache[11] || (_cache[11] = [_createTextVNode(\"精华\")]));\n          }),\n          _: 1 /* STABLE */,\n          __: [11]\n        })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"span\", null, _toDisplayString(post && post.title || '无标题'), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [_cache[12] || (_cache[12] = _createElementVNode(\"i\", {\n          \"class\": \"el-icon-user\"\n        }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, _toDisplayString(post && post.user && (post.user.nickname || post.user.username) || '未知用户'), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"span\", null, [_cache[13] || (_cache[13] = _createElementVNode(\"i\", {\n          \"class\": \"el-icon-view\"\n        }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(post && post.views || 0), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_cache[14] || (_cache[14] = _createElementVNode(\"i\", {\n          \"class\": \"el-icon-star-on\"\n        }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(post && post.likes_count || 0), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_cache[15] || (_cache[15] = _createElementVNode(\"i\", {\n          \"class\": \"el-icon-chat-dot-round\"\n        }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(post && post.comments_count || 0), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_19, _toDisplayString(post && post.created_at ? $options.formatDate(post.created_at) : '未知时间'), 1 /* TEXT */)])], 8 /* PROPS */, _hoisted_14);\n      }), 128 /* KEYED_FRAGMENT */))])), _createCommentVNode(\" 分页 \"), _createElementVNode(\"div\", _hoisted_20, [_createVNode(_component_el_pagination, {\n        background: \"\",\n        layout: \"prev, pager, next\",\n        total: $data.total,\n        \"page-size\": $data.listQuery.limit,\n        \"current-page\": $data.listQuery.page,\n        onCurrentChange: $options.handlePageChange\n      }, null, 8 /* PROPS */, [\"total\", \"page-size\", \"current-page\", \"onCurrentChange\"])])]))];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 编辑板块对话框 \"), _createVNode(_component_el_dialog, {\n    title: \"编辑板块\",\n    visible: $data.dialogVisible,\n    width: \"500px\"\n  }, {\n    footer: _withCtx(function () {\n      return [_createElementVNode(\"span\", _hoisted_21, [_createVNode(_component_el_button, {\n        onClick: _cache[4] || (_cache[4] = function ($event) {\n          return $data.dialogVisible = false;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[16] || (_cache[16] = [_createTextVNode(\"取 消\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [16]\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.submitBoardForm\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[17] || (_cache[17] = [_createTextVNode(\"确 定\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [17]\n      }, 8 /* PROPS */, [\"onClick\"])])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        ref: \"boardForm\",\n        model: $data.boardForm,\n        rules: $data.boardRules,\n        \"label-width\": \"80px\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"板块名称\",\n            prop: \"name\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $data.boardForm.name,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                  return $data.boardForm.name = $event;\n                }),\n                placeholder: \"请输入板块名称\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"板块描述\",\n            prop: \"description\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $data.boardForm.description,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                  return $data.boardForm.description = $event;\n                }),\n                type: \"textarea\",\n                rows: 4,\n                placeholder: \"请输入板块描述\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\", \"rules\"])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\"])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_el_card","_withCtx","$data","loading","_hoisted_2","_component_el_skeleton","rows","animated","_hoisted_3","_createElementVNode","_hoisted_4","_toDisplayString","board","name","_hoisted_5","description","_hoisted_6","posts_count","$options","formatDate","created_at","_hoisted_7","_component_el_button","type","onClick","handleCreatePost","_cache","_createTextVNode","_","__","_ctx","isAdmin","_createBlock","handleEditBoard","header","_hoisted_8","_hoisted_9","_component_el_select","modelValue","listQuery","ordering","$event","placeholder","onChange","fetchPosts","_component_el_option","label","value","_component_el_input","search","style","clearable","onKeyup","_withKeys","onClear","append","icon","postsLoading","_hoisted_10","_hoisted_11","posts","length","_hoisted_12","_hoisted_13","_Fragment","_renderList","post","id","index","viewPost","_hoisted_15","is_pinned","_component_el_tag","size","_toConsumableArray","is_featured","title","_hoisted_16","_hoisted_17","user","nickname","username","_hoisted_18","views","likes_count","comments_count","_hoisted_19","_hoisted_14","_hoisted_20","_component_el_pagination","background","layout","total","limit","page","onCurrentChange","handlePageChange","_component_el_dialog","visible","dialogVisible","width","footer","_hoisted_21","submitBoardForm","_component_el_form","ref","model","boardForm","rules","boardRules","_component_el_form_item","prop"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\board\\BoardDetail.vue"],"sourcesContent":["<template>\n  <div class=\"board-detail-container\">\n    <!-- 板块信息卡片 -->\n    <el-card class=\"board-info-card\">\n      <div v-if=\"loading\" class=\"loading-container\">\n        <el-skeleton :rows=\"3\" animated />\n      </div>\n      <div v-else class=\"board-header\">\n        <div class=\"board-title\">\n          <i class=\"el-icon-s-grid\"></i>\n          <h2>{{ board.name }}</h2>\n        </div>\n        <div class=\"board-description\">{{ board.description }}</div>\n        <div class=\"board-meta\">\n          <span>帖子数: {{ board.posts_count || 0 }}</span>\n          <span>创建时间: {{ formatDate(board.created_at) }}</span>\n        </div>\n        <div class=\"board-actions\">\n          <el-button type=\"primary\" @click=\"handleCreatePost\">发布新帖</el-button>\n          <el-button v-if=\"isAdmin\" type=\"link\" @click=\"handleEditBoard\">编辑板块</el-button>\n        </div>\n      </div>\n    </el-card>\n\n    <!-- 帖子列表 -->\n    <el-card class=\"post-list-card\">\n      <template #header>\n        <div class=\"clearfix\">\n          <span>帖子列表</span>\n          <div class=\"post-filter\">\n            <el-select v-model=\"listQuery.ordering\" placeholder=\"排序方式\" @change=\"fetchPosts\">\n              <el-option label=\"最新发布\" value=\"-created_at\"></el-option>\n              <el-option label=\"最多浏览\" value=\"-views\"></el-option>\n              <el-option label=\"最多点赞\" value=\"-likes_count\"></el-option>\n              <el-option label=\"最多评论\" value=\"-comments_count\"></el-option>\n            </el-select>\n            <el-input\n              v-model=\"listQuery.search\"\n              placeholder=\"搜索帖子\"\n              style=\"width: 200px; margin-left: 10px;\"\n              clearable\n              @keyup.enter=\"fetchPosts\"\n              @clear=\"fetchPosts\"\n            >\n              <template #append>\n                <el-button icon=\"el-icon-search\" @click=\"fetchPosts\"></el-button>\n              </template>\n            </el-input>\n          </div>\n        </div>\n      </template>\n\n      <div v-if=\"postsLoading\" class=\"loading-container\">\n        <el-skeleton :rows=\"5\" animated />\n      </div>\n      <div v-else>\n        <div v-if=\"posts.length === 0\" class=\"empty-posts\">\n          <i class=\"el-icon-document\"></i>\n          <p>暂无帖子，快来发布第一篇帖子吧！</p>\n        </div>\n        <div v-else class=\"post-list\">\n          <div\n            v-for=\"post in posts\"\n            :key=\"post && post.id || index\"\n            class=\"post-item\"\n            @click=\"viewPost(post)\"\n          >\n            <div class=\"post-title\">\n              <el-tag v-if=\"post && post.is_pinned\" size=\"small\" type=\"danger\">置顶</el-tag>\n              <el-tag v-if=\"post && post.is_featured\" size=\"small\" type=\"success\">精华</el-tag>\n              <span>{{ post && post.title || '无标题' }}</span>\n            </div>\n            <div class=\"post-meta\">\n              <div class=\"post-author\">\n                <i class=\"el-icon-user\"></i>\n                <span>{{ (post && post.user && (post.user.nickname || post.user.username)) || '未知用户' }}</span>\n              </div>\n              <div class=\"post-stats\">\n                <span><i class=\"el-icon-view\"></i> {{ post && post.views || 0 }}</span>\n                <span><i class=\"el-icon-star-on\"></i> {{ post && post.likes_count || 0 }}</span>\n                <span><i class=\"el-icon-chat-dot-round\"></i> {{ post && post.comments_count || 0 }}</span>\n              </div>\n              <div class=\"post-time\">{{ post && post.created_at ? formatDate(post.created_at) : '未知时间' }}</div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 分页 -->\n        <div class=\"pagination-container\">\n          <el-pagination\n            background\n            layout=\"prev, pager, next\"\n            :total=\"total\"\n            :page-size=\"listQuery.limit\"\n            :current-page=\"listQuery.page\"\n            @current-change=\"handlePageChange\"\n          >\n          </el-pagination>\n        </div>\n      </div>\n    </el-card>\n\n    <!-- 编辑板块对话框 -->\n    <el-dialog\n      title=\"编辑板块\"\n      :visible=\"dialogVisible\"\n      width=\"500px\"\n    >\n      <el-form\n        ref=\"boardForm\"\n        :model=\"boardForm\"\n        :rules=\"boardRules\"\n        label-width=\"80px\"\n      >\n        <el-form-item label=\"板块名称\" prop=\"name\">\n          <el-input v-model=\"boardForm.name\" placeholder=\"请输入板块名称\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"板块描述\" prop=\"description\">\n          <el-input\n            v-model=\"boardForm.description\"\n            type=\"textarea\"\n            :rows=\"4\"\n            placeholder=\"请输入板块描述\"\n          ></el-input>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitBoardForm\">确 定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { getBoardDetail, updateBoard } from '@/api/board'\nimport { getPostList } from '@/api/post'\nimport { formatDateTime } from '@/utils/index'\nimport { mapGetters } from 'vuex'\n\n// 格式化日期函数\nconst formatDate = (date) => {\n  return formatDateTime(date)\n}\n\nexport default {\n  name: 'BoardDetail',\n  data() {\n    return {\n      loading: false,\n      postsLoading: false,\n      board: {},\n      posts: [],\n      total: 0,\n      listQuery: {\n        page: 1,\n        limit: 10,\n        board: null,\n        ordering: '-created_at',\n        search: ''\n      },\n      dialogVisible: false,\n      boardForm: {\n        name: '',\n        description: ''\n      },\n      boardRules: {\n        name: [\n          { required: true, message: '请输入板块名称', trigger: 'blur' },\n          { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n        ],\n        description: [\n          { max: 500, message: '长度不能超过 500 个字符', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'isAdmin',\n      'isLoggedIn'\n    ]),\n    isLogin() {\n      return this.isLoggedIn\n    }\n  },\n  created() {\n    const boardId = this.$route.params.id\n    if (boardId) {\n      this.listQuery.board = boardId\n      this.fetchBoardDetail(boardId)\n      this.fetchPosts()\n    } else {\n      this.$router.push({ name: 'BoardList' })\n    }\n  },\n  methods: {\n    formatDate,\n\n    // 获取板块详情\n    async fetchBoardDetail(id) {\n      this.loading = true\n      try {\n        console.log('获取板块详情，ID:', id)\n        const response = await getBoardDetail(id)\n        console.log('板块详情响应:', response)\n\n        if (response.code === 0 || response.status === 0) {\n          this.board = response.data\n          console.log('获取到的板块信息:', this.board)\n        } else {\n          console.error('获取板块详情失败，响应:', response)\n          this.$message.error(response.msg || '获取板块详情失败')\n        }\n      } catch (error) {\n        console.error('获取板块详情失败:', error)\n        this.$message.error('获取板块详情失败，请检查网络连接或联系管理员')\n      } finally {\n        this.loading = false\n      }\n    },\n\n    // 获取帖子列表\n    async fetchPosts() {\n      this.postsLoading = true\n      try {\n        const params = {\n          page: this.listQuery.page,\n          page_size: this.listQuery.limit,\n          board: this.listQuery.board,\n          ordering: this.listQuery.ordering\n        }\n\n        if (this.listQuery.search) {\n          params.search = this.listQuery.search\n        }\n\n        console.log('获取帖子列表，参数:', params)\n        const response = await getPostList(params)\n        console.log('帖子列表响应:', response)\n\n        if (response.code === 0 || response.status === 0) {\n          // 处理不同的响应格式\n          if (response.data.results) {\n            // 分页响应\n            this.posts = response.data.results\n            this.total = response.data.count\n          } else if (Array.isArray(response.data)) {\n            // 直接返回数组\n            this.posts = response.data\n            this.total = response.data.length\n          } else {\n            console.error('帖子列表响应格式不正确:', response)\n            this.posts = []\n            this.total = 0\n          }\n          console.log('获取到的帖子列表:', this.posts)\n        } else {\n          console.error('获取帖子列表失败，响应:', response)\n          this.$message.error(response.msg || '获取帖子列表失败')\n        }\n      } catch (error) {\n        console.error('获取帖子列表失败:', error)\n        this.$message.error('获取帖子列表失败，请检查网络连接或联系管理员')\n      } finally {\n        this.postsLoading = false\n      }\n    },\n\n    // 页码变化\n    handlePageChange(page) {\n      this.listQuery.page = page\n      this.fetchPosts()\n    },\n\n    // 查看帖子\n    viewPost(post) {\n      this.$router.push({ name: 'PostDetail', params: { id: post.id } })\n    },\n\n    // 创建帖子\n    handleCreatePost() {\n      if (!this.isLogin) {\n        this.$router.push('/login')\n        return\n      }\n      // 使用 query 参数而不是 params 传递板块ID\n      this.$router.push({\n        name: 'PostCreate',\n        query: { board: this.board.id }\n      })\n    },\n\n    // 编辑板块\n    handleEditBoard() {\n      this.boardForm = {\n        name: this.board.name,\n        description: this.board.description\n      }\n      this.dialogVisible = true\n    },\n\n    // 提交板块表单\n    submitBoardForm() {\n      this.$refs.boardForm.validate(async (valid) => {\n        if (valid) {\n          try {\n            const response = await updateBoard(this.board.id, this.boardForm)\n            if (response.code === 0) {\n              this.$message.success(response.msg || '更新成功')\n              this.dialogVisible = false\n              this.fetchBoardDetail(this.board.id)\n            } else {\n              this.$message.error(response.msg || '更新失败')\n            }\n          } catch (error) {\n            console.error('更新板块失败:', error)\n            this.$message.error('更新板块失败')\n          }\n        } else {\n          return false\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.board-detail-container {\n  padding: 20px;\n}\n\n.board-info-card,\n.post-list-card {\n  margin-bottom: 20px;\n}\n\n.loading-container {\n  padding: 20px 0;\n}\n\n.board-header {\n  padding: 10px 0;\n}\n\n.board-title {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.board-title i {\n  font-size: 24px;\n  margin-right: 10px;\n  color: #409EFF;\n}\n\n.board-title h2 {\n  margin: 0;\n  font-size: 20px;\n}\n\n.board-description {\n  color: #606266;\n  margin-bottom: 15px;\n  line-height: 1.5;\n}\n\n.board-meta {\n  display: flex;\n  color: #909399;\n  font-size: 14px;\n  margin-bottom: 15px;\n}\n\n.board-meta span {\n  margin-right: 20px;\n}\n\n.board-actions {\n  display: flex;\n  align-items: center;\n}\n\n.post-filter {\n  float: right;\n  display: flex;\n  align-items: center;\n}\n\n.empty-posts {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 40px 0;\n  color: #909399;\n}\n\n.empty-posts i {\n  font-size: 48px;\n  margin-bottom: 10px;\n}\n\n.post-list {\n  margin-bottom: 20px;\n}\n\n.post-item {\n  padding: 15px;\n  border-bottom: 1px solid #EBEEF5;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.post-item:hover {\n  background-color: #F5F7FA;\n}\n\n.post-item:last-child {\n  border-bottom: none;\n}\n\n.post-title {\n  font-size: 16px;\n  font-weight: bold;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n}\n\n.post-title .el-tag {\n  margin-right: 8px;\n}\n\n.post-meta {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 13px;\n  color: #909399;\n}\n\n.post-author {\n  display: flex;\n  align-items: center;\n}\n\n.post-author i {\n  margin-right: 5px;\n}\n\n.post-stats {\n  display: flex;\n}\n\n.post-stats span {\n  margin-right: 15px;\n  display: flex;\n  align-items: center;\n}\n\n.post-stats span i {\n  margin-right: 5px;\n}\n\n.pagination-container {\n  text-align: center;\n  margin-top: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}