{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.symbol.js\");\nrequire(\"core-js/modules/es.symbol.description.js\");\nrequire(\"core-js/modules/es.array.concat.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar core = require('@vueuse/core');\nvar index = require('../use-namespace/index.js');\nvar error = require('../../utils/error.js');\nvar defaultIdInjection = {\n  prefix: Math.floor(Math.random() * 1e4),\n  current: 0\n};\nvar ID_INJECTION_KEY = Symbol(\"elIdInjection\");\nvar useIdInjection = function useIdInjection() {\n  return vue.getCurrentInstance() ? vue.inject(ID_INJECTION_KEY, defaultIdInjection) : defaultIdInjection;\n};\nvar useId = function useId(deterministicId) {\n  var idInjection = useIdInjection();\n  if (!core.isClient && idInjection === defaultIdInjection) {\n    error.debugWarn(\"IdInjection\", \"Looks like you are using server rendering, you must provide a id provider to ensure the hydration process to be succeed\\nusage: app.provide(ID_INJECTION_KEY, {\\n  prefix: number,\\n  current: number,\\n})\");\n  }\n  var namespace = index.useGetDerivedNamespace();\n  var idRef = core.computedEager(function () {\n    return vue.unref(deterministicId) || \"\".concat(namespace.value, \"-id-\").concat(idInjection.prefix, \"-\").concat(idInjection.current++);\n  });\n  return idRef;\n};\nexports.ID_INJECTION_KEY = ID_INJECTION_KEY;\nexports.useId = useId;\nexports.useIdInjection = useIdInjection;","map":{"version":3,"names":["defaultIdInjection","prefix","Math","floor","random","current","ID_INJECTION_KEY","Symbol","useIdInjection","vue","getCurrentInstance","inject","useId","deterministicId","idInjection","core","isClient","error","debugWarn","namespace","index","useGetDerivedNamespace","idRef","computedEager","unref","concat","value"],"sources":["../../../../../packages/hooks/use-id/index.ts"],"sourcesContent":["import { getCurrentInstance, inject, unref } from 'vue'\nimport { type MaybeRef, computedEager } from '@vueuse/core'\nimport { debugWarn, isClient } from '@element-plus/utils'\nimport { useGetDerivedNamespace } from '../use-namespace'\n\nimport type { InjectionKey, Ref } from 'vue'\n\nexport type ElIdInjectionContext = {\n  prefix: number\n  current: number\n}\n\nconst defaultIdInjection = {\n  prefix: Math.floor(Math.random() * 10000),\n  current: 0,\n}\n\nexport const ID_INJECTION_KEY: InjectionKey<ElIdInjectionContext> =\n  Symbol('elIdInjection')\n\nexport const useIdInjection = (): ElIdInjectionContext => {\n  return getCurrentInstance()\n    ? inject(ID_INJECTION_KEY, defaultIdInjection)\n    : defaultIdInjection\n}\n\nexport const useId = (deterministicId?: MaybeRef<string>): Ref<string> => {\n  const idInjection = useIdInjection()\n  if (!isClient && idInjection === defaultIdInjection) {\n    debugWarn(\n      'IdInjection',\n      `Looks like you are using server rendering, you must provide a id provider to ensure the hydration process to be succeed\nusage: app.provide(ID_INJECTION_KEY, {\n  prefix: number,\n  current: number,\n})`\n    )\n  }\n\n  const namespace = useGetDerivedNamespace()\n\n  // NOTE: Here we use `computedEager` to calculate the id value immediately, avoiding inconsistent id generation due to the lazy feature of `computed` when server rendering.\n  const idRef = computedEager(\n    () =>\n      unref(deterministicId) ||\n      `${namespace.value}-id-${idInjection.prefix}-${idInjection.current++}`\n  )\n\n  return idRef\n}\n"],"mappings":";;;;;;;;;;;;;;AAIA,IAAMA,kBAAkB,GAAG;EACzBC,MAAM,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC;EACvCC,OAAO,EAAE;AACX,CAAC;AACW,IAACC,gBAAgB,GAAGC,MAAM,CAAC,eAAe;AAC1C,IAACC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAClC,OAAOC,GAAA,CAAAC,kBAAkB,EAAE,GAAGD,GAAA,CAAAE,MAAM,CAACL,gBAAgB,EAAEN,kBAAkB,CAAC,GAAGA,kBAAkB;AACjG;AACY,IAACY,KAAK,GAAG,SAARA,KAAKA,CAAIC,eAAe,EAAK;EACxC,IAAMC,WAAW,GAAGN,cAAc,EAAE;EACpC,IAAI,CAACO,IAAA,CAAAC,QAAQ,IAAIF,WAAW,KAAKd,kBAAkB,EAAE;IACnDiB,KAAA,CAAAC,SAAS,CAAC,aAAa,8MAIxB,CAAC;EACJ;EACE,IAAMC,SAAS,GAAGC,KAAA,CAAAC,sBAAsB,EAAE;EAC1C,IAAMC,KAAK,GAAGP,IAAA,CAAAQ,aAAa,CAAC;IAAA,OAAMd,GAAA,CAAAe,KAAK,CAACX,eAAe,CAAC,OAAAY,MAAA,CAAON,SAAS,CAACO,KAAK,UAAAD,MAAA,CAAOX,WAAW,CAACb,MAAM,OAAAwB,MAAA,CAAIX,WAAW,CAACT,OAAO,EAAE,CAAE;EAAA,EAAC;EACnI,OAAOiB,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}