{"ast":null,"code":"import _toConsumableArray from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"home-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"main-content\"\n};\nvar _hoisted_3 = {\n  \"class\": \"content-area\"\n};\nvar _hoisted_4 = {\n  key: 0,\n  \"class\": \"welcome-message\"\n};\nvar _hoisted_5 = {\n  key: 1,\n  \"class\": \"welcome-message\"\n};\nvar _hoisted_6 = {\n  \"class\": \"section-title\"\n};\nvar _hoisted_7 = {\n  \"class\": \"post-list\"\n};\nvar _hoisted_8 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_9 = {\n  key: 2\n};\nvar _hoisted_10 = {\n  \"class\": \"post-avatar\"\n};\nvar _hoisted_11 = {\n  \"class\": \"post-content\"\n};\nvar _hoisted_12 = {\n  \"class\": \"post-title\"\n};\nvar _hoisted_13 = {\n  \"class\": \"post-info\"\n};\nvar _hoisted_14 = {\n  \"class\": \"author\"\n};\nvar _hoisted_15 = {\n  \"class\": \"board\"\n};\nvar _hoisted_16 = {\n  \"class\": \"time\"\n};\nvar _hoisted_17 = {\n  \"class\": \"post-stats\"\n};\nvar _hoisted_18 = {\n  \"class\": \"views\"\n};\nvar _hoisted_19 = {\n  \"class\": \"comments\"\n};\nvar _hoisted_20 = {\n  \"class\": \"likes\"\n};\nvar _hoisted_21 = {\n  \"class\": \"sidebar\"\n};\nvar _hoisted_22 = {\n  \"class\": \"sidebar-section\"\n};\nvar _hoisted_23 = {\n  \"class\": \"board-list\"\n};\nvar _hoisted_24 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_25 = {\n  key: 2\n};\nvar _hoisted_26 = {\n  \"class\": \"post-count\"\n};\nvar _hoisted_27 = {\n  \"class\": \"sidebar-section\"\n};\nvar _hoisted_28 = {\n  \"class\": \"user-list\"\n};\nvar _hoisted_29 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_30 = {\n  key: 2\n};\nvar _hoisted_31 = {\n  \"class\": \"user-nickname\"\n};\nvar _hoisted_32 = {\n  \"class\": \"post-count\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  var _component_el_empty = _resolveComponent(\"el-empty\");\n  var _component_el_avatar = _resolveComponent(\"el-avatar\");\n  var _component_router_link = _resolveComponent(\"router-link\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_View = _resolveComponent(\"View\");\n  var _component_el_icon = _resolveComponent(\"el-icon\");\n  var _component_ChatDotRound = _resolveComponent(\"ChatDotRound\");\n  var _component_Star = _resolveComponent(\"Star\");\n  var _component_el_col = _resolveComponent(\"el-col\");\n  var _component_user_avatar = _resolveComponent(\"user-avatar\");\n  var _component_el_row = _resolveComponent(\"el-row\");\n  var _component_el_main = _resolveComponent(\"el-main\");\n  var _component_el_footer = _resolveComponent(\"el-footer\");\n  var _component_el_container = _resolveComponent(\"el-container\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_container, null, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_main, null, {\n        \"default\": _withCtx(function () {\n          return [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_row, {\n            gutter: 20\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_col, {\n                span: 18\n              }, {\n                \"default\": _withCtx(function () {\n                  var _$setup$userInfo, _$setup$userInfo2;\n                  return [_createElementVNode(\"div\", _hoisted_3, [$setup.isAuthenticated ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"h2\", null, \"欢迎回来，\" + _toDisplayString(((_$setup$userInfo = $setup.userInfo) === null || _$setup$userInfo === void 0 ? void 0 : _$setup$userInfo.nickname) || ((_$setup$userInfo2 = $setup.userInfo) === null || _$setup$userInfo2 === void 0 ? void 0 : _$setup$userInfo2.username)) + \"！\", 1 /* TEXT */), _cache[1] || (_cache[1] = _createElementVNode(\"p\", null, \"今天有什么想法要分享吗？\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n                    type: \"primary\",\n                    onClick: $setup.goToNewPost\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return _cache[0] || (_cache[0] = [_createTextVNode(\"发布新帖\")]);\n                    }),\n                    _: 1 /* STABLE */,\n                    __: [0]\n                  }, 8 /* PROPS */, [\"onClick\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"欢迎来到论坛系统\", -1 /* HOISTED */)), _cache[5] || (_cache[5] = _createElementVNode(\"p\", null, \"这里是一个交流和分享的平台，您可以浏览所有帖子和内容。\", -1 /* HOISTED */)), _cache[6] || (_cache[6] = _createElementVNode(\"p\", null, \"登录后可以发帖和参与讨论。\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n                    type: \"primary\",\n                    onClick: $setup.goToLogin\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return _cache[2] || (_cache[2] = [_createTextVNode(\"立即登录\")]);\n                    }),\n                    _: 1 /* STABLE */,\n                    __: [2]\n                  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n                    onClick: $setup.goToRegister\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return _cache[3] || (_cache[3] = [_createTextVNode(\"注册账号\")]);\n                    }),\n                    _: 1 /* STABLE */,\n                    __: [3]\n                  }, 8 /* PROPS */, [\"onClick\"])])), _createElementVNode(\"div\", _hoisted_6, [_cache[8] || (_cache[8] = _createElementVNode(\"h3\", null, \"最新帖子\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n                    link: \"\",\n                    onClick: $setup.goToPostList\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return _cache[7] || (_cache[7] = [_createTextVNode(\"查看更多\")]);\n                    }),\n                    _: 1 /* STABLE */,\n                    __: [7]\n                  }, 8 /* PROPS */, [\"onClick\"])]), _createElementVNode(\"div\", _hoisted_7, [$setup.loading.posts ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createVNode(_component_el_skeleton, {\n                    rows: 5,\n                    animated: \"\"\n                  })])) : !$setup.latestPosts.length ? (_openBlock(), _createBlock(_component_el_empty, {\n                    key: 1,\n                    description: \"暂无帖子\"\n                  })) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.latestPosts, function (post) {\n                    var _post$user, _post$user4, _post$user5;\n                    return _openBlock(), _createElementBlock(\"div\", {\n                      key: post.id,\n                      \"class\": \"post-item\"\n                    }, [_createElementVNode(\"div\", _hoisted_10, [_createVNode(_component_el_avatar, {\n                      size: 40,\n                      src: ((_post$user = post.user) === null || _post$user === void 0 ? void 0 : _post$user.avatar_url) || ''\n                    }, {\n                      \"default\": _withCtx(function () {\n                        var _post$user2, _post$user3;\n                        return [_createTextVNode(_toDisplayString(((_post$user2 = post.user) === null || _post$user2 === void 0 || (_post$user2 = _post$user2.nickname) === null || _post$user2 === void 0 ? void 0 : _post$user2.charAt(0)) || ((_post$user3 = post.user) === null || _post$user3 === void 0 || (_post$user3 = _post$user3.username) === null || _post$user3 === void 0 ? void 0 : _post$user3.charAt(0)) || 'U'), 1 /* TEXT */)];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"src\"])]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createVNode(_component_router_link, {\n                      to: \"/posts/\".concat(post.id)\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_createTextVNode(_toDisplayString(post.title || '无标题'), 1 /* TEXT */)];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), post.is_pinned ? (_openBlock(), _createBlock(_component_el_tag, {\n                      key: 0,\n                      size: \"small\",\n                      type: \"success\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return _toConsumableArray(_cache[9] || (_cache[9] = [_createTextVNode(\"置顶\")]));\n                      }),\n                      _: 1 /* STABLE */,\n                      __: [9]\n                    })) : _createCommentVNode(\"v-if\", true), post.is_featured ? (_openBlock(), _createBlock(_component_el_tag, {\n                      key: 1,\n                      size: \"small\",\n                      type: \"warning\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return _toConsumableArray(_cache[10] || (_cache[10] = [_createTextVNode(\"精华\")]));\n                      }),\n                      _: 1 /* STABLE */,\n                      __: [10]\n                    })) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"span\", _hoisted_14, _toDisplayString(((_post$user4 = post.user) === null || _post$user4 === void 0 ? void 0 : _post$user4.nickname) || ((_post$user5 = post.user) === null || _post$user5 === void 0 ? void 0 : _post$user5.username) || '匿名用户'), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_15, _toDisplayString(post.board_name || '未分类'), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_16, _toDisplayString($setup.formatDate(post.created_at || new Date())), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"span\", _hoisted_18, [_createVNode(_component_el_icon, null, {\n                      \"default\": _withCtx(function () {\n                        return [_createVNode(_component_View)];\n                      }),\n                      _: 1 /* STABLE */\n                    }), _createTextVNode(\" \" + _toDisplayString(post.views || 0), 1 /* TEXT */)]), _createElementVNode(\"span\", _hoisted_19, [_createVNode(_component_el_icon, null, {\n                      \"default\": _withCtx(function () {\n                        return [_createVNode(_component_ChatDotRound)];\n                      }),\n                      _: 1 /* STABLE */\n                    }), _createTextVNode(\" \" + _toDisplayString(post.comments_count || 0), 1 /* TEXT */)]), _createElementVNode(\"span\", _hoisted_20, [_createVNode(_component_el_icon, null, {\n                      \"default\": _withCtx(function () {\n                        return [_createVNode(_component_Star)];\n                      }),\n                      _: 1 /* STABLE */\n                    }), _createTextVNode(\" \" + _toDisplayString(post.likes_count || 0), 1 /* TEXT */)])])])]);\n                  }), 128 /* KEYED_FRAGMENT */))]))])])];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_col, {\n                span: 6\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, [_cache[11] || (_cache[11] = _createElementVNode(\"div\", {\n                    \"class\": \"section-title\"\n                  }, [_createElementVNode(\"h3\", null, \"热门板块\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_23, [$setup.loading.boards ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [_createVNode(_component_el_skeleton, {\n                    rows: 3,\n                    animated: \"\"\n                  })])) : !$setup.hotBoards.length ? (_openBlock(), _createBlock(_component_el_empty, {\n                    key: 1,\n                    description: \"暂无板块\"\n                  })) : (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.hotBoards, function (board) {\n                    return _openBlock(), _createElementBlock(\"div\", {\n                      key: board.id,\n                      \"class\": \"board-item\"\n                    }, [_createVNode(_component_router_link, {\n                      to: \"/boards/\".concat(board.id)\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_createTextVNode(_toDisplayString(board.name), 1 /* TEXT */)];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), _createElementVNode(\"span\", _hoisted_26, _toDisplayString(board.posts_count) + \"帖子\", 1 /* TEXT */)]);\n                  }), 128 /* KEYED_FRAGMENT */))]))])]), _createElementVNode(\"div\", _hoisted_27, [_cache[12] || (_cache[12] = _createElementVNode(\"div\", {\n                    \"class\": \"section-title\"\n                  }, [_createElementVNode(\"h3\", null, \"热门用户\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_28, [$setup.loading.users ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [_createVNode(_component_el_skeleton, {\n                    rows: 3,\n                    animated: \"\"\n                  })])) : !$setup.hotUsers.length ? (_openBlock(), _createBlock(_component_el_empty, {\n                    key: 1,\n                    description: \"暂无用户\"\n                  })) : (_openBlock(), _createElementBlock(\"div\", _hoisted_30, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.hotUsers, function (user) {\n                    return _openBlock(), _createElementBlock(\"div\", {\n                      key: user.id,\n                      \"class\": \"user-item\"\n                    }, [_createVNode(_component_user_avatar, {\n                      user: user,\n                      size: 32\n                    }, null, 8 /* PROPS */, [\"user\"]), _createElementVNode(\"span\", _hoisted_31, _toDisplayString(user.nickname || user.username), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_32, _toDisplayString(user.posts_count) + \"帖子\", 1 /* TEXT */)]);\n                  }), 128 /* KEYED_FRAGMENT */))]))])])])];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          })])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_footer, {\n        height: \"60px\"\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[13] || (_cache[13] = [_createElementVNode(\"div\", {\n            \"class\": \"footer-content\"\n          }, [_createElementVNode(\"p\", null, \"© 2025 论坛系统 - 基于Vue + Django + MySQL的PC端论坛系统\")], -1 /* HOISTED */)]);\n        }),\n        _: 1 /* STABLE */,\n        __: [13]\n      })];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_main","_createElementVNode","_hoisted_2","_component_el_row","gutter","_component_el_col","span","_$setup$userInfo","_$setup$userInfo2","_hoisted_3","$setup","isAuthenticated","_hoisted_4","_toDisplayString","userInfo","nickname","username","_component_el_button","type","onClick","goToNewPost","_cache","_createTextVNode","_","__","_hoisted_5","goToLogin","goToRegister","_hoisted_6","link","goToPostList","_hoisted_7","loading","posts","_hoisted_8","_component_el_skeleton","rows","animated","latestPosts","length","_createBlock","_component_el_empty","description","_hoisted_9","_Fragment","_renderList","post","_post$user","_post$user4","_post$user5","id","_hoisted_10","_component_el_avatar","size","src","user","avatar_url","_post$user2","_post$user3","charAt","_hoisted_11","_hoisted_12","_component_router_link","to","concat","title","is_pinned","_component_el_tag","_toConsumableArray","_createCommentVNode","is_featured","_hoisted_13","_hoisted_14","_hoisted_15","board_name","_hoisted_16","formatDate","created_at","Date","_hoisted_17","_hoisted_18","_component_el_icon","_component_View","views","_hoisted_19","_component_ChatDotRound","comments_count","_hoisted_20","_component_Star","likes_count","_hoisted_21","_hoisted_22","_hoisted_23","boards","_hoisted_24","hotBoards","_hoisted_25","board","name","_hoisted_26","posts_count","_hoisted_27","_hoisted_28","users","_hoisted_29","hotUsers","_hoisted_30","_component_user_avatar","_hoisted_31","_hoisted_32","_component_el_footer","height"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\Home.vue"],"sourcesContent":["<template>\n  <div class=\"home-container\">\n    <el-container>\n      <el-main>\n        <div class=\"main-content\">\n          <el-row :gutter=\"20\">\n            <el-col :span=\"18\">\n              <div class=\"content-area\">\n                <div class=\"welcome-message\" v-if=\"isAuthenticated\">\n                  <h2>欢迎回来，{{ userInfo?.nickname || userInfo?.username }}！</h2>\n                  <p>今天有什么想法要分享吗？</p>\n                  <el-button type=\"primary\" @click=\"goToNewPost\">发布新帖</el-button>\n                </div>\n                <div class=\"welcome-message\" v-else>\n                  <h2>欢迎来到论坛系统</h2>\n                  <p>这里是一个交流和分享的平台，您可以浏览所有帖子和内容。</p>\n                  <p>登录后可以发帖和参与讨论。</p>\n                  <el-button type=\"primary\" @click=\"goToLogin\">立即登录</el-button>\n                  <el-button @click=\"goToRegister\">注册账号</el-button>\n                </div>\n\n                <div class=\"section-title\">\n                  <h3>最新帖子</h3>\n                  <el-button link @click=\"goToPostList\">查看更多</el-button>\n                </div>\n\n                <div class=\"post-list\">\n                  <div v-if=\"loading.posts\" class=\"loading-container\">\n                    <el-skeleton :rows=\"5\" animated />\n                  </div>\n                  <el-empty description=\"暂无帖子\" v-else-if=\"!latestPosts.length\"></el-empty>\n                  <div v-else>\n                    <div v-for=\"post in latestPosts\" :key=\"post.id\" class=\"post-item\">\n                      <div class=\"post-avatar\">\n                        <el-avatar :size=\"40\" :src=\"post.user?.avatar_url || ''\">\n                          {{ post.user?.nickname?.charAt(0) || post.user?.username?.charAt(0) || 'U' }}\n                        </el-avatar>\n                      </div>\n                      <div class=\"post-content\">\n                        <div class=\"post-title\">\n                          <router-link :to=\"`/posts/${post.id}`\">{{ post.title || '无标题' }}</router-link>\n                          <el-tag size=\"small\" type=\"success\" v-if=\"post.is_pinned\">置顶</el-tag>\n                          <el-tag size=\"small\" type=\"warning\" v-if=\"post.is_featured\">精华</el-tag>\n                        </div>\n                        <div class=\"post-info\">\n                          <span class=\"author\">{{ post.user?.nickname || post.user?.username || '匿名用户' }}</span>\n                          <span class=\"board\">{{ post.board_name || '未分类' }}</span>\n                          <span class=\"time\">{{ formatDate(post.created_at || new Date()) }}</span>\n                        </div>\n                        <div class=\"post-stats\">\n                          <span class=\"views\">\n                            <el-icon><View /></el-icon> {{ post.views || 0 }}\n                          </span>\n                          <span class=\"comments\">\n                            <el-icon><ChatDotRound /></el-icon> {{ post.comments_count || 0 }}\n                          </span>\n                          <span class=\"likes\">\n                            <el-icon><Star /></el-icon> {{ post.likes_count || 0 }}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </el-col>\n\n            <el-col :span=\"6\">\n              <div class=\"sidebar\">\n                <div class=\"sidebar-section\">\n                  <div class=\"section-title\">\n                    <h3>热门板块</h3>\n                  </div>\n                  <div class=\"board-list\">\n                    <div v-if=\"loading.boards\" class=\"loading-container\">\n                      <el-skeleton :rows=\"3\" animated />\n                    </div>\n                    <el-empty description=\"暂无板块\" v-else-if=\"!hotBoards.length\"></el-empty>\n                    <div v-else>\n                      <div v-for=\"board in hotBoards\" :key=\"board.id\" class=\"board-item\">\n                        <router-link :to=\"`/boards/${board.id}`\">{{ board.name }}</router-link>\n                        <span class=\"post-count\">{{ board.posts_count }}帖子</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"sidebar-section\">\n                  <div class=\"section-title\">\n                    <h3>热门用户</h3>\n                  </div>\n                  <div class=\"user-list\">\n                    <div v-if=\"loading.users\" class=\"loading-container\">\n                      <el-skeleton :rows=\"3\" animated />\n                    </div>\n                    <el-empty description=\"暂无用户\" v-else-if=\"!hotUsers.length\"></el-empty>\n                    <div v-else>\n                      <div v-for=\"user in hotUsers\" :key=\"user.id\" class=\"user-item\">\n                        <user-avatar :user=\"user\" :size=\"32\" />\n                        <span class=\"user-nickname\">{{ user.nickname || user.username }}</span>\n                        <span class=\"post-count\">{{ user.posts_count }}帖子</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </el-col>\n          </el-row>\n        </div>\n      </el-main>\n\n      <el-footer height=\"60px\">\n        <div class=\"footer-content\">\n          <p>© 2025 论坛系统 - 基于Vue + Django + MySQL的PC端论坛系统</p>\n        </div>\n      </el-footer>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, onUnmounted, provide } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { ElMessage } from 'element-plus'\nimport { View, ChatDotRound, Star } from '@element-plus/icons-vue'\nimport { logout } from '../api/user'\nimport { getHotBoards } from '../api/board'\nimport { getHotUsers } from '../api/profile'\nimport { getPostList } from '../api/post'\nimport { formatDateTime } from '../utils/index'\nimport UserAvatar from '../components/UserAvatar.vue'\n\nexport default {\n  name: 'Home',\n  components: {\n    View,\n    ChatDotRound,\n    Star,\n    UserAvatar\n  },\n  setup() {\n    const router = useRouter()\n    const store = useStore()\n\n    // 获取认证状态和用户信息\n    const isAuthenticated = computed(() => {\n      const loggedIn = store.getters.isLoggedIn;\n      console.log('Home组件检查登录状态:', {\n        isLoggedIn: loggedIn,\n        token: store.state.token,\n        user: store.state.user\n      });\n      return loggedIn;\n    })\n    const userInfo = computed(() => store.state.user)\n\n    // 判断是否为管理员\n    const isAdmin = computed(() => {\n      return userInfo.value && userInfo.value.role === 'admin'\n    })\n\n    // 数据状态\n    const latestPosts = ref([])\n    const hotBoards = ref([])\n    const hotUsers = ref([])\n    const loading = ref({\n      posts: false,\n      boards: false,\n      users: false\n    })\n\n    // 格式化日期\n    const formatDate = (date) => {\n      return formatDateTime(date)\n    }\n\n    // 页面跳转方法\n    const goToLogin = () => router.push('/login')\n    const goToRegister = () => router.push('/register')\n    const goToProfile = () => router.push('/profile/me')\n    const goToAdminDashboard = () => router.push('/admin/dashboard')\n    const goToUserManagement = () => router.push('/admin/users')\n    const goToPostList = () => router.push('/posts')\n    const goToNewPost = () => {\n      if (!isAuthenticated.value) {\n        ElMessage.warning('请先登录才能发布帖子')\n        router.push({ name: 'Login', query: { redirect: '/post/create' } })\n        return\n      }\n      \n      // 清除可能的成功消息提示\n      ElMessage.closeAll()\n      router.push('/post/create')\n    }\n\n    // 退出登录\n    const handleLogout = async () => {\n      try {\n        const response = await logout()\n        store.dispatch('logout')\n        // 使用messageTracker替代直接调用ElMessage\n        if (window.messageTracker) {\n          window.messageTracker.showMessage(response.msg || '退出登录成功', 'success', 'home-logout');\n        } else {\n          ElMessage({\n            message: '退出登录成功',\n            type: 'success'\n          })\n        }\n        router.push('/')\n      } catch (error) {\n        console.error('退出登录失败:', error)\n        if (window.messageTracker) {\n          window.messageTracker.showMessage('退出登录失败', 'error', 'home-logout-error');\n        } else {\n          ElMessage({\n            message: '退出登录失败',\n            type: 'error'\n          })\n        }\n      }\n    }\n\n    // 获取最新帖子\n    const fetchLatestPosts = async () => {\n      loading.value.posts = true\n      try {\n        console.log('开始获取最新帖子...')\n        const response = await getPostList({\n          page: 1,\n          page_size: 5,\n          ordering: '-created_at',\n          _t: Date.now() // 添加时间戳避免缓存\n        })\n\n        console.log('最新帖子响应:', response)\n\n        if (response && response.count !== undefined && response.results) {\n          // 处理DRF分页响应\n          console.log('使用DRF分页响应格式处理最新帖子数据')\n          latestPosts.value = response.results || []\n        } else if (response && response.code === 0 && response.data) {\n          // 处理自定义响应格式\n          console.log('使用自定义响应格式处理最新帖子数据')\n          if (response.data.results) {\n            latestPosts.value = response.data.results || []\n          } else if (Array.isArray(response.data)) {\n            latestPosts.value = response.data || []\n          }\n        } else if (response && response.status === 0 && response.data) {\n          // 处理另一种自定义响应格式\n          console.log('使用status=0格式处理最新帖子数据')\n          if (response.data.results) {\n            latestPosts.value = response.data.results || []\n          } else if (Array.isArray(response.data)) {\n            latestPosts.value = response.data || []\n          }\n        } else if (response && Array.isArray(response)) {\n          // 直接返回数组的情况\n          console.log('使用数组格式处理最新帖子数据')\n          latestPosts.value = response\n        } else if (response && Array.isArray(response.results)) {\n          // 直接带有results属性的情况\n          console.log('使用带results属性的响应格式处理最新帖子数据')\n          latestPosts.value = response.results\n        } else {\n          console.error('获取最新帖子失败:', response ? response.msg : '未知错误')\n          ElMessage.error('获取最新帖子失败，请稍后再试')\n          latestPosts.value = []\n        }\n      } catch (error) {\n        console.error('获取最新帖子失败:', error)\n        // 使用更友好的错误提示\n        if (error.response && error.response.status === 401) {\n          console.log('未登录状态，无法获取帖子列表')\n          ElMessage.warning('请登录后查看最新帖子')\n        } else {\n          ElMessage.error('获取最新帖子失败，请稍后再试')\n        }\n        latestPosts.value = []\n      } finally {\n        loading.value.posts = false\n      }\n    }\n\n    // 提供刷新函数给子组件\n    provide('refreshLatestPosts', fetchLatestPosts)\n\n    // 获取热门板块\n    const fetchHotBoards = async () => {\n      loading.value.boards = true\n      try {\n        console.log('开始获取热门板块...')\n        const response = await getHotBoards(5)\n\n        console.log('热门板块响应:', response)\n\n        if (response && response.status === 0 && response.data) {\n          // 处理Django REST framework自定义响应格式\n          console.log('使用status=0格式处理热门板块数据')\n          hotBoards.value = response.data || []\n        } else if (response && response.code === 0 && response.data) {\n          // 处理另一种自定义响应格式\n          console.log('使用code=0格式处理热门板块数据')\n          hotBoards.value = response.data || []\n        } else if (response && Array.isArray(response)) {\n          // 直接返回数组的情况\n          console.log('使用数组格式处理热门板块数据')\n          hotBoards.value = response\n        } else {\n          console.error('获取热门板块失败:', response ? response.msg : '未知错误')\n          hotBoards.value = [] // 如果获取失败，设置为空数组\n        }\n      } catch (error) {\n        console.error('获取热门板块失败:', error)\n        ElMessage.error('获取热门板块失败，请稍后再试')\n        hotBoards.value = [] // 如果发生错误，设置为空数组\n      } finally {\n        loading.value.boards = false\n      }\n    }\n\n    // 获取热门用户\n    const fetchHotUsers = async () => {\n      loading.value.users = true\n      try {\n        console.log('开始获取热门用户...')\n        const response = await getHotUsers(5)\n\n        console.log('热门用户响应:', response)\n\n        if (response && response.code === 0 && response.data) {\n          console.log('使用code=0格式处理热门用户数据')\n          hotUsers.value = response.data || []\n        } else if (response && Array.isArray(response)) {\n          // 直接返回数组的情况\n          console.log('使用数组格式处理热门用户数据')\n          hotUsers.value = response\n        } else if (response && response.status === 0 && response.data) {\n          // 另一种响应格式\n          console.log('使用status=0格式处理热门用户数据')\n          hotUsers.value = response.data || []\n        } else {\n          console.error('获取热门用户失败:', response ? response.msg : '未知错误')\n          hotUsers.value = [] // 如果获取失败，设置为空数组\n        }\n      } catch (error) {\n        console.error('获取热门用户失败:', error)\n        ElMessage.error('获取热门用户失败，请稍后再试')\n        hotUsers.value = [] // 如果发生错误，设置为空数组\n      } finally {\n        loading.value.users = false\n      }\n    }\n\n    // 生命周期钩子\n    onMounted(() => {\n      console.log('Home页面加载 - 登录状态:', {\n        isAuthenticated: isAuthenticated.value,\n        userInfo: userInfo.value,\n        storeToken: store.state.token,\n        localStorageToken: localStorage.getItem('token'),\n        localStorageUserInfo: localStorage.getItem('userInfo')\n      })\n\n      // 获取数据\n      fetchLatestPosts()\n      fetchHotBoards()\n      fetchHotUsers()\n      \n      // 添加定时器，每30秒刷新一次最新帖子\n      const refreshTimer = setInterval(() => {\n        console.log('定时刷新最新帖子...')\n        fetchLatestPosts()\n      }, 30000)\n\n      // 在组件卸载时清除定时器\n      onUnmounted(() => {\n        if (refreshTimer) {\n          clearInterval(refreshTimer)\n        }\n      })\n      \n      // 添加重试机制，确保数据加载成功\n      setTimeout(() => {\n        // 如果首次加载失败，尝试重新加载\n        if (latestPosts.value.length === 0 && !loading.value.posts) {\n          console.log('首次加载帖子失败，尝试重新加载...')\n          fetchLatestPosts()\n        }\n        \n        if (hotBoards.value.length === 0 && !loading.value.boards) {\n          console.log('首次加载板块失败，尝试重新加载...')\n          fetchHotBoards()\n        }\n      }, 2000) // 2秒后检查并重试\n    })\n\n    return {\n      isAuthenticated,\n      userInfo,\n      isAdmin,\n      latestPosts,\n      hotBoards,\n      hotUsers,\n      loading,\n      formatDate,\n      goToLogin,\n      goToRegister,\n      goToProfile,\n      goToAdminDashboard,\n      goToUserManagement,\n      goToPostList,\n      goToNewPost,\n      handleLogout,\n      fetchLatestPosts // 导出刷新函数\n    }\n  }\n}\n</script>\n\n<style scoped>\n.home-container {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.el-container {\n  min-height: 100vh;\n}\n\n.el-main {\n  padding: 20px;\n  background-color: #f5f7fa;\n}\n\n.main-content {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.content-area {\n  background-color: #fff;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n}\n\n.welcome-message {\n  background-color: #f0f9ff;\n  border-radius: 8px;\n  padding: 20px;\n  margin-bottom: 20px;\n  border-left: 4px solid #409eff;\n}\n\n.welcome-message h2 {\n  margin-top: 0;\n  color: #303133;\n}\n\n.section-title {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n  border-bottom: 1px solid #ebeef5;\n  padding-bottom: 10px;\n}\n\n.section-title h3 {\n  margin: 0;\n  font-size: 18px;\n  color: #303133;\n}\n\n.post-list {\n  margin-bottom: 20px;\n}\n\n.post-item {\n  display: flex;\n  padding: 15px 0;\n  border-bottom: 1px solid #ebeef5;\n}\n\n.post-avatar {\n  margin-right: 15px;\n}\n\n.post-content {\n  flex-grow: 1;\n}\n\n.post-title {\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 8px;\n  display: flex;\n  align-items: center;\n}\n\n.post-title a {\n  color: #303133;\n  text-decoration: none;\n  margin-right: 8px;\n}\n\n.post-title a:hover {\n  color: #409eff;\n}\n\n.post-info {\n  font-size: 12px;\n  color: #909399;\n  margin-bottom: 8px;\n}\n\n.post-info .author {\n  margin-right: 10px;\n}\n\n.post-info .board {\n  margin-right: 10px;\n  background-color: #f0f9ff;\n  color: #409eff;\n  padding: 2px 6px;\n  border-radius: 4px;\n}\n\n.post-stats {\n  font-size: 12px;\n  color: #909399;\n  display: flex;\n  gap: 15px;\n}\n\n.sidebar {\n  position: sticky;\n  top: 80px;\n}\n\n.sidebar-section {\n  background-color: #fff;\n  border-radius: 8px;\n  padding: 15px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n}\n\n.board-list, .user-list {\n  margin-top: 10px;\n}\n\n.board-item, .user-item {\n  display: flex;\n  align-items: center;\n  padding: 8px 0;\n  border-bottom: 1px solid #ebeef5;\n}\n\n.board-item a {\n  color: #303133;\n  text-decoration: none;\n  flex-grow: 1;\n}\n\n.board-item a:hover {\n  color: #409eff;\n}\n\n.post-count {\n  font-size: 12px;\n  color: #909399;\n}\n\n.user-item {\n  gap: 10px;\n}\n\n.user-nickname {\n  flex-grow: 1;\n  font-size: 14px;\n}\n\n.el-footer {\n  background-color: #fff;\n  border-top: 1px solid #ebeef5;\n}\n\n.footer-content {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #909399;\n  font-size: 14px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}