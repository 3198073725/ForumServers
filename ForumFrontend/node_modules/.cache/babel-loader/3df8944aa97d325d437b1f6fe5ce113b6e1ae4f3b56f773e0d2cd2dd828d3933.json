{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"reset-password-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"reset-password-box\"\n};\nvar _hoisted_3 = {\n  key: 0\n};\nvar _hoisted_4 = {\n  \"class\": \"verification-code-container\"\n};\nvar _hoisted_5 = {\n  key: 0,\n  \"class\": \"verification-tip\"\n};\nvar _hoisted_6 = {\n  key: 1\n};\nvar _hoisted_7 = {\n  key: 2,\n  \"class\": \"reset-password-success\"\n};\nvar _hoisted_8 = {\n  key: 3,\n  \"class\": \"reset-password-options\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_step = _resolveComponent(\"el-step\");\n  var _component_el_steps = _resolveComponent(\"el-steps\");\n  var _component_Message = _resolveComponent(\"Message\");\n  var _component_el_icon = _resolveComponent(\"el-icon\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_Key = _resolveComponent(\"Key\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_Lock = _resolveComponent(\"Lock\");\n  var _component_el_result = _resolveComponent(\"el-result\");\n  var _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[10] || (_cache[10] = _createElementVNode(\"div\", {\n    \"class\": \"reset-password-header\"\n  }, [_createElementVNode(\"h2\", null, \"重置密码\")], -1 /* HOISTED */)), _createCommentVNode(\" 步骤条 \"), _createVNode(_component_el_steps, {\n    active: $setup.currentStep,\n    \"finish-status\": \"success\",\n    simple: \"\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_step, {\n        title: \"邮箱验证\"\n      }), _createVNode(_component_el_step, {\n        title: \"重置密码\"\n      }), _createVNode(_component_el_step, {\n        title: \"重置完成\"\n      })];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"active\"]), _createCommentVNode(\" 步骤1：邮箱验证 \"), $setup.currentStep === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_form, {\n    ref: \"emailFormRef\",\n    model: $setup.emailForm,\n    rules: $setup.emailRules,\n    \"label-width\": \"100px\",\n    \"class\": \"reset-password-form\",\n    \"label-position\": \"top\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form_item, {\n        label: \"邮箱\",\n        prop: \"email\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            modelValue: $setup.emailForm.email,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n              return $setup.emailForm.email = $event;\n            }),\n            placeholder: \"请输入注册时使用的邮箱\"\n          }, {\n            prefix: _withCtx(function () {\n              return [_createVNode(_component_el_icon, null, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_Message)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"验证码\",\n        prop: \"code\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_input, {\n            modelValue: $setup.emailForm.code,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n              return $setup.emailForm.code = $event;\n            }),\n            placeholder: \"请输入验证码\",\n            maxlength: \"6\"\n          }, {\n            prefix: _withCtx(function () {\n              return [_createVNode(_component_el_icon, null, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_Key)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n            type: \"primary\",\n            disabled: $setup.codeSending || $setup.countdown > 0,\n            onClick: $setup.sendVerificationCode\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createTextVNode(_toDisplayString($setup.countdown > 0 ? \"\".concat($setup.countdown, \"\\u79D2\\u540E\\u91CD\\u65B0\\u53D1\\u9001\") : '获取验证码'), 1 /* TEXT */)];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"disabled\", \"onClick\"])]), $setup.emailForm.code ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \" 验证码有效期为15分钟，请尽快完成验证 \")) : _createCommentVNode(\"v-if\", true)];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_button, {\n            type: \"primary\",\n            loading: $setup.verifying,\n            onClick: $setup.verifyEmail,\n            \"class\": \"reset-password-button\"\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[5] || (_cache[5] = [_createTextVNode(\"下一步\")]);\n            }),\n            _: 1 /* STABLE */,\n            __: [5]\n          }, 8 /* PROPS */, [\"loading\", \"onClick\"])];\n        }),\n        _: 1 /* STABLE */\n      })];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 步骤2：重置密码 \"), $setup.currentStep === 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createVNode(_component_el_form, {\n    ref: \"passwordFormRef\",\n    model: $setup.passwordForm,\n    rules: $setup.passwordRules,\n    \"label-width\": \"100px\",\n    \"class\": \"reset-password-form\",\n    \"label-position\": \"top\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form_item, {\n        label: \"新密码\",\n        prop: \"newPassword\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            modelValue: $setup.passwordForm.newPassword,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n              return $setup.passwordForm.newPassword = $event;\n            }),\n            type: \"password\",\n            placeholder: \"请输入新密码\",\n            \"show-password\": \"\"\n          }, {\n            prefix: _withCtx(function () {\n              return [_createVNode(_component_el_icon, null, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_Lock)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"确认密码\",\n        prop: \"confirmPassword\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            modelValue: $setup.passwordForm.confirmPassword,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n              return $setup.passwordForm.confirmPassword = $event;\n            }),\n            type: \"password\",\n            placeholder: \"请再次输入新密码\",\n            \"show-password\": \"\"\n          }, {\n            prefix: _withCtx(function () {\n              return [_createVNode(_component_el_icon, null, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_Lock)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_button, {\n            type: \"primary\",\n            loading: $setup.resetting,\n            onClick: $setup.handleResetPassword,\n            \"class\": \"reset-password-button\"\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[6] || (_cache[6] = [_createTextVNode(\"重置密码\")]);\n            }),\n            _: 1 /* STABLE */,\n            __: [6]\n          }, 8 /* PROPS */, [\"loading\", \"onClick\"]), _createVNode(_component_el_button, {\n            onClick: _cache[4] || (_cache[4] = function ($event) {\n              return $setup.currentStep = 0;\n            }),\n            \"class\": \"reset-password-button-two\"\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[7] || (_cache[7] = [_createTextVNode(\"上一步\")]);\n            }),\n            _: 1 /* STABLE */,\n            __: [7]\n          })];\n        }),\n        _: 1 /* STABLE */\n      })];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 步骤3：重置完成 \"), $setup.currentStep === 2 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createVNode(_component_el_result, {\n    icon: \"success\",\n    title: \"密码重置成功\",\n    \"sub-title\": \"您的密码已成功重置，现在可以使用新密码登录了\"\n  }, {\n    extra: _withCtx(function () {\n      return [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.goToLogin\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[8] || (_cache[8] = [_createTextVNode(\"去登录\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [8]\n      }, 8 /* PROPS */, [\"onClick\"])];\n    }),\n    _: 1 /* STABLE */\n  })])) : _createCommentVNode(\"v-if\", true), $setup.currentStep < 2 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createVNode(_component_router_link, {\n    to: \"/login\"\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[9] || (_cache[9] = [_createTextVNode(\"返回登录\")]);\n    }),\n    _: 1 /* STABLE */,\n    __: [9]\n  })])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_createVNode","_component_el_steps","active","$setup","currentStep","simple","_withCtx","_component_el_step","title","_","_hoisted_3","_component_el_form","ref","model","emailForm","rules","emailRules","_component_el_form_item","label","prop","_component_el_input","modelValue","email","_cache","$event","placeholder","prefix","_component_el_icon","_component_Message","_hoisted_4","code","maxlength","_component_Key","_component_el_button","type","disabled","codeSending","countdown","onClick","sendVerificationCode","_createTextVNode","_toDisplayString","concat","_hoisted_5","loading","verifying","verifyEmail","__","_hoisted_6","passwordForm","passwordRules","newPassword","_component_Lock","confirmPassword","resetting","handleResetPassword","_hoisted_7","_component_el_result","icon","extra","goToLogin","_hoisted_8","_component_router_link","to"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\ResetPassword.vue"],"sourcesContent":["<template>\n  <div class=\"reset-password-container\">\n    <div class=\"reset-password-box\">\n      <div class=\"reset-password-header\">\n        <h2>重置密码</h2>\n      </div>\n\n      <!-- 步骤条 -->\n      <el-steps :active=\"currentStep\" finish-status=\"success\" simple>\n        <el-step title=\"邮箱验证\" />\n        <el-step title=\"重置密码\" />\n        <el-step title=\"重置完成\" />\n      </el-steps>\n\n      <!-- 步骤1：邮箱验证 -->\n      <div v-if=\"currentStep === 0\">\n        <el-form\n          ref=\"emailFormRef\"\n          :model=\"emailForm\"\n          :rules=\"emailRules\"\n          label-width=\"100px\"\n          class=\"reset-password-form\"\n          label-position=\"top\"\n        >\n          <el-form-item label=\"邮箱\" prop=\"email\">\n            <el-input\n              v-model=\"emailForm.email\"\n              placeholder=\"请输入注册时使用的邮箱\"\n            >\n              <template #prefix>\n                <el-icon><Message /></el-icon>\n              </template>\n            </el-input>\n          </el-form-item>\n\n          <el-form-item label=\"验证码\" prop=\"code\">\n            <div class=\"verification-code-container\">\n              <el-input\n                v-model=\"emailForm.code\"\n                placeholder=\"请输入验证码\"\n                maxlength=\"6\"\n              >\n                <template #prefix>\n                  <el-icon><Key /></el-icon>\n                </template>\n              </el-input>\n              <el-button\n                type=\"primary\"\n                :disabled=\"codeSending || countdown > 0\"\n                @click=\"sendVerificationCode\"\n              >\n                {{ countdown > 0 ? `${countdown}秒后重新发送` : '获取验证码' }}\n              </el-button>\n            </div>\n            <div class=\"verification-tip\" v-if=\"emailForm.code\">\n              验证码有效期为15分钟，请尽快完成验证\n            </div>\n          </el-form-item>\n\n          <el-form-item>\n            <el-button\n              type=\"primary\"\n              :loading=\"verifying\"\n              @click=\"verifyEmail\"\n              class=\"reset-password-button\"\n            >下一步</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n\n      <!-- 步骤2：重置密码 -->\n      <div v-if=\"currentStep === 1\">\n        <el-form\n          ref=\"passwordFormRef\"\n          :model=\"passwordForm\"\n          :rules=\"passwordRules\"\n          label-width=\"100px\"\n          class=\"reset-password-form\"\n          label-position=\"top\"\n        >\n          <el-form-item label=\"新密码\" prop=\"newPassword\">\n            <el-input\n              v-model=\"passwordForm.newPassword\"\n              type=\"password\"\n              placeholder=\"请输入新密码\"\n              show-password\n            >\n              <template #prefix>\n                <el-icon><Lock /></el-icon>\n              </template>\n            </el-input>\n          </el-form-item>\n\n          <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\n            <el-input\n              v-model=\"passwordForm.confirmPassword\"\n              type=\"password\"\n              placeholder=\"请再次输入新密码\"\n              show-password\n            >\n              <template #prefix>\n                <el-icon><Lock /></el-icon>\n              </template>\n            </el-input>\n          </el-form-item>\n\n          <el-form-item>\n            <el-button\n              type=\"primary\"\n              :loading=\"resetting\"\n              @click=\"handleResetPassword\"\n              class=\"reset-password-button\"\n            >重置密码</el-button>\n            <el-button @click=\"currentStep = 0\" class=\"reset-password-button-two\">上一步</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n\n      <!-- 步骤3：重置完成 -->\n      <div v-if=\"currentStep === 2\" class=\"reset-password-success\">\n        <el-result\n          icon=\"success\"\n          title=\"密码重置成功\"\n          sub-title=\"您的密码已成功重置，现在可以使用新密码登录了\"\n        >\n          <template #extra>\n            <el-button type=\"primary\" @click=\"goToLogin\">去登录</el-button>\n          </template>\n        </el-result>\n      </div>\n\n      <div class=\"reset-password-options\" v-if=\"currentStep < 2\">\n        <router-link to=\"/login\">返回登录</router-link>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onBeforeUnmount } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { Message, Lock, Key } from '@element-plus/icons-vue'\nimport { sendVerificationCode as sendCode, verifyEmail as verifyCode, resetPassword } from '../api/user'\n\nexport default {\n  name: 'ResetPassword',\n  components: {\n    Message,\n    Lock,\n    Key\n  },\n  setup() {\n    const router = useRouter()\n    const currentStep = ref(0)\n    const emailFormRef = ref(null)\n    const passwordFormRef = ref(null)\n    const codeSending = ref(false)\n    const verifying = ref(false)\n    const resetting = ref(false)\n    const countdown = ref(0)\n    let countdownTimer = null\n\n    // 邮箱验证表单\n    const emailForm = reactive({\n      email: '',\n      code: ''\n    })\n\n    // 密码重置表单\n    const passwordForm = reactive({\n      newPassword: '',\n      confirmPassword: '',\n      email: '', // 将从邮箱验证表单中获取\n      code: ''   // 将从邮箱验证表单中获取\n    })\n\n    // 邮箱验证表单规则\n    const emailRules = {\n      email: [\n        { required: true, message: '请输入邮箱', trigger: 'blur' },\n        { type: 'email', message: '请输入正确的邮箱格式', trigger: 'blur' }\n      ],\n      code: [\n        { required: true, message: '请输入验证码', trigger: 'blur' },\n        { min: 6, max: 6, message: '验证码长度应为6位', trigger: 'blur' }\n      ]\n    }\n\n    // 密码重置表单规则\n    const passwordRules = {\n      newPassword: [\n        { required: true, message: '请输入新密码', trigger: 'blur' },\n        { min: 6, max: 20, message: '密码长度应在6-20个字符之间', trigger: 'blur' }\n      ],\n      confirmPassword: [\n        { required: true, message: '请再次输入新密码', trigger: 'blur' },\n        {\n          validator: (rule, value, callback) => {\n            if (value !== passwordForm.newPassword) {\n              callback(new Error('两次输入的密码不一致'))\n            } else {\n              callback()\n            }\n          },\n          trigger: 'blur'\n        }\n      ]\n    }\n\n    // 发送验证码\n    const sendVerificationCode = async () => {\n      try {\n        // 验证邮箱\n        await emailFormRef.value.validateField('email')\n\n        // 显示加载状态\n        codeSending.value = true\n\n        // 调用发送验证码API\n        await sendCode({\n          email: emailForm.email,\n          type: 'reset_password'\n        })\n\n        // 开始倒计时\n        countdown.value = 60\n        countdownTimer = setInterval(() => {\n          countdown.value--\n          if (countdown.value <= 0) {\n            clearInterval(countdownTimer)\n          }\n        }, 1000)\n\n        ElMessage({\n          message: '验证码已发送，请查收邮件',\n          type: 'success'\n        })\n      } catch (error) {\n        console.error('发送验证码失败:', error)\n        ElMessage({\n          message: error.message || '发送验证码失败，请稍后重试',\n          type: 'error'\n        })\n      } finally {\n        codeSending.value = false\n      }\n    }\n\n    // 验证邮箱\n    const verifyEmail = async () => {\n      try {\n        // 表单验证\n        await emailFormRef.value.validate()\n\n        // 显示加载状态\n        verifying.value = true\n\n        // 调用验证邮箱API\n        await verifyCode({\n          email: emailForm.email,\n          code: emailForm.code,\n          type: 'reset_password'\n        })\n\n        // 将邮箱和验证码传递给密码重置表单\n        passwordForm.email = emailForm.email\n        passwordForm.code = emailForm.code\n\n        // 进入下一步\n        currentStep.value = 1\n\n        ElMessage({\n          message: '邮箱验证成功',\n          type: 'success'\n        })\n      } catch (error) {\n        console.error('邮箱验证失败:', error)\n        ElMessage({\n          message: error.message || '邮箱验证失败，请检查验证码是否正确',\n          type: 'error'\n        })\n      } finally {\n        verifying.value = false\n      }\n    }\n\n    // 重置密码处理\n    const handleResetPassword = async () => {\n      try {\n        // 表单验证\n        await passwordFormRef.value.validate()\n\n        // 显示加载状态\n        resetting.value = true\n\n        // 准备重置密码数据\n        const resetPasswordPayload = {\n          email: passwordForm.email,\n          code: passwordForm.code,\n          new_password: passwordForm.newPassword,\n          confirm_password: passwordForm.confirmPassword\n        }\n\n        // 调用重置密码API\n        await resetPassword(resetPasswordPayload)\n\n        // 进入下一步\n        currentStep.value = 2\n\n        ElMessage({\n          message: '密码重置成功',\n          type: 'success'\n        })\n      } catch (error) {\n        console.error('密码重置失败:', error)\n\n        // 处理后端返回的错误信息\n        let errorMsg = '密码重置失败，请稍后重试'\n\n        if (error.response && error.response.data) {\n          const responseData = error.response.data\n\n          if (responseData.msg && typeof responseData.msg === 'object') {\n            // 处理字段错误\n            const fieldErrors = []\n            for (const field in responseData.msg) {\n              if (Array.isArray(responseData.msg[field])) {\n                fieldErrors.push(`${field}: ${responseData.msg[field].join(', ')}`)\n              } else {\n                fieldErrors.push(`${field}: ${responseData.msg[field]}`)\n              }\n            }\n            if (fieldErrors.length > 0) {\n              errorMsg = fieldErrors.join('\\n')\n            }\n          } else if (responseData.msg) {\n            errorMsg = responseData.msg\n          }\n        } else if (error.message) {\n          errorMsg = error.message\n        }\n\n        ElMessage({\n          message: errorMsg,\n          type: 'error',\n          dangerouslyUseHTMLString: true\n        })\n      } finally {\n        resetting.value = false\n      }\n    }\n\n    // 跳转到登录页\n    const goToLogin = () => {\n      router.push('/login')\n    }\n\n    // 组件销毁前清除定时器\n    onBeforeUnmount(() => {\n      if (countdownTimer) {\n        clearInterval(countdownTimer)\n      }\n    })\n\n    return {\n      currentStep,\n      emailFormRef,\n      passwordFormRef,\n      emailForm,\n      passwordForm,\n      emailRules,\n      passwordRules,\n      codeSending,\n      verifying,\n      resetting,\n      countdown,\n      sendVerificationCode,\n      verifyEmail,\n      handleResetPassword,\n      goToLogin\n    }\n  }\n}\n</script>\n\n<style scoped>\n.reset-password-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #f5f7fa;\n  padding: 20px 0;\n}\n\n.reset-password-box {\n  width: 500px;\n  padding: 40px;\n  background-color: #fff;\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n}\n\n.reset-password-header {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.reset-password-header h2 {\n  font-weight: 600;\n  color: #303133;\n  font-size: 24px;\n  margin: 0;\n}\n\n.reset-password-form {\n  margin-top: 30px;\n}\n\n.reset-password-form :deep(.el-form-item__label) {\n  padding-bottom: 8px;\n  font-weight: 500;\n}\n\n.reset-password-form :deep(.el-input__wrapper) {\n  box-shadow: 0 0 0 1px #dcdfe6 inset;\n  padding: 1px 15px;\n  height: 42px;\n  transition: all 0.2s;\n}\n\n.reset-password-form :deep(.el-input__wrapper:hover) {\n  box-shadow: 0 0 0 1px #c0c4cc inset;\n}\n\n.reset-password-form :deep(.el-input__wrapper.is-focus) {\n  box-shadow: 0 0 0 1px #409eff inset;\n}\n\n.reset-password-form :deep(.el-form-item) {\n  margin-bottom: 25px;\n}\n\n.verification-code-container {\n  display: flex;\n  gap: 10px;\n}\n\n.verification-code-container .el-input {\n  flex: 1;\n}\n\n.verification-code-container :deep(.el-button) {\n  height: 42px;\n  padding: 0 15px;\n  white-space: nowrap;\n}\n\n.reset-password-button {\n  width: 100%;\n  height: 42px;\n  font-size: 16px;\n  font-weight: 500;\n  margin-top: 10px;\n}\n.reset-password-button-two {\n  width: 100%;\n  height: 42px;\n  font-size: 16px;\n  font-weight: 500;\n  margin-top: 10px;\n}\n.reset-password-options {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n  font-size: 14px;\n}\n\n.reset-password-options a {\n  color: #409eff;\n  text-decoration: none;\n  transition: color 0.2s;\n}\n\n.reset-password-options a:hover {\n  color: #66b1ff;\n  text-decoration: underline;\n}\n\n.reset-password-success {\n  margin-top: 20px;\n}\n\n.verification-tip {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 5px;\n  line-height: 1.4;\n}\n\n:deep(.el-steps--simple) {\n  margin-top: 20px;\n  margin-bottom: 30px;\n}\n\n:deep(.el-step__title) {\n  font-size: 14px;\n  font-weight: 500;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}