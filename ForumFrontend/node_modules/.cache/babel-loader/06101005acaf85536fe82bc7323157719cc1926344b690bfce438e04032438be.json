{"ast":null,"code":"import _regeneratorRuntime from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport { computed, onMounted, ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport { Bell, Loading } from '@element-plus/icons-vue';\nimport { ElMessage } from 'element-plus';\n\n// 是否启用调试日志\nvar DEBUG = false;\n\n// 自定义日志函数，可以通过DEBUG开关控制\nvar log = function log() {\n  if (DEBUG) {\n    var _console;\n    (_console = console).log.apply(_console, arguments);\n  }\n};\nexport default {\n  name: 'NotificationBell',\n  components: {\n    Loading: Loading\n  },\n  setup: function setup() {\n    var store = useStore();\n    var router = useRouter();\n    var loading = ref(false);\n\n    // 从Vuex获取通知数据，添加初始化空数组保证安全\n    var notifications = computed(function () {\n      var notificationsModule = store.state.notifications;\n      if (!notificationsModule) {\n        if (DEBUG) console.warn('通知模块未注册到Vuex store中');\n        return [];\n      }\n      return notificationsModule.notifications || [];\n    });\n    var unreadCount = computed(function () {\n      var notificationsModule = store.state.notifications;\n      if (!notificationsModule) {\n        return 0;\n      }\n      return notificationsModule.unreadCount || 0;\n    });\n    var hasUnread = computed(function () {\n      return unreadCount.value > 0;\n    });\n\n    // 初始化时获取通知\n    onMounted(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!store.getters.isLoggedIn) {\n              _context.next = 18;\n              break;\n            }\n            loading.value = true;\n            _context.prev = 2;\n            if (!store.state.notifications) {\n              _context.next = 8;\n              break;\n            }\n            _context.next = 6;\n            return store.dispatch('notifications/fetchNotifications');\n          case 6:\n            _context.next = 9;\n            break;\n          case 8:\n            if (DEBUG) console.warn('通知模块未注册到Vuex store中');\n          case 9:\n            _context.next = 15;\n            break;\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](2);\n            console.error('获取通知失败:', _context.t0);\n            // 只在非网络错误时显示错误消息\n            if (_context.t0.message !== 'Network Error') {\n              ElMessage.error('获取通知失败');\n            }\n          case 15:\n            _context.prev = 15;\n            loading.value = false;\n            return _context.finish(15);\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[2, 11, 15, 18]]);\n    })));\n\n    // 处理下拉菜单命令\n    var handleCommand = function handleCommand(command) {\n      if (command === 'viewAll') {\n        router.push('/notifications');\n      } else if (command && command.type === 'view' && command.id) {\n        // 标记为已读\n        store.dispatch('notifications/markAsRead', command.id);\n\n        // 根据通知类型跳转到不同页面\n        var notification = notifications.value.find(function (n) {\n          return n.id === command.id;\n        });\n        if (notification) {\n          navigateByNotification(notification);\n        }\n      }\n    };\n\n    // 根据通知类型导航\n    var navigateByNotification = function navigateByNotification(notification) {\n      if (!notification) {\n        router.push('/notifications');\n        return;\n      }\n      if (notification.target_type === 'post' && notification.target_id) {\n        router.push(\"/posts/\".concat(notification.target_id));\n      } else if (notification.target_type === 'comment' && notification.target_id) {\n        // 评论通知可能需要先获取评论所属的帖子ID\n        router.push(\"/comments/\".concat(notification.target_id));\n      } else {\n        // 默认跳转到通知列表页\n        router.push('/notifications');\n      }\n    };\n\n    // 标记所有通知为已读\n    var markAllAsRead = function markAllAsRead(event) {\n      if (event) {\n        event.stopPropagation();\n      }\n      store.dispatch('notifications/markAllAsRead');\n    };\n\n    // 格式化时间\n    var formatTime = function formatTime(timestamp) {\n      if (!timestamp) {\n        return '未知时间';\n      }\n      try {\n        var date = new Date(timestamp);\n        var now = new Date();\n        var diff = now - date;\n\n        // 检查日期是否有效\n        if (isNaN(date.getTime())) {\n          return '未知时间';\n        }\n\n        // 小于1分钟\n        if (diff < 60000) {\n          return '刚刚';\n        }\n        // 小于1小时\n        else if (diff < 3600000) {\n          return \"\".concat(Math.floor(diff / 60000), \"\\u5206\\u949F\\u524D\");\n        }\n        // 小于24小时\n        else if (diff < 86400000) {\n          return \"\".concat(Math.floor(diff / 3600000), \"\\u5C0F\\u65F6\\u524D\");\n        }\n        // 小于30天\n        else if (diff < 2592000000) {\n          return \"\".concat(Math.floor(diff / 86400000), \"\\u5929\\u524D\");\n        }\n        // 其他情况显示完整日期\n        else {\n          return \"\".concat(date.getFullYear(), \"-\").concat(String(date.getMonth() + 1).padStart(2, '0'), \"-\").concat(String(date.getDate()).padStart(2, '0'));\n        }\n      } catch (error) {\n        console.error('时间格式化错误:', error);\n        return '未知时间';\n      }\n    };\n    return {\n      Bell: Bell,\n      Loading: Loading,\n      loading: loading,\n      notifications: notifications,\n      unreadCount: unreadCount,\n      hasUnread: hasUnread,\n      handleCommand: handleCommand,\n      markAllAsRead: markAllAsRead,\n      formatTime: formatTime\n    };\n  }\n};","map":{"version":3,"names":["computed","onMounted","ref","useStore","useRouter","Bell","Loading","ElMessage","DEBUG","log","_console","console","apply","arguments","name","components","setup","store","router","loading","notifications","notificationsModule","state","warn","unreadCount","hasUnread","value","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","getters","isLoggedIn","dispatch","t0","error","message","finish","stop","handleCommand","command","push","type","id","notification","find","n","navigateByNotification","target_type","target_id","concat","markAllAsRead","event","stopPropagation","formatTime","timestamp","date","Date","now","diff","isNaN","getTime","Math","floor","getFullYear","String","getMonth","padStart","getDate"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\components\\NotificationBell.vue"],"sourcesContent":["<template>\r\n  <div class=\"notification-bell\">\r\n    <el-badge :value=\"unreadCount\" :max=\"99\" :hidden=\"unreadCount <= 0\" class=\"notification-badge\">\r\n      <el-dropdown trigger=\"click\" @command=\"handleCommand\">\r\n        <el-button class=\"bell-button\" :icon=\"Bell\" circle />\r\n        <template #dropdown>\r\n          <el-dropdown-menu class=\"notification-dropdown\">\r\n            <div class=\"notification-header\">\r\n              <span>消息通知</span>\r\n              <el-button v-if=\"hasUnread\" type=\"text\" @click=\"markAllAsRead\">全部已读</el-button>\r\n            </div>\r\n            <el-divider />\r\n            <div v-if=\"loading\" class=\"notification-loading\">\r\n              <el-icon class=\"is-loading\"><Loading /></el-icon>\r\n              <span>加载中...</span>\r\n            </div>\r\n            <template v-else>\r\n              <div v-if=\"notifications.length === 0\" class=\"no-notification\">\r\n                暂无通知\r\n              </div>\r\n              <template v-else>\r\n                <el-dropdown-item \r\n                  v-for=\"notification in notifications.slice(0, 5)\" \r\n                  :key=\"notification.id\"\r\n                  :class=\"{ 'notification-unread': !notification.is_read }\"\r\n                  :command=\"{ type: 'view', id: notification.id }\"\r\n                >\r\n                  <div class=\"notification-item\">\r\n                    <div class=\"notification-title\">\r\n                      {{ notification.title || '系统通知' }}\r\n                      <span v-if=\"!notification.is_read\" class=\"unread-dot\"></span>\r\n                    </div>\r\n                    <div class=\"notification-content\">{{ notification.content || '' }}</div>\r\n                    <div class=\"notification-time\">{{ formatTime(notification.created_at) }}</div>\r\n                  </div>\r\n                </el-dropdown-item>\r\n                <el-divider v-if=\"notifications.length > 5\" />\r\n                <el-dropdown-item v-if=\"notifications.length > 5\" command=\"viewAll\">\r\n                  <div class=\"view-all\">查看全部</div>\r\n                </el-dropdown-item>\r\n              </template>\r\n            </template>\r\n          </el-dropdown-menu>\r\n        </template>\r\n      </el-dropdown>\r\n    </el-badge>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { computed, onMounted, ref } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\nimport { Bell, Loading } from '@element-plus/icons-vue'\r\nimport { ElMessage } from 'element-plus'\r\n\r\n// 是否启用调试日志\r\nconst DEBUG = false;\r\n\r\n// 自定义日志函数，可以通过DEBUG开关控制\r\nconst log = (...args) => {\r\n  if (DEBUG) {\r\n    console.log(...args);\r\n  }\r\n};\r\n\r\nexport default {\r\n  name: 'NotificationBell',\r\n  components: {\r\n    Loading\r\n  },\r\n  setup() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const loading = ref(false)\r\n    \r\n    // 从Vuex获取通知数据，添加初始化空数组保证安全\r\n    const notifications = computed(() => {\r\n      const notificationsModule = store.state.notifications;\r\n      if (!notificationsModule) {\r\n        if (DEBUG) console.warn('通知模块未注册到Vuex store中');\r\n        return [];\r\n      }\r\n      return notificationsModule.notifications || [];\r\n    })\r\n    \r\n    const unreadCount = computed(() => {\r\n      const notificationsModule = store.state.notifications;\r\n      if (!notificationsModule) {\r\n        return 0;\r\n      }\r\n      return notificationsModule.unreadCount || 0;\r\n    })\r\n    \r\n    const hasUnread = computed(() => unreadCount.value > 0)\r\n    \r\n    // 初始化时获取通知\r\n    onMounted(async () => {\r\n      if (store.getters.isLoggedIn) {\r\n        loading.value = true\r\n        try {\r\n          // 检查store中是否有notifications模块\r\n          if (store.state.notifications) {\r\n            await store.dispatch('notifications/fetchNotifications')\r\n          } else {\r\n            if (DEBUG) console.warn('通知模块未注册到Vuex store中')\r\n          }\r\n        } catch (error) {\r\n          console.error('获取通知失败:', error)\r\n          // 只在非网络错误时显示错误消息\r\n          if (error.message !== 'Network Error') {\r\n            ElMessage.error('获取通知失败')\r\n          }\r\n        } finally {\r\n          loading.value = false\r\n        }\r\n      }\r\n    })\r\n    \r\n    // 处理下拉菜单命令\r\n    const handleCommand = (command) => {\r\n      if (command === 'viewAll') {\r\n        router.push('/notifications')\r\n      } else if (command && command.type === 'view' && command.id) {\r\n        // 标记为已读\r\n        store.dispatch('notifications/markAsRead', command.id)\r\n        \r\n        // 根据通知类型跳转到不同页面\r\n        const notification = notifications.value.find(n => n.id === command.id)\r\n        if (notification) {\r\n          navigateByNotification(notification)\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 根据通知类型导航\r\n    const navigateByNotification = (notification) => {\r\n      if (!notification) {\r\n        router.push('/notifications');\r\n        return;\r\n      }\r\n      \r\n      if (notification.target_type === 'post' && notification.target_id) {\r\n        router.push(`/posts/${notification.target_id}`)\r\n      } else if (notification.target_type === 'comment' && notification.target_id) {\r\n        // 评论通知可能需要先获取评论所属的帖子ID\r\n        router.push(`/comments/${notification.target_id}`)\r\n      } else {\r\n        // 默认跳转到通知列表页\r\n        router.push('/notifications')\r\n      }\r\n    }\r\n    \r\n    // 标记所有通知为已读\r\n    const markAllAsRead = (event) => {\r\n      if (event) {\r\n        event.stopPropagation()\r\n      }\r\n      store.dispatch('notifications/markAllAsRead')\r\n    }\r\n    \r\n    // 格式化时间\r\n    const formatTime = (timestamp) => {\r\n      if (!timestamp) {\r\n        return '未知时间';\r\n      }\r\n      \r\n      try {\r\n        const date = new Date(timestamp)\r\n        const now = new Date()\r\n        const diff = now - date\r\n        \r\n        // 检查日期是否有效\r\n        if (isNaN(date.getTime())) {\r\n          return '未知时间';\r\n        }\r\n        \r\n        // 小于1分钟\r\n        if (diff < 60000) {\r\n          return '刚刚'\r\n        }\r\n        // 小于1小时\r\n        else if (diff < 3600000) {\r\n          return `${Math.floor(diff / 60000)}分钟前`\r\n        }\r\n        // 小于24小时\r\n        else if (diff < 86400000) {\r\n          return `${Math.floor(diff / 3600000)}小时前`\r\n        }\r\n        // 小于30天\r\n        else if (diff < 2592000000) {\r\n          return `${Math.floor(diff / 86400000)}天前`\r\n        }\r\n        // 其他情况显示完整日期\r\n        else {\r\n          return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`\r\n        }\r\n      } catch (error) {\r\n        console.error('时间格式化错误:', error);\r\n        return '未知时间';\r\n      }\r\n    }\r\n    \r\n    return {\r\n      Bell,\r\n      Loading,\r\n      loading,\r\n      notifications,\r\n      unreadCount,\r\n      hasUnread,\r\n      handleCommand,\r\n      markAllAsRead,\r\n      formatTime\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.notification-bell {\r\n  display: inline-block;\r\n}\r\n\r\n.notification-badge {\r\n  margin-right: 10px;\r\n}\r\n\r\n.bell-button {\r\n  font-size: 18px;\r\n  padding: 8px;\r\n}\r\n\r\n.notification-dropdown {\r\n  width: 320px;\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.notification-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 15px;\r\n  font-weight: bold;\r\n}\r\n\r\n.notification-loading {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100px;\r\n}\r\n\r\n.notification-loading span {\r\n  margin-left: 10px;\r\n}\r\n\r\n.no-notification {\r\n  text-align: center;\r\n  color: #909399;\r\n  padding: 20px 0;\r\n}\r\n\r\n.notification-item {\r\n  padding: 5px 0;\r\n}\r\n\r\n.notification-title {\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.notification-content {\r\n  color: #606266;\r\n  font-size: 13px;\r\n  margin-bottom: 5px;\r\n  white-space: normal;\r\n  word-break: break-all;\r\n  line-height: 1.4;\r\n}\r\n\r\n.notification-time {\r\n  color: #909399;\r\n  font-size: 12px;\r\n  text-align: right;\r\n}\r\n\r\n.notification-unread {\r\n  background-color: #f0f9ff;\r\n}\r\n\r\n.unread-dot {\r\n  width: 8px;\r\n  height: 8px;\r\n  background-color: #409eff;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  margin-left: 5px;\r\n}\r\n\r\n.view-all {\r\n  text-align: center;\r\n  color: #409eff;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}