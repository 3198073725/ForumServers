{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/defineProperty.js\")[\"default\"];\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.number.constructor.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar content = require('../../tooltip/src/content.js');\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar shared = require('@vue/shared');\nvar index = require('../../../hooks/use-aria/index.js');\nvar event = require('../../../constants/event.js');\nvar autocompleteProps = runtime.buildProps(_objectSpread({\n  valueKey: {\n    type: String,\n    \"default\": \"value\"\n  },\n  modelValue: {\n    type: [String, Number],\n    \"default\": \"\"\n  },\n  debounce: {\n    type: Number,\n    \"default\": 300\n  },\n  placement: {\n    type: runtime.definePropType(String),\n    values: [\"top\", \"top-start\", \"top-end\", \"bottom\", \"bottom-start\", \"bottom-end\"],\n    \"default\": \"bottom-start\"\n  },\n  fetchSuggestions: {\n    type: runtime.definePropType([Function, Array]),\n    \"default\": shared.NOOP\n  },\n  popperClass: {\n    type: String,\n    \"default\": \"\"\n  },\n  triggerOnFocus: {\n    type: Boolean,\n    \"default\": true\n  },\n  selectWhenUnmatched: {\n    type: Boolean,\n    \"default\": false\n  },\n  hideLoading: {\n    type: Boolean,\n    \"default\": false\n  },\n  teleported: content.useTooltipContentProps.teleported,\n  appendTo: content.useTooltipContentProps.appendTo,\n  highlightFirstItem: {\n    type: Boolean,\n    \"default\": false\n  },\n  fitInputWidth: {\n    type: Boolean,\n    \"default\": false\n  },\n  clearable: {\n    type: Boolean,\n    \"default\": false\n  },\n  disabled: {\n    type: Boolean,\n    \"default\": false\n  },\n  name: String\n}, index.useAriaProps([\"ariaLabel\"])));\nvar autocompleteEmits = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, event.UPDATE_MODEL_EVENT, function (value) {\n  return shared.isString(value);\n}), event.INPUT_EVENT, function (value) {\n  return shared.isString(value);\n}), event.CHANGE_EVENT, function (value) {\n  return shared.isString(value);\n}), \"focus\", function focus(evt) {\n  return evt instanceof FocusEvent;\n}), \"blur\", function blur(evt) {\n  return evt instanceof FocusEvent;\n}), \"clear\", function clear() {\n  return true;\n}), \"select\", function select(item) {\n  return shared.isObject(item);\n});\nexports.autocompleteEmits = autocompleteEmits;\nexports.autocompleteProps = autocompleteProps;","map":{"version":3,"names":["autocompleteProps","runtime","buildProps","_objectSpread","valueKey","type","String","modelValue","Number","debounce","placement","definePropType","values","fetchSuggestions","Function","Array","shared","NOOP","popperClass","triggerOnFocus","Boolean","selectWhenUnmatched","hideLoading","teleported","content","useTooltipContentProps","appendTo","highlightFirstItem","fitInputWidth","clearable","disabled","name","index","useAriaProps","autocompleteEmits","_defineProperty","event","UPDATE_MODEL_EVENT","value","isString","INPUT_EVENT","CHANGE_EVENT","focus","evt","FocusEvent","blur","clear","select","item","isObject"],"sources":["../../../../../../packages/components/autocomplete/src/autocomplete.ts"],"sourcesContent":["import {\n  NOOP,\n  buildProps,\n  definePropType,\n  isObject,\n  isString,\n} from '@element-plus/utils'\nimport { useTooltipContentProps } from '@element-plus/components/tooltip'\nimport { useAriaProps } from '@element-plus/hooks'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type Autocomplete from './autocomplete.vue'\nimport type { Placement } from '@element-plus/components/popper'\nimport type { Awaitable } from '@element-plus/utils'\n\nexport type AutocompleteData = Record<string, any>[]\nexport type AutocompleteFetchSuggestionsCallback = (\n  data: AutocompleteData\n) => void\nexport type AutocompleteFetchSuggestions =\n  | ((\n      queryString: string,\n      cb: AutocompleteFetchSuggestionsCallback\n    ) => Awaitable<AutocompleteData> | void)\n  | AutocompleteData\n\nexport const autocompleteProps = buildProps({\n  /**\n   * @description key name of the input suggestion object for display\n   */\n  valueKey: {\n    type: String,\n    default: 'value',\n  },\n  /**\n   * @description binding value\n   */\n  modelValue: {\n    type: [String, Number],\n    default: '',\n  },\n  /**\n   * @description debounce delay when typing, in milliseconds\n   */\n  debounce: {\n    type: Number,\n    default: 300,\n  },\n  /**\n   * @description placement of the popup menu\n   */\n  placement: {\n    type: definePropType<Placement>(String),\n    values: [\n      'top',\n      'top-start',\n      'top-end',\n      'bottom',\n      'bottom-start',\n      'bottom-end',\n    ],\n    default: 'bottom-start',\n  },\n  /**\n   * @description a method to fetch input suggestions. When suggestions are ready, invoke `callback(data:[])` to return them to Autocomplete\n   */\n  fetchSuggestions: {\n    type: definePropType<AutocompleteFetchSuggestions>([Function, Array]),\n    default: NOOP,\n  },\n  /**\n   * @description custom class name for autocomplete's dropdown\n   */\n  popperClass: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description whether show suggestions when input focus\n   */\n  triggerOnFocus: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description whether to emit a `select` event on enter when there is no autocomplete match\n   */\n  selectWhenUnmatched: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description whether to hide the loading icon in remote search\n   */\n  hideLoading: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description whether select dropdown is teleported to the body\n   */\n  teleported: useTooltipContentProps.teleported,\n  /**\n   * @description which select dropdown appends to\n   */\n  appendTo: useTooltipContentProps.appendTo,\n  /**\n   * @description whether to highlight first item in remote search suggestions by default\n   */\n  highlightFirstItem: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description whether the width of the dropdown is the same as the input\n   */\n  fitInputWidth: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description whether to show clear button\n   */\n  clearable: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description whether to disable\n   */\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description same as `name` in native input\n   */\n  name: String,\n  ...useAriaProps(['ariaLabel']),\n} as const)\nexport type AutocompleteProps = ExtractPropTypes<typeof autocompleteProps>\n\nexport const autocompleteEmits = {\n  [UPDATE_MODEL_EVENT]: (value: string) => isString(value),\n  [INPUT_EVENT]: (value: string) => isString(value),\n  [CHANGE_EVENT]: (value: string) => isString(value),\n  focus: (evt: FocusEvent) => evt instanceof FocusEvent,\n  blur: (evt: FocusEvent) => evt instanceof FocusEvent,\n  clear: () => true,\n  select: (item: Record<string, any>) => isObject(item),\n}\nexport type AutocompleteEmits = typeof autocompleteEmits\n\nexport type AutocompleteInstance = InstanceType<typeof Autocomplete> & unknown\n"],"mappings":";;;;;;;;;;;;;;AAcY,IAACA,iBAAiB,GAAGC,OAAA,CAAAC,UAAU,CAAAC,aAAA;EACzCC,QAAQ,EAAE;IACRC,IAAI,EAAEC,MAAM;IACZ,WAAS;EACb,CAAG;EACDC,UAAU,EAAE;IACVF,IAAI,EAAE,CAACC,MAAM,EAAEE,MAAM,CAAC;IACtB,WAAS;EACb,CAAG;EACDC,QAAQ,EAAE;IACRJ,IAAI,EAAEG,MAAM;IACZ,WAAS;EACb,CAAG;EACDE,SAAS,EAAE;IACTL,IAAI,EAAEJ,OAAA,CAAAU,cAAc,CAACL,MAAM,CAAC;IAC5BM,MAAM,EAAE,CACN,KAAK,EACL,WAAW,EACX,SAAS,EACT,QAAQ,EACR,cAAc,EACd,YAAY,CACb;IACD,WAAS;EACb,CAAG;EACDC,gBAAgB,EAAE;IAChBR,IAAI,EAAEJ,OAAA,CAAAU,cAAc,CAAC,CAACG,QAAQ,EAAEC,KAAK,CAAC,CAAC;IACvC,WAASC,MAAA,CAAAC;EACb,CAAG;EACDC,WAAW,EAAE;IACXb,IAAI,EAAEC,MAAM;IACZ,WAAS;EACb,CAAG;EACDa,cAAc,EAAE;IACdd,IAAI,EAAEe,OAAO;IACb,WAAS;EACb,CAAG;EACDC,mBAAmB,EAAE;IACnBhB,IAAI,EAAEe,OAAO;IACb,WAAS;EACb,CAAG;EACDE,WAAW,EAAE;IACXjB,IAAI,EAAEe,OAAO;IACb,WAAS;EACb,CAAG;EACDG,UAAU,EAAEC,OAAA,CAAAC,sBAAsB,CAACF,UAAU;EAC7CG,QAAQ,EAAEF,OAAA,CAAAC,sBAAsB,CAACC,QAAQ;EACzCC,kBAAkB,EAAE;IAClBtB,IAAI,EAAEe,OAAO;IACb,WAAS;EACb,CAAG;EACDQ,aAAa,EAAE;IACbvB,IAAI,EAAEe,OAAO;IACb,WAAS;EACb,CAAG;EACDS,SAAS,EAAE;IACTxB,IAAI,EAAEe,OAAO;IACb,WAAS;EACb,CAAG;EACDU,QAAQ,EAAE;IACRzB,IAAI,EAAEe,OAAO;IACb,WAAS;EACb,CAAG;EACDW,IAAI,EAAEzB;AAAM,GACT0B,KAAA,CAAAC,YAAY,CAAC,CAAC,WAAW,CAAC,CAAC,CAC/B;AACW,IAACC,iBAAiB,GAAAC,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,KAC3BC,KAAA,CAAAC,kBAAkB,EAAG,UAACC,KAAK;EAAA,OAAKtB,MAAA,CAAAuB,QAAQ,CAACD,KAAK,CAAC;AAAA,IAC/CF,KAAA,CAAAI,WAAW,EAAG,UAACF,KAAK;EAAA,OAAKtB,MAAA,CAAAuB,QAAQ,CAACD,KAAK,CAAC;AAAA,IACxCF,KAAA,CAAAK,YAAY,EAAG,UAACH,KAAK;EAAA,OAAKtB,MAAA,CAAAuB,QAAQ,CAACD,KAAK,CAAC;AAAA,aACnC,SAAPI,KAAKA,CAAGC,GAAG;EAAA,OAAKA,GAAG,YAAYC,UAAU;AAAA,YACnC,SAANC,IAAIA,CAAGF,GAAG;EAAA,OAAKA,GAAG,YAAYC,UAAU;AAAA,aACjC,SAAPE,KAAKA,CAAA;EAAA,OAAQ,IAAI;AAAA,cACT,SAARC,MAAMA,CAAGC,IAAI;EAAA,OAAKhC,MAAA,CAAAiC,QAAQ,CAACD,IAAI,CAAC;AAAA,EAClC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}