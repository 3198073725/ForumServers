{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"rich-text-editor\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_quill_editor = _resolveComponent(\"quill-editor\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_quill_editor, {\n    content: $setup.content,\n    \"onUpdate:content\": _cache[0] || (_cache[0] = function ($event) {\n      return $setup.content = $event;\n    }),\n    options: $setup.editorOption,\n    onTextChange: $setup.handleChange,\n    disabled: $props.disabled\n  }, null, 8 /* PROPS */, [\"content\", \"options\", \"onTextChange\", \"disabled\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createVNode","_component_quill_editor","content","$setup","_cache","$event","options","editorOption","onTextChange","handleChange","disabled","$props"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\components\\RichTextEditor.vue"],"sourcesContent":["<template>\r\n  <div class=\"rich-text-editor\">\r\n    <quill-editor\r\n      v-model:content=\"content\"\r\n      :options=\"editorOption\"\r\n      @textChange=\"handleChange\"\r\n      :disabled=\"disabled\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watch } from 'vue'\r\nimport { QuillEditor } from '@vueup/vue-quill'\r\nimport '@vueup/vue-quill/dist/vue-quill.snow.css'\r\n\r\nexport default {\r\n  name: 'RichTextEditor',\r\n  components: {\r\n    QuillEditor\r\n  },\r\n  props: {\r\n    modelValue: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  emits: ['update:modelValue', 'change'],\r\n  setup(props, { emit }) {\r\n    const content = ref(props.modelValue)\r\n\r\n    watch(() => props.modelValue, (newValue) => {\r\n      content.value = newValue\r\n    })\r\n\r\n    const handleChange = (delta, oldDelta, source) => {\r\n      if (source === 'user') {\r\n        emit('update:modelValue', content.value)\r\n        emit('change', content.value)\r\n      }\r\n    }\r\n\r\n    const editorOption = {\r\n      theme: 'snow',\r\n      modules: {\r\n        toolbar: [\r\n          ['bold', 'italic', 'underline', 'strike'],\r\n          ['blockquote', 'code-block'],\r\n          [{ 'header': 1 }, { 'header': 2 }],\r\n          [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n          [{ 'script': 'sub' }, { 'script': 'super' }],\r\n          [{ 'indent': '-1' }, { 'indent': '+1' }],\r\n          [{ 'direction': 'rtl' }],\r\n          [{ 'size': ['small', false, 'large', 'huge'] }],\r\n          [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n          [{ 'color': [] }, { 'background': [] }],\r\n          [{ 'font': [] }],\r\n          [{ 'align': [] }],\r\n          ['clean'],\r\n          ['link', 'image']\r\n        ]\r\n      },\r\n      placeholder: '请输入内容...'\r\n    }\r\n\r\n    return {\r\n      content,\r\n      editorOption,\r\n      handleChange\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.rich-text-editor {\r\n  width: 100%;\r\n}\r\n\r\n:deep(.ql-container) {\r\n  min-height: 300px;\r\n}\r\n\r\n:deep(.ql-editor) {\r\n  min-height: 300px;\r\n}\r\n</style> "],"mappings":";;EACO,SAAM;AAAkB;;;uBAA7BA,mBAAA,CAOM,OAPNC,UAOM,GANJC,YAAA,CAKEC,uBAAA;IAJQC,OAAO,EAAEC,MAAA,CAAAD,OAAO;IAH9B,oBAAAE,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAGuBF,MAAA,CAAAD,OAAO,GAAAG,MAAA;IAAA;IACvBC,OAAO,EAAEH,MAAA,CAAAI,YAAY;IACrBC,YAAU,EAAEL,MAAA,CAAAM,YAAY;IACxBC,QAAQ,EAAEC,MAAA,CAAAD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}