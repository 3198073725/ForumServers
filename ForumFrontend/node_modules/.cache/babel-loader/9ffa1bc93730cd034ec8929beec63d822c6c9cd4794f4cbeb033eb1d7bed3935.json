{"ast":null,"code":"import _objectSpread from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport { ref, computed, onMounted, toRefs } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nimport { formatDateTime } from '@/utils/index';\nimport { getUserProfile, getUserById, updateUserProfile, getUserPosts, getUserComments, getUserFavorites, changePassword } from '@/api/user';\n\n// 格式化日期函数\nvar formatDate = function formatDate(date) {\n  return formatDateTime(date);\n};\nexport default {\n  name: 'UserProfile',\n  setup: function setup() {\n    var route = useRoute();\n    var router = useRouter();\n    var store = useStore();\n\n    // 状态\n    var state = reactive({\n      loading: false,\n      userProfile: {},\n      userStats: {\n        posts_count: 0,\n        comments_count: 0,\n        favorites_count: 0\n      },\n      activeTab: 'posts',\n      // 帖子相关\n      postsLoading: false,\n      posts: [],\n      postsTotal: 0,\n      postsQuery: {\n        page: 1,\n        limit: 10\n      },\n      // 评论相关\n      commentsLoading: false,\n      comments: [],\n      commentsTotal: 0,\n      commentsQuery: {\n        page: 1,\n        limit: 10\n      },\n      // 收藏相关\n      favoritesLoading: false,\n      favorites: [],\n      favoritesTotal: 0,\n      favoritesQuery: {\n        page: 1,\n        limit: 10\n      },\n      // 编辑资料相关\n      editProfileDialogVisible: false,\n      profileForm: {\n        nickname: '',\n        avatar_url: ''\n      },\n      profileRules: {\n        nickname: [{\n          max: 50,\n          message: '昵称不能超过50个字符',\n          trigger: 'blur'\n        }]\n      },\n      // 修改密码相关\n      changePasswordDialogVisible: false,\n      passwordForm: {\n        old_password: '',\n        new_password: '',\n        confirm_password: ''\n      },\n      passwordRules: {\n        old_password: [{\n          required: true,\n          message: '请输入当前密码',\n          trigger: 'blur'\n        }],\n        new_password: [{\n          required: true,\n          message: '请输入新密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '密码长度不能少于6个字符',\n          trigger: 'blur'\n        }],\n        confirm_password: [{\n          required: true,\n          message: '请再次输入新密码',\n          trigger: 'blur'\n        }, {\n          validator: function validator(rule, value, callback) {\n            if (value !== state.passwordForm.new_password) {\n              callback(new Error('两次输入的密码不一致'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }]\n      },\n      submitting: false\n    });\n\n    // 计算属性\n    var userId = computed(function () {\n      return route.params.id || 'me';\n    });\n    var isCurrentUser = computed(function () {\n      return !route.params.id || route.params.id === 'me' || route.params.id === store.getters.userId.toString();\n    });\n\n    // 从查询参数中获取激活的标签页\n    if (route.query.tab && ['posts', 'comments', 'favorites'].includes(route.query.tab)) {\n      state.activeTab = route.query.tab;\n    }\n\n    // 获取用户信息\n    var fetchUserProfile = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              state.loading = true;\n              _context.prev = 1;\n              if (!(userId.value === 'me' || !userId.value)) {\n                _context.next = 8;\n                break;\n              }\n              _context.next = 5;\n              return getUserProfile();\n            case 5:\n              response = _context.sent;\n              _context.next = 11;\n              break;\n            case 8:\n              _context.next = 10;\n              return getUserById(userId.value);\n            case 10:\n              response = _context.sent;\n            case 11:\n              if (response.code === 0) {\n                state.userProfile = response.data;\n\n                // 初始化编辑表单\n                state.profileForm.nickname = state.userProfile.nickname;\n                state.profileForm.avatar_url = state.userProfile.avatar_url;\n              } else {\n                ElMessage.error(response.msg || '获取用户信息失败');\n              }\n              _context.next = 18;\n              break;\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('获取用户信息失败:', _context.t0);\n              ElMessage.error('获取用户信息失败');\n            case 18:\n              _context.prev = 18;\n              state.loading = false;\n              return _context.finish(18);\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 14, 18, 21]]);\n      }));\n      return function fetchUserProfile() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    // 获取用户帖子\n    var fetchUserPosts = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              state.postsLoading = true;\n              _context2.prev = 1;\n              _context2.next = 4;\n              return getUserPosts(userId.value);\n            case 4:\n              response = _context2.sent;\n              if (response.code === 0) {\n                state.posts = response.data.results || [];\n                state.postsTotal = response.data.count || 0;\n                state.userStats.posts_count = response.data.count || 0;\n              } else {\n                ElMessage.error(response.msg || '获取用户帖子失败');\n              }\n              _context2.next = 12;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error('获取用户帖子失败:', _context2.t0);\n              ElMessage.error('获取用户帖子失败');\n            case 12:\n              _context2.prev = 12;\n              state.postsLoading = false;\n              return _context2.finish(12);\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[1, 8, 12, 15]]);\n      }));\n      return function fetchUserPosts() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 获取用户评论\n    var fetchUserComments = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              state.commentsLoading = true;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return getUserComments(userId.value);\n            case 4:\n              response = _context3.sent;\n              if (response.code === 0) {\n                state.comments = response.data.results || [];\n                state.commentsTotal = response.data.count || 0;\n                state.userStats.comments_count = response.data.count || 0;\n              } else {\n                ElMessage.error(response.msg || '获取用户评论失败');\n              }\n              _context3.next = 12;\n              break;\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.error('获取用户评论失败:', _context3.t0);\n              ElMessage.error('获取用户评论失败');\n            case 12:\n              _context3.prev = 12;\n              state.commentsLoading = false;\n              return _context3.finish(12);\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[1, 8, 12, 15]]);\n      }));\n      return function fetchUserComments() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    // 获取用户收藏\n    var fetchUserFavorites = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              state.favoritesLoading = true;\n              _context4.prev = 1;\n              _context4.next = 4;\n              return getUserFavorites(userId.value);\n            case 4:\n              response = _context4.sent;\n              if (response.code === 0) {\n                state.favorites = response.data.results || [];\n                state.favoritesTotal = response.data.count || 0;\n                state.userStats.favorites_count = response.data.count || 0;\n              } else {\n                ElMessage.error(response.msg || '获取用户收藏失败');\n              }\n              _context4.next = 12;\n              break;\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](1);\n              console.error('获取用户收藏失败:', _context4.t0);\n              ElMessage.error('获取用户收藏失败');\n            case 12:\n              _context4.prev = 12;\n              state.favoritesLoading = false;\n              return _context4.finish(12);\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[1, 8, 12, 15]]);\n      }));\n      return function fetchUserFavorites() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    // 处理标签页切换\n    var handleTabClick = function handleTabClick(tab) {\n      state.activeTab = tab.name;\n      if (tab.name === 'posts' && state.posts.length === 0) {\n        fetchUserPosts();\n      } else if (tab.name === 'comments' && state.comments.length === 0) {\n        fetchUserComments();\n      } else if (tab.name === 'favorites' && state.favorites.length === 0) {\n        fetchUserFavorites();\n      }\n    };\n\n    // 处理帖子分页变化\n    var handlePostsPageChange = function handlePostsPageChange(page) {\n      state.postsQuery.page = page;\n      fetchUserPosts();\n    };\n\n    // 处理评论分页变化\n    var handleCommentsPageChange = function handleCommentsPageChange(page) {\n      state.commentsQuery.page = page;\n      fetchUserComments();\n    };\n\n    // 处理收藏分页变化\n    var handleFavoritesPageChange = function handleFavoritesPageChange(page) {\n      state.favoritesQuery.page = page;\n      fetchUserFavorites();\n    };\n\n    // 查看帖子\n    var viewPost = function viewPost(post) {\n      router.push({\n        name: 'PostDetail',\n        params: {\n          id: post.id\n        }\n      });\n    };\n\n    // 显示编辑资料对话框\n    var showEditProfileDialog = function showEditProfileDialog() {\n      state.editProfileDialogVisible = true;\n    };\n\n    // 提交编辑资料表单\n    var submitProfileForm = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              state.submitting = true;\n              _context5.prev = 1;\n              _context5.next = 4;\n              return updateUserProfile(state.profileForm);\n            case 4:\n              response = _context5.sent;\n              if (response.code === 0) {\n                ElMessage.success(response.msg || '个人资料更新成功');\n                state.editProfileDialogVisible = false;\n\n                // 更新用户信息\n                fetchUserProfile();\n\n                // 更新Vuex中的用户信息\n                store.dispatch('updateUserInfo', _objectSpread(_objectSpread({}, store.getters.userInfo), {}, {\n                  nickname: state.profileForm.nickname,\n                  avatar_url: state.profileForm.avatar_url\n                }));\n              } else {\n                ElMessage.error(response.msg || '个人资料更新失败');\n              }\n              _context5.next = 12;\n              break;\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5[\"catch\"](1);\n              console.error('个人资料更新失败:', _context5.t0);\n              ElMessage.error('个人资料更新失败');\n            case 12:\n              _context5.prev = 12;\n              state.submitting = false;\n              return _context5.finish(12);\n            case 15:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[1, 8, 12, 15]]);\n      }));\n      return function submitProfileForm() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    // 显示修改密码对话框\n    var showChangePasswordDialog = function showChangePasswordDialog() {\n      state.changePasswordDialogVisible = true;\n      state.passwordForm = {\n        old_password: '',\n        new_password: '',\n        confirm_password: ''\n      };\n    };\n\n    // 提交修改密码表单\n    var submitPasswordForm = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              state.submitting = true;\n              _context6.prev = 1;\n              _context6.next = 4;\n              return changePassword(state.passwordForm);\n            case 4:\n              response = _context6.sent;\n              if (response.code === 0) {\n                ElMessage.success(response.msg || '密码修改成功，请重新登录');\n                state.changePasswordDialogVisible = false;\n\n                // 退出登录\n                store.dispatch('logout');\n                router.push('/login');\n              } else {\n                ElMessage.error(response.msg || '密码修改失败');\n              }\n              _context6.next = 12;\n              break;\n            case 8:\n              _context6.prev = 8;\n              _context6.t0 = _context6[\"catch\"](1);\n              console.error('密码修改失败:', _context6.t0);\n              ElMessage.error('密码修改失败');\n            case 12:\n              _context6.prev = 12;\n              state.submitting = false;\n              return _context6.finish(12);\n            case 15:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, null, [[1, 8, 12, 15]]);\n      }));\n      return function submitPasswordForm() {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    // 生命周期钩子\n    onMounted(function () {\n      fetchUserProfile();\n      fetchUserPosts();\n    });\n    return _objectSpread(_objectSpread({}, toRefs(state)), {}, {\n      userId: userId,\n      isCurrentUser: isCurrentUser,\n      formatDate: formatDate,\n      handleTabClick: handleTabClick,\n      handlePostsPageChange: handlePostsPageChange,\n      handleCommentsPageChange: handleCommentsPageChange,\n      handleFavoritesPageChange: handleFavoritesPageChange,\n      viewPost: viewPost,\n      showEditProfileDialog: showEditProfileDialog,\n      submitProfileForm: submitProfileForm,\n      showChangePasswordDialog: showChangePasswordDialog,\n      submitPasswordForm: submitPasswordForm\n    });\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","toRefs","useRoute","useRouter","useStore","ElMessage","formatDateTime","getUserProfile","getUserById","updateUserProfile","getUserPosts","getUserComments","getUserFavorites","changePassword","formatDate","date","name","setup","route","router","store","state","reactive","loading","userProfile","userStats","posts_count","comments_count","favorites_count","activeTab","postsLoading","posts","postsTotal","postsQuery","page","limit","commentsLoading","comments","commentsTotal","commentsQuery","favoritesLoading","favorites","favoritesTotal","favoritesQuery","editProfileDialogVisible","profileForm","nickname","avatar_url","profileRules","max","message","trigger","changePasswordDialogVisible","passwordForm","old_password","new_password","confirm_password","passwordRules","required","min","validator","rule","value","callback","Error","submitting","userId","params","id","isCurrentUser","getters","toString","query","tab","includes","fetchUserProfile","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","sent","code","data","error","msg","t0","console","finish","stop","apply","arguments","fetchUserPosts","_ref2","_callee2","_callee2$","_context2","results","count","fetchUserComments","_ref3","_callee3","_callee3$","_context3","fetchUserFavorites","_ref4","_callee4","_callee4$","_context4","handleTabClick","length","handlePostsPageChange","handleCommentsPageChange","handleFavoritesPageChange","viewPost","post","push","showEditProfileDialog","submitProfileForm","_ref5","_callee5","_callee5$","_context5","success","dispatch","_objectSpread","userInfo","showChangePasswordDialog","submitPasswordForm","_ref6","_callee6","_callee6$","_context6"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\user\\Profile.vue"],"sourcesContent":["<template>\n  <div class=\"profile-container\">\n    <el-row :gutter=\"20\">\n      <!-- 左侧用户信息卡片 -->\n      <el-col :span=\"6\">\n        <el-card class=\"profile-card\">\n          <div v-if=\"loading\" class=\"loading-container\">\n            <el-skeleton :rows=\"5\" animated />\n          </div>\n          <div v-else class=\"user-info\">\n            <div class=\"avatar-container\">\n              <el-avatar :size=\"100\" :src=\"userProfile.avatar_url || ''\">\n                {{ userProfile.nickname?.charAt(0) || userProfile.username?.charAt(0) || 'U' }}\n              </el-avatar>\n            </div>\n            <h2 class=\"username\">{{ userProfile.nickname || userProfile.username }}</h2>\n            <div class=\"user-meta\">\n              <div class=\"meta-item\">\n                <i class=\"el-icon-user\"></i>\n                <span>{{ userProfile.username }}</span>\n              </div>\n              <div class=\"meta-item\">\n                <i class=\"el-icon-message\"></i>\n                <span>{{ userProfile.email }}</span>\n              </div>\n              <div class=\"meta-item\">\n                <i class=\"el-icon-date\"></i>\n                <span>注册于 {{ formatDate(userProfile.created_at) }}</span>\n              </div>\n              <div class=\"meta-item\">\n                <i class=\"el-icon-time\"></i>\n                <span>最后登录 {{ formatDate(userProfile.last_login) }}</span>\n              </div>\n            </div>\n\n            <div class=\"user-stats\">\n              <div class=\"stat-item\">\n                <div class=\"stat-value\">{{ userStats.posts_count || 0 }}</div>\n                <div class=\"stat-label\">帖子</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-value\">{{ userStats.comments_count || 0 }}</div>\n                <div class=\"stat-label\">评论</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-value\">{{ userStats.favorites_count || 0 }}</div>\n                <div class=\"stat-label\">收藏</div>\n              </div>\n            </div>\n\n            <div v-if=\"isCurrentUser\" class=\"user-actions\">\n              <el-button type=\"primary\" @click=\"showEditProfileDialog\">编辑资料</el-button>\n              <el-button @click=\"showChangePasswordDialog\">修改密码</el-button>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n\n      <!-- 右侧内容区域 -->\n      <el-col :span=\"18\">\n        <el-card class=\"content-card\">\n          <el-tabs v-model=\"activeTab\" @tab-click=\"handleTabClick\">\n            <el-tab-pane label=\"我的帖子\" name=\"posts\">\n              <div v-if=\"postsLoading\" class=\"loading-container\">\n                <el-skeleton :rows=\"5\" animated />\n              </div>\n              <div v-else-if=\"posts.length === 0\" class=\"empty-container\">\n                <el-empty description=\"暂无帖子\" />\n              </div>\n              <div v-else class=\"post-list\">\n                <div\n                  v-for=\"post in posts\"\n                  :key=\"post.id\"\n                  class=\"post-item\"\n                  @click=\"viewPost(post)\"\n                >\n                  <div class=\"post-title\">\n                    <el-tag v-if=\"post.is_pinned\" size=\"mini\" type=\"danger\">置顶</el-tag>\n                    <el-tag v-if=\"post.is_featured\" size=\"mini\" type=\"success\">精华</el-tag>\n                    <span>{{ post.title }}</span>\n                  </div>\n                  <div class=\"post-meta\">\n                    <div class=\"post-board\">\n                      <i class=\"el-icon-s-grid\"></i>\n                      <span>{{ post.board_name }}</span>\n                    </div>\n                    <div class=\"post-stats\">\n                      <span><i class=\"el-icon-view\"></i> {{ post.views }}</span>\n                      <span><i class=\"el-icon-star-on\"></i> {{ post.likes_count }}</span>\n                      <span><i class=\"el-icon-chat-dot-round\"></i> {{ post.comments_count }}</span>\n                    </div>\n                    <div class=\"post-time\">{{ formatDate(post.created_at) }}</div>\n                  </div>\n                </div>\n\n                <!-- 分页 -->\n                <div v-if=\"posts.length > 0\" class=\"pagination-container\">\n                  <el-pagination\n                    background\n                    layout=\"prev, pager, next\"\n                    :total=\"postsTotal\"\n                    :page-size=\"postsQuery.limit\"\n                    v-model:current-page=\"postsQuery.page\"\n                    @current-change=\"handlePostsPageChange\"\n                  >\n                  </el-pagination>\n                </div>\n              </div>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"我的评论\" name=\"comments\">\n              <div v-if=\"commentsLoading\" class=\"loading-container\">\n                <el-skeleton :rows=\"5\" animated />\n              </div>\n              <div v-else-if=\"comments.length === 0\" class=\"empty-container\">\n                <el-empty description=\"暂无评论\" />\n              </div>\n              <div v-else class=\"comment-list\">\n                <div\n                  v-for=\"comment in comments\"\n                  :key=\"comment.id\"\n                  class=\"comment-item\"\n                >\n                  <div class=\"comment-content\">{{ comment.content }}</div>\n                  <div class=\"comment-meta\">\n                    <div class=\"comment-post\" @click=\"viewPost({ id: comment.post })\">\n                      <i class=\"el-icon-document\"></i>\n                      <span>查看原帖</span>\n                    </div>\n                    <div class=\"comment-time\">{{ formatDate(comment.created_at) }}</div>\n                  </div>\n                </div>\n\n                <!-- 分页 -->\n                <div v-if=\"comments.length > 0\" class=\"pagination-container\">\n                  <el-pagination\n                    background\n                    layout=\"prev, pager, next\"\n                    :total=\"commentsTotal\"\n                    :page-size=\"commentsQuery.limit\"\n                    v-model:current-page=\"commentsQuery.page\"\n                    @current-change=\"handleCommentsPageChange\"\n                  >\n                  </el-pagination>\n                </div>\n              </div>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"我的收藏\" name=\"favorites\">\n              <div v-if=\"favoritesLoading\" class=\"loading-container\">\n                <el-skeleton :rows=\"5\" animated />\n              </div>\n              <div v-else-if=\"favorites.length === 0\" class=\"empty-container\">\n                <el-empty description=\"暂无收藏\" />\n              </div>\n              <div v-else class=\"favorite-list\">\n                <div\n                  v-for=\"favorite in favorites\"\n                  :key=\"favorite.id\"\n                  class=\"favorite-item\"\n                  @click=\"viewPost(favorite.post)\"\n                >\n                  <div class=\"post-title\">\n                    <el-tag v-if=\"favorite.post.is_pinned\" size=\"mini\" type=\"danger\">置顶</el-tag>\n                    <el-tag v-if=\"favorite.post.is_featured\" size=\"mini\" type=\"success\">精华</el-tag>\n                    <span>{{ favorite.post.title }}</span>\n                  </div>\n                  <div class=\"post-meta\">\n                    <div class=\"post-author\">\n                      <i class=\"el-icon-user\"></i>\n                      <span>{{ favorite.post.user.nickname || favorite.post.user.username }}</span>\n                    </div>\n                    <div class=\"post-board\">\n                      <i class=\"el-icon-s-grid\"></i>\n                      <span>{{ favorite.post.board_name }}</span>\n                    </div>\n                    <div class=\"post-stats\">\n                      <span><i class=\"el-icon-view\"></i> {{ favorite.post.views }}</span>\n                      <span><i class=\"el-icon-star-on\"></i> {{ favorite.post.likes_count }}</span>\n                      <span><i class=\"el-icon-chat-dot-round\"></i> {{ favorite.post.comments_count }}</span>\n                    </div>\n                    <div class=\"post-time\">{{ formatDate(favorite.created_at) }}</div>\n                  </div>\n                </div>\n\n                <!-- 分页 -->\n                <div v-if=\"favorites.length > 0\" class=\"pagination-container\">\n                  <el-pagination\n                    background\n                    layout=\"prev, pager, next\"\n                    :total=\"favoritesTotal\"\n                    :page-size=\"favoritesQuery.limit\"\n                    v-model:current-page=\"favoritesQuery.page\"\n                    @current-change=\"handleFavoritesPageChange\"\n                  >\n                  </el-pagination>\n                </div>\n              </div>\n            </el-tab-pane>\n          </el-tabs>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 编辑资料对话框 -->\n    <el-dialog\n      title=\"编辑个人资料\"\n      v-model:visible=\"editProfileDialogVisible\"\n      width=\"500px\"\n    >\n      <el-form\n        ref=\"profileForm\"\n        :model=\"profileForm\"\n        :rules=\"profileRules\"\n        label-width=\"80px\"\n      >\n        <el-form-item label=\"昵称\" prop=\"nickname\">\n          <el-input v-model=\"profileForm.nickname\" placeholder=\"请输入昵称\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"头像\">\n          <el-input v-model=\"profileForm.avatar_url\" placeholder=\"请输入头像URL\"></el-input>\n          <div class=\"avatar-preview\">\n            <el-avatar :size=\"60\" :src=\"profileForm.avatar_url || ''\">\n              {{ profileForm.nickname?.charAt(0) || userProfile.username?.charAt(0) || 'U' }}\n            </el-avatar>\n          </div>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editProfileDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submitProfileForm\" :loading=\"submitting\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 修改密码对话框 -->\n    <el-dialog\n      title=\"修改密码\"\n      v-model:visible=\"changePasswordDialogVisible\"\n      width=\"500px\"\n    >\n      <el-form\n        ref=\"passwordForm\"\n        :model=\"passwordForm\"\n        :rules=\"passwordRules\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"当前密码\" prop=\"old_password\">\n          <el-input\n            v-model=\"passwordForm.old_password\"\n            type=\"password\"\n            placeholder=\"请输入当前密码\"\n            show-password\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"新密码\" prop=\"new_password\">\n          <el-input\n            v-model=\"passwordForm.new_password\"\n            type=\"password\"\n            placeholder=\"请输入新密码\"\n            show-password\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"确认新密码\" prop=\"confirm_password\">\n          <el-input\n            v-model=\"passwordForm.confirm_password\"\n            type=\"password\"\n            placeholder=\"请再次输入新密码\"\n            show-password\n          ></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"changePasswordDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submitPasswordForm\" :loading=\"submitting\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, toRefs } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { ElMessage } from 'element-plus'\nimport { formatDateTime } from '@/utils/index'\nimport {\n  getUserProfile,\n  getUserById,\n  updateUserProfile,\n  getUserPosts,\n  getUserComments,\n  getUserFavorites,\n  changePassword\n} from '@/api/user'\n\n// 格式化日期函数\nconst formatDate = (date) => {\n  return formatDateTime(date)\n}\n\nexport default {\n  name: 'UserProfile',\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n    const store = useStore()\n\n    // 状态\n    const state = reactive({\n      loading: false,\n      userProfile: {},\n      userStats: {\n        posts_count: 0,\n        comments_count: 0,\n        favorites_count: 0\n      },\n      activeTab: 'posts',\n\n      // 帖子相关\n      postsLoading: false,\n      posts: [],\n      postsTotal: 0,\n      postsQuery: {\n        page: 1,\n        limit: 10\n      },\n\n      // 评论相关\n      commentsLoading: false,\n      comments: [],\n      commentsTotal: 0,\n      commentsQuery: {\n        page: 1,\n        limit: 10\n      },\n\n      // 收藏相关\n      favoritesLoading: false,\n      favorites: [],\n      favoritesTotal: 0,\n      favoritesQuery: {\n        page: 1,\n        limit: 10\n      },\n\n      // 编辑资料相关\n      editProfileDialogVisible: false,\n      profileForm: {\n        nickname: '',\n        avatar_url: ''\n      },\n      profileRules: {\n        nickname: [\n          { max: 50, message: '昵称不能超过50个字符', trigger: 'blur' }\n        ]\n      },\n\n      // 修改密码相关\n      changePasswordDialogVisible: false,\n      passwordForm: {\n        old_password: '',\n        new_password: '',\n        confirm_password: ''\n      },\n      passwordRules: {\n        old_password: [\n          { required: true, message: '请输入当前密码', trigger: 'blur' }\n        ],\n        new_password: [\n          { required: true, message: '请输入新密码', trigger: 'blur' },\n          { min: 6, message: '密码长度不能少于6个字符', trigger: 'blur' }\n        ],\n        confirm_password: [\n          { required: true, message: '请再次输入新密码', trigger: 'blur' },\n          {\n            validator: (rule, value, callback) => {\n              if (value !== state.passwordForm.new_password) {\n                callback(new Error('两次输入的密码不一致'))\n              } else {\n                callback()\n              }\n            },\n            trigger: 'blur'\n          }\n        ]\n      },\n\n      submitting: false\n    })\n\n    // 计算属性\n    const userId = computed(() => route.params.id || 'me')\n    const isCurrentUser = computed(() => !route.params.id || route.params.id === 'me' || route.params.id === store.getters.userId.toString())\n\n    // 从查询参数中获取激活的标签页\n    if (route.query.tab && ['posts', 'comments', 'favorites'].includes(route.query.tab)) {\n      state.activeTab = route.query.tab\n    }\n\n    // 获取用户信息\n    const fetchUserProfile = async () => {\n      state.loading = true\n      try {\n        let response\n        if (userId.value === 'me' || !userId.value) {\n          response = await getUserProfile()\n        } else {\n          response = await getUserById(userId.value)\n        }\n\n        if (response.code === 0) {\n          state.userProfile = response.data\n\n          // 初始化编辑表单\n          state.profileForm.nickname = state.userProfile.nickname\n          state.profileForm.avatar_url = state.userProfile.avatar_url\n        } else {\n          ElMessage.error(response.msg || '获取用户信息失败')\n        }\n      } catch (error) {\n        console.error('获取用户信息失败:', error)\n        ElMessage.error('获取用户信息失败')\n      } finally {\n        state.loading = false\n      }\n    }\n\n    // 获取用户帖子\n    const fetchUserPosts = async () => {\n      state.postsLoading = true\n      try {\n        const response = await getUserPosts(userId.value)\n        if (response.code === 0) {\n          state.posts = response.data.results || []\n          state.postsTotal = response.data.count || 0\n          state.userStats.posts_count = response.data.count || 0\n        } else {\n          ElMessage.error(response.msg || '获取用户帖子失败')\n        }\n      } catch (error) {\n        console.error('获取用户帖子失败:', error)\n        ElMessage.error('获取用户帖子失败')\n      } finally {\n        state.postsLoading = false\n      }\n    }\n\n    // 获取用户评论\n    const fetchUserComments = async () => {\n      state.commentsLoading = true\n      try {\n        const response = await getUserComments(userId.value)\n        if (response.code === 0) {\n          state.comments = response.data.results || []\n          state.commentsTotal = response.data.count || 0\n          state.userStats.comments_count = response.data.count || 0\n        } else {\n          ElMessage.error(response.msg || '获取用户评论失败')\n        }\n      } catch (error) {\n        console.error('获取用户评论失败:', error)\n        ElMessage.error('获取用户评论失败')\n      } finally {\n        state.commentsLoading = false\n      }\n    }\n\n    // 获取用户收藏\n    const fetchUserFavorites = async () => {\n      state.favoritesLoading = true\n      try {\n        const response = await getUserFavorites(userId.value)\n        if (response.code === 0) {\n          state.favorites = response.data.results || []\n          state.favoritesTotal = response.data.count || 0\n          state.userStats.favorites_count = response.data.count || 0\n        } else {\n          ElMessage.error(response.msg || '获取用户收藏失败')\n        }\n      } catch (error) {\n        console.error('获取用户收藏失败:', error)\n        ElMessage.error('获取用户收藏失败')\n      } finally {\n        state.favoritesLoading = false\n      }\n    }\n\n    // 处理标签页切换\n    const handleTabClick = (tab) => {\n      state.activeTab = tab.name\n\n      if (tab.name === 'posts' && state.posts.length === 0) {\n        fetchUserPosts()\n      } else if (tab.name === 'comments' && state.comments.length === 0) {\n        fetchUserComments()\n      } else if (tab.name === 'favorites' && state.favorites.length === 0) {\n        fetchUserFavorites()\n      }\n    }\n\n    // 处理帖子分页变化\n    const handlePostsPageChange = (page) => {\n      state.postsQuery.page = page\n      fetchUserPosts()\n    }\n\n    // 处理评论分页变化\n    const handleCommentsPageChange = (page) => {\n      state.commentsQuery.page = page\n      fetchUserComments()\n    }\n\n    // 处理收藏分页变化\n    const handleFavoritesPageChange = (page) => {\n      state.favoritesQuery.page = page\n      fetchUserFavorites()\n    }\n\n    // 查看帖子\n    const viewPost = (post) => {\n      router.push({ name: 'PostDetail', params: { id: post.id } })\n    }\n\n    // 显示编辑资料对话框\n    const showEditProfileDialog = () => {\n      state.editProfileDialogVisible = true\n    }\n\n    // 提交编辑资料表单\n    const submitProfileForm = async () => {\n      state.submitting = true\n      try {\n        const response = await updateUserProfile(state.profileForm)\n        if (response.code === 0) {\n          ElMessage.success(response.msg || '个人资料更新成功')\n          state.editProfileDialogVisible = false\n\n          // 更新用户信息\n          fetchUserProfile()\n\n          // 更新Vuex中的用户信息\n          store.dispatch('updateUserInfo', {\n            ...store.getters.userInfo,\n            nickname: state.profileForm.nickname,\n            avatar_url: state.profileForm.avatar_url\n          })\n        } else {\n          ElMessage.error(response.msg || '个人资料更新失败')\n        }\n      } catch (error) {\n        console.error('个人资料更新失败:', error)\n        ElMessage.error('个人资料更新失败')\n      } finally {\n        state.submitting = false\n      }\n    }\n\n    // 显示修改密码对话框\n    const showChangePasswordDialog = () => {\n      state.changePasswordDialogVisible = true\n      state.passwordForm = {\n        old_password: '',\n        new_password: '',\n        confirm_password: ''\n      }\n    }\n\n    // 提交修改密码表单\n    const submitPasswordForm = async () => {\n      state.submitting = true\n      try {\n        const response = await changePassword(state.passwordForm)\n        if (response.code === 0) {\n          ElMessage.success(response.msg || '密码修改成功，请重新登录')\n          state.changePasswordDialogVisible = false\n\n          // 退出登录\n          store.dispatch('logout')\n          router.push('/login')\n        } else {\n          ElMessage.error(response.msg || '密码修改失败')\n        }\n      } catch (error) {\n        console.error('密码修改失败:', error)\n        ElMessage.error('密码修改失败')\n      } finally {\n        state.submitting = false\n      }\n    }\n\n    // 生命周期钩子\n    onMounted(() => {\n      fetchUserProfile()\n      fetchUserPosts()\n    })\n\n    return {\n      ...toRefs(state),\n      userId,\n      isCurrentUser,\n      formatDate,\n      handleTabClick,\n      handlePostsPageChange,\n      handleCommentsPageChange,\n      handleFavoritesPageChange,\n      viewPost,\n      showEditProfileDialog,\n      submitProfileForm,\n      showChangePasswordDialog,\n      submitPasswordForm\n    }\n  }\n}\n</script>\n\n<style scoped>\n.profile-container {\n  padding: 20px;\n}\n\n.loading-container {\n  padding: 20px 0;\n}\n\n.profile-card,\n.content-card {\n  margin-bottom: 20px;\n}\n\n.user-info {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.avatar-container {\n  margin-bottom: 15px;\n}\n\n.username {\n  margin: 0 0 15px;\n  font-size: 20px;\n}\n\n.user-meta {\n  width: 100%;\n  margin-bottom: 20px;\n}\n\n.meta-item {\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n  color: #606266;\n}\n\n.meta-item i {\n  margin-right: 8px;\n  width: 16px;\n  text-align: center;\n}\n\n.user-stats {\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 15px 0;\n  border-top: 1px solid #ebeef5;\n  border-bottom: 1px solid #ebeef5;\n}\n\n.stat-item {\n  text-align: center;\n}\n\n.stat-value {\n  font-size: 20px;\n  font-weight: bold;\n  color: #409eff;\n}\n\n.stat-label {\n  font-size: 14px;\n  color: #606266;\n}\n\n.user-actions {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 10px;\n}\n\n.empty-container {\n  padding: 40px 0;\n}\n\n.post-list,\n.comment-list,\n.favorite-list {\n  margin-bottom: 20px;\n}\n\n.post-item,\n.favorite-item {\n  padding: 15px;\n  border-bottom: 1px solid #ebeef5;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.post-item:hover,\n.favorite-item:hover {\n  background-color: #f5f7fa;\n}\n\n.post-item:last-child,\n.favorite-item:last-child {\n  border-bottom: none;\n}\n\n.post-title {\n  font-size: 16px;\n  font-weight: bold;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n}\n\n.post-title .el-tag {\n  margin-right: 8px;\n}\n\n.post-meta {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 13px;\n  color: #909399;\n}\n\n.post-board,\n.post-author {\n  display: flex;\n  align-items: center;\n}\n\n.post-board i,\n.post-author i {\n  margin-right: 5px;\n}\n\n.post-stats {\n  display: flex;\n}\n\n.post-stats span {\n  margin-right: 15px;\n  display: flex;\n  align-items: center;\n}\n\n.post-stats span i {\n  margin-right: 5px;\n}\n\n.comment-item {\n  padding: 15px;\n  border-bottom: 1px solid #ebeef5;\n}\n\n.comment-item:last-child {\n  border-bottom: none;\n}\n\n.comment-content {\n  margin-bottom: 10px;\n  line-height: 1.5;\n  white-space: pre-wrap;\n}\n\n.comment-meta {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 13px;\n  color: #909399;\n}\n\n.comment-post {\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  color: #409eff;\n}\n\n.comment-post i {\n  margin-right: 5px;\n}\n\n.pagination-container {\n  text-align: center;\n  margin-top: 20px;\n}\n\n.avatar-preview {\n  margin-top: 10px;\n  display: flex;\n  justify-content: center;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}