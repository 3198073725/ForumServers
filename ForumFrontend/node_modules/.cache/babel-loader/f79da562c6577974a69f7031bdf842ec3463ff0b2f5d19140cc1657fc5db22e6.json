{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, withModifiers as _withModifiers, normalizeClass as _normalizeClass } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"notification-header\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"notification-loading\"\n};\nvar _hoisted_3 = {\n  key: 1,\n  \"class\": \"notification-empty\"\n};\nvar _hoisted_4 = [\"onClick\"];\nvar _hoisted_5 = {\n  \"class\": \"notification-icon\"\n};\nvar _hoisted_6 = {\n  \"class\": \"notification-body\"\n};\nvar _hoisted_7 = {\n  \"class\": \"notification-text\"\n};\nvar _hoisted_8 = {\n  \"class\": \"notification-time\"\n};\nvar _hoisted_9 = {\n  \"class\": \"notification-actions\"\n};\nvar _hoisted_10 = {\n  \"class\": \"notification-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_divider = _resolveComponent(\"el-divider\");\n  var _component_Loading = _resolveComponent(\"Loading\");\n  var _component_el_icon = _resolveComponent(\"el-icon\");\n  var _component_el_empty = _resolveComponent(\"el-empty\");\n  var _component_Star = _resolveComponent(\"Star\");\n  var _component_ChatDotRound = _resolveComponent(\"ChatDotRound\");\n  var _component_User = _resolveComponent(\"User\");\n  var _component_Bell = _resolveComponent(\"Bell\");\n  var _component_Check = _resolveComponent(\"Check\");\n  var _component_el_scrollbar = _resolveComponent(\"el-scrollbar\");\n  var _component_el_popover = _resolveComponent(\"el-popover\");\n  var _component_el_badge = _resolveComponent(\"el-badge\");\n  return _openBlock(), _createBlock(_component_el_badge, {\n    value: $setup.unreadCount,\n    hidden: $setup.unreadCount === 0,\n    \"class\": \"notification-badge\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_popover, {\n        placement: \"bottom\",\n        width: 350,\n        trigger: \"click\",\n        \"popper-class\": \"notification-popover\",\n        onShow: $setup.handlePopoverShow\n      }, {\n        reference: _withCtx(function () {\n          return [_createVNode(_component_el_button, {\n            \"class\": \"notification-bell\",\n            icon: $setup.Bell,\n            circle: \"\"\n          }, null, 8 /* PROPS */, [\"icon\"])];\n        }),\n        \"default\": _withCtx(function () {\n          return [_createElementVNode(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h3\", null, \"通知\", -1 /* HOISTED */)), $setup.hasUnread ? (_openBlock(), _createBlock(_component_el_button, {\n            key: 0,\n            type: \"text\",\n            onClick: $setup.markAllAsRead\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[0] || (_cache[0] = [_createTextVNode(\"全部标为已读\")]);\n            }),\n            _: 1 /* STABLE */,\n            __: [0]\n          }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]), _createVNode(_component_el_divider), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_icon, {\n            \"class\": \"is-loading\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_Loading)];\n            }),\n            _: 1 /* STABLE */\n          }), _cache[2] || (_cache[2] = _createElementVNode(\"span\", null, \"加载中...\", -1 /* HOISTED */))])) : $setup.notifications.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_empty, {\n            description: \"暂无通知\"\n          })])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_scrollbar, {\n            \"max-height\": \"300px\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.notifications, function (notification) {\n                return _openBlock(), _createElementBlock(\"div\", {\n                  key: notification.id,\n                  \"class\": \"notification-item\"\n                }, [_createElementVNode(\"div\", {\n                  \"class\": _normalizeClass([\"notification-content\", {\n                    'is-unread': !notification.is_read\n                  }]),\n                  onClick: function onClick($event) {\n                    return $setup.handleNotificationClick(notification);\n                  }\n                }, [_createElementVNode(\"div\", _hoisted_5, [notification.type === 'like' ? (_openBlock(), _createBlock(_component_el_icon, {\n                  key: 0\n                }, {\n                  \"default\": _withCtx(function () {\n                    return [_createVNode(_component_Star)];\n                  }),\n                  _: 1 /* STABLE */\n                })) : notification.type === 'comment' ? (_openBlock(), _createBlock(_component_el_icon, {\n                  key: 1\n                }, {\n                  \"default\": _withCtx(function () {\n                    return [_createVNode(_component_ChatDotRound)];\n                  }),\n                  _: 1 /* STABLE */\n                })) : notification.type === 'follow' ? (_openBlock(), _createBlock(_component_el_icon, {\n                  key: 2\n                }, {\n                  \"default\": _withCtx(function () {\n                    return [_createVNode(_component_User)];\n                  }),\n                  _: 1 /* STABLE */\n                })) : (_openBlock(), _createBlock(_component_el_icon, {\n                  key: 3\n                }, {\n                  \"default\": _withCtx(function () {\n                    return [_createVNode(_component_Bell)];\n                  }),\n                  _: 1 /* STABLE */\n                }))]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, _toDisplayString(notification.content), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_8, _toDisplayString($setup.formatTime(notification.created_at)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [!notification.is_read ? (_openBlock(), _createBlock(_component_el_button, {\n                  key: 0,\n                  size: \"small\",\n                  circle: \"\",\n                  onClick: _withModifiers(function ($event) {\n                    return $setup.markAsRead(notification.id);\n                  }, [\"stop\"])\n                }, {\n                  \"default\": _withCtx(function () {\n                    return [_createVNode(_component_el_icon, null, {\n                      \"default\": _withCtx(function () {\n                        return [_createVNode(_component_Check)];\n                      }),\n                      _: 1 /* STABLE */\n                    })];\n                  }),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])], 10 /* CLASS, PROPS */, _hoisted_4)]);\n              }), 128 /* KEYED_FRAGMENT */))];\n            }),\n            _: 1 /* STABLE */\n          }), _createElementVNode(\"div\", _hoisted_10, [_createVNode(_component_el_button, {\n            type: \"text\",\n            onClick: $setup.viewAllNotifications\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[3] || (_cache[3] = [_createTextVNode(\"查看全部通知\")]);\n            }),\n            _: 1 /* STABLE */,\n            __: [3]\n          }, 8 /* PROPS */, [\"onClick\"])])];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onShow\"])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"value\", \"hidden\"]);\n}","map":{"version":3,"names":["key","_createBlock","_component_el_badge","value","$setup","unreadCount","hidden","_withCtx","_createVNode","_component_el_popover","placement","width","trigger","onShow","handlePopoverShow","reference","_component_el_button","icon","Bell","circle","_createElementVNode","_hoisted_1","hasUnread","type","onClick","markAllAsRead","_cache","_createTextVNode","_","__","_createCommentVNode","_component_el_divider","loading","_createElementBlock","_hoisted_2","_component_el_icon","_component_Loading","notifications","length","_hoisted_3","_component_el_empty","description","_component_el_scrollbar","_Fragment","_renderList","notification","id","_normalizeClass","is_read","$event","handleNotificationClick","_hoisted_5","_component_Star","_component_ChatDotRound","_component_User","_component_Bell","_hoisted_6","_hoisted_7","_toDisplayString","content","_hoisted_8","formatTime","created_at","_hoisted_9","size","_withModifiers","markAsRead","_component_Check","_hoisted_4","_hoisted_10","viewAllNotifications"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\components\\NotificationBell.vue"],"sourcesContent":["<template>\r\n  <el-badge :value=\"unreadCount\" :hidden=\"unreadCount === 0\" class=\"notification-badge\">\r\n    <el-popover\r\n      placement=\"bottom\"\r\n      :width=\"350\"\r\n      trigger=\"click\"\r\n      popper-class=\"notification-popover\"\r\n      @show=\"handlePopoverShow\"\r\n    >\r\n      <template #reference>\r\n        <el-button class=\"notification-bell\" :icon=\"Bell\" circle />\r\n      </template>\r\n      \r\n      <div class=\"notification-header\">\r\n        <h3>通知</h3>\r\n        <el-button v-if=\"hasUnread\" type=\"text\" @click=\"markAllAsRead\">全部标为已读</el-button>\r\n      </div>\r\n      \r\n      <el-divider />\r\n      \r\n      <div v-if=\"loading\" class=\"notification-loading\">\r\n        <el-icon class=\"is-loading\"><Loading /></el-icon>\r\n        <span>加载中...</span>\r\n      </div>\r\n      \r\n      <div v-else-if=\"notifications.length === 0\" class=\"notification-empty\">\r\n        <el-empty description=\"暂无通知\" />\r\n      </div>\r\n      \r\n      <el-scrollbar max-height=\"300px\">\r\n        <div v-for=\"notification in notifications\" :key=\"notification.id\" class=\"notification-item\">\r\n          <div \r\n            class=\"notification-content\" \r\n            :class=\"{ 'is-unread': !notification.is_read }\"\r\n            @click=\"handleNotificationClick(notification)\"\r\n          >\r\n            <div class=\"notification-icon\">\r\n              <el-icon v-if=\"notification.type === 'like'\"><Star /></el-icon>\r\n              <el-icon v-else-if=\"notification.type === 'comment'\"><ChatDotRound /></el-icon>\r\n              <el-icon v-else-if=\"notification.type === 'follow'\"><User /></el-icon>\r\n              <el-icon v-else><Bell /></el-icon>\r\n            </div>\r\n            <div class=\"notification-body\">\r\n              <div class=\"notification-text\">{{ notification.content }}</div>\r\n              <div class=\"notification-time\">{{ formatTime(notification.created_at) }}</div>\r\n            </div>\r\n            <div class=\"notification-actions\">\r\n              <el-button \r\n                v-if=\"!notification.is_read\" \r\n                size=\"small\" \r\n                circle \r\n                @click.stop=\"markAsRead(notification.id)\"\r\n              >\r\n                <el-icon><Check /></el-icon>\r\n              </el-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-scrollbar>\r\n      \r\n      <div class=\"notification-footer\">\r\n        <el-button type=\"text\" @click=\"viewAllNotifications\">查看全部通知</el-button>\r\n      </div>\r\n    </el-popover>\r\n  </el-badge>\r\n</template>\r\n\r\n<script>\r\nimport { computed, onMounted, ref } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\nimport { Bell, Star, ChatDotRound, User, Check, Loading } from '@element-plus/icons-vue'\r\nimport webSocketManager from '@/utils/websocket'\r\n\r\nexport default {\r\n  name: 'NotificationBell',\r\n  setup() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const loading = ref(false)\r\n    \r\n    // 从Vuex获取通知数据\r\n    const notifications = computed(() => store.state.notifications)\r\n    const unreadCount = computed(() => store.state.unreadNotificationCount)\r\n    const hasUnread = computed(() => unreadCount.value > 0)\r\n    \r\n    // 加载通知数据\r\n    const loadNotifications = async () => {\r\n      loading.value = true\r\n      try {\r\n        await store.dispatch('fetchNotifications')\r\n      } catch (error) {\r\n        console.error('加载通知失败:', error)\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n    \r\n    // 初始化WebSocket连接\r\n    const initWebSocket = () => {\r\n      if (store.getters.isLoggedIn) {\r\n        webSocketManager.initNotificationSocket()\r\n      }\r\n    }\r\n    \r\n    // 标记通知为已读\r\n    const markAsRead = async (notificationId) => {\r\n      try {\r\n        // 使用WebSocket标记已读\r\n        webSocketManager.markNotificationRead(notificationId)\r\n        \r\n        // 备用方案：使用API标记已读\r\n        await store.dispatch('markNotificationRead', notificationId)\r\n      } catch (error) {\r\n        console.error('标记通知已读失败:', error)\r\n      }\r\n    }\r\n    \r\n    // 标记所有通知为已读\r\n    const markAllAsRead = async () => {\r\n      try {\r\n        // 使用WebSocket标记所有已读\r\n        webSocketManager.markAllNotificationsRead()\r\n        \r\n        // 备用方案：使用API标记所有已读\r\n        await store.dispatch('markAllNotificationsRead')\r\n      } catch (error) {\r\n        console.error('标记所有通知已读失败:', error)\r\n      }\r\n    }\r\n    \r\n    // 处理通知点击\r\n    const handleNotificationClick = (notification) => {\r\n      // 如果未读，标记为已读\r\n      if (!notification.is_read) {\r\n        markAsRead(notification.id)\r\n      }\r\n      \r\n      // 根据通知类型跳转到相应页面\r\n      // 这里需要根据实际情况实现\r\n      // 例如：点赞通知跳转到帖子，评论通知跳转到评论，系统通知可能不跳转\r\n    }\r\n    \r\n    // 查看所有通知\r\n    const viewAllNotifications = () => {\r\n      router.push('/notifications')\r\n    }\r\n    \r\n    // 处理弹出层显示\r\n    const handlePopoverShow = () => {\r\n      loadNotifications()\r\n    }\r\n    \r\n    // 格式化时间\r\n    const formatTime = (timestamp) => {\r\n      const date = new Date(timestamp)\r\n      const now = new Date()\r\n      const diffMs = now - date\r\n      const diffSec = Math.floor(diffMs / 1000)\r\n      const diffMin = Math.floor(diffSec / 60)\r\n      const diffHour = Math.floor(diffMin / 60)\r\n      const diffDay = Math.floor(diffHour / 24)\r\n      \r\n      if (diffSec < 60) {\r\n        return '刚刚'\r\n      } else if (diffMin < 60) {\r\n        return `${diffMin}分钟前`\r\n      } else if (diffHour < 24) {\r\n        return `${diffHour}小时前`\r\n      } else if (diffDay < 30) {\r\n        return `${diffDay}天前`\r\n      } else {\r\n        return date.toLocaleDateString()\r\n      }\r\n    }\r\n    \r\n    onMounted(() => {\r\n      // 加载未读通知数量\r\n      store.dispatch('fetchUnreadNotificationCount')\r\n      \r\n      // 初始化WebSocket\r\n      initWebSocket()\r\n    })\r\n    \r\n    return {\r\n      notifications,\r\n      unreadCount,\r\n      hasUnread,\r\n      loading,\r\n      markAsRead,\r\n      markAllAsRead,\r\n      handleNotificationClick,\r\n      viewAllNotifications,\r\n      handlePopoverShow,\r\n      formatTime,\r\n      // 图标\r\n      Bell,\r\n      Star,\r\n      ChatDotRound,\r\n      User,\r\n      Check,\r\n      Loading\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.notification-badge {\r\n  margin-right: 15px;\r\n}\r\n\r\n.notification-bell {\r\n  font-size: 20px;\r\n  color: #606266;\r\n}\r\n\r\n.notification-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n}\r\n\r\n.notification-header h3 {\r\n  margin: 0;\r\n  font-size: 16px;\r\n}\r\n\r\n.notification-loading, .notification-empty {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100px;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.notification-item {\r\n  padding: 10px;\r\n  border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\n.notification-content {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  cursor: pointer;\r\n  padding: 5px;\r\n  border-radius: 4px;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.notification-content:hover {\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.notification-content.is-unread {\r\n  background-color: #ecf5ff;\r\n}\r\n\r\n.notification-icon {\r\n  margin-right: 10px;\r\n  font-size: 18px;\r\n  color: #409eff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 30px;\r\n  height: 30px;\r\n}\r\n\r\n.notification-body {\r\n  flex: 1;\r\n}\r\n\r\n.notification-text {\r\n  font-size: 14px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.notification-time {\r\n  font-size: 12px;\r\n  color: #909399;\r\n}\r\n\r\n.notification-actions {\r\n  margin-left: 10px;\r\n}\r\n\r\n.notification-footer {\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 10px 0;\r\n  border-top: 1px solid #f0f0f0;\r\n  margin-top: 10px;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}