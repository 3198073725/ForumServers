{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport request from '@/utils/request';\n\n// 是否启用调试日志\nvar DEBUG = false;\n\n// 自定义日志函数，可以通过DEBUG开关控制\nvar log = function log() {\n  if (DEBUG) {\n    var _console;\n    (_console = console).log.apply(_console, arguments);\n  }\n};\n\n// 获取评论列表\nexport function getCommentList(params) {\n  return request({\n    url: '/api/v1/comments/',\n    method: 'get',\n    params: params\n  });\n}\n\n// 获取帖子的评论列表\nexport function getPostComments(postId) {\n  var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  // 添加时间戳参数，避免浏览器缓存\n  var timestamp = forceRefresh ? \"&_t=\".concat(new Date().getTime()) : '';\n  log(\"\\u5F00\\u59CB\\u8BF7\\u6C42\\u5E16\\u5B50\\u8BC4\\u8BBAAPI\\uFF0CID: \".concat(postId, \", \\u5F3A\\u5236\\u5237\\u65B0: \").concat(forceRefresh));\n  return request({\n    url: \"/api/v1/comments/?post=\".concat(postId).concat(timestamp),\n    method: 'get'\n  }).then(function (response) {\n    log(\"\\u5E16\\u5B50\\u8BC4\\u8BBAAPI\\u54CD\\u5E94\\u6210\\u529F:\", response);\n\n    // 如果响应成功且有数据，直接返回\n    if (response && (response.code === 0 || response.status === 0) && response.data) {\n      return response;\n    }\n\n    // 如果响应本身就是数据对象或数组\n    if (response && (Array.isArray(response) || response.results && Array.isArray(response.results))) {\n      return {\n        code: 0,\n        status: 0,\n        data: response\n      };\n    }\n\n    // 如果响应不成功或没有数据，返回空数组\n    log('帖子评论API返回异常或空数据，返回空数组');\n    return {\n      code: 0,\n      status: 0,\n      data: {\n        results: [],\n        count: 0\n      }\n    };\n  })[\"catch\"](function (error) {\n    log(\"\\u83B7\\u53D6\\u5E16\\u5B50\\u8BC4\\u8BBA\\u5217\\u8868(ID: \".concat(postId, \")\\u5931\\u8D25\"), error);\n    // 返回空数据\n    return {\n      code: 0,\n      status: 0,\n      data: {\n        results: [],\n        count: 0\n      }\n    };\n  });\n}\n\n// 获取评论详情\nexport function getCommentDetail(id) {\n  return request({\n    url: \"/api/v1/comments/\".concat(id, \"/\"),\n    method: 'get'\n  });\n}\n\n// 创建评论\nexport function createComment(data) {\n  return request({\n    url: '/api/v1/comments/',\n    method: 'post',\n    data: data\n  });\n}\n\n// 回复评论\nexport function replyComment(postId, parentId, content) {\n  return request({\n    url: '/api/v1/comments/',\n    method: 'post',\n    data: {\n      post: postId,\n      parent: parentId,\n      content: content\n    }\n  });\n}\n\n// 更新评论\nexport function updateComment(id, data) {\n  return request({\n    url: \"/api/v1/comments/\".concat(id, \"/\"),\n    method: 'put',\n    data: data\n  });\n}\n\n// 删除评论\nexport function deleteComment(id) {\n  log(\"\\u51C6\\u5907\\u5220\\u9664\\u8BC4\\u8BBA\\uFF0CID: \".concat(id));\n  return request({\n    url: \"/api/v1/comments/\".concat(id, \"/\"),\n    method: 'delete'\n  }).then(function (response) {\n    log(\"\\u5220\\u9664\\u8BC4\\u8BBAAPI\\u54CD\\u5E94:\", response);\n    return response;\n  })[\"catch\"](function (error) {\n    log(\"\\u5220\\u9664\\u8BC4\\u8BBAAPI\\u9519\\u8BEF:\", error);\n    throw error;\n  });\n}","map":{"version":3,"names":["request","DEBUG","log","_console","console","apply","arguments","getCommentList","params","url","method","getPostComments","postId","forceRefresh","length","undefined","timestamp","concat","Date","getTime","then","response","code","status","data","Array","isArray","results","count","error","getCommentDetail","id","createComment","replyComment","parentId","content","post","parent","updateComment","deleteComment"],"sources":["H:/ForumServers/ForumFrontend/src/api/comment.js"],"sourcesContent":["import request from '@/utils/request'\n\n// 是否启用调试日志\nconst DEBUG = false;\n\n// 自定义日志函数，可以通过DEBUG开关控制\nconst log = (...args) => {\n  if (DEBUG) {\n    console.log(...args);\n  }\n};\n\n// 获取评论列表\nexport function getCommentList(params) {\n  return request({\n    url: '/api/v1/comments/',\n    method: 'get',\n    params\n  })\n}\n\n// 获取帖子的评论列表\nexport function getPostComments(postId, forceRefresh = false) {\n  // 添加时间戳参数，避免浏览器缓存\n  const timestamp = forceRefresh ? `&_t=${new Date().getTime()}` : ''\n  log(`开始请求帖子评论API，ID: ${postId}, 强制刷新: ${forceRefresh}`);\n  \n  return request({\n    url: `/api/v1/comments/?post=${postId}${timestamp}`,\n    method: 'get'\n  }).then(response => {\n    log(`帖子评论API响应成功:`, response);\n    \n    // 如果响应成功且有数据，直接返回\n    if (response && ((response.code === 0 || response.status === 0) && response.data)) {\n      return response;\n    }\n    \n    // 如果响应本身就是数据对象或数组\n    if (response && (Array.isArray(response) || \n                    (response.results && Array.isArray(response.results)))) {\n      return {\n        code: 0,\n        status: 0,\n        data: response\n      };\n    }\n    \n    // 如果响应不成功或没有数据，返回空数组\n    log('帖子评论API返回异常或空数据，返回空数组');\n    return {\n      code: 0,\n      status: 0,\n      data: {\n        results: [],\n        count: 0\n      }\n    };\n  }).catch(error => {\n    log(`获取帖子评论列表(ID: ${postId})失败`, error)\n    // 返回空数据\n    return {\n      code: 0,\n      status: 0,\n      data: {\n        results: [],\n        count: 0\n      }\n    }\n  })\n}\n\n// 获取评论详情\nexport function getCommentDetail(id) {\n  return request({\n    url: `/api/v1/comments/${id}/`,\n    method: 'get'\n  })\n}\n\n// 创建评论\nexport function createComment(data) {\n  return request({\n    url: '/api/v1/comments/',\n    method: 'post',\n    data\n  })\n}\n\n// 回复评论\nexport function replyComment(postId, parentId, content) {\n  return request({\n    url: '/api/v1/comments/',\n    method: 'post',\n    data: {\n      post: postId,\n      parent: parentId,\n      content\n    }\n  })\n}\n\n// 更新评论\nexport function updateComment(id, data) {\n  return request({\n    url: `/api/v1/comments/${id}/`,\n    method: 'put',\n    data\n  })\n}\n\n// 删除评论\nexport function deleteComment(id) {\n  log(`准备删除评论，ID: ${id}`)\n  return request({\n    url: `/api/v1/comments/${id}/`,\n    method: 'delete'\n  }).then(response => {\n    log(`删除评论API响应:`, response)\n    return response\n  }).catch(error => {\n    log(`删除评论API错误:`, error)\n    throw error\n  })\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}