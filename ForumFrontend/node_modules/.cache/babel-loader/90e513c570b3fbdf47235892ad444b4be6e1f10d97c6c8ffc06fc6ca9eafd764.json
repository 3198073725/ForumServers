{"ast":null,"code":"import _toConsumableArray from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"profile-container\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_3 = {\n  key: 1,\n  \"class\": \"user-info\"\n};\nvar _hoisted_4 = {\n  \"class\": \"avatar-container\"\n};\nvar _hoisted_5 = {\n  \"class\": \"username\"\n};\nvar _hoisted_6 = {\n  \"class\": \"user-meta\"\n};\nvar _hoisted_7 = {\n  \"class\": \"meta-item\"\n};\nvar _hoisted_8 = {\n  \"class\": \"meta-item\"\n};\nvar _hoisted_9 = {\n  \"class\": \"meta-item\"\n};\nvar _hoisted_10 = {\n  \"class\": \"meta-item\"\n};\nvar _hoisted_11 = {\n  \"class\": \"user-stats\"\n};\nvar _hoisted_12 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_13 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_14 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_15 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_16 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_17 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_18 = {\n  key: 0,\n  \"class\": \"user-actions\"\n};\nvar _hoisted_19 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_20 = {\n  key: 1,\n  \"class\": \"empty-container\"\n};\nvar _hoisted_21 = {\n  key: 2,\n  \"class\": \"post-list\"\n};\nvar _hoisted_22 = [\"onClick\"];\nvar _hoisted_23 = {\n  \"class\": \"post-title\"\n};\nvar _hoisted_24 = {\n  \"class\": \"post-meta\"\n};\nvar _hoisted_25 = {\n  \"class\": \"post-board\"\n};\nvar _hoisted_26 = {\n  \"class\": \"post-stats\"\n};\nvar _hoisted_27 = {\n  \"class\": \"post-time\"\n};\nvar _hoisted_28 = {\n  key: 0,\n  \"class\": \"pagination-container\"\n};\nvar _hoisted_29 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_30 = {\n  key: 1,\n  \"class\": \"empty-container\"\n};\nvar _hoisted_31 = {\n  key: 2,\n  \"class\": \"comment-list\"\n};\nvar _hoisted_32 = {\n  \"class\": \"comment-content\"\n};\nvar _hoisted_33 = {\n  \"class\": \"comment-meta\"\n};\nvar _hoisted_34 = [\"onClick\"];\nvar _hoisted_35 = {\n  \"class\": \"comment-time\"\n};\nvar _hoisted_36 = {\n  key: 0,\n  \"class\": \"pagination-container\"\n};\nvar _hoisted_37 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_38 = {\n  key: 1,\n  \"class\": \"empty-container\"\n};\nvar _hoisted_39 = {\n  key: 2,\n  \"class\": \"favorite-list\"\n};\nvar _hoisted_40 = [\"onClick\"];\nvar _hoisted_41 = {\n  \"class\": \"post-title\"\n};\nvar _hoisted_42 = {\n  \"class\": \"post-meta\"\n};\nvar _hoisted_43 = {\n  \"class\": \"post-author\"\n};\nvar _hoisted_44 = {\n  \"class\": \"post-board\"\n};\nvar _hoisted_45 = {\n  \"class\": \"post-stats\"\n};\nvar _hoisted_46 = {\n  \"class\": \"post-time\"\n};\nvar _hoisted_47 = {\n  key: 0,\n  \"class\": \"pagination-container\"\n};\nvar _hoisted_48 = {\n  \"class\": \"avatar-upload-container\"\n};\nvar _hoisted_49 = {\n  \"class\": \"avatar-preview\"\n};\nvar _hoisted_50 = {\n  \"class\": \"upload-options\"\n};\nvar _hoisted_51 = {\n  \"class\": \"url-input\"\n};\nvar _hoisted_52 = {\n  \"class\": \"dialog-footer\"\n};\nvar _hoisted_53 = {\n  \"class\": \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  var _component_el_avatar = _resolveComponent(\"el-avatar\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _component_el_col = _resolveComponent(\"el-col\");\n  var _component_el_empty = _resolveComponent(\"el-empty\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_el_pagination = _resolveComponent(\"el-pagination\");\n  var _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  var _component_el_tabs = _resolveComponent(\"el-tabs\");\n  var _component_el_row = _resolveComponent(\"el-row\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_upload = _resolveComponent(\"el-upload\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_row, {\n    gutter: 20\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createCommentVNode(\" 左侧用户信息卡片 \"), _createVNode(_component_el_col, {\n        span: 6\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_card, {\n            \"class\": \"profile-card\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_ctx.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_skeleton, {\n                rows: 5,\n                animated: \"\"\n              })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_avatar, {\n                size: 100,\n                src: _ctx.userProfile.avatar_url || ''\n              }, {\n                \"default\": _withCtx(function () {\n                  var _ctx$userProfile$nick, _ctx$userProfile$user;\n                  return [_createTextVNode(_toDisplayString(((_ctx$userProfile$nick = _ctx.userProfile.nickname) === null || _ctx$userProfile$nick === void 0 ? void 0 : _ctx$userProfile$nick.charAt(0)) || ((_ctx$userProfile$user = _ctx.userProfile.username) === null || _ctx$userProfile$user === void 0 ? void 0 : _ctx$userProfile$user.charAt(0)) || 'U'), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"src\"])]), _createElementVNode(\"h2\", _hoisted_5, _toDisplayString(_ctx.userProfile.nickname || _ctx.userProfile.username), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_cache[13] || (_cache[13] = _createElementVNode(\"i\", {\n                \"class\": \"el-icon-user\"\n              }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, _toDisplayString(_ctx.userProfile.username), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_8, [_cache[14] || (_cache[14] = _createElementVNode(\"i\", {\n                \"class\": \"el-icon-message\"\n              }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, _toDisplayString(_ctx.userProfile.email), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_cache[15] || (_cache[15] = _createElementVNode(\"i\", {\n                \"class\": \"el-icon-date\"\n              }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, \"注册于 \" + _toDisplayString($setup.formatDate(_ctx.userProfile.created_at)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_10, [_cache[16] || (_cache[16] = _createElementVNode(\"i\", {\n                \"class\": \"el-icon-time\"\n              }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, \"最后登录 \" + _toDisplayString($setup.formatDate(_ctx.userProfile.last_login)), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, _toDisplayString(_ctx.userStats.posts_count || 0), 1 /* TEXT */), _cache[17] || (_cache[17] = _createElementVNode(\"div\", {\n                \"class\": \"stat-label\"\n              }, \"帖子\", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, _toDisplayString(_ctx.userStats.comments_count || 0), 1 /* TEXT */), _cache[18] || (_cache[18] = _createElementVNode(\"div\", {\n                \"class\": \"stat-label\"\n              }, \"评论\", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, _toDisplayString(_ctx.userStats.favorites_count || 0), 1 /* TEXT */), _cache[19] || (_cache[19] = _createElementVNode(\"div\", {\n                \"class\": \"stat-label\"\n              }, \"收藏\", -1 /* HOISTED */))])]), $setup.isCurrentUser ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createVNode(_component_el_button, {\n                type: \"primary\",\n                onClick: $setup.showEditProfileDialog\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[20] || (_cache[20] = [_createTextVNode(\"编辑资料\")]);\n                }),\n                _: 1 /* STABLE */,\n                __: [20]\n              }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n                onClick: $setup.showChangePasswordDialog\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[21] || (_cache[21] = [_createTextVNode(\"修改密码\")]);\n                }),\n                _: 1 /* STABLE */,\n                __: [21]\n              }, 8 /* PROPS */, [\"onClick\"])])) : _createCommentVNode(\"v-if\", true)]))];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 右侧内容区域 \"), _createVNode(_component_el_col, {\n        span: 18\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_card, {\n            \"class\": \"content-card\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_tabs, {\n                modelValue: _ctx.activeTab,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                  return _ctx.activeTab = $event;\n                }),\n                onTabClick: $setup.handleTabClick\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_tab_pane, {\n                    label: \"我的帖子\",\n                    name: \"posts\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_ctx.postsLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_createVNode(_component_el_skeleton, {\n                        rows: 5,\n                        animated: \"\"\n                      })])) : _ctx.posts.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [_createVNode(_component_el_empty, {\n                        description: \"暂无帖子\"\n                      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.posts, function (post) {\n                        return _openBlock(), _createElementBlock(\"div\", {\n                          key: post.id,\n                          \"class\": \"post-item\",\n                          onClick: function onClick($event) {\n                            return $setup.viewPost(post);\n                          }\n                        }, [_createElementVNode(\"div\", _hoisted_23, [post.is_pinned ? (_openBlock(), _createBlock(_component_el_tag, {\n                          key: 0,\n                          size: \"mini\",\n                          type: \"danger\"\n                        }, {\n                          \"default\": _withCtx(function () {\n                            return _toConsumableArray(_cache[22] || (_cache[22] = [_createTextVNode(\"置顶\")]));\n                          }),\n                          _: 1 /* STABLE */,\n                          __: [22]\n                        })) : _createCommentVNode(\"v-if\", true), post.is_featured ? (_openBlock(), _createBlock(_component_el_tag, {\n                          key: 1,\n                          size: \"mini\",\n                          type: \"success\"\n                        }, {\n                          \"default\": _withCtx(function () {\n                            return _toConsumableArray(_cache[23] || (_cache[23] = [_createTextVNode(\"精华\")]));\n                          }),\n                          _: 1 /* STABLE */,\n                          __: [23]\n                        })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"span\", null, _toDisplayString(post.title), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, [_cache[24] || (_cache[24] = _createElementVNode(\"i\", {\n                          \"class\": \"el-icon-s-grid\"\n                        }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, _toDisplayString(post.board_name), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"span\", null, [_cache[25] || (_cache[25] = _createElementVNode(\"i\", {\n                          \"class\": \"el-icon-view\"\n                        }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(post.views), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_cache[26] || (_cache[26] = _createElementVNode(\"i\", {\n                          \"class\": \"el-icon-star-on\"\n                        }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(post.likes_count), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_cache[27] || (_cache[27] = _createElementVNode(\"i\", {\n                          \"class\": \"el-icon-chat-dot-round\"\n                        }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(post.comments_count), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_27, _toDisplayString($setup.formatDate(post.created_at)), 1 /* TEXT */)])], 8 /* PROPS */, _hoisted_22);\n                      }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 分页 \"), _ctx.posts.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_28, [_createVNode(_component_el_pagination, {\n                        background: \"\",\n                        layout: \"prev, pager, next\",\n                        total: _ctx.postsTotal,\n                        \"page-size\": _ctx.postsQuery.limit,\n                        \"current-page\": _ctx.postsQuery.page,\n                        \"onUpdate:currentPage\": _cache[0] || (_cache[0] = function ($event) {\n                          return _ctx.postsQuery.page = $event;\n                        }),\n                        onCurrentChange: $setup.handlePostsPageChange\n                      }, null, 8 /* PROPS */, [\"total\", \"page-size\", \"current-page\", \"onCurrentChange\"])])) : _createCommentVNode(\"v-if\", true)]))];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_tab_pane, {\n                    label: \"我的评论\",\n                    name: \"comments\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_ctx.commentsLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [_createVNode(_component_el_skeleton, {\n                        rows: 5,\n                        animated: \"\"\n                      })])) : _ctx.comments.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_30, [_createVNode(_component_el_empty, {\n                        description: \"暂无评论\"\n                      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_31, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.comments, function (comment) {\n                        return _openBlock(), _createElementBlock(\"div\", {\n                          key: comment.id,\n                          \"class\": \"comment-item\"\n                        }, [_createElementVNode(\"div\", _hoisted_32, _toDisplayString(comment.content), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_33, [_createElementVNode(\"div\", {\n                          \"class\": \"comment-post\",\n                          onClick: function onClick($event) {\n                            return $setup.viewPost({\n                              id: comment.post\n                            });\n                          }\n                        }, _toConsumableArray(_cache[28] || (_cache[28] = [_createElementVNode(\"i\", {\n                          \"class\": \"el-icon-document\"\n                        }, null, -1 /* HOISTED */), _createElementVNode(\"span\", null, \"查看原帖\", -1 /* HOISTED */)])), 8 /* PROPS */, _hoisted_34), _createElementVNode(\"div\", _hoisted_35, _toDisplayString($setup.formatDate(comment.created_at)), 1 /* TEXT */)])]);\n                      }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 分页 \"), _ctx.comments.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_36, [_createVNode(_component_el_pagination, {\n                        background: \"\",\n                        layout: \"prev, pager, next\",\n                        total: _ctx.commentsTotal,\n                        \"page-size\": _ctx.commentsQuery.limit,\n                        \"current-page\": _ctx.commentsQuery.page,\n                        \"onUpdate:currentPage\": _cache[1] || (_cache[1] = function ($event) {\n                          return _ctx.commentsQuery.page = $event;\n                        }),\n                        onCurrentChange: $setup.handleCommentsPageChange\n                      }, null, 8 /* PROPS */, [\"total\", \"page-size\", \"current-page\", \"onCurrentChange\"])])) : _createCommentVNode(\"v-if\", true)]))];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_tab_pane, {\n                    label: \"我的收藏\",\n                    name: \"favorites\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_ctx.favoritesLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_37, [_createVNode(_component_el_skeleton, {\n                        rows: 5,\n                        animated: \"\"\n                      })])) : _ctx.favorites.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_38, [_createVNode(_component_el_empty, {\n                        description: \"暂无收藏\"\n                      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_39, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.favorites, function (favorite) {\n                        return _openBlock(), _createElementBlock(\"div\", {\n                          key: favorite.id,\n                          \"class\": \"favorite-item\",\n                          onClick: function onClick($event) {\n                            return $setup.viewPost(favorite.post);\n                          }\n                        }, [_createElementVNode(\"div\", _hoisted_41, [favorite.post.is_pinned ? (_openBlock(), _createBlock(_component_el_tag, {\n                          key: 0,\n                          size: \"mini\",\n                          type: \"danger\"\n                        }, {\n                          \"default\": _withCtx(function () {\n                            return _toConsumableArray(_cache[29] || (_cache[29] = [_createTextVNode(\"置顶\")]));\n                          }),\n                          _: 1 /* STABLE */,\n                          __: [29]\n                        })) : _createCommentVNode(\"v-if\", true), favorite.post.is_featured ? (_openBlock(), _createBlock(_component_el_tag, {\n                          key: 1,\n                          size: \"mini\",\n                          type: \"success\"\n                        }, {\n                          \"default\": _withCtx(function () {\n                            return _toConsumableArray(_cache[30] || (_cache[30] = [_createTextVNode(\"精华\")]));\n                          }),\n                          _: 1 /* STABLE */,\n                          __: [30]\n                        })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"span\", null, _toDisplayString(favorite.post.title), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_42, [_createElementVNode(\"div\", _hoisted_43, [_cache[31] || (_cache[31] = _createElementVNode(\"i\", {\n                          \"class\": \"el-icon-user\"\n                        }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, _toDisplayString(favorite.post.user.nickname || favorite.post.user.username), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_44, [_cache[32] || (_cache[32] = _createElementVNode(\"i\", {\n                          \"class\": \"el-icon-s-grid\"\n                        }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, _toDisplayString(favorite.post.board_name), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_45, [_createElementVNode(\"span\", null, [_cache[33] || (_cache[33] = _createElementVNode(\"i\", {\n                          \"class\": \"el-icon-view\"\n                        }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(favorite.post.views), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_cache[34] || (_cache[34] = _createElementVNode(\"i\", {\n                          \"class\": \"el-icon-star-on\"\n                        }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(favorite.post.likes_count), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_cache[35] || (_cache[35] = _createElementVNode(\"i\", {\n                          \"class\": \"el-icon-chat-dot-round\"\n                        }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(favorite.post.comments_count), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_46, _toDisplayString($setup.formatDate(favorite.created_at)), 1 /* TEXT */)])], 8 /* PROPS */, _hoisted_40);\n                      }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 分页 \"), _ctx.favorites.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_47, [_createVNode(_component_el_pagination, {\n                        background: \"\",\n                        layout: \"prev, pager, next\",\n                        total: _ctx.favoritesTotal,\n                        \"page-size\": _ctx.favoritesQuery.limit,\n                        \"current-page\": _ctx.favoritesQuery.page,\n                        \"onUpdate:currentPage\": _cache[2] || (_cache[2] = function ($event) {\n                          return _ctx.favoritesQuery.page = $event;\n                        }),\n                        onCurrentChange: $setup.handleFavoritesPageChange\n                      }, null, 8 /* PROPS */, [\"total\", \"page-size\", \"current-page\", \"onCurrentChange\"])])) : _createCommentVNode(\"v-if\", true)]))];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"modelValue\", \"onTabClick\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      })];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 编辑资料对话框 \"), _createVNode(_component_el_dialog, {\n    title: \"编辑个人资料\",\n    modelValue: _ctx.editProfileDialogVisible,\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = function ($event) {\n      return _ctx.editProfileDialogVisible = $event;\n    }),\n    width: \"500px\",\n    \"destroy-on-close\": \"\"\n  }, {\n    footer: _withCtx(function () {\n      return [_createElementVNode(\"span\", _hoisted_52, [_createVNode(_component_el_button, {\n        onClick: _cache[6] || (_cache[6] = function ($event) {\n          return _ctx.editProfileDialogVisible = false;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[38] || (_cache[38] = [_createTextVNode(\"取 消\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [38]\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.submitProfileForm,\n        loading: _ctx.submitting\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[39] || (_cache[39] = [_createTextVNode(\"确 定\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [39]\n      }, 8 /* PROPS */, [\"onClick\", \"loading\"])])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        ref: \"profileForm\",\n        model: _ctx.profileForm,\n        rules: _ctx.profileRules,\n        \"label-width\": \"80px\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"昵称\",\n            prop: \"nickname\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: _ctx.profileForm.nickname,\n                \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n                  return _ctx.profileForm.nickname = $event;\n                }),\n                placeholder: \"请输入昵称\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"头像\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createElementVNode(\"div\", _hoisted_48, [_createElementVNode(\"div\", _hoisted_49, [_createVNode(_component_el_avatar, {\n                size: 80,\n                src: _ctx.profileForm.avatar_url || ''\n              }, {\n                \"default\": _withCtx(function () {\n                  var _ctx$profileForm$nick, _ctx$userProfile$user2;\n                  return [_createTextVNode(_toDisplayString(((_ctx$profileForm$nick = _ctx.profileForm.nickname) === null || _ctx$profileForm$nick === void 0 ? void 0 : _ctx$profileForm$nick.charAt(0)) || ((_ctx$userProfile$user2 = _ctx.userProfile.username) === null || _ctx$userProfile$user2 === void 0 ? void 0 : _ctx$userProfile$user2.charAt(0)) || 'U'), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"src\"])]), _createElementVNode(\"div\", _hoisted_50, [_createVNode(_component_el_upload, {\n                \"class\": \"avatar-uploader\",\n                action: \"#\",\n                \"http-request\": $setup.handleAvatarUpload,\n                \"show-file-list\": false,\n                \"before-upload\": $setup.beforeAvatarUpload\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_button, {\n                    type: \"primary\",\n                    size: \"small\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return _cache[36] || (_cache[36] = [_createTextVNode(\"上传头像\")]);\n                    }),\n                    _: 1 /* STABLE */,\n                    __: [36]\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"http-request\", \"before-upload\"]), _createElementVNode(\"div\", _hoisted_51, [_cache[37] || (_cache[37] = _createElementVNode(\"p\", {\n                \"class\": \"hint-text\"\n              }, \"或者直接输入图片URL：\", -1 /* HOISTED */)), _createVNode(_component_el_input, {\n                modelValue: _ctx.profileForm.avatar_url,\n                \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n                  return _ctx.profileForm.avatar_url = $event;\n                }),\n                placeholder: \"请输入头像URL\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])])])])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\", \"rules\"])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 修改密码对话框 \"), _createVNode(_component_el_dialog, {\n    title: \"修改密码\",\n    visible: _ctx.changePasswordDialogVisible,\n    \"onUpdate:visible\": _cache[12] || (_cache[12] = function ($event) {\n      return _ctx.changePasswordDialogVisible = $event;\n    }),\n    width: \"500px\"\n  }, {\n    footer: _withCtx(function () {\n      return [_createElementVNode(\"span\", _hoisted_53, [_createVNode(_component_el_button, {\n        onClick: _cache[11] || (_cache[11] = function ($event) {\n          return _ctx.changePasswordDialogVisible = false;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[40] || (_cache[40] = [_createTextVNode(\"取 消\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [40]\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.submitPasswordForm,\n        loading: _ctx.submitting\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[41] || (_cache[41] = [_createTextVNode(\"确 定\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [41]\n      }, 8 /* PROPS */, [\"onClick\", \"loading\"])])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        ref: \"passwordForm\",\n        model: _ctx.passwordForm,\n        rules: _ctx.passwordRules,\n        \"label-width\": \"100px\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"当前密码\",\n            prop: \"old_password\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: _ctx.passwordForm.old_password,\n                \"onUpdate:modelValue\": _cache[8] || (_cache[8] = function ($event) {\n                  return _ctx.passwordForm.old_password = $event;\n                }),\n                type: \"password\",\n                placeholder: \"请输入当前密码\",\n                \"show-password\": \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"新密码\",\n            prop: \"new_password\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: _ctx.passwordForm.new_password,\n                \"onUpdate:modelValue\": _cache[9] || (_cache[9] = function ($event) {\n                  return _ctx.passwordForm.new_password = $event;\n                }),\n                type: \"password\",\n                placeholder: \"请输入新密码\",\n                \"show-password\": \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"确认新密码\",\n            prop: \"confirm_password\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: _ctx.passwordForm.confirm_password,\n                \"onUpdate:modelValue\": _cache[10] || (_cache[10] = function ($event) {\n                  return _ctx.passwordForm.confirm_password = $event;\n                }),\n                type: \"password\",\n                placeholder: \"请再次输入新密码\",\n                \"show-password\": \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\", \"rules\"])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\"])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createVNode","_component_el_row","gutter","_withCtx","_createCommentVNode","_component_el_col","span","_component_el_card","_ctx","loading","_hoisted_2","_component_el_skeleton","rows","animated","_hoisted_3","_createElementVNode","_hoisted_4","_component_el_avatar","size","src","userProfile","avatar_url","_ctx$userProfile$nick","_ctx$userProfile$user","_createTextVNode","_toDisplayString","nickname","charAt","username","_","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","email","_hoisted_9","$setup","formatDate","created_at","_hoisted_10","last_login","_hoisted_11","_hoisted_12","_hoisted_13","userStats","posts_count","_hoisted_14","_hoisted_15","comments_count","_hoisted_16","_hoisted_17","favorites_count","isCurrentUser","_hoisted_18","_component_el_button","type","onClick","showEditProfileDialog","_cache","__","showChangePasswordDialog","_component_el_tabs","modelValue","activeTab","$event","onTabClick","handleTabClick","_component_el_tab_pane","label","name","postsLoading","_hoisted_19","posts","length","_hoisted_20","_component_el_empty","description","_hoisted_21","_Fragment","_renderList","post","id","viewPost","_hoisted_23","is_pinned","_createBlock","_component_el_tag","_toConsumableArray","is_featured","title","_hoisted_24","_hoisted_25","board_name","_hoisted_26","views","likes_count","_hoisted_27","_hoisted_22","_hoisted_28","_component_el_pagination","background","layout","total","postsTotal","postsQuery","limit","page","onCurrentChange","handlePostsPageChange","commentsLoading","_hoisted_29","comments","_hoisted_30","_hoisted_31","comment","_hoisted_32","content","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","commentsTotal","commentsQuery","handleCommentsPageChange","favoritesLoading","_hoisted_37","favorites","_hoisted_38","_hoisted_39","favorite","_hoisted_41","_hoisted_42","_hoisted_43","user","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_40","_hoisted_47","favoritesTotal","favoritesQuery","handleFavoritesPageChange","_component_el_dialog","editProfileDialogVisible","width","footer","_hoisted_52","submitProfileForm","submitting","_component_el_form","ref","model","profileForm","rules","profileRules","_component_el_form_item","prop","_component_el_input","placeholder","_hoisted_48","_hoisted_49","_ctx$profileForm$nick","_ctx$userProfile$user2","_hoisted_50","_component_el_upload","action","handleAvatarUpload","beforeAvatarUpload","_hoisted_51","visible","changePasswordDialogVisible","_hoisted_53","submitPasswordForm","passwordForm","passwordRules","old_password","new_password","confirm_password"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\user\\Profile.vue"],"sourcesContent":["<template>\n  <div class=\"profile-container\">\n    <el-row :gutter=\"20\">\n      <!-- 左侧用户信息卡片 -->\n      <el-col :span=\"6\">\n        <el-card class=\"profile-card\">\n          <div v-if=\"loading\" class=\"loading-container\">\n            <el-skeleton :rows=\"5\" animated />\n          </div>\n          <div v-else class=\"user-info\">\n            <div class=\"avatar-container\">\n              <el-avatar :size=\"100\" :src=\"userProfile.avatar_url || ''\">\n                {{ userProfile.nickname?.charAt(0) || userProfile.username?.charAt(0) || 'U' }}\n              </el-avatar>\n            </div>\n            <h2 class=\"username\">{{ userProfile.nickname || userProfile.username }}</h2>\n            <div class=\"user-meta\">\n              <div class=\"meta-item\">\n                <i class=\"el-icon-user\"></i>\n                <span>{{ userProfile.username }}</span>\n              </div>\n              <div class=\"meta-item\">\n                <i class=\"el-icon-message\"></i>\n                <span>{{ userProfile.email }}</span>\n              </div>\n              <div class=\"meta-item\">\n                <i class=\"el-icon-date\"></i>\n                <span>注册于 {{ formatDate(userProfile.created_at) }}</span>\n              </div>\n              <div class=\"meta-item\">\n                <i class=\"el-icon-time\"></i>\n                <span>最后登录 {{ formatDate(userProfile.last_login) }}</span>\n              </div>\n            </div>\n\n            <div class=\"user-stats\">\n              <div class=\"stat-item\">\n                <div class=\"stat-value\">{{ userStats.posts_count || 0 }}</div>\n                <div class=\"stat-label\">帖子</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-value\">{{ userStats.comments_count || 0 }}</div>\n                <div class=\"stat-label\">评论</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-value\">{{ userStats.favorites_count || 0 }}</div>\n                <div class=\"stat-label\">收藏</div>\n              </div>\n            </div>\n\n            <div v-if=\"isCurrentUser\" class=\"user-actions\">\n              <el-button type=\"primary\" @click=\"showEditProfileDialog\">编辑资料</el-button>\n              <el-button @click=\"showChangePasswordDialog\">修改密码</el-button>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n\n      <!-- 右侧内容区域 -->\n      <el-col :span=\"18\">\n        <el-card class=\"content-card\">\n          <el-tabs v-model=\"activeTab\" @tab-click=\"handleTabClick\">\n            <el-tab-pane label=\"我的帖子\" name=\"posts\">\n              <div v-if=\"postsLoading\" class=\"loading-container\">\n                <el-skeleton :rows=\"5\" animated />\n              </div>\n              <div v-else-if=\"posts.length === 0\" class=\"empty-container\">\n                <el-empty description=\"暂无帖子\" />\n              </div>\n              <div v-else class=\"post-list\">\n                <div\n                  v-for=\"post in posts\"\n                  :key=\"post.id\"\n                  class=\"post-item\"\n                  @click=\"viewPost(post)\"\n                >\n                  <div class=\"post-title\">\n                    <el-tag v-if=\"post.is_pinned\" size=\"mini\" type=\"danger\">置顶</el-tag>\n                    <el-tag v-if=\"post.is_featured\" size=\"mini\" type=\"success\">精华</el-tag>\n                    <span>{{ post.title }}</span>\n                  </div>\n                  <div class=\"post-meta\">\n                    <div class=\"post-board\">\n                      <i class=\"el-icon-s-grid\"></i>\n                      <span>{{ post.board_name }}</span>\n                    </div>\n                    <div class=\"post-stats\">\n                      <span><i class=\"el-icon-view\"></i> {{ post.views }}</span>\n                      <span><i class=\"el-icon-star-on\"></i> {{ post.likes_count }}</span>\n                      <span><i class=\"el-icon-chat-dot-round\"></i> {{ post.comments_count }}</span>\n                    </div>\n                    <div class=\"post-time\">{{ formatDate(post.created_at) }}</div>\n                  </div>\n                </div>\n\n                <!-- 分页 -->\n                <div v-if=\"posts.length > 0\" class=\"pagination-container\">\n                  <el-pagination\n                    background\n                    layout=\"prev, pager, next\"\n                    :total=\"postsTotal\"\n                    :page-size=\"postsQuery.limit\"\n                    v-model:current-page=\"postsQuery.page\"\n                    @current-change=\"handlePostsPageChange\"\n                  >\n                  </el-pagination>\n                </div>\n              </div>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"我的评论\" name=\"comments\">\n              <div v-if=\"commentsLoading\" class=\"loading-container\">\n                <el-skeleton :rows=\"5\" animated />\n              </div>\n              <div v-else-if=\"comments.length === 0\" class=\"empty-container\">\n                <el-empty description=\"暂无评论\" />\n              </div>\n              <div v-else class=\"comment-list\">\n                <div\n                  v-for=\"comment in comments\"\n                  :key=\"comment.id\"\n                  class=\"comment-item\"\n                >\n                  <div class=\"comment-content\">{{ comment.content }}</div>\n                  <div class=\"comment-meta\">\n                    <div class=\"comment-post\" @click=\"viewPost({ id: comment.post })\">\n                      <i class=\"el-icon-document\"></i>\n                      <span>查看原帖</span>\n                    </div>\n                    <div class=\"comment-time\">{{ formatDate(comment.created_at) }}</div>\n                  </div>\n                </div>\n\n                <!-- 分页 -->\n                <div v-if=\"comments.length > 0\" class=\"pagination-container\">\n                  <el-pagination\n                    background\n                    layout=\"prev, pager, next\"\n                    :total=\"commentsTotal\"\n                    :page-size=\"commentsQuery.limit\"\n                    v-model:current-page=\"commentsQuery.page\"\n                    @current-change=\"handleCommentsPageChange\"\n                  >\n                  </el-pagination>\n                </div>\n              </div>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"我的收藏\" name=\"favorites\">\n              <div v-if=\"favoritesLoading\" class=\"loading-container\">\n                <el-skeleton :rows=\"5\" animated />\n              </div>\n              <div v-else-if=\"favorites.length === 0\" class=\"empty-container\">\n                <el-empty description=\"暂无收藏\" />\n              </div>\n              <div v-else class=\"favorite-list\">\n                <div\n                  v-for=\"favorite in favorites\"\n                  :key=\"favorite.id\"\n                  class=\"favorite-item\"\n                  @click=\"viewPost(favorite.post)\"\n                >\n                  <div class=\"post-title\">\n                    <el-tag v-if=\"favorite.post.is_pinned\" size=\"mini\" type=\"danger\">置顶</el-tag>\n                    <el-tag v-if=\"favorite.post.is_featured\" size=\"mini\" type=\"success\">精华</el-tag>\n                    <span>{{ favorite.post.title }}</span>\n                  </div>\n                  <div class=\"post-meta\">\n                    <div class=\"post-author\">\n                      <i class=\"el-icon-user\"></i>\n                      <span>{{ favorite.post.user.nickname || favorite.post.user.username }}</span>\n                    </div>\n                    <div class=\"post-board\">\n                      <i class=\"el-icon-s-grid\"></i>\n                      <span>{{ favorite.post.board_name }}</span>\n                    </div>\n                    <div class=\"post-stats\">\n                      <span><i class=\"el-icon-view\"></i> {{ favorite.post.views }}</span>\n                      <span><i class=\"el-icon-star-on\"></i> {{ favorite.post.likes_count }}</span>\n                      <span><i class=\"el-icon-chat-dot-round\"></i> {{ favorite.post.comments_count }}</span>\n                    </div>\n                    <div class=\"post-time\">{{ formatDate(favorite.created_at) }}</div>\n                  </div>\n                </div>\n\n                <!-- 分页 -->\n                <div v-if=\"favorites.length > 0\" class=\"pagination-container\">\n                  <el-pagination\n                    background\n                    layout=\"prev, pager, next\"\n                    :total=\"favoritesTotal\"\n                    :page-size=\"favoritesQuery.limit\"\n                    v-model:current-page=\"favoritesQuery.page\"\n                    @current-change=\"handleFavoritesPageChange\"\n                  >\n                  </el-pagination>\n                </div>\n              </div>\n            </el-tab-pane>\n          </el-tabs>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 编辑资料对话框 -->\n    <el-dialog\n      title=\"编辑个人资料\"\n      v-model=\"editProfileDialogVisible\"\n      width=\"500px\"\n      destroy-on-close\n    >\n      <el-form\n        ref=\"profileForm\"\n        :model=\"profileForm\"\n        :rules=\"profileRules\"\n        label-width=\"80px\"\n      >\n        <el-form-item label=\"昵称\" prop=\"nickname\">\n          <el-input v-model=\"profileForm.nickname\" placeholder=\"请输入昵称\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"头像\">\n          <div class=\"avatar-upload-container\">\n            <div class=\"avatar-preview\">\n              <el-avatar :size=\"80\" :src=\"profileForm.avatar_url || ''\">\n                {{ profileForm.nickname?.charAt(0) || userProfile.username?.charAt(0) || 'U' }}\n              </el-avatar>\n            </div>\n            <div class=\"upload-options\">\n              <el-upload\n                class=\"avatar-uploader\"\n                action=\"#\"\n                :http-request=\"handleAvatarUpload\"\n                :show-file-list=\"false\"\n                :before-upload=\"beforeAvatarUpload\"\n              >\n                <el-button type=\"primary\" size=\"small\">上传头像</el-button>\n              </el-upload>\n              <div class=\"url-input\">\n                <p class=\"hint-text\">或者直接输入图片URL：</p>\n                <el-input v-model=\"profileForm.avatar_url\" placeholder=\"请输入头像URL\"></el-input>\n              </div>\n            </div>\n          </div>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"editProfileDialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitProfileForm\" :loading=\"submitting\">确 定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n\n    <!-- 修改密码对话框 -->\n    <el-dialog\n      title=\"修改密码\"\n      v-model:visible=\"changePasswordDialogVisible\"\n      width=\"500px\"\n    >\n      <el-form\n        ref=\"passwordForm\"\n        :model=\"passwordForm\"\n        :rules=\"passwordRules\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"当前密码\" prop=\"old_password\">\n          <el-input\n            v-model=\"passwordForm.old_password\"\n            type=\"password\"\n            placeholder=\"请输入当前密码\"\n            show-password\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"新密码\" prop=\"new_password\">\n          <el-input\n            v-model=\"passwordForm.new_password\"\n            type=\"password\"\n            placeholder=\"请输入新密码\"\n            show-password\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"确认新密码\" prop=\"confirm_password\">\n          <el-input\n            v-model=\"passwordForm.confirm_password\"\n            type=\"password\"\n            placeholder=\"请再次输入新密码\"\n            show-password\n          ></el-input>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"changePasswordDialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitPasswordForm\" :loading=\"submitting\">确 定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { computed, onMounted, toRefs, reactive } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { ElMessage } from 'element-plus'\nimport { formatDateTime } from '@/utils/index'\nimport {\n  getUserProfile,\n  getUserById,\n  updateUserProfile,\n  getUserPosts,\n  getUserComments,\n  getUserFavorites,\n  changePassword,\n  uploadAvatar\n} from '@/api/profile'\n\n// 格式化日期函数\nconst formatDate = (date) => {\n  return formatDateTime(date)\n}\n\nexport default {\n  name: 'UserProfile',\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n    const store = useStore()\n\n    // 状态\n    const state = reactive({\n      loading: false,\n      userProfile: {},\n      userStats: {\n        posts_count: 0,\n        comments_count: 0,\n        favorites_count: 0\n      },\n      activeTab: 'posts',\n\n      // 帖子相关\n      postsLoading: false,\n      posts: [],\n      postsTotal: 0,\n      postsQuery: {\n        page: 1,\n        limit: 10\n      },\n\n      // 评论相关\n      commentsLoading: false,\n      comments: [],\n      commentsTotal: 0,\n      commentsQuery: {\n        page: 1,\n        limit: 10\n      },\n\n      // 收藏相关\n      favoritesLoading: false,\n      favorites: [],\n      favoritesTotal: 0,\n      favoritesQuery: {\n        page: 1,\n        limit: 10\n      },\n\n      // 编辑资料相关\n      editProfileDialogVisible: false,\n      profileForm: {\n        nickname: '',\n        avatar_url: ''\n      },\n      profileRules: {\n        nickname: [\n          { max: 50, message: '昵称不能超过50个字符', trigger: 'blur' }\n        ]\n      },\n      uploadHeaders: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      },\n      submitting: false,\n      imageUploading: false,\n\n      // 修改密码相关\n      changePasswordDialogVisible: false,\n      passwordForm: {\n        old_password: '',\n        new_password: '',\n        confirm_password: ''\n      },\n      passwordRules: {\n        old_password: [\n          { required: true, message: '请输入当前密码', trigger: 'blur' }\n        ],\n        new_password: [\n          { required: true, message: '请输入新密码', trigger: 'blur' },\n          { min: 6, message: '密码长度不能少于6个字符', trigger: 'blur' }\n        ],\n        confirm_password: [\n          { required: true, message: '请再次输入新密码', trigger: 'blur' },\n          {\n            validator: (rule, value, callback) => {\n              if (value !== state.passwordForm.new_password) {\n                callback(new Error('两次输入的密码不一致'))\n              } else {\n                callback()\n              }\n            },\n            trigger: 'blur'\n          }\n        ]\n      }\n    })\n\n    // 计算属性\n    const userId = computed(() => route.params.id || 'me')\n    const isCurrentUser = computed(() => !route.params.id || route.params.id === 'me' || route.params.id === store.getters.userId.toString())\n\n    // 从查询参数中获取激活的标签页\n    if (route.query.tab && ['posts', 'comments', 'favorites'].includes(route.query.tab)) {\n      state.activeTab = route.query.tab\n    }\n\n    // 获取用户信息\n    const fetchUserProfile = async () => {\n      state.loading = true\n      try {\n        // 检查本地存储的token\n        const token = localStorage.getItem('token')\n        console.log('获取用户信息前的token:', token)\n\n        let response\n        if (userId.value === 'me' || !userId.value) {\n          console.log('获取当前用户信息')\n          response = await getUserProfile()\n        } else {\n          console.log('获取指定用户信息:', userId.value)\n          response = await getUserById(userId.value)\n        }\n\n        console.log('用户信息响应:', response)\n\n        // 处理不同的响应格式\n        if (response.code === 0) {\n          state.userProfile = response.data\n        } else if (response.id) {\n          // 直接返回了用户对象\n          state.userProfile = response\n        } else {\n          ElMessage.error('获取用户信息失败: 响应格式不正确')\n          console.error('响应格式不正确:', response)\n          return\n        }\n\n        // 初始化编辑表单\n        state.profileForm.nickname = state.userProfile.nickname\n        state.profileForm.avatar_url = state.userProfile.avatar_url\n      } catch (error) {\n        console.error('获取用户信息失败:', error)\n        ElMessage.error('获取用户信息失败')\n      } finally {\n        state.loading = false\n      }\n    }\n\n    // 获取用户帖子\n    const fetchUserPosts = async () => {\n      state.postsLoading = true\n      try {\n        // 检查本地存储的token\n        const token = localStorage.getItem('token')\n        console.log('获取用户帖子前的token:', token)\n\n        const response = await getUserPosts(userId.value)\n        console.log('用户帖子响应:', response)\n\n        // 处理不同的响应格式\n        if (response.code === 0 && response.data) {\n          // 标准格式响应\n          state.posts = response.data.results || []\n          state.postsTotal = response.data.count || 0\n          state.userStats.posts_count = response.data.count || 0\n        } else if (response.results) {\n          // DRF分页响应格式\n          state.posts = response.results || []\n          state.postsTotal = response.count || 0\n          state.userStats.posts_count = response.count || 0\n        } else if (Array.isArray(response)) {\n          // 直接返回数组\n          state.posts = response\n          state.postsTotal = response.length\n          state.userStats.posts_count = response.length\n        } else {\n          // 其他格式\n          console.error('响应格式不正确:', response)\n          ElMessage.error('获取用户帖子失败: 响应格式不正确')\n          return\n        }\n      } catch (error) {\n        console.error('获取用户帖子失败:', error)\n        ElMessage.error('获取用户帖子失败')\n      } finally {\n        state.postsLoading = false\n      }\n    }\n\n    // 获取用户评论\n    const fetchUserComments = async () => {\n      state.commentsLoading = true\n      try {\n        const response = await getUserComments(userId.value)\n        console.log('用户评论响应:', response)\n\n        // 处理不同的响应格式\n        if (response.code === 0 && response.data) {\n          // 标准格式响应\n          state.comments = response.data.results || []\n          state.commentsTotal = response.data.count || 0\n          state.userStats.comments_count = response.data.count || 0\n        } else if (response.results) {\n          // DRF分页响应格式\n          state.comments = response.results || []\n          state.commentsTotal = response.count || 0\n          state.userStats.comments_count = response.count || 0\n        } else if (Array.isArray(response)) {\n          // 直接返回数组\n          state.comments = response\n          state.commentsTotal = response.length\n          state.userStats.comments_count = response.length\n        } else {\n          // 其他格式\n          console.error('响应格式不正确:', response)\n          ElMessage.error('获取用户评论失败: 响应格式不正确')\n          return\n        }\n      } catch (error) {\n        console.error('获取用户评论失败:', error)\n        ElMessage.error('获取用户评论失败')\n      } finally {\n        state.commentsLoading = false\n      }\n    }\n\n    // 获取用户收藏\n    const fetchUserFavorites = async () => {\n      state.favoritesLoading = true\n      try {\n        const response = await getUserFavorites(userId.value)\n        console.log('用户收藏响应:', response)\n\n        // 处理不同的响应格式\n        if (response.code === 0 && response.data) {\n          // 标准格式响应\n          state.favorites = response.data.results || []\n          state.favoritesTotal = response.data.count || 0\n          state.userStats.favorites_count = response.data.count || 0\n        } else if (response.results) {\n          // DRF分页响应格式\n          state.favorites = response.results || []\n          state.favoritesTotal = response.count || 0\n          state.userStats.favorites_count = response.count || 0\n        } else if (Array.isArray(response)) {\n          // 直接返回数组\n          state.favorites = response\n          state.favoritesTotal = response.length\n          state.userStats.favorites_count = response.length\n        } else {\n          // 其他格式\n          console.error('响应格式不正确:', response)\n          ElMessage.error('获取用户收藏失败: 响应格式不正确')\n          return\n        }\n      } catch (error) {\n        console.error('获取用户收藏失败:', error)\n        ElMessage.error('获取用户收藏失败')\n      } finally {\n        state.favoritesLoading = false\n      }\n    }\n\n    // 处理标签页切换\n    const handleTabClick = (tab) => {\n      state.activeTab = tab.name\n\n      if (tab.name === 'posts' && state.posts.length === 0) {\n        fetchUserPosts()\n      } else if (tab.name === 'comments' && state.comments.length === 0) {\n        fetchUserComments()\n      } else if (tab.name === 'favorites' && state.favorites.length === 0) {\n        fetchUserFavorites()\n      }\n    }\n\n    // 处理帖子分页变化\n    const handlePostsPageChange = (page) => {\n      state.postsQuery.page = page\n      fetchUserPosts()\n    }\n\n    // 处理评论分页变化\n    const handleCommentsPageChange = (page) => {\n      state.commentsQuery.page = page\n      fetchUserComments()\n    }\n\n    // 处理收藏分页变化\n    const handleFavoritesPageChange = (page) => {\n      state.favoritesQuery.page = page\n      fetchUserFavorites()\n    }\n\n    // 查看帖子\n    const viewPost = (post) => {\n      router.push({ name: 'PostDetail', params: { id: post.id } })\n    }\n\n    // 显示编辑资料对话框\n    const showEditProfileDialog = () => {\n      console.log('点击编辑资料按钮')\n      console.log('当前对话框状态:', state.editProfileDialogVisible)\n\n      // 初始化表单数据\n      state.profileForm.nickname = state.userProfile.nickname || ''\n      state.profileForm.avatar_url = state.userProfile.avatar_url || ''\n\n      // 更新上传头部以确保使用最新的token\n      state.uploadHeaders = {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n\n      // 显示对话框\n      state.editProfileDialogVisible = true\n      console.log('设置对话框状态为:', state.editProfileDialogVisible)\n    }\n\n    // 头像上传前的验证\n    const beforeAvatarUpload = (file) => {\n      state.imageUploading = true\n      const isImage = file.type.startsWith('image/')\n      const isLt2M = file.size / 1024 / 1024 < 2\n\n      if (!isImage) {\n        ElMessage.error('头像必须是图片格式!')\n        state.imageUploading = false\n        return false\n      }\n      if (!isLt2M) {\n        ElMessage.error('头像大小不能超过 2MB!')\n        state.imageUploading = false\n        return false\n      }\n      return true\n    }\n\n    // 处理头像上传\n    const handleAvatarUpload = async (options) => {\n      const { file } = options\n      state.imageUploading = true\n\n      try {\n        // 创建FormData\n        const formData = new FormData()\n        formData.append('file', file)\n\n        // 调用上传API\n        const response = await uploadAvatar(formData)\n\n        if (response.code === 0) {\n          state.profileForm.avatar_url = response.data.avatar_url\n          ElMessage.success('头像上传成功')\n        } else {\n          ElMessage.error(response.msg || '头像上传失败')\n        }\n      } catch (error) {\n        console.error('头像上传失败:', error)\n        ElMessage.error('头像上传失败')\n      } finally {\n        state.imageUploading = false\n      }\n    }\n\n    // 提交编辑资料表单\n    const submitProfileForm = async () => {\n      state.submitting = true\n      try {\n        const response = await updateUserProfile(state.profileForm)\n        if (response.code === 0) {\n          ElMessage.success(response.msg || '个人资料更新成功')\n          state.editProfileDialogVisible = false\n\n          // 更新用户信息\n          fetchUserProfile()\n\n          // 更新Vuex中的用户信息\n          store.dispatch('updateUserInfo', {\n            ...store.getters.userInfo,\n            nickname: state.profileForm.nickname,\n            avatar_url: state.profileForm.avatar_url\n          })\n        } else {\n          ElMessage.error(response.msg || '个人资料更新失败')\n        }\n      } catch (error) {\n        console.error('个人资料更新失败:', error)\n        ElMessage.error('个人资料更新失败')\n      } finally {\n        state.submitting = false\n      }\n    }\n\n    // 显示修改密码对话框\n    const showChangePasswordDialog = () => {\n      state.changePasswordDialogVisible = true\n      state.passwordForm = {\n        old_password: '',\n        new_password: '',\n        confirm_password: ''\n      }\n    }\n\n    // 提交修改密码表单\n    const submitPasswordForm = async () => {\n      state.submitting = true\n      try {\n        const response = await changePassword(state.passwordForm)\n        if (response.code === 0) {\n          ElMessage.success(response.msg || '密码修改成功，请重新登录')\n          state.changePasswordDialogVisible = false\n\n          // 退出登录\n          store.dispatch('logout')\n          router.push('/login')\n        } else {\n          ElMessage.error(response.msg || '密码修改失败')\n        }\n      } catch (error) {\n        console.error('密码修改失败:', error)\n        ElMessage.error('密码修改失败')\n      } finally {\n        state.submitting = false\n      }\n    }\n\n    // 生命周期钩子\n    onMounted(() => {\n      fetchUserProfile()\n      fetchUserPosts()\n    })\n\n    return {\n      ...toRefs(state),\n      userId,\n      isCurrentUser,\n      formatDate,\n      handleTabClick,\n      handlePostsPageChange,\n      handleCommentsPageChange,\n      handleFavoritesPageChange,\n      viewPost,\n      showEditProfileDialog,\n      beforeAvatarUpload,\n      handleAvatarUpload,\n      submitProfileForm,\n      showChangePasswordDialog,\n      submitPasswordForm\n    }\n  }\n}\n</script>\n\n<style scoped>\n.profile-container {\n  padding: 20px;\n}\n\n.loading-container {\n  padding: 20px 0;\n}\n\n.profile-card,\n.content-card {\n  margin-bottom: 20px;\n}\n\n.user-info {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.avatar-container {\n  margin-bottom: 15px;\n}\n\n.username {\n  margin: 0 0 15px;\n  font-size: 20px;\n}\n\n.user-meta {\n  width: 100%;\n  margin-bottom: 20px;\n}\n\n.meta-item {\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n  color: #606266;\n}\n\n.meta-item i {\n  margin-right: 8px;\n  width: 16px;\n  text-align: center;\n}\n\n.user-stats {\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 15px 0;\n  border-top: 1px solid #ebeef5;\n  border-bottom: 1px solid #ebeef5;\n}\n\n.stat-item {\n  text-align: center;\n}\n\n.stat-value {\n  font-size: 20px;\n  font-weight: bold;\n  color: #409eff;\n}\n\n.stat-label {\n  font-size: 14px;\n  color: #606266;\n}\n\n.user-actions {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 10px;\n}\n\n.empty-container {\n  padding: 40px 0;\n}\n\n.post-list,\n.comment-list,\n.favorite-list {\n  margin-bottom: 20px;\n}\n\n.post-item,\n.favorite-item {\n  padding: 15px;\n  border-bottom: 1px solid #ebeef5;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.post-item:hover,\n.favorite-item:hover {\n  background-color: #f5f7fa;\n}\n\n.post-item:last-child,\n.favorite-item:last-child {\n  border-bottom: none;\n}\n\n.post-title {\n  font-size: 16px;\n  font-weight: bold;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n}\n\n.post-title .el-tag {\n  margin-right: 8px;\n}\n\n.post-meta {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 13px;\n  color: #909399;\n}\n\n.post-board,\n.post-author {\n  display: flex;\n  align-items: center;\n}\n\n.post-board i,\n.post-author i {\n  margin-right: 5px;\n}\n\n.post-stats {\n  display: flex;\n}\n\n.post-stats span {\n  margin-right: 15px;\n  display: flex;\n  align-items: center;\n}\n\n.post-stats span i {\n  margin-right: 5px;\n}\n\n.comment-item {\n  padding: 15px;\n  border-bottom: 1px solid #ebeef5;\n}\n\n.comment-item:last-child {\n  border-bottom: none;\n}\n\n.comment-content {\n  margin-bottom: 10px;\n  line-height: 1.5;\n  white-space: pre-wrap;\n}\n\n.comment-meta {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 13px;\n  color: #909399;\n}\n\n.comment-post {\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  color: #409eff;\n}\n\n.comment-post i {\n  margin-right: 5px;\n}\n\n.pagination-container {\n  text-align: center;\n  margin-top: 20px;\n}\n\n.avatar-upload-container {\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 15px;\n}\n\n.avatar-preview {\n  margin-right: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.upload-options {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.avatar-uploader {\n  margin-bottom: 15px;\n}\n\n.url-input {\n  margin-top: 10px;\n}\n\n.hint-text {\n  font-size: 12px;\n  color: #909399;\n  margin-bottom: 5px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}