{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.array.includes.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.string.includes.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../popper/index.js');\nvar constants = require('./constants.js');\nvar trigger = require('./trigger.js');\nvar utils = require('./utils.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar trigger$1 = require('../../popper/src/trigger2.js');\nvar event = require('../../../utils/dom/event.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar __default__ = vue.defineComponent({\n  name: \"ElTooltipTrigger\"\n});\nvar _sfc_main = /* @__PURE__ */vue.defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: trigger.useTooltipTriggerProps,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var ns = index.useNamespace(\"tooltip\");\n    var _vue$inject = vue.inject(constants.TOOLTIP_INJECTION_KEY, void 0),\n      controlled = _vue$inject.controlled,\n      id = _vue$inject.id,\n      open = _vue$inject.open,\n      onOpen = _vue$inject.onOpen,\n      onClose = _vue$inject.onClose,\n      onToggle = _vue$inject.onToggle;\n    var triggerRef = vue.ref(null);\n    var stopWhenControlledOrDisabled = function stopWhenControlledOrDisabled() {\n      if (vue.unref(controlled) || props.disabled) {\n        return true;\n      }\n    };\n    var trigger = vue.toRef(props, \"trigger\");\n    var onMouseenter = event.composeEventHandlers(stopWhenControlledOrDisabled, utils.whenTrigger(trigger, \"hover\", onOpen));\n    var onMouseleave = event.composeEventHandlers(stopWhenControlledOrDisabled, utils.whenTrigger(trigger, \"hover\", onClose));\n    var onClick = event.composeEventHandlers(stopWhenControlledOrDisabled, utils.whenTrigger(trigger, \"click\", function (e) {\n      if (e.button === 0) {\n        onToggle(e);\n      }\n    }));\n    var onFocus = event.composeEventHandlers(stopWhenControlledOrDisabled, utils.whenTrigger(trigger, \"focus\", onOpen));\n    var onBlur = event.composeEventHandlers(stopWhenControlledOrDisabled, utils.whenTrigger(trigger, \"focus\", onClose));\n    var onContextMenu = event.composeEventHandlers(stopWhenControlledOrDisabled, utils.whenTrigger(trigger, \"contextmenu\", function (e) {\n      e.preventDefault();\n      onToggle(e);\n    }));\n    var onKeydown = event.composeEventHandlers(stopWhenControlledOrDisabled, function (e) {\n      var code = e.code;\n      if (props.triggerKeys.includes(code)) {\n        e.preventDefault();\n        onToggle(e);\n      }\n    });\n    expose({\n      triggerRef: triggerRef\n    });\n    return function (_ctx, _cache) {\n      return vue.openBlock(), vue.createBlock(vue.unref(trigger$1[\"default\"]), {\n        id: vue.unref(id),\n        \"virtual-ref\": _ctx.virtualRef,\n        open: vue.unref(open),\n        \"virtual-triggering\": _ctx.virtualTriggering,\n        \"class\": vue.normalizeClass(vue.unref(ns).e(\"trigger\")),\n        onBlur: vue.unref(onBlur),\n        onClick: vue.unref(onClick),\n        onContextmenu: vue.unref(onContextMenu),\n        onFocus: vue.unref(onFocus),\n        onMouseenter: vue.unref(onMouseenter),\n        onMouseleave: vue.unref(onMouseleave),\n        onKeydown: vue.unref(onKeydown)\n      }, {\n        \"default\": vue.withCtx(function () {\n          return [vue.renderSlot(_ctx.$slots, \"default\")];\n        }),\n        _: 3\n      }, 8, [\"id\", \"virtual-ref\", \"open\", \"virtual-triggering\", \"class\", \"onBlur\", \"onClick\", \"onContextmenu\", \"onFocus\", \"onMouseenter\", \"onMouseleave\", \"onKeydown\"]);\n    };\n  }\n}));\nvar ElTooltipTrigger = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"trigger.vue\"]]);\nexports[\"default\"] = ElTooltipTrigger;","map":{"version":3,"names":["name","ns","index","useNamespace","_vue$inject","vue","inject","constants","TOOLTIP_INJECTION_KEY","controlled","id","open","onOpen","onClose","onToggle","triggerRef","ref","stopWhenControlledOrDisabled","unref","props","disabled","trigger","toRef","onMouseenter","event","composeEventHandlers","utils","whenTrigger","onMouseleave","onClick","e","button","onFocus","onBlur","onContextMenu","preventDefault","onKeydown","code","triggerKeys","includes","expose","_ctx","_cache","openBlock","createBlock","trigger$1","virtualRef","virtualTriggering","normalizeClass","onContextmenu","withCtx","renderSlot","$slots","_","ElTooltipTrigger","pluginVue_exportHelper","_sfc_main"],"sources":["../../../../../../packages/components/tooltip/src/trigger.vue"],"sourcesContent":["<template>\n  <el-popper-trigger\n    :id=\"id\"\n    :virtual-ref=\"virtualRef\"\n    :open=\"open\"\n    :virtual-triggering=\"virtualTriggering\"\n    :class=\"ns.e('trigger')\"\n    @blur=\"onBlur\"\n    @click=\"onClick\"\n    @contextmenu=\"onContextMenu\"\n    @focus=\"onFocus\"\n    @mouseenter=\"onMouseenter\"\n    @mouseleave=\"onMouseleave\"\n    @keydown=\"onKeydown\"\n  >\n    <slot />\n  </el-popper-trigger>\n</template>\n\n<script lang=\"ts\" setup>\nimport { inject, ref, toRef, unref } from 'vue'\nimport { ElPopperTrigger } from '@element-plus/components/popper'\nimport { composeEventHandlers } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { TOOLTIP_INJECTION_KEY } from './constants'\nimport { useTooltipTriggerProps } from './trigger'\nimport { whenTrigger } from './utils'\nimport type { OnlyChildExpose } from '@element-plus/components/slot'\n\ndefineOptions({\n  name: 'ElTooltipTrigger',\n})\n\nconst props = defineProps(useTooltipTriggerProps)\n\nconst ns = useNamespace('tooltip')\nconst { controlled, id, open, onOpen, onClose, onToggle } = inject(\n  TOOLTIP_INJECTION_KEY,\n  undefined\n)!\n\nconst triggerRef = ref<OnlyChildExpose | null>(null)\n\nconst stopWhenControlledOrDisabled = () => {\n  if (unref(controlled) || props.disabled) {\n    return true\n  }\n}\nconst trigger = toRef(props, 'trigger')\nconst onMouseenter = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'hover', onOpen)\n)\nconst onMouseleave = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'hover', onClose)\n)\nconst onClick = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'click', (e) => {\n    // distinguish left click\n    if ((e as MouseEvent).button === 0) {\n      onToggle(e)\n    }\n  })\n)\n\nconst onFocus = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'focus', onOpen)\n)\n\nconst onBlur = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'focus', onClose)\n)\n\nconst onContextMenu = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'contextmenu', (e: Event) => {\n    e.preventDefault()\n    onToggle(e)\n  })\n)\n\nconst onKeydown = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  (e: KeyboardEvent) => {\n    const { code } = e\n    if (props.triggerKeys.includes(code)) {\n      e.preventDefault()\n      onToggle(e)\n    }\n  }\n)\n\ndefineExpose({\n  /**\n   * @description trigger element\n   */\n  triggerRef,\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}