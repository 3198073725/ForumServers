{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar divider = require('./divider.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar __default__ = vue.defineComponent({\n  name: \"ElDivider\"\n});\nvar _sfc_main = /* @__PURE__ */vue.defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: divider.dividerProps,\n  setup: function setup(__props) {\n    var props = __props;\n    var ns = index.useNamespace(\"divider\");\n    var dividerStyle = vue.computed(function () {\n      return ns.cssVar({\n        \"border-style\": props.borderStyle\n      });\n    });\n    return function (_ctx, _cache) {\n      return vue.openBlock(), vue.createElementBlock(\"div\", {\n        \"class\": vue.normalizeClass([vue.unref(ns).b(), vue.unref(ns).m(_ctx.direction)]),\n        style: vue.normalizeStyle(vue.unref(dividerStyle)),\n        role: \"separator\"\n      }, [_ctx.$slots[\"default\"] && _ctx.direction !== \"vertical\" ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n        key: 0,\n        \"class\": vue.normalizeClass([vue.unref(ns).e(\"text\"), vue.unref(ns).is(_ctx.contentPosition)])\n      }, [vue.renderSlot(_ctx.$slots, \"default\")], 2)) : vue.createCommentVNode(\"v-if\", true)], 6);\n    };\n  }\n}));\nvar Divider = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"divider.vue\"]]);\nexports[\"default\"] = Divider;","map":{"version":3,"names":["name","ns","index","useNamespace","dividerStyle","vue","computed","cssVar","props","borderStyle"],"sources":["../../../../../../packages/components/divider/src/divider.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"[ns.b(), ns.m(direction)]\"\n    :style=\"dividerStyle\"\n    role=\"separator\"\n  >\n    <div\n      v-if=\"$slots.default && direction !== 'vertical'\"\n      :class=\"[ns.e('text'), ns.is(contentPosition)]\"\n    >\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { dividerProps } from './divider'\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElDivider',\n})\nconst props = defineProps(dividerProps)\nconst ns = useNamespace('divider')\nconst dividerStyle = computed(() => {\n  return ns.cssVar({\n    'border-style': props.borderStyle,\n  }) as CSSProperties\n})\n</script>\n"],"mappings":";;;;;;;;;;;qCAqBc;EACZA,IAAM;AACR;;;;;IAEM,IAAAC,EAAA,GAAKC,KAAA,CAAAC,YAAA,CAAa,SAAS;IAC3B,IAAAC,YAAA,GAAeC,GAAA,CAAAC,QAAA,CAAS,YAAM;MAClC,OAAOL,EAAA,CAAGM,MAAO;QACf,gBAAgBC,KAAM,CAAAC;MAAA,CACvB;IAAA,CACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}