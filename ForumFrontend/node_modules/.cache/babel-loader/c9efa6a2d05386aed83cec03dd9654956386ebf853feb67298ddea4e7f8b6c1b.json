{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar icon = require('./icon2.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar types = require('../../../utils/types.js');\nvar style = require('../../../utils/dom/style.js');\nvar __default__ = vue.defineComponent({\n  name: \"ElIcon\",\n  inheritAttrs: false\n});\nvar _sfc_main = /* @__PURE__ */vue.defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: icon.iconProps,\n  setup: function setup(__props) {\n    var props = __props;\n    var ns = index.useNamespace(\"icon\");\n    var style$1 = vue.computed(function () {\n      var size = props.size,\n        color = props.color;\n      if (!size && !color) return {};\n      return {\n        fontSize: types.isUndefined(size) ? void 0 : style.addUnit(size),\n        \"--color\": color\n      };\n    });\n    return function (_ctx, _cache) {\n      return vue.openBlock(), vue.createElementBlock(\"i\", vue.mergeProps({\n        \"class\": vue.unref(ns).b(),\n        style: vue.unref(style$1)\n      }, _ctx.$attrs), [vue.renderSlot(_ctx.$slots, \"default\")], 16);\n    };\n  }\n}));\nvar Icon = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"icon.vue\"]]);\nexports[\"default\"] = Icon;","map":{"version":3,"names":["name","inheritAttrs","ns","index","useNamespace","style$1","vue","computed","size","props","color","fontSize","types","isUndefined","style","addUnit"],"sources":["../../../../../../packages/components/icon/src/icon.vue"],"sourcesContent":["<template>\n  <i :class=\"ns.b()\" :style=\"style\" v-bind=\"$attrs\">\n    <slot />\n  </i>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { addUnit, isUndefined } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { iconProps } from './icon'\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElIcon',\n  inheritAttrs: false,\n})\nconst props = defineProps(iconProps)\nconst ns = useNamespace('icon')\n\nconst style = computed<CSSProperties>(() => {\n  const { size, color } = props\n  if (!size && !color) return {}\n\n  return {\n    fontSize: isUndefined(size) ? undefined : addUnit(size),\n    '--color': color,\n  }\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;qCAac;EACZA,IAAM;EACNC,YAAc;AAChB;;;;;IAEM,IAAAC,EAAA,GAAKC,KAAA,CAAAC,YAAA,CAAa,MAAM;IAExB,IAAAC,OAAA,GAAQC,GAAA,CAAAC,QAAA,CAAwB,YAAM;MACpC,IAAEC,IAAM,GAAUC,KAAA,CAAhBD,IAAM;QAAAE,KAAA,GAAUD,KAAA,CAAVC,KAAA;MACd,IAAI,CAACF,IAAA,IAAQ,CAACE,KAAA,EAEP;MAAA;QAELC,QAAW,EAAAC,KAAA,CAAAC,WAAA,CAAAL,IAAA,aAAAM,KAAA,CAAAC,OAAA,CAAAP,IAAA;QACb,WAAAE;MAAA,CACD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}