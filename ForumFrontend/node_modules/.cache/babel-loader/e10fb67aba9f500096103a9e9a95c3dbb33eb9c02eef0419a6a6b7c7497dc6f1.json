{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nvar _slicedToArray = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/slicedToArray.js\")[\"default\"];\nrequire(\"core-js/modules/es.array.concat.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.function.name.js\");\nrequire(\"core-js/modules/es.number.parse-int.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar core = require('@vueuse/core');\nvar scrollbar = require('../components/scrollbar.js');\nvar useGridWheel = require('../hooks/use-grid-wheel.js');\nvar useCache = require('../hooks/use-cache.js');\nvar props = require('../props.js');\nvar utils = require('../utils.js');\nvar defaults = require('../defaults.js');\nvar index = require('../../../../hooks/use-namespace/index.js');\nvar types = require('../../../../utils/types.js');\nvar scroll = require('../../../../utils/dom/scroll.js');\nvar shared = require('@vue/shared');\nvar createGrid = function createGrid(_ref) {\n  var name = _ref.name,\n    clearCache = _ref.clearCache,\n    getColumnPosition = _ref.getColumnPosition,\n    getColumnStartIndexForOffset = _ref.getColumnStartIndexForOffset,\n    getColumnStopIndexForStartIndex = _ref.getColumnStopIndexForStartIndex,\n    getEstimatedTotalHeight = _ref.getEstimatedTotalHeight,\n    getEstimatedTotalWidth = _ref.getEstimatedTotalWidth,\n    getColumnOffset = _ref.getColumnOffset,\n    getRowOffset = _ref.getRowOffset,\n    getRowPosition = _ref.getRowPosition,\n    getRowStartIndexForOffset = _ref.getRowStartIndexForOffset,\n    getRowStopIndexForStartIndex = _ref.getRowStopIndexForStartIndex,\n    initCache = _ref.initCache,\n    injectToInstance = _ref.injectToInstance,\n    validateProps = _ref.validateProps;\n  return vue.defineComponent({\n    name: name != null ? name : \"ElVirtualList\",\n    props: props.virtualizedGridProps,\n    emits: [defaults.ITEM_RENDER_EVT, defaults.SCROLL_EVT],\n    setup: function setup(props, _ref2) {\n      var emit = _ref2.emit,\n        expose = _ref2.expose,\n        slots = _ref2.slots;\n      var ns = index.useNamespace(\"vl\");\n      validateProps(props);\n      var instance = vue.getCurrentInstance();\n      var cache = vue.ref(initCache(props, instance));\n      injectToInstance == null ? void 0 : injectToInstance(instance, cache);\n      var windowRef = vue.ref();\n      var hScrollbar = vue.ref();\n      var vScrollbar = vue.ref();\n      var innerRef = vue.ref(null);\n      var states = vue.ref({\n        isScrolling: false,\n        scrollLeft: types.isNumber(props.initScrollLeft) ? props.initScrollLeft : 0,\n        scrollTop: types.isNumber(props.initScrollTop) ? props.initScrollTop : 0,\n        updateRequested: false,\n        xAxisScrollDir: defaults.FORWARD,\n        yAxisScrollDir: defaults.FORWARD\n      });\n      var getItemStyleCache = useCache.useCache();\n      var parsedHeight = vue.computed(function () {\n        return Number.parseInt(\"\".concat(props.height), 10);\n      });\n      var parsedWidth = vue.computed(function () {\n        return Number.parseInt(\"\".concat(props.width), 10);\n      });\n      var columnsToRender = vue.computed(function () {\n        var totalColumn = props.totalColumn,\n          totalRow = props.totalRow,\n          columnCache = props.columnCache;\n        var _vue$unref = vue.unref(states),\n          isScrolling = _vue$unref.isScrolling,\n          xAxisScrollDir = _vue$unref.xAxisScrollDir,\n          scrollLeft = _vue$unref.scrollLeft;\n        if (totalColumn === 0 || totalRow === 0) {\n          return [0, 0, 0, 0];\n        }\n        var startIndex = getColumnStartIndexForOffset(props, scrollLeft, vue.unref(cache));\n        var stopIndex = getColumnStopIndexForStartIndex(props, startIndex, scrollLeft, vue.unref(cache));\n        var cacheBackward = !isScrolling || xAxisScrollDir === defaults.BACKWARD ? Math.max(1, columnCache) : 1;\n        var cacheForward = !isScrolling || xAxisScrollDir === defaults.FORWARD ? Math.max(1, columnCache) : 1;\n        return [Math.max(0, startIndex - cacheBackward), Math.max(0, Math.min(totalColumn - 1, stopIndex + cacheForward)), startIndex, stopIndex];\n      });\n      var rowsToRender = vue.computed(function () {\n        var totalColumn = props.totalColumn,\n          totalRow = props.totalRow,\n          rowCache = props.rowCache;\n        var _vue$unref2 = vue.unref(states),\n          isScrolling = _vue$unref2.isScrolling,\n          yAxisScrollDir = _vue$unref2.yAxisScrollDir,\n          scrollTop = _vue$unref2.scrollTop;\n        if (totalColumn === 0 || totalRow === 0) {\n          return [0, 0, 0, 0];\n        }\n        var startIndex = getRowStartIndexForOffset(props, scrollTop, vue.unref(cache));\n        var stopIndex = getRowStopIndexForStartIndex(props, startIndex, scrollTop, vue.unref(cache));\n        var cacheBackward = !isScrolling || yAxisScrollDir === defaults.BACKWARD ? Math.max(1, rowCache) : 1;\n        var cacheForward = !isScrolling || yAxisScrollDir === defaults.FORWARD ? Math.max(1, rowCache) : 1;\n        return [Math.max(0, startIndex - cacheBackward), Math.max(0, Math.min(totalRow - 1, stopIndex + cacheForward)), startIndex, stopIndex];\n      });\n      var estimatedTotalHeight = vue.computed(function () {\n        return getEstimatedTotalHeight(props, vue.unref(cache));\n      });\n      var estimatedTotalWidth = vue.computed(function () {\n        return getEstimatedTotalWidth(props, vue.unref(cache));\n      });\n      var windowStyle = vue.computed(function () {\n        var _a;\n        return [{\n          position: \"relative\",\n          overflow: \"hidden\",\n          WebkitOverflowScrolling: \"touch\",\n          willChange: \"transform\"\n        }, {\n          direction: props.direction,\n          height: types.isNumber(props.height) ? \"\".concat(props.height, \"px\") : props.height,\n          width: types.isNumber(props.width) ? \"\".concat(props.width, \"px\") : props.width\n        }, (_a = props.style) != null ? _a : {}];\n      });\n      var innerStyle = vue.computed(function () {\n        var width = \"\".concat(vue.unref(estimatedTotalWidth), \"px\");\n        var height = \"\".concat(vue.unref(estimatedTotalHeight), \"px\");\n        return {\n          height: height,\n          pointerEvents: vue.unref(states).isScrolling ? \"none\" : void 0,\n          width: width\n        };\n      });\n      var emitEvents = function emitEvents() {\n        var totalColumn = props.totalColumn,\n          totalRow = props.totalRow;\n        if (totalColumn > 0 && totalRow > 0) {\n          var _vue$unref3 = vue.unref(columnsToRender),\n            _vue$unref4 = _slicedToArray(_vue$unref3, 4),\n            columnCacheStart = _vue$unref4[0],\n            columnCacheEnd = _vue$unref4[1],\n            columnVisibleStart = _vue$unref4[2],\n            columnVisibleEnd = _vue$unref4[3];\n          var _vue$unref5 = vue.unref(rowsToRender),\n            _vue$unref6 = _slicedToArray(_vue$unref5, 4),\n            rowCacheStart = _vue$unref6[0],\n            rowCacheEnd = _vue$unref6[1],\n            rowVisibleStart = _vue$unref6[2],\n            rowVisibleEnd = _vue$unref6[3];\n          emit(defaults.ITEM_RENDER_EVT, {\n            columnCacheStart: columnCacheStart,\n            columnCacheEnd: columnCacheEnd,\n            rowCacheStart: rowCacheStart,\n            rowCacheEnd: rowCacheEnd,\n            columnVisibleStart: columnVisibleStart,\n            columnVisibleEnd: columnVisibleEnd,\n            rowVisibleStart: rowVisibleStart,\n            rowVisibleEnd: rowVisibleEnd\n          });\n        }\n        var _vue$unref7 = vue.unref(states),\n          scrollLeft = _vue$unref7.scrollLeft,\n          scrollTop = _vue$unref7.scrollTop,\n          updateRequested = _vue$unref7.updateRequested,\n          xAxisScrollDir = _vue$unref7.xAxisScrollDir,\n          yAxisScrollDir = _vue$unref7.yAxisScrollDir;\n        emit(defaults.SCROLL_EVT, {\n          xAxisScrollDir: xAxisScrollDir,\n          scrollLeft: scrollLeft,\n          yAxisScrollDir: yAxisScrollDir,\n          scrollTop: scrollTop,\n          updateRequested: updateRequested\n        });\n      };\n      var onScroll = function onScroll(e) {\n        var _e$currentTarget = e.currentTarget,\n          clientHeight = _e$currentTarget.clientHeight,\n          clientWidth = _e$currentTarget.clientWidth,\n          scrollHeight = _e$currentTarget.scrollHeight,\n          scrollLeft = _e$currentTarget.scrollLeft,\n          scrollTop = _e$currentTarget.scrollTop,\n          scrollWidth = _e$currentTarget.scrollWidth;\n        var _states = vue.unref(states);\n        if (_states.scrollTop === scrollTop && _states.scrollLeft === scrollLeft) {\n          return;\n        }\n        var _scrollLeft = scrollLeft;\n        if (utils.isRTL(props.direction)) {\n          switch (utils.getRTLOffsetType()) {\n            case defaults.RTL_OFFSET_NAG:\n              _scrollLeft = -scrollLeft;\n              break;\n            case defaults.RTL_OFFSET_POS_DESC:\n              _scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        }\n        states.value = _objectSpread(_objectSpread({}, _states), {}, {\n          isScrolling: true,\n          scrollLeft: _scrollLeft,\n          scrollTop: Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight)),\n          updateRequested: true,\n          xAxisScrollDir: utils.getScrollDir(_states.scrollLeft, _scrollLeft),\n          yAxisScrollDir: utils.getScrollDir(_states.scrollTop, scrollTop)\n        });\n        vue.nextTick(function () {\n          return resetIsScrolling();\n        });\n        onUpdated();\n        emitEvents();\n      };\n      var onVerticalScroll = function onVerticalScroll(distance, totalSteps) {\n        var height = vue.unref(parsedHeight);\n        var offset = (estimatedTotalHeight.value - height) / totalSteps * distance;\n        scrollTo({\n          scrollTop: Math.min(estimatedTotalHeight.value - height, offset)\n        });\n      };\n      var onHorizontalScroll = function onHorizontalScroll(distance, totalSteps) {\n        var width = vue.unref(parsedWidth);\n        var offset = (estimatedTotalWidth.value - width) / totalSteps * distance;\n        scrollTo({\n          scrollLeft: Math.min(estimatedTotalWidth.value - width, offset)\n        });\n      };\n      var _useGridWheel$useGrid = useGridWheel.useGridWheel({\n          atXStartEdge: vue.computed(function () {\n            return states.value.scrollLeft <= 0;\n          }),\n          atXEndEdge: vue.computed(function () {\n            return states.value.scrollLeft >= estimatedTotalWidth.value - vue.unref(parsedWidth);\n          }),\n          atYStartEdge: vue.computed(function () {\n            return states.value.scrollTop <= 0;\n          }),\n          atYEndEdge: vue.computed(function () {\n            return states.value.scrollTop >= estimatedTotalHeight.value - vue.unref(parsedHeight);\n          })\n        }, function (x, y) {\n          var _a, _b, _c, _d;\n          (_b = (_a = hScrollbar.value) == null ? void 0 : _a.onMouseUp) == null ? void 0 : _b.call(_a);\n          (_d = (_c = vScrollbar.value) == null ? void 0 : _c.onMouseUp) == null ? void 0 : _d.call(_c);\n          var width = vue.unref(parsedWidth);\n          var height = vue.unref(parsedHeight);\n          scrollTo({\n            scrollLeft: Math.min(states.value.scrollLeft + x, estimatedTotalWidth.value - width),\n            scrollTop: Math.min(states.value.scrollTop + y, estimatedTotalHeight.value - height)\n          });\n        }),\n        onWheel = _useGridWheel$useGrid.onWheel;\n      core.useEventListener(windowRef, \"wheel\", onWheel, {\n        passive: false\n      });\n      var scrollTo = function scrollTo(_ref3) {\n        var _ref3$scrollLeft = _ref3.scrollLeft,\n          scrollLeft = _ref3$scrollLeft === void 0 ? states.value.scrollLeft : _ref3$scrollLeft,\n          _ref3$scrollTop = _ref3.scrollTop,\n          scrollTop = _ref3$scrollTop === void 0 ? states.value.scrollTop : _ref3$scrollTop;\n        scrollLeft = Math.max(scrollLeft, 0);\n        scrollTop = Math.max(scrollTop, 0);\n        var _states = vue.unref(states);\n        if (scrollTop === _states.scrollTop && scrollLeft === _states.scrollLeft) {\n          return;\n        }\n        states.value = _objectSpread(_objectSpread({}, _states), {}, {\n          xAxisScrollDir: utils.getScrollDir(_states.scrollLeft, scrollLeft),\n          yAxisScrollDir: utils.getScrollDir(_states.scrollTop, scrollTop),\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          updateRequested: true\n        });\n        vue.nextTick(function () {\n          return resetIsScrolling();\n        });\n        onUpdated();\n        emitEvents();\n      };\n      var scrollToItem = function scrollToItem() {\n        var rowIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var columnIdx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var alignment = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaults.AUTO_ALIGNMENT;\n        var _states = vue.unref(states);\n        columnIdx = Math.max(0, Math.min(columnIdx, props.totalColumn - 1));\n        rowIndex = Math.max(0, Math.min(rowIndex, props.totalRow - 1));\n        var scrollBarWidth = scroll.getScrollBarWidth(ns.namespace.value);\n        var _cache = vue.unref(cache);\n        var estimatedHeight = getEstimatedTotalHeight(props, _cache);\n        var estimatedWidth = getEstimatedTotalWidth(props, _cache);\n        scrollTo({\n          scrollLeft: getColumnOffset(props, columnIdx, alignment, _states.scrollLeft, _cache, estimatedWidth > props.width ? scrollBarWidth : 0),\n          scrollTop: getRowOffset(props, rowIndex, alignment, _states.scrollTop, _cache, estimatedHeight > props.height ? scrollBarWidth : 0)\n        });\n      };\n      var getItemStyle = function getItemStyle(rowIndex, columnIndex) {\n        var columnWidth = props.columnWidth,\n          direction = props.direction,\n          rowHeight = props.rowHeight;\n        var itemStyleCache = getItemStyleCache.value(clearCache && columnWidth, clearCache && rowHeight, clearCache && direction);\n        var key = \"\".concat(rowIndex, \",\").concat(columnIndex);\n        if (shared.hasOwn(itemStyleCache, key)) {\n          return itemStyleCache[key];\n        } else {\n          var _getColumnPosition = getColumnPosition(props, columnIndex, vue.unref(cache)),\n            _getColumnPosition2 = _slicedToArray(_getColumnPosition, 2),\n            left = _getColumnPosition2[1];\n          var _cache = vue.unref(cache);\n          var rtl = utils.isRTL(direction);\n          var _getRowPosition = getRowPosition(props, rowIndex, _cache),\n            _getRowPosition2 = _slicedToArray(_getRowPosition, 2),\n            height = _getRowPosition2[0],\n            top = _getRowPosition2[1];\n          var _getColumnPosition3 = getColumnPosition(props, columnIndex, _cache),\n            _getColumnPosition4 = _slicedToArray(_getColumnPosition3, 1),\n            width = _getColumnPosition4[0];\n          itemStyleCache[key] = {\n            position: \"absolute\",\n            left: rtl ? void 0 : \"\".concat(left, \"px\"),\n            right: rtl ? \"\".concat(left, \"px\") : void 0,\n            top: \"\".concat(top, \"px\"),\n            height: \"\".concat(height, \"px\"),\n            width: \"\".concat(width, \"px\")\n          };\n          return itemStyleCache[key];\n        }\n      };\n      var resetIsScrolling = function resetIsScrolling() {\n        states.value.isScrolling = false;\n        vue.nextTick(function () {\n          getItemStyleCache.value(-1, null, null);\n        });\n      };\n      vue.onMounted(function () {\n        if (!core.isClient) return;\n        var initScrollLeft = props.initScrollLeft,\n          initScrollTop = props.initScrollTop;\n        var windowElement = vue.unref(windowRef);\n        if (windowElement) {\n          if (types.isNumber(initScrollLeft)) {\n            windowElement.scrollLeft = initScrollLeft;\n          }\n          if (types.isNumber(initScrollTop)) {\n            windowElement.scrollTop = initScrollTop;\n          }\n        }\n        emitEvents();\n      });\n      var onUpdated = function onUpdated() {\n        var direction = props.direction;\n        var _vue$unref8 = vue.unref(states),\n          scrollLeft = _vue$unref8.scrollLeft,\n          scrollTop = _vue$unref8.scrollTop,\n          updateRequested = _vue$unref8.updateRequested;\n        var windowElement = vue.unref(windowRef);\n        if (updateRequested && windowElement) {\n          if (direction === defaults.RTL) {\n            switch (utils.getRTLOffsetType()) {\n              case defaults.RTL_OFFSET_NAG:\n                {\n                  windowElement.scrollLeft = -scrollLeft;\n                  break;\n                }\n              case defaults.RTL_OFFSET_POS_ASC:\n                {\n                  windowElement.scrollLeft = scrollLeft;\n                  break;\n                }\n              default:\n                {\n                  var clientWidth = windowElement.clientWidth,\n                    scrollWidth = windowElement.scrollWidth;\n                  windowElement.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n                  break;\n                }\n            }\n          } else {\n            windowElement.scrollLeft = Math.max(0, scrollLeft);\n          }\n          windowElement.scrollTop = Math.max(0, scrollTop);\n        }\n      };\n      var _instance$proxy = instance.proxy,\n        resetAfterColumnIndex = _instance$proxy.resetAfterColumnIndex,\n        resetAfterRowIndex = _instance$proxy.resetAfterRowIndex,\n        resetAfter = _instance$proxy.resetAfter;\n      expose({\n        windowRef: windowRef,\n        innerRef: innerRef,\n        getItemStyleCache: getItemStyleCache,\n        scrollTo: scrollTo,\n        scrollToItem: scrollToItem,\n        states: states,\n        resetAfterColumnIndex: resetAfterColumnIndex,\n        resetAfterRowIndex: resetAfterRowIndex,\n        resetAfter: resetAfter\n      });\n      var renderScrollbars = function renderScrollbars() {\n        var scrollbarAlwaysOn = props.scrollbarAlwaysOn,\n          scrollbarStartGap = props.scrollbarStartGap,\n          scrollbarEndGap = props.scrollbarEndGap,\n          totalColumn = props.totalColumn,\n          totalRow = props.totalRow;\n        var width = vue.unref(parsedWidth);\n        var height = vue.unref(parsedHeight);\n        var estimatedWidth = vue.unref(estimatedTotalWidth);\n        var estimatedHeight = vue.unref(estimatedTotalHeight);\n        var _vue$unref9 = vue.unref(states),\n          scrollLeft = _vue$unref9.scrollLeft,\n          scrollTop = _vue$unref9.scrollTop;\n        var horizontalScrollbar = vue.h(scrollbar[\"default\"], {\n          ref: hScrollbar,\n          alwaysOn: scrollbarAlwaysOn,\n          startGap: scrollbarStartGap,\n          endGap: scrollbarEndGap,\n          \"class\": ns.e(\"horizontal\"),\n          clientSize: width,\n          layout: \"horizontal\",\n          onScroll: onHorizontalScroll,\n          ratio: width * 100 / estimatedWidth,\n          scrollFrom: scrollLeft / (estimatedWidth - width),\n          total: totalRow,\n          visible: true\n        });\n        var verticalScrollbar = vue.h(scrollbar[\"default\"], {\n          ref: vScrollbar,\n          alwaysOn: scrollbarAlwaysOn,\n          startGap: scrollbarStartGap,\n          endGap: scrollbarEndGap,\n          \"class\": ns.e(\"vertical\"),\n          clientSize: height,\n          layout: \"vertical\",\n          onScroll: onVerticalScroll,\n          ratio: height * 100 / estimatedHeight,\n          scrollFrom: scrollTop / (estimatedHeight - height),\n          total: totalColumn,\n          visible: true\n        });\n        return {\n          horizontalScrollbar: horizontalScrollbar,\n          verticalScrollbar: verticalScrollbar\n        };\n      };\n      var renderItems = function renderItems() {\n        var _a;\n        var _vue$unref0 = vue.unref(columnsToRender),\n          _vue$unref1 = _slicedToArray(_vue$unref0, 2),\n          columnStart = _vue$unref1[0],\n          columnEnd = _vue$unref1[1];\n        var _vue$unref10 = vue.unref(rowsToRender),\n          _vue$unref11 = _slicedToArray(_vue$unref10, 2),\n          rowStart = _vue$unref11[0],\n          rowEnd = _vue$unref11[1];\n        var data = props.data,\n          totalColumn = props.totalColumn,\n          totalRow = props.totalRow,\n          useIsScrolling = props.useIsScrolling,\n          itemKey = props.itemKey;\n        var children = [];\n        if (totalRow > 0 && totalColumn > 0) {\n          for (var row = rowStart; row <= rowEnd; row++) {\n            for (var column = columnStart; column <= columnEnd; column++) {\n              var key = itemKey({\n                columnIndex: column,\n                data: data,\n                rowIndex: row\n              });\n              children.push(vue.h(vue.Fragment, {\n                key: key\n              }, (_a = slots[\"default\"]) == null ? void 0 : _a.call(slots, {\n                columnIndex: column,\n                data: data,\n                isScrolling: useIsScrolling ? vue.unref(states).isScrolling : void 0,\n                style: getItemStyle(row, column),\n                rowIndex: row\n              })));\n            }\n          }\n        }\n        return children;\n      };\n      var renderInner = function renderInner() {\n        var Inner = vue.resolveDynamicComponent(props.innerElement);\n        var children = renderItems();\n        return [vue.h(Inner, {\n          style: vue.unref(innerStyle),\n          ref: innerRef\n        }, !shared.isString(Inner) ? {\n          \"default\": function _default() {\n            return children;\n          }\n        } : children)];\n      };\n      var renderWindow = function renderWindow() {\n        var Container = vue.resolveDynamicComponent(props.containerElement);\n        var _renderScrollbars = renderScrollbars(),\n          horizontalScrollbar = _renderScrollbars.horizontalScrollbar,\n          verticalScrollbar = _renderScrollbars.verticalScrollbar;\n        var Inner = renderInner();\n        return vue.h(\"div\", {\n          key: 0,\n          \"class\": ns.e(\"wrapper\"),\n          role: props.role\n        }, [vue.h(Container, {\n          \"class\": props.className,\n          style: vue.unref(windowStyle),\n          onScroll: onScroll,\n          ref: windowRef\n        }, !shared.isString(Container) ? {\n          \"default\": function _default() {\n            return Inner;\n          }\n        } : Inner), horizontalScrollbar, verticalScrollbar]);\n      };\n      return renderWindow;\n    }\n  });\n};\nexports[\"default\"] = createGrid;","map":{"version":3,"names":["createGrid","_ref","name","clearCache","getColumnPosition","getColumnStartIndexForOffset","getColumnStopIndexForStartIndex","getEstimatedTotalHeight","getEstimatedTotalWidth","getColumnOffset","getRowOffset","getRowPosition","getRowStartIndexForOffset","getRowStopIndexForStartIndex","initCache","injectToInstance","validateProps","vue","defineComponent","props","virtualizedGridProps","emits","defaults","ITEM_RENDER_EVT","SCROLL_EVT","setup","_ref2","emit","expose","slots","ns","index","useNamespace","instance","getCurrentInstance","cache","ref","windowRef","hScrollbar","vScrollbar","innerRef","states","isScrolling","scrollLeft","types","isNumber","initScrollLeft","scrollTop","initScrollTop","updateRequested","xAxisScrollDir","FORWARD","yAxisScrollDir","getItemStyleCache","useCache","parsedHeight","computed","Number","parseInt","concat","height","parsedWidth","width","columnsToRender","totalColumn","totalRow","columnCache","_vue$unref","unref","startIndex","stopIndex","cacheBackward","BACKWARD","Math","max","cacheForward","min","rowsToRender","rowCache","_vue$unref2","estimatedTotalHeight","estimatedTotalWidth","windowStyle","_a","position","overflow","WebkitOverflowScrolling","willChange","direction","style","innerStyle","pointerEvents","emitEvents","_vue$unref3","_vue$unref4","_slicedToArray","columnCacheStart","columnCacheEnd","columnVisibleStart","columnVisibleEnd","_vue$unref5","_vue$unref6","rowCacheStart","rowCacheEnd","rowVisibleStart","rowVisibleEnd","_vue$unref7","onScroll","e","_e$currentTarget","currentTarget","clientHeight","clientWidth","scrollHeight","scrollWidth","_states","_scrollLeft","utils","isRTL","getRTLOffsetType","RTL_OFFSET_NAG","RTL_OFFSET_POS_DESC","value","_objectSpread","getScrollDir","nextTick","resetIsScrolling","onUpdated","onVerticalScroll","distance","totalSteps","offset","scrollTo","onHorizontalScroll","_useGridWheel$useGrid","useGridWheel","atXStartEdge","atXEndEdge","atYStartEdge","atYEndEdge","x","y","_b","_c","_d","onMouseUp","call","onWheel","core","useEventListener","passive","_ref3","_ref3$scrollLeft","_ref3$scrollTop","scrollToItem","rowIndex","arguments","length","undefined","columnIdx","alignment","AUTO_ALIGNMENT","scrollBarWidth","scroll","getScrollBarWidth","namespace","_cache","estimatedHeight","estimatedWidth","getItemStyle","columnIndex","columnWidth","rowHeight","itemStyleCache","key","shared","hasOwn","_getColumnPosition","_getColumnPosition2","left","rtl","_getRowPosition","_getRowPosition2","top","_getColumnPosition3","_getColumnPosition4","right","onMounted","isClient","windowElement","_vue$unref8","RTL","RTL_OFFSET_POS_ASC","_instance$proxy","proxy","resetAfterColumnIndex","resetAfterRowIndex","resetAfter","renderScrollbars","scrollbarAlwaysOn","scrollbarStartGap","scrollbarEndGap","_vue$unref9","horizontalScrollbar","h","scrollbar","alwaysOn","startGap","endGap","clientSize","layout","ratio","scrollFrom","total","visible","verticalScrollbar","renderItems","_vue$unref0","_vue$unref1","columnStart","columnEnd","_vue$unref10","_vue$unref11","rowStart","rowEnd","data","useIsScrolling","itemKey","children","row","column","push","Fragment","renderInner","Inner","resolveDynamicComponent","innerElement","isString","default","renderWindow","Container","containerElement","_renderScrollbars","role","className"],"sources":["../../../../../../../packages/components/virtual-list/src/builders/build-grid.ts"],"sourcesContent":["import {\n  Fragment,\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  h,\n  nextTick,\n  onMounted,\n  ref,\n  resolveDynamicComponent,\n  unref,\n} from 'vue'\nimport { useEventListener } from '@vueuse/core'\nimport {\n  getScrollBarWidth,\n  hasOwn,\n  isClient,\n  isNumber,\n  isString,\n} from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport Scrollbar from '../components/scrollbar'\nimport { useGridWheel } from '../hooks/use-grid-wheel'\nimport { useCache } from '../hooks/use-cache'\nimport { virtualizedGridProps } from '../props'\nimport { getRTLOffsetType, getScrollDir, isRTL } from '../utils'\nimport {\n  AUTO_ALIGNMENT,\n  BACKWARD,\n  FORWARD,\n  ITEM_RENDER_EVT,\n  RTL,\n  RTL_OFFSET_NAG,\n  RTL_OFFSET_POS_ASC,\n  RTL_OFFSET_POS_DESC,\n  SCROLL_EVT,\n} from '../defaults'\nimport type {\n  CSSProperties,\n  Ref,\n  StyleValue,\n  UnwrapRef,\n  VNode,\n  VNodeChild,\n} from 'vue'\nimport type {\n  Alignment,\n  GridConstructorProps,\n  GridScrollOptions,\n  ScrollbarExpose,\n} from '../types'\nimport type { VirtualizedGridProps } from '../props'\nimport type { DynamicSizeGridInstance } from '../components/dynamic-size-grid.ts'\n\nconst createGrid = ({\n  name,\n  clearCache,\n  getColumnPosition,\n  getColumnStartIndexForOffset,\n  getColumnStopIndexForStartIndex,\n  getEstimatedTotalHeight,\n  getEstimatedTotalWidth,\n  getColumnOffset,\n  getRowOffset,\n  getRowPosition,\n  getRowStartIndexForOffset,\n  getRowStopIndexForStartIndex,\n\n  initCache,\n  injectToInstance,\n  validateProps,\n}: GridConstructorProps<VirtualizedGridProps>) => {\n  return defineComponent({\n    name: name ?? 'ElVirtualList',\n    props: virtualizedGridProps,\n    emits: [ITEM_RENDER_EVT, SCROLL_EVT],\n    setup(props, { emit, expose, slots }) {\n      const ns = useNamespace('vl')\n\n      validateProps(props)\n      const instance = getCurrentInstance()!\n      const cache = ref(initCache(props, instance))\n      injectToInstance?.(instance, cache)\n      // refs\n      // here windowRef and innerRef can be type of HTMLElement\n      // or user defined component type, depends on the type passed\n      // by user\n      const windowRef = ref<HTMLElement>()\n      const hScrollbar = ref<ScrollbarExpose>()\n      const vScrollbar = ref<ScrollbarExpose>()\n      // innerRef is the actual container element which contains all the elements\n      const innerRef = ref(null)\n      const states = ref({\n        isScrolling: false,\n        scrollLeft: isNumber(props.initScrollLeft) ? props.initScrollLeft : 0,\n        scrollTop: isNumber(props.initScrollTop) ? props.initScrollTop : 0,\n        updateRequested: false,\n        xAxisScrollDir: FORWARD,\n        yAxisScrollDir: FORWARD,\n      })\n\n      const getItemStyleCache = useCache()\n\n      // computed\n      const parsedHeight = computed(() =>\n        Number.parseInt(`${props.height}`, 10)\n      )\n      const parsedWidth = computed(() => Number.parseInt(`${props.width}`, 10))\n      const columnsToRender = computed(() => {\n        const { totalColumn, totalRow, columnCache } = props\n        const { isScrolling, xAxisScrollDir, scrollLeft } = unref(states)\n\n        if (totalColumn === 0 || totalRow === 0) {\n          return [0, 0, 0, 0]\n        }\n\n        const startIndex = getColumnStartIndexForOffset(\n          props,\n          scrollLeft,\n          unref(cache)\n        )\n        const stopIndex = getColumnStopIndexForStartIndex(\n          props,\n          startIndex,\n          scrollLeft,\n          unref(cache)\n        )\n\n        const cacheBackward =\n          !isScrolling || xAxisScrollDir === BACKWARD\n            ? Math.max(1, columnCache)\n            : 1\n        const cacheForward =\n          !isScrolling || xAxisScrollDir === FORWARD\n            ? Math.max(1, columnCache)\n            : 1\n\n        return [\n          Math.max(0, startIndex - cacheBackward),\n          Math.max(0, Math.min(totalColumn! - 1, stopIndex + cacheForward)),\n          startIndex,\n          stopIndex,\n        ]\n      })\n\n      const rowsToRender = computed(() => {\n        const { totalColumn, totalRow, rowCache } = props\n        const { isScrolling, yAxisScrollDir, scrollTop } = unref(states)\n\n        if (totalColumn === 0 || totalRow === 0) {\n          return [0, 0, 0, 0]\n        }\n\n        const startIndex = getRowStartIndexForOffset(\n          props,\n          scrollTop,\n          unref(cache)\n        )\n        const stopIndex = getRowStopIndexForStartIndex(\n          props,\n          startIndex,\n          scrollTop,\n          unref(cache)\n        )\n\n        const cacheBackward =\n          !isScrolling || yAxisScrollDir === BACKWARD\n            ? Math.max(1, rowCache)\n            : 1\n        const cacheForward =\n          !isScrolling || yAxisScrollDir === FORWARD ? Math.max(1, rowCache) : 1\n\n        return [\n          Math.max(0, startIndex - cacheBackward),\n          Math.max(0, Math.min(totalRow! - 1, stopIndex + cacheForward)),\n          startIndex,\n          stopIndex,\n        ]\n      })\n\n      const estimatedTotalHeight = computed(() =>\n        getEstimatedTotalHeight(props, unref(cache))\n      )\n      const estimatedTotalWidth = computed(() =>\n        getEstimatedTotalWidth(props, unref(cache))\n      )\n\n      const windowStyle = computed<StyleValue>(() => [\n        {\n          position: 'relative',\n          overflow: 'hidden',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n        },\n        {\n          direction: props.direction,\n          height: isNumber(props.height) ? `${props.height}px` : props.height,\n          width: isNumber(props.width) ? `${props.width}px` : props.width,\n        },\n        props.style ?? {},\n      ])\n\n      const innerStyle = computed(() => {\n        const width = `${unref(estimatedTotalWidth)}px`\n        const height = `${unref(estimatedTotalHeight)}px`\n\n        return {\n          height,\n          pointerEvents: unref(states).isScrolling ? 'none' : undefined,\n          width,\n        }\n      })\n\n      // methods\n      const emitEvents = () => {\n        const { totalColumn, totalRow } = props\n\n        if (totalColumn! > 0 && totalRow! > 0) {\n          const [\n            columnCacheStart,\n            columnCacheEnd,\n            columnVisibleStart,\n            columnVisibleEnd,\n          ] = unref(columnsToRender)\n          const [rowCacheStart, rowCacheEnd, rowVisibleStart, rowVisibleEnd] =\n            unref(rowsToRender)\n          // emit the render item event with\n          // [xAxisInvisibleStart, xAxisInvisibleEnd, xAxisVisibleStart, xAxisVisibleEnd]\n          // [yAxisInvisibleStart, yAxisInvisibleEnd, yAxisVisibleStart, yAxisVisibleEnd]\n          emit(ITEM_RENDER_EVT, {\n            columnCacheStart,\n            columnCacheEnd,\n            rowCacheStart,\n            rowCacheEnd,\n            columnVisibleStart,\n            columnVisibleEnd,\n            rowVisibleStart,\n            rowVisibleEnd,\n          })\n        }\n\n        const {\n          scrollLeft,\n          scrollTop,\n          updateRequested,\n          xAxisScrollDir,\n          yAxisScrollDir,\n        } = unref(states)\n        emit(SCROLL_EVT, {\n          xAxisScrollDir,\n          scrollLeft,\n          yAxisScrollDir,\n          scrollTop,\n          updateRequested,\n        })\n      }\n\n      const onScroll = (e: Event) => {\n        const {\n          clientHeight,\n          clientWidth,\n          scrollHeight,\n          scrollLeft,\n          scrollTop,\n          scrollWidth,\n        } = e.currentTarget as HTMLElement\n\n        const _states = unref(states)\n\n        if (\n          _states.scrollTop === scrollTop &&\n          _states.scrollLeft === scrollLeft\n        ) {\n          return\n        }\n\n        let _scrollLeft = scrollLeft\n\n        if (isRTL(props.direction)) {\n          switch (getRTLOffsetType()) {\n            case RTL_OFFSET_NAG:\n              _scrollLeft = -scrollLeft\n              break\n            case RTL_OFFSET_POS_DESC:\n              _scrollLeft = scrollWidth - clientWidth - scrollLeft\n              break\n          }\n        }\n\n        states.value = {\n          ..._states,\n          isScrolling: true,\n          scrollLeft: _scrollLeft,\n          scrollTop: Math.max(\n            0,\n            Math.min(scrollTop, scrollHeight - clientHeight)\n          ),\n          updateRequested: true,\n          xAxisScrollDir: getScrollDir(_states.scrollLeft, _scrollLeft),\n          yAxisScrollDir: getScrollDir(_states.scrollTop, scrollTop),\n        }\n\n        nextTick(() => resetIsScrolling())\n\n        onUpdated()\n        emitEvents()\n      }\n\n      const onVerticalScroll = (distance: number, totalSteps: number) => {\n        const height = unref(parsedHeight)\n        const offset =\n          ((estimatedTotalHeight.value - height) / totalSteps) * distance\n        scrollTo({\n          scrollTop: Math.min(estimatedTotalHeight.value - height, offset),\n        })\n      }\n\n      const onHorizontalScroll = (distance: number, totalSteps: number) => {\n        const width = unref(parsedWidth)\n        const offset =\n          ((estimatedTotalWidth.value - width) / totalSteps) * distance\n        scrollTo({\n          scrollLeft: Math.min(estimatedTotalWidth.value - width, offset),\n        })\n      }\n\n      const { onWheel } = useGridWheel(\n        {\n          atXStartEdge: computed(() => states.value.scrollLeft <= 0),\n          atXEndEdge: computed(\n            () =>\n              states.value.scrollLeft >=\n              estimatedTotalWidth.value - unref(parsedWidth)\n          ),\n          atYStartEdge: computed(() => states.value.scrollTop <= 0),\n          atYEndEdge: computed(\n            () =>\n              states.value.scrollTop >=\n              estimatedTotalHeight.value - unref(parsedHeight)\n          ),\n        },\n        (x: number, y: number) => {\n          hScrollbar.value?.onMouseUp?.()\n          vScrollbar.value?.onMouseUp?.()\n          const width = unref(parsedWidth)\n          const height = unref(parsedHeight)\n          scrollTo({\n            scrollLeft: Math.min(\n              states.value.scrollLeft + x,\n              estimatedTotalWidth.value - width\n            ),\n            scrollTop: Math.min(\n              states.value.scrollTop + y,\n              estimatedTotalHeight.value - height\n            ),\n          })\n        }\n      )\n\n      useEventListener(windowRef, 'wheel', onWheel, {\n        passive: false,\n      })\n\n      const scrollTo = ({\n        scrollLeft = states.value.scrollLeft,\n        scrollTop = states.value.scrollTop,\n      }: GridScrollOptions) => {\n        scrollLeft = Math.max(scrollLeft, 0)\n        scrollTop = Math.max(scrollTop, 0)\n        const _states = unref(states)\n        if (\n          scrollTop === _states.scrollTop &&\n          scrollLeft === _states.scrollLeft\n        ) {\n          return\n        }\n\n        states.value = {\n          ..._states,\n          xAxisScrollDir: getScrollDir(_states.scrollLeft, scrollLeft),\n          yAxisScrollDir: getScrollDir(_states.scrollTop, scrollTop),\n          scrollLeft,\n          scrollTop,\n          updateRequested: true,\n        }\n\n        nextTick(() => resetIsScrolling())\n\n        onUpdated()\n        emitEvents()\n      }\n\n      const scrollToItem = (\n        rowIndex = 0,\n        columnIdx = 0,\n        alignment: Alignment = AUTO_ALIGNMENT\n      ) => {\n        const _states = unref(states)\n        columnIdx = Math.max(0, Math.min(columnIdx, props.totalColumn! - 1))\n        rowIndex = Math.max(0, Math.min(rowIndex, props.totalRow! - 1))\n        const scrollBarWidth = getScrollBarWidth(ns.namespace.value)\n\n        const _cache = unref(cache)\n        const estimatedHeight = getEstimatedTotalHeight(props, _cache)\n        const estimatedWidth = getEstimatedTotalWidth(props, _cache)\n\n        scrollTo({\n          scrollLeft: getColumnOffset(\n            props,\n            columnIdx,\n            alignment,\n            _states.scrollLeft,\n            _cache,\n            estimatedWidth > (props.width as number) ? scrollBarWidth : 0\n          ),\n          scrollTop: getRowOffset(\n            props,\n            rowIndex,\n            alignment,\n            _states.scrollTop,\n            _cache,\n            estimatedHeight > (props.height as number) ? scrollBarWidth : 0\n          ),\n        })\n      }\n\n      const getItemStyle = (rowIndex: number, columnIndex: number) => {\n        const { columnWidth, direction, rowHeight } = props\n        const itemStyleCache = getItemStyleCache.value(\n          clearCache && columnWidth,\n          clearCache && rowHeight,\n          clearCache && direction\n        )\n        // since there was no need to introduce an nested array into cache object\n        // we use row,column to construct the key for indexing the map.\n        const key = `${rowIndex},${columnIndex}`\n\n        if (hasOwn(itemStyleCache, key)) {\n          return itemStyleCache[key] as CSSProperties\n        } else {\n          const [, left] = getColumnPosition(props, columnIndex, unref(cache))\n          const _cache = unref(cache)\n\n          const rtl = isRTL(direction)\n          const [height, top] = getRowPosition(props, rowIndex, _cache)\n          const [width] = getColumnPosition(props, columnIndex, _cache)\n\n          itemStyleCache[key] = {\n            position: 'absolute',\n            left: rtl ? undefined : `${left}px`,\n            right: rtl ? `${left}px` : undefined,\n            top: `${top}px`,\n            height: `${height}px`,\n            width: `${width}px`,\n          }\n\n          return itemStyleCache[key] as CSSProperties\n        }\n      }\n\n      // TODO: debounce setting is scrolling.\n\n      const resetIsScrolling = () => {\n        states.value.isScrolling = false\n        nextTick(() => {\n          getItemStyleCache.value(-1, null, null)\n        })\n      }\n\n      // life cycles\n      onMounted(() => {\n        // for SSR\n        if (!isClient) return\n        const { initScrollLeft, initScrollTop } = props\n        const windowElement = unref(windowRef)\n        if (windowElement) {\n          if (isNumber(initScrollLeft)) {\n            windowElement.scrollLeft = initScrollLeft\n          }\n          if (isNumber(initScrollTop)) {\n            windowElement.scrollTop = initScrollTop\n          }\n        }\n        emitEvents()\n      })\n\n      const onUpdated = () => {\n        const { direction } = props\n        const { scrollLeft, scrollTop, updateRequested } = unref(states)\n\n        const windowElement = unref(windowRef)\n        if (updateRequested && windowElement) {\n          if (direction === RTL) {\n            switch (getRTLOffsetType()) {\n              case RTL_OFFSET_NAG: {\n                windowElement.scrollLeft = -scrollLeft\n                break\n              }\n              case RTL_OFFSET_POS_ASC: {\n                windowElement.scrollLeft = scrollLeft\n                break\n              }\n              default: {\n                const { clientWidth, scrollWidth } = windowElement\n                windowElement.scrollLeft =\n                  scrollWidth - clientWidth - scrollLeft\n                break\n              }\n            }\n          } else {\n            windowElement.scrollLeft = Math.max(0, scrollLeft)\n          }\n\n          windowElement.scrollTop = Math.max(0, scrollTop)\n        }\n      }\n\n      const { resetAfterColumnIndex, resetAfterRowIndex, resetAfter } =\n        instance.proxy as DynamicSizeGridInstance\n\n      expose({\n        windowRef,\n        innerRef,\n        getItemStyleCache,\n        scrollTo,\n        scrollToItem,\n        states,\n        resetAfterColumnIndex,\n        resetAfterRowIndex,\n        resetAfter,\n      })\n\n      // rendering part\n\n      const renderScrollbars = () => {\n        const {\n          scrollbarAlwaysOn,\n          scrollbarStartGap,\n          scrollbarEndGap,\n          totalColumn,\n          totalRow,\n        } = props\n\n        const width = unref(parsedWidth)\n        const height = unref(parsedHeight)\n        const estimatedWidth = unref(estimatedTotalWidth)\n        const estimatedHeight = unref(estimatedTotalHeight)\n        const { scrollLeft, scrollTop } = unref(states)\n        const horizontalScrollbar = h(Scrollbar, {\n          ref: hScrollbar,\n          alwaysOn: scrollbarAlwaysOn,\n          startGap: scrollbarStartGap,\n          endGap: scrollbarEndGap,\n          class: ns.e('horizontal'),\n          clientSize: width,\n          layout: 'horizontal',\n          onScroll: onHorizontalScroll,\n          ratio: (width * 100) / estimatedWidth,\n          scrollFrom: scrollLeft / (estimatedWidth - width),\n          total: totalRow,\n          visible: true,\n        })\n\n        const verticalScrollbar = h(Scrollbar, {\n          ref: vScrollbar,\n          alwaysOn: scrollbarAlwaysOn,\n          startGap: scrollbarStartGap,\n          endGap: scrollbarEndGap,\n          class: ns.e('vertical'),\n          clientSize: height,\n          layout: 'vertical',\n          onScroll: onVerticalScroll,\n          ratio: (height * 100) / estimatedHeight,\n          scrollFrom: scrollTop / (estimatedHeight - height),\n\n          total: totalColumn,\n          visible: true,\n        })\n\n        return {\n          horizontalScrollbar,\n          verticalScrollbar,\n        }\n      }\n\n      const renderItems = () => {\n        const [columnStart, columnEnd] = unref(columnsToRender)\n        const [rowStart, rowEnd] = unref(rowsToRender)\n        const { data, totalColumn, totalRow, useIsScrolling, itemKey } = props\n        const children: VNodeChild[] = []\n        if (totalRow > 0 && totalColumn > 0) {\n          for (let row = rowStart; row <= rowEnd; row++) {\n            for (let column = columnStart; column <= columnEnd; column++) {\n              const key = itemKey({ columnIndex: column, data, rowIndex: row })\n              children.push(\n                h(\n                  Fragment,\n                  { key },\n                  slots.default?.({\n                    columnIndex: column,\n                    data,\n                    isScrolling: useIsScrolling\n                      ? unref(states).isScrolling\n                      : undefined,\n                    style: getItemStyle(row, column),\n                    rowIndex: row,\n                  })\n                )\n              )\n            }\n          }\n        }\n        return children\n      }\n\n      const renderInner = () => {\n        const Inner = resolveDynamicComponent(props.innerElement) as VNode\n        const children = renderItems()\n        return [\n          h(\n            Inner,\n            {\n              style: unref(innerStyle),\n              ref: innerRef,\n            },\n            !isString(Inner)\n              ? {\n                  default: () => children,\n                }\n              : children\n          ),\n        ]\n      }\n\n      const renderWindow = () => {\n        const Container = resolveDynamicComponent(\n          props.containerElement\n        ) as VNode\n        const { horizontalScrollbar, verticalScrollbar } = renderScrollbars()\n        const Inner = renderInner()\n\n        return h(\n          'div',\n          {\n            key: 0,\n            class: ns.e('wrapper'),\n            role: props.role,\n          },\n          [\n            h(\n              Container,\n              {\n                class: props.className,\n                style: unref(windowStyle),\n                onScroll,\n                ref: windowRef,\n              },\n              !isString(Container) ? { default: () => Inner } : Inner\n            ),\n            horizontalScrollbar,\n            verticalScrollbar,\n          ]\n        )\n      }\n\n      return renderWindow\n    },\n  })\n}\n\nexport default createGrid\n\ntype Dir = typeof FORWARD | typeof BACKWARD\n\nexport type GridInstance = InstanceType<ReturnType<typeof createGrid>> &\n  UnwrapRef<{\n    windowRef: Ref<HTMLElement>\n    innerRef: Ref<HTMLElement>\n    getItemStyleCache: ReturnType<typeof useCache>\n    scrollTo: (scrollOptions: GridScrollOptions) => void\n    scrollToItem: (\n      rowIndex: number,\n      columnIndex: number,\n      alignment: Alignment\n    ) => void\n    states: Ref<{\n      isScrolling: boolean\n      scrollLeft: number\n      scrollTop: number\n      updateRequested: boolean\n      xAxisScrollDir: Dir\n      yAxisScrollDir: Dir\n    }>\n  }>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}