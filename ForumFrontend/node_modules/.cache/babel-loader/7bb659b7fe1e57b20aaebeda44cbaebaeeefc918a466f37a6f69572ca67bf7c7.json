{"ast":null,"code":"import _toConsumableArray from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"profile-container\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_3 = {\n  key: 1,\n  \"class\": \"user-info\"\n};\nvar _hoisted_4 = {\n  \"class\": \"avatar-container\"\n};\nvar _hoisted_5 = {\n  \"class\": \"username\"\n};\nvar _hoisted_6 = {\n  \"class\": \"user-meta\"\n};\nvar _hoisted_7 = {\n  \"class\": \"meta-item\"\n};\nvar _hoisted_8 = {\n  \"class\": \"meta-item\"\n};\nvar _hoisted_9 = {\n  \"class\": \"meta-item\"\n};\nvar _hoisted_10 = {\n  \"class\": \"meta-item\"\n};\nvar _hoisted_11 = {\n  \"class\": \"user-stats\"\n};\nvar _hoisted_12 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_13 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_14 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_15 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_16 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_17 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_18 = {\n  key: 0,\n  \"class\": \"user-actions\"\n};\nvar _hoisted_19 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_20 = {\n  key: 1,\n  \"class\": \"empty-container\"\n};\nvar _hoisted_21 = {\n  key: 2,\n  \"class\": \"post-list\"\n};\nvar _hoisted_22 = [\"onClick\"];\nvar _hoisted_23 = {\n  \"class\": \"post-title\"\n};\nvar _hoisted_24 = {\n  \"class\": \"post-meta\"\n};\nvar _hoisted_25 = {\n  \"class\": \"post-board\"\n};\nvar _hoisted_26 = {\n  \"class\": \"post-stats\"\n};\nvar _hoisted_27 = {\n  \"class\": \"post-time\"\n};\nvar _hoisted_28 = {\n  key: 0,\n  \"class\": \"pagination-container\"\n};\nvar _hoisted_29 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_30 = {\n  key: 1,\n  \"class\": \"empty-container\"\n};\nvar _hoisted_31 = {\n  key: 2,\n  \"class\": \"comment-list\"\n};\nvar _hoisted_32 = {\n  \"class\": \"comment-content\"\n};\nvar _hoisted_33 = {\n  \"class\": \"comment-meta\"\n};\nvar _hoisted_34 = [\"onClick\"];\nvar _hoisted_35 = {\n  \"class\": \"comment-time\"\n};\nvar _hoisted_36 = {\n  key: 0,\n  \"class\": \"pagination-container\"\n};\nvar _hoisted_37 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_38 = {\n  key: 1,\n  \"class\": \"empty-container\"\n};\nvar _hoisted_39 = {\n  key: 2,\n  \"class\": \"favorite-list\"\n};\nvar _hoisted_40 = [\"onClick\"];\nvar _hoisted_41 = {\n  \"class\": \"post-title\"\n};\nvar _hoisted_42 = {\n  \"class\": \"post-meta\"\n};\nvar _hoisted_43 = {\n  \"class\": \"post-author\"\n};\nvar _hoisted_44 = {\n  \"class\": \"post-board\"\n};\nvar _hoisted_45 = {\n  \"class\": \"post-stats\"\n};\nvar _hoisted_46 = {\n  \"class\": \"post-time\"\n};\nvar _hoisted_47 = {\n  key: 0,\n  \"class\": \"pagination-container\"\n};\nvar _hoisted_48 = {\n  \"class\": \"simple-form\"\n};\nvar _hoisted_49 = {\n  \"class\": \"form-item\"\n};\nvar _hoisted_50 = {\n  \"class\": \"form-item\"\n};\nvar _hoisted_51 = {\n  \"class\": \"avatar-preview\"\n};\nvar _hoisted_52 = {\n  \"class\": \"upload-options\"\n};\nvar _hoisted_53 = {\n  \"class\": \"url-input\"\n};\nvar _hoisted_54 = {\n  \"class\": \"dialog-footer\"\n};\nvar _hoisted_55 = {\n  \"class\": \"form-item\"\n};\nvar _hoisted_56 = {\n  \"class\": \"form-item\"\n};\nvar _hoisted_57 = {\n  \"class\": \"form-item\"\n};\nvar _hoisted_58 = {\n  \"class\": \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  var _component_user_avatar = _resolveComponent(\"user-avatar\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _component_el_col = _resolveComponent(\"el-col\");\n  var _component_el_empty = _resolveComponent(\"el-empty\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_el_pagination = _resolveComponent(\"el-pagination\");\n  var _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  var _component_el_tabs = _resolveComponent(\"el-tabs\");\n  var _component_el_row = _resolveComponent(\"el-row\");\n  var _component_el_upload = _resolveComponent(\"el-upload\");\n  var _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_row, {\n    gutter: 20\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createCommentVNode(\" 左侧用户信息卡片 \"), _createVNode(_component_el_col, {\n        span: 6\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_card, {\n            \"class\": \"profile-card\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_ctx.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_skeleton, {\n                rows: 5,\n                animated: \"\"\n              })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_user_avatar, {\n                user: _ctx.userProfile,\n                size: 100\n              }, null, 8 /* PROPS */, [\"user\"])]), _createElementVNode(\"h2\", _hoisted_5, _toDisplayString(_ctx.userProfile.nickname || _ctx.userProfile.username), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_cache[11] || (_cache[11] = _createElementVNode(\"i\", {\n                \"class\": \"el-icon-user\"\n              }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, _toDisplayString(_ctx.userProfile.username), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_8, [_cache[12] || (_cache[12] = _createElementVNode(\"i\", {\n                \"class\": \"el-icon-message\"\n              }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, _toDisplayString(_ctx.userProfile.email), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_cache[13] || (_cache[13] = _createElementVNode(\"i\", {\n                \"class\": \"el-icon-date\"\n              }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, \"注册于 \" + _toDisplayString($setup.formatDate(_ctx.userProfile.created_at)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_10, [_cache[14] || (_cache[14] = _createElementVNode(\"i\", {\n                \"class\": \"el-icon-time\"\n              }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, \"最后登录 \" + _toDisplayString($setup.formatDate(_ctx.userProfile.last_login)), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, _toDisplayString(_ctx.userStats.posts_count || 0), 1 /* TEXT */), _cache[15] || (_cache[15] = _createElementVNode(\"div\", {\n                \"class\": \"stat-label\"\n              }, \"帖子\", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, _toDisplayString(_ctx.userStats.comments_count || 0), 1 /* TEXT */), _cache[16] || (_cache[16] = _createElementVNode(\"div\", {\n                \"class\": \"stat-label\"\n              }, \"评论\", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, _toDisplayString(_ctx.userStats.favorites_count || 0), 1 /* TEXT */), _cache[17] || (_cache[17] = _createElementVNode(\"div\", {\n                \"class\": \"stat-label\"\n              }, \"收藏\", -1 /* HOISTED */))])]), $setup.isCurrentUser ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createVNode(_component_el_button, {\n                type: \"primary\",\n                onClick: $setup.showEditProfileDialog\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[18] || (_cache[18] = [_createTextVNode(\"编辑资料\")]);\n                }),\n                _: 1 /* STABLE */,\n                __: [18]\n              }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n                onClick: $setup.showChangePasswordDialog,\n                \"class\": \"user-actions-button\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[19] || (_cache[19] = [_createTextVNode(\"修改密码\")]);\n                }),\n                _: 1 /* STABLE */,\n                __: [19]\n              }, 8 /* PROPS */, [\"onClick\"])])) : _createCommentVNode(\"v-if\", true)]))];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 右侧内容区域 \"), _createVNode(_component_el_col, {\n        span: 18\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_card, {\n            \"class\": \"content-card\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_tabs, {\n                modelValue: _ctx.activeTab,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n                  return _ctx.activeTab = $event;\n                }),\n                onTabClick: $setup.handleTabClick\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_tab_pane, {\n                    label: \"我的帖子\",\n                    name: \"posts\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_ctx.postsLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_createVNode(_component_el_skeleton, {\n                        rows: 5,\n                        animated: \"\"\n                      })])) : _ctx.posts.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [_createVNode(_component_el_empty, {\n                        description: \"暂无帖子\"\n                      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.posts, function (post) {\n                        return _openBlock(), _createElementBlock(\"div\", {\n                          key: post.id,\n                          \"class\": \"post-item\",\n                          onClick: function onClick($event) {\n                            return $setup.viewPost(post);\n                          }\n                        }, [_createElementVNode(\"div\", _hoisted_23, [post.is_pinned ? (_openBlock(), _createBlock(_component_el_tag, {\n                          key: 0,\n                          size: \"small\",\n                          type: \"danger\"\n                        }, {\n                          \"default\": _withCtx(function () {\n                            return _toConsumableArray(_cache[20] || (_cache[20] = [_createTextVNode(\"置顶\")]));\n                          }),\n                          _: 1 /* STABLE */,\n                          __: [20]\n                        })) : _createCommentVNode(\"v-if\", true), post.is_featured ? (_openBlock(), _createBlock(_component_el_tag, {\n                          key: 1,\n                          size: \"small\",\n                          type: \"success\"\n                        }, {\n                          \"default\": _withCtx(function () {\n                            return _toConsumableArray(_cache[21] || (_cache[21] = [_createTextVNode(\"精华\")]));\n                          }),\n                          _: 1 /* STABLE */,\n                          __: [21]\n                        })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"span\", null, _toDisplayString(post.title), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, [_cache[22] || (_cache[22] = _createElementVNode(\"i\", {\n                          \"class\": \"el-icon-s-grid\"\n                        }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, _toDisplayString(post.board_name), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"span\", null, [_cache[23] || (_cache[23] = _createElementVNode(\"i\", {\n                          \"class\": \"el-icon-view\"\n                        }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(post.views), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_cache[24] || (_cache[24] = _createElementVNode(\"i\", {\n                          \"class\": \"el-icon-star-on\"\n                        }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(post.likes_count), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_cache[25] || (_cache[25] = _createElementVNode(\"i\", {\n                          \"class\": \"el-icon-chat-dot-round\"\n                        }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(post.comments_count), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_27, _toDisplayString($setup.formatDate(post.created_at)), 1 /* TEXT */)])], 8 /* PROPS */, _hoisted_22);\n                      }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 分页 \"), _ctx.posts.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_28, [_createVNode(_component_el_pagination, {\n                        background: \"\",\n                        layout: \"prev, pager, next\",\n                        total: _ctx.postsTotal,\n                        \"page-size\": _ctx.postsQuery.limit,\n                        \"current-page\": _ctx.postsQuery.page,\n                        \"onUpdate:currentPage\": $setup.handlePostsPageChange\n                      }, null, 8 /* PROPS */, [\"total\", \"page-size\", \"current-page\", \"onUpdate:currentPage\"])])) : _createCommentVNode(\"v-if\", true)]))];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_tab_pane, {\n                    label: \"我的评论\",\n                    name: \"comments\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_ctx.commentsLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [_createVNode(_component_el_skeleton, {\n                        rows: 5,\n                        animated: \"\"\n                      })])) : _ctx.comments.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_30, [_createVNode(_component_el_empty, {\n                        description: \"暂无评论\"\n                      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_31, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.comments, function (comment) {\n                        return _openBlock(), _createElementBlock(\"div\", {\n                          key: comment.id,\n                          \"class\": \"comment-item\"\n                        }, [_createElementVNode(\"div\", _hoisted_32, _toDisplayString(comment.content), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_33, [_createElementVNode(\"div\", {\n                          \"class\": \"comment-post\",\n                          onClick: function onClick($event) {\n                            return $setup.viewPost({\n                              id: comment.post\n                            });\n                          }\n                        }, _toConsumableArray(_cache[26] || (_cache[26] = [_createElementVNode(\"i\", {\n                          \"class\": \"el-icon-document\"\n                        }, null, -1 /* HOISTED */), _createElementVNode(\"span\", null, \"查看原帖\", -1 /* HOISTED */)])), 8 /* PROPS */, _hoisted_34), _createElementVNode(\"div\", _hoisted_35, _toDisplayString($setup.formatDate(comment.created_at)), 1 /* TEXT */)])]);\n                      }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 分页 \"), _ctx.comments.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_36, [_createVNode(_component_el_pagination, {\n                        background: \"\",\n                        layout: \"prev, pager, next\",\n                        total: _ctx.commentsTotal,\n                        \"page-size\": _ctx.commentsQuery.limit,\n                        \"current-page\": _ctx.commentsQuery.page,\n                        \"onUpdate:currentPage\": $setup.handleCommentsPageChange\n                      }, null, 8 /* PROPS */, [\"total\", \"page-size\", \"current-page\", \"onUpdate:currentPage\"])])) : _createCommentVNode(\"v-if\", true)]))];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_tab_pane, {\n                    label: \"我的收藏\",\n                    name: \"favorites\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_ctx.favoritesLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_37, [_createVNode(_component_el_skeleton, {\n                        rows: 5,\n                        animated: \"\"\n                      })])) : _ctx.favorites.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_38, [_createVNode(_component_el_empty, {\n                        description: \"暂无收藏\"\n                      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_39, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.favorites, function (favorite) {\n                        return _openBlock(), _createElementBlock(\"div\", {\n                          key: favorite.id,\n                          \"class\": \"favorite-item\",\n                          onClick: function onClick($event) {\n                            return $setup.viewPost(favorite.post);\n                          }\n                        }, [_createElementVNode(\"div\", _hoisted_41, [favorite.post.is_pinned ? (_openBlock(), _createBlock(_component_el_tag, {\n                          key: 0,\n                          size: \"small\",\n                          type: \"danger\"\n                        }, {\n                          \"default\": _withCtx(function () {\n                            return _toConsumableArray(_cache[27] || (_cache[27] = [_createTextVNode(\"置顶\")]));\n                          }),\n                          _: 1 /* STABLE */,\n                          __: [27]\n                        })) : _createCommentVNode(\"v-if\", true), favorite.post.is_featured ? (_openBlock(), _createBlock(_component_el_tag, {\n                          key: 1,\n                          size: \"small\",\n                          type: \"success\"\n                        }, {\n                          \"default\": _withCtx(function () {\n                            return _toConsumableArray(_cache[28] || (_cache[28] = [_createTextVNode(\"精华\")]));\n                          }),\n                          _: 1 /* STABLE */,\n                          __: [28]\n                        })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"span\", null, _toDisplayString(favorite.post.title), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_42, [_createElementVNode(\"div\", _hoisted_43, [_cache[29] || (_cache[29] = _createElementVNode(\"i\", {\n                          \"class\": \"el-icon-user\"\n                        }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, _toDisplayString(favorite.post.user.nickname || favorite.post.user.username), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_44, [_cache[30] || (_cache[30] = _createElementVNode(\"i\", {\n                          \"class\": \"el-icon-s-grid\"\n                        }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, _toDisplayString(favorite.post.board_name), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_45, [_createElementVNode(\"span\", null, [_cache[31] || (_cache[31] = _createElementVNode(\"i\", {\n                          \"class\": \"el-icon-view\"\n                        }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(favorite.post.views), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_cache[32] || (_cache[32] = _createElementVNode(\"i\", {\n                          \"class\": \"el-icon-star-on\"\n                        }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(favorite.post.likes_count), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_cache[33] || (_cache[33] = _createElementVNode(\"i\", {\n                          \"class\": \"el-icon-chat-dot-round\"\n                        }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(favorite.post.comments_count), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_46, _toDisplayString($setup.formatDate(favorite.created_at)), 1 /* TEXT */)])], 8 /* PROPS */, _hoisted_40);\n                      }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 分页 \"), _ctx.favorites.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_47, [_createVNode(_component_el_pagination, {\n                        background: \"\",\n                        layout: \"prev, pager, next\",\n                        total: _ctx.favoritesTotal,\n                        \"page-size\": _ctx.favoritesQuery.limit,\n                        \"current-page\": _ctx.favoritesQuery.page,\n                        \"onUpdate:currentPage\": $setup.handleFavoritesPageChange\n                      }, null, 8 /* PROPS */, [\"total\", \"page-size\", \"current-page\", \"onUpdate:currentPage\"])])) : _createCommentVNode(\"v-if\", true)]))];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"modelValue\", \"onTabClick\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      })];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 编辑资料对话框 \"), _createVNode(_component_el_dialog, {\n    title: \"编辑个人资料\",\n    modelValue: _ctx.editProfileDialogVisible,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n      return _ctx.editProfileDialogVisible = $event;\n    }),\n    width: \"500px\",\n    \"destroy-on-close\": \"\"\n  }, {\n    footer: _withCtx(function () {\n      return [_createElementVNode(\"span\", _hoisted_54, [_createVNode(_component_el_button, {\n        onClick: _cache[3] || (_cache[3] = function ($event) {\n          return _ctx.editProfileDialogVisible = false;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[38] || (_cache[38] = [_createTextVNode(\"取 消\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [38]\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.submitProfileForm,\n        loading: _ctx.submitting\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[39] || (_cache[39] = [_createTextVNode(\"确 定\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [39]\n      }, 8 /* PROPS */, [\"onClick\", \"loading\"])])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_48, [_createElementVNode(\"div\", _hoisted_49, [_cache[34] || (_cache[34] = _createElementVNode(\"label\", null, \"昵称：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n        type: \"text\",\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n          return _ctx.nicknameInput = $event;\n        }),\n        placeholder: \"请输入昵称\",\n        \"class\": \"simple-input\"\n      }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.nicknameInput]])]), _createElementVNode(\"div\", _hoisted_50, [_cache[37] || (_cache[37] = _createElementVNode(\"label\", null, \"头像：\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_51, [_createVNode(_component_user_avatar, {\n        user: {\n          nickname: _ctx.nicknameInput,\n          username: _ctx.userProfile.username,\n          avatar_url: _ctx.avatarUrlInput\n        },\n        size: 80\n      }, null, 8 /* PROPS */, [\"user\"])]), _createElementVNode(\"div\", _hoisted_52, [_createVNode(_component_el_upload, {\n        \"class\": \"avatar-uploader\",\n        action: \"#\",\n        \"http-request\": $setup.handleAvatarUpload,\n        \"show-file-list\": false,\n        \"before-upload\": $setup.beforeAvatarUpload\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_button, {\n            type: \"primary\",\n            size: \"small\"\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[35] || (_cache[35] = [_createTextVNode(\"上传头像\")]);\n            }),\n            _: 1 /* STABLE */,\n            __: [35]\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"http-request\", \"before-upload\"]), _createElementVNode(\"div\", _hoisted_53, [_cache[36] || (_cache[36] = _createElementVNode(\"p\", {\n        \"class\": \"hint-text\"\n      }, \"或者直接输入图片URL：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n        type: \"text\",\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n          return _ctx.avatarUrlInput = $event;\n        }),\n        placeholder: \"请输入头像URL\",\n        \"class\": \"simple-input\"\n      }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.avatarUrlInput]])])])])])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 修改密码对话框 \"), _createVNode(_component_el_dialog, {\n    title: \"修改密码\",\n    modelValue: _ctx.changePasswordDialogVisible,\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = function ($event) {\n      return _ctx.changePasswordDialogVisible = $event;\n    }),\n    width: \"500px\",\n    \"destroy-on-close\": \"\"\n  }, {\n    footer: _withCtx(function () {\n      return [_createElementVNode(\"span\", _hoisted_58, [_createVNode(_component_el_button, {\n        onClick: _cache[9] || (_cache[9] = function ($event) {\n          return _ctx.changePasswordDialogVisible = false;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[43] || (_cache[43] = [_createTextVNode(\"取 消\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [43]\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.submitPasswordForm,\n        loading: _ctx.submitting\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[44] || (_cache[44] = [_createTextVNode(\"确 定\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [44]\n      }, 8 /* PROPS */, [\"onClick\", \"loading\"])])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createElementVNode(\"form\", {\n        \"class\": \"simple-form\",\n        onSubmit: _cache[8] || (_cache[8] = _withModifiers(function () {\n          return $setup.submitPasswordForm && $setup.submitPasswordForm.apply($setup, arguments);\n        }, [\"prevent\"]))\n      }, [_createElementVNode(\"div\", _hoisted_55, [_cache[40] || (_cache[40] = _createElementVNode(\"label\", null, \"当前密码：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n        type: \"password\",\n        \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n          return _ctx.passwordForm.old_password = $event;\n        }),\n        placeholder: \"请输入当前密码\",\n        \"class\": \"simple-input\",\n        name: \"old_password\",\n        autocomplete: \"current-password\"\n      }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.passwordForm.old_password]])]), _createElementVNode(\"div\", _hoisted_56, [_cache[41] || (_cache[41] = _createElementVNode(\"label\", null, \"新密码：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n        type: \"password\",\n        \"onUpdate:modelValue\": _cache[6] || (_cache[6] = function ($event) {\n          return _ctx.passwordForm.new_password = $event;\n        }),\n        placeholder: \"请输入新密码\",\n        \"class\": \"simple-input\",\n        name: \"new_password\",\n        autocomplete: \"new-password\"\n      }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.passwordForm.new_password]])]), _createElementVNode(\"div\", _hoisted_57, [_cache[42] || (_cache[42] = _createElementVNode(\"label\", null, \"确认新密码：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n        type: \"password\",\n        \"onUpdate:modelValue\": _cache[7] || (_cache[7] = function ($event) {\n          return _ctx.passwordForm.confirm_password = $event;\n        }),\n        placeholder: \"请再次输入新密码\",\n        \"class\": \"simple-input\",\n        name: \"confirm_password\",\n        autocomplete: \"new-password\"\n      }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.passwordForm.confirm_password]])])], 32 /* NEED_HYDRATION */)];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createVNode","_component_el_row","gutter","_withCtx","_createCommentVNode","_component_el_col","span","_component_el_card","_ctx","loading","_hoisted_2","_component_el_skeleton","rows","animated","_hoisted_3","_createElementVNode","_hoisted_4","_component_user_avatar","user","userProfile","size","_hoisted_5","_toDisplayString","nickname","username","_hoisted_6","_hoisted_7","_hoisted_8","email","_hoisted_9","$setup","formatDate","created_at","_hoisted_10","last_login","_hoisted_11","_hoisted_12","_hoisted_13","userStats","posts_count","_hoisted_14","_hoisted_15","comments_count","_hoisted_16","_hoisted_17","favorites_count","isCurrentUser","_hoisted_18","_component_el_button","type","onClick","showEditProfileDialog","_cache","_createTextVNode","_","__","showChangePasswordDialog","_component_el_tabs","modelValue","activeTab","$event","onTabClick","handleTabClick","_component_el_tab_pane","label","name","postsLoading","_hoisted_19","posts","length","_hoisted_20","_component_el_empty","description","_hoisted_21","_Fragment","_renderList","post","id","viewPost","_hoisted_23","is_pinned","_createBlock","_component_el_tag","_toConsumableArray","is_featured","title","_hoisted_24","_hoisted_25","board_name","_hoisted_26","views","likes_count","_hoisted_27","_hoisted_22","_hoisted_28","_component_el_pagination","background","layout","total","postsTotal","postsQuery","limit","page","handlePostsPageChange","commentsLoading","_hoisted_29","comments","_hoisted_30","_hoisted_31","comment","_hoisted_32","content","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","commentsTotal","commentsQuery","handleCommentsPageChange","favoritesLoading","_hoisted_37","favorites","_hoisted_38","_hoisted_39","favorite","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_40","_hoisted_47","favoritesTotal","favoritesQuery","handleFavoritesPageChange","_component_el_dialog","editProfileDialogVisible","width","footer","_hoisted_54","submitProfileForm","submitting","_hoisted_48","_hoisted_49","nicknameInput","placeholder","_hoisted_50","_hoisted_51","avatar_url","avatarUrlInput","_hoisted_52","_component_el_upload","action","handleAvatarUpload","beforeAvatarUpload","_hoisted_53","changePasswordDialogVisible","_hoisted_58","submitPasswordForm","onSubmit","_withModifiers","apply","arguments","_hoisted_55","passwordForm","old_password","autocomplete","_hoisted_56","new_password","_hoisted_57","confirm_password"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\user\\Profile.vue"],"sourcesContent":["<template>\n  <div class=\"profile-container\">\n    <el-row :gutter=\"20\">\n      <!-- 左侧用户信息卡片 -->\n      <el-col :span=\"6\">\n        <el-card class=\"profile-card\">\n          <div v-if=\"loading\" class=\"loading-container\">\n            <el-skeleton :rows=\"5\" animated />\n          </div>\n          <div v-else class=\"user-info\">\n            <div class=\"avatar-container\">\n              <user-avatar :user=\"userProfile\" :size=\"100\" />\n            </div>\n            <h2 class=\"username\">{{ userProfile.nickname || userProfile.username }}</h2>\n            <div class=\"user-meta\">\n              <div class=\"meta-item\">\n                <i class=\"el-icon-user\"></i>\n                <span>{{ userProfile.username }}</span>\n              </div>\n              <div class=\"meta-item\">\n                <i class=\"el-icon-message\"></i>\n                <span>{{ userProfile.email }}</span>\n              </div>\n              <div class=\"meta-item\">\n                <i class=\"el-icon-date\"></i>\n                <span>注册于 {{ formatDate(userProfile.created_at) }}</span>\n              </div>\n              <div class=\"meta-item\">\n                <i class=\"el-icon-time\"></i>\n                <span>最后登录 {{ formatDate(userProfile.last_login) }}</span>\n              </div>\n            </div>\n\n            <div class=\"user-stats\">\n              <div class=\"stat-item\">\n                <div class=\"stat-value\">{{ userStats.posts_count || 0 }}</div>\n                <div class=\"stat-label\">帖子</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-value\">{{ userStats.comments_count || 0 }}</div>\n                <div class=\"stat-label\">评论</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-value\">{{ userStats.favorites_count || 0 }}</div>\n                <div class=\"stat-label\">收藏</div>\n              </div>\n            </div>\n\n            <div v-if=\"isCurrentUser\" class=\"user-actions\">\n              <el-button type=\"primary\" @click=\"showEditProfileDialog\">编辑资料</el-button>\n              <el-button @click=\"showChangePasswordDialog\" class=\"user-actions-button\">修改密码</el-button>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n\n      <!-- 右侧内容区域 -->\n      <el-col :span=\"18\">\n        <el-card class=\"content-card\">\n          <el-tabs v-model=\"activeTab\" @tab-click=\"handleTabClick\">\n            <el-tab-pane label=\"我的帖子\" name=\"posts\">\n              <div v-if=\"postsLoading\" class=\"loading-container\">\n                <el-skeleton :rows=\"5\" animated />\n              </div>\n              <div v-else-if=\"posts.length === 0\" class=\"empty-container\">\n                <el-empty description=\"暂无帖子\" />\n              </div>\n              <div v-else class=\"post-list\">\n                <div\n                  v-for=\"post in posts\"\n                  :key=\"post.id\"\n                  class=\"post-item\"\n                  @click=\"viewPost(post)\"\n                >\n                  <div class=\"post-title\">\n                    <el-tag v-if=\"post.is_pinned\" size=\"small\" type=\"danger\">置顶</el-tag>\n                    <el-tag v-if=\"post.is_featured\" size=\"small\" type=\"success\">精华</el-tag>\n                    <span>{{ post.title }}</span>\n                  </div>\n                  <div class=\"post-meta\">\n                    <div class=\"post-board\">\n                      <i class=\"el-icon-s-grid\"></i>\n                      <span>{{ post.board_name }}</span>\n                    </div>\n                    <div class=\"post-stats\">\n                      <span><i class=\"el-icon-view\"></i> {{ post.views }}</span>\n                      <span><i class=\"el-icon-star-on\"></i> {{ post.likes_count }}</span>\n                      <span><i class=\"el-icon-chat-dot-round\"></i> {{ post.comments_count }}</span>\n                    </div>\n                    <div class=\"post-time\">{{ formatDate(post.created_at) }}</div>\n                  </div>\n                </div>\n\n                <!-- 分页 -->\n                <div v-if=\"posts.length > 0\" class=\"pagination-container\">\n                  <el-pagination\n                    background\n                    layout=\"prev, pager, next\"\n                    :total=\"postsTotal\"\n                    :page-size=\"postsQuery.limit\"\n                    :current-page=\"postsQuery.page\"\n                    @update:current-page=\"handlePostsPageChange\"\n                  >\n                  </el-pagination>\n                </div>\n              </div>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"我的评论\" name=\"comments\">\n              <div v-if=\"commentsLoading\" class=\"loading-container\">\n                <el-skeleton :rows=\"5\" animated />\n              </div>\n              <div v-else-if=\"comments.length === 0\" class=\"empty-container\">\n                <el-empty description=\"暂无评论\" />\n              </div>\n              <div v-else class=\"comment-list\">\n                <div\n                  v-for=\"comment in comments\"\n                  :key=\"comment.id\"\n                  class=\"comment-item\"\n                >\n                  <div class=\"comment-content\">{{ comment.content }}</div>\n                  <div class=\"comment-meta\">\n                    <div class=\"comment-post\" @click=\"viewPost({ id: comment.post })\">\n                      <i class=\"el-icon-document\"></i>\n                      <span>查看原帖</span>\n                    </div>\n                    <div class=\"comment-time\">{{ formatDate(comment.created_at) }}</div>\n                  </div>\n                </div>\n\n                <!-- 分页 -->\n                <div v-if=\"comments.length > 0\" class=\"pagination-container\">\n                  <el-pagination\n                    background\n                    layout=\"prev, pager, next\"\n                    :total=\"commentsTotal\"\n                    :page-size=\"commentsQuery.limit\"\n                    :current-page=\"commentsQuery.page\"\n                    @update:current-page=\"handleCommentsPageChange\"\n                  >\n                  </el-pagination>\n                </div>\n              </div>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"我的收藏\" name=\"favorites\">\n              <div v-if=\"favoritesLoading\" class=\"loading-container\">\n                <el-skeleton :rows=\"5\" animated />\n              </div>\n              <div v-else-if=\"favorites.length === 0\" class=\"empty-container\">\n                <el-empty description=\"暂无收藏\" />\n              </div>\n              <div v-else class=\"favorite-list\">\n                <div\n                  v-for=\"favorite in favorites\"\n                  :key=\"favorite.id\"\n                  class=\"favorite-item\"\n                  @click=\"viewPost(favorite.post)\"\n                >\n                  <div class=\"post-title\">\n                    <el-tag v-if=\"favorite.post.is_pinned\" size=\"small\" type=\"danger\">置顶</el-tag>\n                    <el-tag v-if=\"favorite.post.is_featured\" size=\"small\" type=\"success\">精华</el-tag>\n                    <span>{{ favorite.post.title }}</span>\n                  </div>\n                  <div class=\"post-meta\">\n                    <div class=\"post-author\">\n                      <i class=\"el-icon-user\"></i>\n                      <span>{{ favorite.post.user.nickname || favorite.post.user.username }}</span>\n                    </div>\n                    <div class=\"post-board\">\n                      <i class=\"el-icon-s-grid\"></i>\n                      <span>{{ favorite.post.board_name }}</span>\n                    </div>\n                    <div class=\"post-stats\">\n                      <span><i class=\"el-icon-view\"></i> {{ favorite.post.views }}</span>\n                      <span><i class=\"el-icon-star-on\"></i> {{ favorite.post.likes_count }}</span>\n                      <span><i class=\"el-icon-chat-dot-round\"></i> {{ favorite.post.comments_count }}</span>\n                    </div>\n                    <div class=\"post-time\">{{ formatDate(favorite.created_at) }}</div>\n                  </div>\n                </div>\n\n                <!-- 分页 -->\n                <div v-if=\"favorites.length > 0\" class=\"pagination-container\">\n                  <el-pagination\n                    background\n                    layout=\"prev, pager, next\"\n                    :total=\"favoritesTotal\"\n                    :page-size=\"favoritesQuery.limit\"\n                    :current-page=\"favoritesQuery.page\"\n                    @update:current-page=\"handleFavoritesPageChange\"\n                  >\n                  </el-pagination>\n                </div>\n              </div>\n            </el-tab-pane>\n          </el-tabs>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 编辑资料对话框 -->\n    <el-dialog\n      title=\"编辑个人资料\"\n      v-model=\"editProfileDialogVisible\"\n      width=\"500px\"\n      destroy-on-close\n    >\n      <div class=\"simple-form\">\n        <div class=\"form-item\">\n          <label>昵称：</label>\n          <input\n            type=\"text\"\n            v-model=\"nicknameInput\"\n            placeholder=\"请输入昵称\"\n            class=\"simple-input\"\n          >\n        </div>\n\n        <div class=\"form-item\">\n          <label>头像：</label>\n          <div class=\"avatar-preview\">\n            <user-avatar :user=\"{nickname: nicknameInput, username: userProfile.username, avatar_url: avatarUrlInput}\" :size=\"80\" />\n          </div>\n          <div class=\"upload-options\">\n            <el-upload\n              class=\"avatar-uploader\"\n              action=\"#\"\n              :http-request=\"handleAvatarUpload\"\n              :show-file-list=\"false\"\n              :before-upload=\"beforeAvatarUpload\"\n            >\n              <el-button type=\"primary\" size=\"small\">上传头像</el-button>\n            </el-upload>\n            <div class=\"url-input\">\n              <p class=\"hint-text\">或者直接输入图片URL：</p>\n              <input\n                type=\"text\"\n                v-model=\"avatarUrlInput\"\n                placeholder=\"请输入头像URL\"\n                class=\"simple-input\"\n              >\n            </div>\n          </div>\n        </div>\n      </div>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"editProfileDialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitProfileForm\" :loading=\"submitting\">确 定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n\n    <!-- 修改密码对话框 -->\n    <el-dialog\n      title=\"修改密码\"\n      v-model=\"changePasswordDialogVisible\"\n      width=\"500px\"\n      destroy-on-close\n    >\n      <form class=\"simple-form\" @submit.prevent=\"submitPasswordForm\">\n        <div class=\"form-item\">\n          <label>当前密码：</label>\n          <input\n            type=\"password\"\n            v-model=\"passwordForm.old_password\"\n            placeholder=\"请输入当前密码\"\n            class=\"simple-input\"\n            name=\"old_password\"\n            autocomplete=\"current-password\"\n          >\n        </div>\n        <div class=\"form-item\">\n          <label>新密码：</label>\n          <input\n            type=\"password\"\n            v-model=\"passwordForm.new_password\"\n            placeholder=\"请输入新密码\"\n            class=\"simple-input\"\n            name=\"new_password\"\n            autocomplete=\"new-password\"\n          >\n        </div>\n        <div class=\"form-item\">\n          <label>确认新密码：</label>\n          <input\n            type=\"password\"\n            v-model=\"passwordForm.confirm_password\"\n            placeholder=\"请再次输入新密码\"\n            class=\"simple-input\"\n            name=\"confirm_password\"\n            autocomplete=\"new-password\"\n          >\n        </div>\n      </form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"changePasswordDialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitPasswordForm\" :loading=\"submitting\">确 定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { computed, onMounted, toRefs, reactive } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { ElMessage } from 'element-plus'\nimport { formatDateTime } from '@/utils/index'\nimport UserAvatar from '@/components/UserAvatar.vue'\nimport {\n  getUserProfile,\n  getUserById,\n  updateUserProfile,\n  getUserPosts,\n  getUserComments,\n  getUserFavorites,\n  uploadAvatar,\n  changePassword\n} from '@/api/profile'\n\n// 格式化日期函数\nconst formatDate = (date) => {\n  return formatDateTime(date)\n}\n\nexport default {\n  name: 'UserProfile',\n  components: {\n    UserAvatar\n  },\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n    const store = useStore()\n\n    // 状态\n    const state = reactive({\n      loading: false,\n      userProfile: {},\n      userStats: {\n        posts_count: 0,\n        comments_count: 0,\n        favorites_count: 0\n      },\n      activeTab: 'posts',\n\n      // 帖子相关\n      postsLoading: false,\n      posts: [],\n      postsTotal: 0,\n      postsQuery: {\n        page: 1,\n        limit: 10\n      },\n\n      // 评论相关\n      commentsLoading: false,\n      comments: [],\n      commentsTotal: 0,\n      commentsQuery: {\n        page: 1,\n        limit: 10\n      },\n\n      // 收藏相关\n      favoritesLoading: false,\n      favorites: [],\n      favoritesTotal: 0,\n      favoritesQuery: {\n        page: 1,\n        limit: 10\n      },\n\n      // 编辑资料相关\n      editProfileDialogVisible: false,\n      // 使用简单的变量存储表单数据\n      nicknameInput: '',\n      avatarUrlInput: '',\n      // 保留原来的表单对象以兼容其他代码\n      profileForm: {\n        nickname: '',\n        avatar_url: ''\n      },\n      profileRules: {\n        nickname: [\n          { max: 50, message: '昵称不能超过50个字符', trigger: 'blur' }\n        ]\n      },\n      uploadHeaders: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      },\n      submitting: false,\n      imageUploading: false,\n\n      // 修改密码相关\n      changePasswordDialogVisible: false,\n      passwordForm: {\n        old_password: '',\n        new_password: '',\n        confirm_password: ''\n      },\n      passwordRules: {\n        old_password: [\n          { required: true, message: '请输入当前密码', trigger: 'blur' }\n        ],\n        new_password: [\n          { required: true, message: '请输入新密码', trigger: 'blur' },\n          { min: 6, message: '密码长度不能少于6个字符', trigger: 'blur' }\n        ],\n        confirm_password: [\n          { required: true, message: '请再次输入新密码', trigger: 'blur' },\n          {\n            validator: (rule, value, callback) => {\n              if (value !== state.passwordForm.new_password) {\n                callback(new Error('两次输入的密码不一致'))\n              } else {\n                callback()\n              }\n            },\n            trigger: 'blur'\n          }\n        ]\n      }\n    })\n\n    // 计算属性\n    const userId = computed(() => route.params.id || 'me')\n    const isCurrentUser = computed(() => !route.params.id || route.params.id === 'me' || route.params.id === store.getters.userId.toString())\n\n    // 从查询参数中获取激活的标签页\n    if (route.query.tab && ['posts', 'comments', 'favorites'].includes(route.query.tab)) {\n      state.activeTab = route.query.tab\n    }\n\n    // 获取用户信息\n    const fetchUserProfile = async () => {\n      state.loading = true\n      try {\n        // 检查本地存储的token\n        const token = localStorage.getItem('token')\n        console.log('获取用户信息前的token:', token)\n\n        let response\n        if (userId.value === 'me' || !userId.value) {\n          console.log('获取当前用户信息')\n          response = await getUserProfile()\n        } else {\n          console.log('获取指定用户信息:', userId.value)\n          response = await getUserById(userId.value)\n        }\n\n        console.log('用户信息响应:', response)\n\n        // 处理不同的响应格式\n        if (response.code === 0) {\n          state.userProfile = response.data\n        } else if (response.id) {\n          // 直接返回了用户对象\n          state.userProfile = response\n        } else {\n          ElMessage.error('获取用户信息失败: 响应格式不正确')\n          console.error('响应格式不正确:', response)\n          return\n        }\n\n        // 初始化编辑表单\n        if (!state.profileForm) {\n          state.profileForm = {\n            nickname: state.userProfile.nickname || '',\n            avatar_url: state.userProfile.avatar_url || ''\n          }\n        } else {\n          state.profileForm.nickname = state.userProfile.nickname || ''\n          state.profileForm.avatar_url = state.userProfile.avatar_url || ''\n        }\n      } catch (error) {\n        console.error('获取用户信息失败:', error)\n        ElMessage.error('获取用户信息失败')\n      } finally {\n        state.loading = false\n      }\n    }\n\n    // 获取用户帖子\n    const fetchUserPosts = async () => {\n      state.postsLoading = true\n      try {\n        // 检查本地存储的token\n        const token = localStorage.getItem('token')\n        console.log('获取用户帖子前的token:', token)\n\n        const response = await getUserPosts(userId.value)\n        console.log('用户帖子响应:', response)\n\n        // 处理不同的响应格式\n        if (response.code === 0 && response.data) {\n          // 标准格式响应\n          state.posts = response.data.results || []\n          state.postsTotal = response.data.count || 0\n          state.userStats.posts_count = response.data.count || 0\n        } else if (response.results) {\n          // DRF分页响应格式\n          state.posts = response.results || []\n          state.postsTotal = response.count || 0\n          state.userStats.posts_count = response.count || 0\n        } else if (Array.isArray(response)) {\n          // 直接返回数组\n          state.posts = response\n          state.postsTotal = response.length\n          state.userStats.posts_count = response.length\n        } else {\n          // 其他格式\n          console.error('响应格式不正确:', response)\n          ElMessage.error('获取用户帖子失败: 响应格式不正确')\n          return\n        }\n      } catch (error) {\n        console.error('获取用户帖子失败:', error)\n        ElMessage.error('获取用户帖子失败')\n      } finally {\n        state.postsLoading = false\n      }\n    }\n\n    // 获取用户评论\n    const fetchUserComments = async () => {\n      state.commentsLoading = true\n      try {\n        console.log('开始获取用户评论，用户ID:', userId.value)\n        const response = await getUserComments(userId.value)\n        console.log('用户评论响应:', response)\n\n        // 处理不同的响应格式\n        if (response.code === 0 && response.data) {\n          // 标准格式响应\n          console.log('标准格式响应，评论数据:', response.data)\n          state.comments = response.data.results || []\n          state.commentsTotal = response.data.count || 0\n          state.userStats.comments_count = response.data.count || 0\n        } else if (response.results) {\n          // DRF分页响应格式\n          console.log('DRF分页响应格式，评论数据:', response.results)\n          state.comments = response.results || []\n          state.commentsTotal = response.count || 0\n          state.userStats.comments_count = response.count || 0\n        } else if (Array.isArray(response)) {\n          // 直接返回数组\n          console.log('直接返回数组格式，评论数据:', response)\n          state.comments = response\n          state.commentsTotal = response.length\n          state.userStats.comments_count = response.length\n        } else {\n          // 其他格式\n          console.error('响应格式不正确:', response)\n          ElMessage.error('获取用户评论失败: 响应格式不正确')\n          return\n        }\n        \n        // 打印获取到的评论数据\n        console.log('最终获取到的评论数据:', state.comments)\n        console.log('评论总数:', state.commentsTotal)\n      } catch (error) {\n        console.error('获取用户评论失败:', error)\n        ElMessage.error('获取用户评论失败')\n      } finally {\n        state.commentsLoading = false\n      }\n    }\n\n    // 获取用户收藏\n    const fetchUserFavorites = async () => {\n      state.favoritesLoading = true\n      try {\n        const response = await getUserFavorites(userId.value)\n        console.log('用户收藏响应:', response)\n\n        // 处理不同的响应格式\n        if (response.code === 0 && response.data) {\n          // 标准格式响应\n          state.favorites = response.data.results || []\n          state.favoritesTotal = response.data.count || 0\n          state.userStats.favorites_count = response.data.count || 0\n        } else if (response.results) {\n          // DRF分页响应格式\n          state.favorites = response.results || []\n          state.favoritesTotal = response.count || 0\n          state.userStats.favorites_count = response.count || 0\n        } else if (Array.isArray(response)) {\n          // 直接返回数组\n          state.favorites = response\n          state.favoritesTotal = response.length\n          state.userStats.favorites_count = response.length\n        } else {\n          // 其他格式\n          console.error('响应格式不正确:', response)\n          ElMessage.error('获取用户收藏失败: 响应格式不正确')\n          return\n        }\n      } catch (error) {\n        console.error('获取用户收藏失败:', error)\n        ElMessage.error('获取用户收藏失败')\n      } finally {\n        state.favoritesLoading = false\n      }\n    }\n\n    // 处理标签页切换\n    const handleTabClick = (tab) => {\n      state.activeTab = tab.name\n\n      if (tab.name === 'posts' && state.posts.length === 0) {\n        fetchUserPosts()\n      } else if (tab.name === 'comments' && state.comments.length === 0) {\n        fetchUserComments()\n      } else if (tab.name === 'favorites' && state.favorites.length === 0) {\n        fetchUserFavorites()\n      }\n    }\n\n    // 处理帖子分页变化\n    const handlePostsPageChange = (page) => {\n      console.log('帖子分页变化:', page)\n      state.postsQuery.page = page\n      fetchUserPosts()\n    }\n\n    // 处理评论分页变化\n    const handleCommentsPageChange = (page) => {\n      console.log('评论分页变化:', page)\n      state.commentsQuery.page = page\n      fetchUserComments()\n    }\n\n    // 处理收藏分页变化\n    const handleFavoritesPageChange = (page) => {\n      console.log('收藏分页变化:', page)\n      state.favoritesQuery.page = page\n      fetchUserFavorites()\n    }\n\n    // 查看帖子\n    const viewPost = (post) => {\n      router.push({ name: 'PostDetail', params: { id: post.id } })\n    }\n\n    // 显示编辑资料对话框\n    const showEditProfileDialog = () => {\n      try {\n        console.log('点击编辑资料按钮')\n\n        // 设置输入框的初始值\n        state.nicknameInput = state.userProfile?.nickname || ''\n        state.avatarUrlInput = state.userProfile?.avatar_url || ''\n\n        // 同时也设置原来的表单对象，以兼容其他代码\n        state.profileForm.nickname = state.userProfile?.nickname || ''\n        state.profileForm.avatar_url = state.userProfile?.avatar_url || ''\n\n        console.log('设置表单数据:', {\n          nicknameInput: state.nicknameInput,\n          avatarUrlInput: state.avatarUrlInput\n        })\n\n        // 更新上传头部以确保使用最新的token\n        state.uploadHeaders = {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n\n        // 显示对话框\n        state.editProfileDialogVisible = true\n      } catch (error) {\n        console.error('显示编辑资料对话框出错:', error)\n        ElMessage.error('显示编辑资料对话框出错')\n      }\n    }\n\n    // 我们现在使用直接绑定，不需要单独的处理函数\n\n    // 头像上传前的验证\n    const beforeAvatarUpload = (file) => {\n      state.imageUploading = true\n      const isImage = file.type.startsWith('image/')\n      const isLt2M = file.size / 1024 / 1024 < 2\n\n      if (!isImage) {\n        ElMessage.error('头像必须是图片格式!')\n        state.imageUploading = false\n        return false\n      }\n      if (!isLt2M) {\n        ElMessage.error('头像大小不能超过 2MB!')\n        state.imageUploading = false\n        return false\n      }\n      return true\n    }\n\n    // 处理头像上传\n    const handleAvatarUpload = async (options) => {\n      const { file } = options\n      state.imageUploading = true\n\n      try {\n        console.log('开始上传头像，文件信息:', {\n          name: file.name,\n          type: file.type,\n          size: file.size\n        })\n\n        // 创建FormData\n        const formData = new FormData()\n        formData.append('file', file)\n\n        // 检查token\n        const token = localStorage.getItem('token')\n        console.log('上传头像前的token:', token)\n\n        // 调用上传API\n        console.log('调用上传API，URL:', '/api/v1/users/profile/me/avatar/')\n        const response = await uploadAvatar(formData)\n        console.log('头像上传响应:', response)\n\n        if (response.status === 0 || response.code === 0) {\n          // 更新两个地方的头像地址\n          const avatarUrl = response.data?.avatar_url || ''\n          console.log('获取到的头像URL:', avatarUrl)\n          state.avatarUrlInput = avatarUrl\n          state.profileForm.avatar_url = avatarUrl\n\n          // 立即更新用户信息中的头像\n          // 确保头像 URL 是完整的\n          const fullAvatarUrl = avatarUrl.startsWith('http') ? avatarUrl : `http://localhost:8000${avatarUrl}`\n          console.log('完整的头像 URL:', fullAvatarUrl)\n          state.userProfile.avatar_url = fullAvatarUrl\n\n          // 更新Vuex中的用户信息\n          store.dispatch('updateUserInfo', {\n            ...store.getters.userInfo,\n            avatar_url: fullAvatarUrl\n          })\n\n          // 自动保存用户资料\n          // 注意：保存到后端的头像 URL 应该保持原样，不需要完整路径\n          updateUserProfile({\n            nickname: state.nicknameInput || state.userProfile.nickname || '',\n            avatar_url: avatarUrl  // 使用原始的相对路径\n          }).then(response => {\n            console.log('自动保存用户资料响应:', response)\n          }).catch(error => {\n            console.error('自动保存用户资料失败:', error)\n          })\n\n          ElMessage.success('头像上传成功')\n        } else {\n          console.error('头像上传失败，响应:', response)\n          ElMessage.error(response.msg || '头像上传失败')\n        }\n      } catch (error) {\n        console.error('头像上传失败:', error)\n        // 显示更详细的错误信息\n        if (error.response) {\n          console.error('错误响应:', error.response)\n          ElMessage.error(`头像上传失败: ${error.response.status} ${error.response.statusText}`)\n        } else if (error.request) {\n          console.error('请求未收到响应:', error.request)\n          ElMessage.error('头像上传失败: 服务器未响应')\n        } else {\n          console.error('请求配置错误:', error.message)\n          ElMessage.error(`头像上传失败: ${error.message}`)\n        }\n      } finally {\n        state.imageUploading = false\n      }\n    }\n\n    // 提交编辑资料表单\n    const submitProfileForm = async () => {\n      try {\n        console.log('提交编辑资料表单')\n        console.log('表单数据:', {\n          nicknameInput: state.nicknameInput,\n          avatarUrlInput: state.avatarUrlInput\n        })\n\n        state.submitting = true\n\n        // 准备要提交的数据\n        const formData = {\n          nickname: state.nicknameInput || '',\n          avatar_url: state.avatarUrlInput || ''\n        }\n\n        try {\n          // 先关闭对话框，避免用户等待\n          state.editProfileDialogVisible = false\n\n          const response = await updateUserProfile(formData)\n          console.log('更新用户资料响应:', response)\n\n          // 刷新用户信息，以确保显示最新数据\n          await fetchUserProfile()\n\n          // 更新Vuex中的用户信息\n          store.dispatch('updateUserInfo', {\n            ...store.getters.userInfo,\n            nickname: formData.nickname,\n            avatar_url: formData.avatar_url\n          })\n\n          // 显示成功消息\n          ElMessage.success('个人资料更新成功')\n        } catch (apiError) {\n          console.error('调用API更新用户资料失败:', apiError)\n\n          // 尝试刷新用户信息，查看是否实际更新成功\n          await fetchUserProfile()\n\n          // 显示错误消息\n          ElMessage.error('个人资料更新失败，请刷新页面查看最新状态')\n        }\n      } catch (error) {\n        console.error('个人资料更新失败:', error)\n        ElMessage.error('个人资料更新失败')\n        // 关闭对话框\n        state.editProfileDialogVisible = false\n      } finally {\n        state.submitting = false\n      }\n    }\n\n    // 显示修改密码对话框\n    const showChangePasswordDialog = () => {\n      try {\n        console.log('点击修改密码按钮')\n        console.log('当前密码对话框状态:', state.changePasswordDialogVisible)\n\n        // 初始化密码表单 - 确保 passwordForm 存在\n        if (!state.passwordForm) {\n          state.passwordForm = {\n            old_password: '',\n            new_password: '',\n            confirm_password: ''\n          }\n        } else {\n          // 重置密码表单\n          state.passwordForm.old_password = ''\n          state.passwordForm.new_password = ''\n          state.passwordForm.confirm_password = ''\n        }\n\n        // 显示对话框\n        state.changePasswordDialogVisible = true\n        console.log('设置密码对话框状态为:', state.changePasswordDialogVisible)\n      } catch (error) {\n        console.error('显示修改密码对话框出错:', error)\n        ElMessage.error('显示修改密码对话框出错')\n      }\n    }\n\n    // 提交修改密码表单\n    const submitPasswordForm = async () => {\n      try {\n        console.log('提交修改密码表单')\n\n        // 确保表单数据存在\n        if (!state.passwordForm) {\n          ElMessage.error('密码表单数据不存在')\n          return\n        }\n\n        // 验证密码\n        if (!state.passwordForm.old_password) {\n          ElMessage.error('请输入当前密码')\n          return\n        }\n\n        if (!state.passwordForm.new_password) {\n          ElMessage.error('请输入新密码')\n          return\n        }\n\n        if (state.passwordForm.new_password !== state.passwordForm.confirm_password) {\n          ElMessage.error('两次输入的密码不一致')\n          return\n        }\n\n        // 密码长度验证\n        if (state.passwordForm.new_password.length < 6) {\n          ElMessage.error('新密码长度不能少于6个字符')\n          return\n        }\n\n        state.submitting = true\n\n        // 准备请求数据\n        const requestData = {\n          old_password: state.passwordForm.old_password,\n          new_password: state.passwordForm.new_password,\n          confirm_password: state.passwordForm.confirm_password\n        }\n\n        console.log('发送修改密码请求:', requestData)\n\n        // 使用导入的changePassword函数发送请求\n        // 这样可以确保使用与其他API请求相同的配置\n        const response = await changePassword(requestData)\n\n        console.log('修改密码响应:', response)\n\n        if (response.code === 0 || response.status === 0) {\n          ElMessage.success(response.msg || '密码修改成功，请重新登录')\n          state.changePasswordDialogVisible = false\n\n          // 退出登录\n          store.dispatch('logout')\n          router.push('/login')\n        } else {\n          // 处理错误信息\n          console.error('密码修改失败，错误信息:', response.msg)\n\n          // 如果错误信息是对象，提取具体错误信息\n          if (typeof response.msg === 'object') {\n            const errorMessages = []\n\n            // 遍历错误对象的所有字段\n            for (const field in response.msg) {\n              const errors = response.msg[field]\n              if (Array.isArray(errors)) {\n                // 如果是数组，添加每个错误信息\n                errors.forEach(error => {\n                  errorMessages.push(`${field}: ${error}`)\n                })\n              } else if (typeof errors === 'string') {\n                // 如果是字符串，直接添加\n                errorMessages.push(`${field}: ${errors}`)\n              }\n            }\n\n            // 显示所有错误信息\n            if (errorMessages.length > 0) {\n              ElMessage.error(errorMessages.join('\\n'))\n            } else {\n              ElMessage.error('密码修改失败，请检查输入')\n            }\n          } else {\n            // 如果错误信息是字符串，直接显示\n            ElMessage.error(response.msg || '密码修改失败')\n          }\n        }\n      } catch (error) {\n        console.error('密码修改失败:', error)\n\n        // 显示详细的错误信息\n        if (error.response && error.response.data) {\n          const responseData = error.response.data\n\n          // 如果错误信息是对象，提取具体错误信息\n          if (responseData && typeof responseData.msg === 'object') {\n            const errorMessages = []\n\n            // 遍历错误对象的所有字段\n            for (const field in responseData.msg) {\n              const errors = responseData.msg[field]\n              if (Array.isArray(errors)) {\n                // 如果是数组，添加每个错误信息\n                errors.forEach(err => {\n                  errorMessages.push(`${field}: ${err}`)\n                })\n              } else if (typeof errors === 'string') {\n                // 如果是字符串，直接添加\n                errorMessages.push(`${field}: ${errors}`)\n              }\n            }\n\n            // 显示所有错误信息\n            if (errorMessages.length > 0) {\n              ElMessage.error(errorMessages.join('\\n'))\n            } else {\n              ElMessage.error('密码修改失败，请检查输入')\n            }\n          } else {\n            // 如果错误信息是字符串或未定义，显示默认消息\n            ElMessage.error((responseData.msg) || '密码修改失败')\n          }\n        } else if (error.message) {\n          ElMessage.error(`密码修改失败: ${error.message}`)\n        } else {\n          ElMessage.error('密码修改失败，请检查网络连接')\n        }\n      } finally {\n        state.submitting = false\n      }\n    }\n\n    // 组件挂载后执行\n    onMounted(async () => {\n      console.log('Profile组件挂载，开始获取用户信息')\n      await fetchUserProfile()\n\n      // 根据激活的标签页加载数据\n      console.log('当前激活的标签页:', state.activeTab)\n      if (state.activeTab === 'posts') {\n        console.log('开始获取用户帖子')\n        await fetchUserPosts()\n      } else if (state.activeTab === 'comments') {\n        console.log('开始获取用户评论')\n        await fetchUserComments()\n      } else if (state.activeTab === 'favorites') {\n        console.log('开始获取用户收藏')\n        await fetchUserFavorites()\n      }\n\n      // 无论当前标签页是什么，都预加载评论数据\n      if (state.activeTab !== 'comments') {\n        console.log('预加载用户评论数据')\n        fetchUserComments()\n      }\n    })\n\n    return {\n      ...toRefs(state),\n      userId,\n      isCurrentUser,\n      formatDate,\n      handleTabClick,\n      handlePostsPageChange,\n      handleCommentsPageChange,\n      handleFavoritesPageChange,\n      viewPost,\n      showEditProfileDialog,\n      // handleNicknameInput 已移除\n      beforeAvatarUpload,\n      handleAvatarUpload,\n      submitProfileForm,\n      showChangePasswordDialog,\n      submitPasswordForm\n    }\n  }\n}\n</script>\n\n<style scoped>\n.profile-container {\n  padding: 20px;\n}\n\n.loading-container {\n  padding: 20px 0;\n}\n\n.profile-card,\n.content-card {\n  margin-bottom: 20px;\n}\n\n.user-info {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.avatar-container {\n  margin-bottom: 15px;\n}\n\n.username {\n  margin: 0 0 15px;\n  font-size: 20px;\n}\n\n.user-meta {\n  width: 100%;\n  margin-bottom: 20px;\n}\n\n.meta-item {\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n  color: #606266;\n}\n\n.meta-item i {\n  margin-right: 8px;\n  width: 16px;\n  text-align: center;\n}\n\n.user-stats {\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 15px 0;\n  border-top: 1px solid #ebeef5;\n  border-bottom: 1px solid #ebeef5;\n}\n\n.stat-item {\n  text-align: center;\n}\n\n.stat-value {\n  font-size: 20px;\n  font-weight: bold;\n  color: #409eff;\n}\n\n.stat-label {\n  font-size: 14px;\n  color: #606266;\n}\n\n.user-actions {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 10px;\n}\n\n.empty-container {\n  padding: 40px 0;\n}\n\n.post-list,\n.comment-list,\n.favorite-list {\n  margin-bottom: 20px;\n}\n\n.post-item,\n.favorite-item {\n  padding: 15px;\n  border-bottom: 1px solid #ebeef5;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.post-item:hover,\n.favorite-item:hover {\n  background-color: #f5f7fa;\n}\n\n.post-item:last-child,\n.favorite-item:last-child {\n  border-bottom: none;\n}\n\n.post-title {\n  font-size: 16px;\n  font-weight: bold;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n}\n\n.post-title .el-tag {\n  margin-right: 8px;\n}\n\n.post-meta {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 13px;\n  color: #909399;\n}\n\n.post-board,\n.post-author {\n  display: flex;\n  align-items: center;\n}\n\n.post-board i,\n.post-author i {\n  margin-right: 5px;\n}\n\n.post-stats {\n  display: flex;\n}\n\n.post-stats span {\n  margin-right: 15px;\n  display: flex;\n  align-items: center;\n}\n\n.post-stats span i {\n  margin-right: 5px;\n}\n\n.comment-item {\n  padding: 15px;\n  border-bottom: 1px solid #ebeef5;\n}\n\n.comment-item:last-child {\n  border-bottom: none;\n}\n\n.comment-content {\n  margin-bottom: 10px;\n  line-height: 1.5;\n  white-space: pre-wrap;\n}\n\n.comment-meta {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 13px;\n  color: #909399;\n}\n\n.comment-post {\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  color: #409eff;\n}\n\n.comment-post i {\n  margin-right: 5px;\n}\n\n.pagination-container {\n  text-align: center;\n  margin-top: 20px;\n}\n\n.avatar-upload-container {\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 15px;\n}\n\n.avatar-preview {\n  margin-right: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.upload-options {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.avatar-uploader {\n  margin-bottom: 15px;\n}\n\n.url-input {\n  margin-top: 10px;\n}\n\n.hint-text {\n  font-size: 12px;\n  color: #909399;\n  margin-bottom: 5px;\n}\n\n.debug-info {\n  font-size: 12px;\n  color: #409EFF;\n  margin-top: 5px;\n  padding: 5px;\n  background-color: #f0f9ff;\n  border-radius: 4px;\n}\n\n.simple-form {\n  padding: 10px;\n}\n\n.form-item {\n  margin-bottom: 20px;\n}\n\n.form-item label {\n  display: block;\n  margin-bottom: 8px;\n  font-weight: bold;\n}\n\n.simple-input {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #dcdfe6;\n  border-radius: 4px;\n  font-size: 14px;\n  transition: border-color 0.2s;\n}\n\n.simple-input:focus {\n  outline: none;\n  border-color: #409EFF;\n}\n.user-actions-button{\n  margin-left:0;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}