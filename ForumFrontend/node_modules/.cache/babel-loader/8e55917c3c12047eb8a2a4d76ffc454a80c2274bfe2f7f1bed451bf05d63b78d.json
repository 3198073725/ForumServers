{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/slicedToArray.js\")[\"default\"];\nrequire(\"core-js/modules/es.array.concat.js\");\nrequire(\"core-js/modules/es.array.includes.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.string.includes.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar index = require('../../button/index.js');\nvar index$2 = require('../../tooltip/index.js');\nvar index$1 = require('../../scrollbar/index.js');\nvar index$3 = require('../../icon/index.js');\nvar rovingFocusGroup = require('../../roving-focus-group/src/roving-focus-group.js');\nvar iconsVue = require('@element-plus/icons-vue');\nvar dropdown = require('./dropdown.js');\nvar tokens = require('./tokens.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar onlyChild = require('../../slot/src/only-child.js');\nvar index$4 = require('../../../hooks/use-namespace/index.js');\nvar index$5 = require('../../../hooks/use-locale/index.js');\nvar style = require('../../../utils/dom/style.js');\nvar lodashUnified = require('lodash-unified');\nvar index$6 = require('../../../hooks/use-id/index.js');\nvar useFormCommonProps = require('../../form/src/hooks/use-form-common-props.js');\nvar ElButtonGroup = index.ElButton.ButtonGroup;\nvar _sfc_main = vue.defineComponent({\n  name: \"ElDropdown\",\n  components: {\n    ElButton: index.ElButton,\n    ElButtonGroup: ElButtonGroup,\n    ElScrollbar: index$1.ElScrollbar,\n    ElDropdownCollection: dropdown.ElCollection,\n    ElTooltip: index$2.ElTooltip,\n    ElRovingFocusGroup: rovingFocusGroup[\"default\"],\n    ElOnlyChild: onlyChild.OnlyChild,\n    ElIcon: index$3.ElIcon,\n    ArrowDown: iconsVue.ArrowDown\n  },\n  props: dropdown.dropdownProps,\n  emits: [\"visible-change\", \"click\", \"command\"],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var _instance = vue.getCurrentInstance();\n    var ns = index$4.useNamespace(\"dropdown\");\n    var _index$5$useLocale = index$5.useLocale(),\n      t = _index$5$useLocale.t;\n    var triggeringElementRef = vue.ref();\n    var referenceElementRef = vue.ref();\n    var popperRef = vue.ref();\n    var contentRef = vue.ref();\n    var scrollbar = vue.ref(null);\n    var currentTabId = vue.ref(null);\n    var isUsingKeyboard = vue.ref(false);\n    var wrapStyle = vue.computed(function () {\n      return {\n        maxHeight: style.addUnit(props.maxHeight)\n      };\n    });\n    var dropdownTriggerKls = vue.computed(function () {\n      return [ns.m(dropdownSize.value)];\n    });\n    var trigger = vue.computed(function () {\n      return lodashUnified.castArray(props.trigger);\n    });\n    var defaultTriggerId = index$6.useId().value;\n    var triggerId = vue.computed(function () {\n      return props.id || defaultTriggerId;\n    });\n    vue.watch([triggeringElementRef, trigger], function (_ref2, _ref3) {\n      var _ref4 = _slicedToArray(_ref2, 2),\n        triggeringElement = _ref4[0],\n        trigger2 = _ref4[1];\n      var _ref5 = _slicedToArray(_ref3, 1),\n        prevTriggeringElement = _ref5[0];\n      var _a, _b, _c;\n      if ((_a = prevTriggeringElement == null ? void 0 : prevTriggeringElement.$el) == null ? void 0 : _a.removeEventListener) {\n        prevTriggeringElement.$el.removeEventListener(\"pointerenter\", onAutofocusTriggerEnter);\n      }\n      if ((_b = triggeringElement == null ? void 0 : triggeringElement.$el) == null ? void 0 : _b.removeEventListener) {\n        triggeringElement.$el.removeEventListener(\"pointerenter\", onAutofocusTriggerEnter);\n      }\n      if (((_c = triggeringElement == null ? void 0 : triggeringElement.$el) == null ? void 0 : _c.addEventListener) && trigger2.includes(\"hover\")) {\n        triggeringElement.$el.addEventListener(\"pointerenter\", onAutofocusTriggerEnter);\n      }\n    }, {\n      immediate: true\n    });\n    vue.onBeforeUnmount(function () {\n      var _a, _b;\n      if ((_b = (_a = triggeringElementRef.value) == null ? void 0 : _a.$el) == null ? void 0 : _b.removeEventListener) {\n        triggeringElementRef.value.$el.removeEventListener(\"pointerenter\", onAutofocusTriggerEnter);\n      }\n    });\n    function handleClick() {\n      handleClose();\n    }\n    function handleClose() {\n      var _a;\n      (_a = popperRef.value) == null ? void 0 : _a.onClose();\n    }\n    function handleOpen() {\n      var _a;\n      (_a = popperRef.value) == null ? void 0 : _a.onOpen();\n    }\n    var dropdownSize = useFormCommonProps.useFormSize();\n    function commandHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      emit.apply(void 0, [\"command\"].concat(args));\n    }\n    function onAutofocusTriggerEnter() {\n      var _a, _b;\n      (_b = (_a = triggeringElementRef.value) == null ? void 0 : _a.$el) == null ? void 0 : _b.focus();\n    }\n    function onItemEnter() {}\n    function onItemLeave() {\n      var contentEl = vue.unref(contentRef);\n      trigger.value.includes(\"hover\") && (contentEl == null ? void 0 : contentEl.focus());\n      currentTabId.value = null;\n    }\n    function handleCurrentTabIdChange(id) {\n      currentTabId.value = id;\n    }\n    function handleEntryFocus(e) {\n      if (!isUsingKeyboard.value) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      }\n    }\n    function handleBeforeShowTooltip() {\n      emit(\"visible-change\", true);\n    }\n    function handleShowTooltip(event) {\n      var _a;\n      if ((event == null ? void 0 : event.type) === \"keydown\") {\n        (_a = contentRef.value) == null ? void 0 : _a.focus();\n      }\n    }\n    function handleBeforeHideTooltip() {\n      emit(\"visible-change\", false);\n    }\n    vue.provide(tokens.DROPDOWN_INJECTION_KEY, {\n      contentRef: contentRef,\n      role: vue.computed(function () {\n        return props.role;\n      }),\n      triggerId: triggerId,\n      isUsingKeyboard: isUsingKeyboard,\n      onItemEnter: onItemEnter,\n      onItemLeave: onItemLeave\n    });\n    vue.provide(\"elDropdown\", {\n      instance: _instance,\n      dropdownSize: dropdownSize,\n      handleClick: handleClick,\n      commandHandler: commandHandler,\n      trigger: vue.toRef(props, \"trigger\"),\n      hideOnClick: vue.toRef(props, \"hideOnClick\")\n    });\n    var onFocusAfterTrapped = function onFocusAfterTrapped(e) {\n      var _a, _b;\n      e.preventDefault();\n      (_b = (_a = contentRef.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a, {\n        preventScroll: true\n      });\n    };\n    var handlerMainButtonClick = function handlerMainButtonClick(event) {\n      emit(\"click\", event);\n    };\n    return {\n      t: t,\n      ns: ns,\n      scrollbar: scrollbar,\n      wrapStyle: wrapStyle,\n      dropdownTriggerKls: dropdownTriggerKls,\n      dropdownSize: dropdownSize,\n      triggerId: triggerId,\n      currentTabId: currentTabId,\n      handleCurrentTabIdChange: handleCurrentTabIdChange,\n      handlerMainButtonClick: handlerMainButtonClick,\n      handleEntryFocus: handleEntryFocus,\n      handleClose: handleClose,\n      handleOpen: handleOpen,\n      handleBeforeShowTooltip: handleBeforeShowTooltip,\n      handleShowTooltip: handleShowTooltip,\n      handleBeforeHideTooltip: handleBeforeHideTooltip,\n      onFocusAfterTrapped: onFocusAfterTrapped,\n      popperRef: popperRef,\n      contentRef: contentRef,\n      triggeringElementRef: triggeringElementRef,\n      referenceElementRef: referenceElementRef\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _a;\n  var _component_el_dropdown_collection = vue.resolveComponent(\"el-dropdown-collection\");\n  var _component_el_roving_focus_group = vue.resolveComponent(\"el-roving-focus-group\");\n  var _component_el_scrollbar = vue.resolveComponent(\"el-scrollbar\");\n  var _component_el_only_child = vue.resolveComponent(\"el-only-child\");\n  var _component_el_tooltip = vue.resolveComponent(\"el-tooltip\");\n  var _component_el_button = vue.resolveComponent(\"el-button\");\n  var _component_arrow_down = vue.resolveComponent(\"arrow-down\");\n  var _component_el_icon = vue.resolveComponent(\"el-icon\");\n  var _component_el_button_group = vue.resolveComponent(\"el-button-group\");\n  return vue.openBlock(), vue.createElementBlock(\"div\", {\n    \"class\": vue.normalizeClass([_ctx.ns.b(), _ctx.ns.is(\"disabled\", _ctx.disabled)])\n  }, [vue.createVNode(_component_el_tooltip, {\n    ref: \"popperRef\",\n    role: _ctx.role,\n    effect: _ctx.effect,\n    \"fallback-placements\": [\"bottom\", \"top\"],\n    \"popper-options\": _ctx.popperOptions,\n    \"gpu-acceleration\": false,\n    \"hide-after\": _ctx.trigger === \"hover\" ? _ctx.hideTimeout : 0,\n    \"manual-mode\": true,\n    placement: _ctx.placement,\n    \"popper-class\": [_ctx.ns.e(\"popper\"), _ctx.popperClass],\n    \"reference-element\": (_a = _ctx.referenceElementRef) == null ? void 0 : _a.$el,\n    trigger: _ctx.trigger,\n    \"trigger-keys\": _ctx.triggerKeys,\n    \"trigger-target-el\": _ctx.contentRef,\n    \"show-after\": _ctx.trigger === \"hover\" ? _ctx.showTimeout : 0,\n    \"stop-popper-mouse-event\": false,\n    \"virtual-ref\": _ctx.triggeringElementRef,\n    \"virtual-triggering\": _ctx.splitButton,\n    disabled: _ctx.disabled,\n    transition: \"\".concat(_ctx.ns.namespace.value, \"-zoom-in-top\"),\n    teleported: _ctx.teleported,\n    pure: \"\",\n    persistent: _ctx.persistent,\n    onBeforeShow: _ctx.handleBeforeShowTooltip,\n    onShow: _ctx.handleShowTooltip,\n    onBeforeHide: _ctx.handleBeforeHideTooltip\n  }, vue.createSlots({\n    content: vue.withCtx(function () {\n      return [vue.createVNode(_component_el_scrollbar, {\n        ref: \"scrollbar\",\n        \"wrap-style\": _ctx.wrapStyle,\n        tag: \"div\",\n        \"view-class\": _ctx.ns.e(\"list\")\n      }, {\n        \"default\": vue.withCtx(function () {\n          return [vue.createVNode(_component_el_roving_focus_group, {\n            loop: _ctx.loop,\n            \"current-tab-id\": _ctx.currentTabId,\n            orientation: \"horizontal\",\n            onCurrentTabIdChange: _ctx.handleCurrentTabIdChange,\n            onEntryFocus: _ctx.handleEntryFocus\n          }, {\n            \"default\": vue.withCtx(function () {\n              return [vue.createVNode(_component_el_dropdown_collection, null, {\n                \"default\": vue.withCtx(function () {\n                  return [vue.renderSlot(_ctx.$slots, \"dropdown\")];\n                }),\n                _: 3\n              })];\n            }),\n            _: 3\n          }, 8, [\"loop\", \"current-tab-id\", \"onCurrentTabIdChange\", \"onEntryFocus\"])];\n        }),\n        _: 3\n      }, 8, [\"wrap-style\", \"view-class\"])];\n    }),\n    _: 2\n  }, [!_ctx.splitButton ? {\n    name: \"default\",\n    fn: vue.withCtx(function () {\n      return [vue.createVNode(_component_el_only_child, {\n        id: _ctx.triggerId,\n        ref: \"triggeringElementRef\",\n        role: \"button\",\n        tabindex: _ctx.tabindex\n      }, {\n        \"default\": vue.withCtx(function () {\n          return [vue.renderSlot(_ctx.$slots, \"default\")];\n        }),\n        _: 3\n      }, 8, [\"id\", \"tabindex\"])];\n    })\n  } : void 0]), 1032, [\"role\", \"effect\", \"popper-options\", \"hide-after\", \"placement\", \"popper-class\", \"reference-element\", \"trigger\", \"trigger-keys\", \"trigger-target-el\", \"show-after\", \"virtual-ref\", \"virtual-triggering\", \"disabled\", \"transition\", \"teleported\", \"persistent\", \"onBeforeShow\", \"onShow\", \"onBeforeHide\"]), _ctx.splitButton ? (vue.openBlock(), vue.createBlock(_component_el_button_group, {\n    key: 0\n  }, {\n    \"default\": vue.withCtx(function () {\n      return [vue.createVNode(_component_el_button, vue.mergeProps({\n        ref: \"referenceElementRef\"\n      }, _ctx.buttonProps, {\n        size: _ctx.dropdownSize,\n        type: _ctx.type,\n        disabled: _ctx.disabled,\n        tabindex: _ctx.tabindex,\n        onClick: _ctx.handlerMainButtonClick\n      }), {\n        \"default\": vue.withCtx(function () {\n          return [vue.renderSlot(_ctx.$slots, \"default\")];\n        }),\n        _: 3\n      }, 16, [\"size\", \"type\", \"disabled\", \"tabindex\", \"onClick\"]), vue.createVNode(_component_el_button, vue.mergeProps({\n        id: _ctx.triggerId,\n        ref: \"triggeringElementRef\"\n      }, _ctx.buttonProps, {\n        role: \"button\",\n        size: _ctx.dropdownSize,\n        type: _ctx.type,\n        \"class\": _ctx.ns.e(\"caret-button\"),\n        disabled: _ctx.disabled,\n        tabindex: _ctx.tabindex,\n        \"aria-label\": _ctx.t(\"el.dropdown.toggleDropdown\")\n      }), {\n        \"default\": vue.withCtx(function () {\n          return [vue.createVNode(_component_el_icon, {\n            \"class\": vue.normalizeClass(_ctx.ns.e(\"icon\"))\n          }, {\n            \"default\": vue.withCtx(function () {\n              return [vue.createVNode(_component_arrow_down)];\n            }),\n            _: 1\n          }, 8, [\"class\"])];\n        }),\n        _: 1\n      }, 16, [\"id\", \"size\", \"type\", \"class\", \"disabled\", \"tabindex\", \"aria-label\"])];\n    }),\n    _: 3\n  })) : vue.createCommentVNode(\"v-if\", true)], 2);\n}\nvar Dropdown = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"dropdown.vue\"]]);\nexports[\"default\"] = Dropdown;","map":{"version":3,"names":["ElButtonGroup","index","ElButton","ButtonGroup","_sfc_main","vue","defineComponent","name","components","ElScrollbar","index$1","ElDropdownCollection","dropdown","ElCollection","ElTooltip","index$2","ElRovingFocusGroup","rovingFocusGroup","ElOnlyChild","onlyChild","OnlyChild","ElIcon","index$3","ArrowDown","iconsVue","props","dropdownProps","emits","setup","_ref","emit","_instance","getCurrentInstance","ns","index$4","useNamespace","_index$5$useLocale","index$5","useLocale","t","triggeringElementRef","ref","referenceElementRef","popperRef","contentRef","scrollbar","currentTabId","isUsingKeyboard","wrapStyle","computed","maxHeight","style","addUnit","dropdownTriggerKls","m","dropdownSize","value","trigger","lodashUnified","castArray","defaultTriggerId","index$6","useId","triggerId","id","watch","_ref2","_ref3","_ref4","_slicedToArray","triggeringElement","trigger2","_ref5","prevTriggeringElement","_a","_b","_c","$el","removeEventListener","onAutofocusTriggerEnter","addEventListener","includes","immediate","onBeforeUnmount","handleClick","handleClose","onClose","handleOpen","onOpen","useFormCommonProps","useFormSize","commandHandler","_len","arguments","length","args","Array","_key","apply","concat","focus","onItemEnter","onItemLeave","contentEl","unref","handleCurrentTabIdChange","handleEntryFocus","e","preventDefault","stopImmediatePropagation","handleBeforeShowTooltip","handleShowTooltip","event","type","handleBeforeHideTooltip","provide","tokens","DROPDOWN_INJECTION_KEY","role","instance","toRef","hideOnClick","onFocusAfterTrapped","call","preventScroll","handlerMainButtonClick","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_component_el_dropdown_collection","resolveComponent","_component_el_roving_focus_group","_component_el_scrollbar","_component_el_only_child","_component_el_tooltip","_component_el_button","popperOptions","hideTimeout","placement","triggerKeys","showTimeout","splitButton","disabled","transition","namespace","teleported","pure","persistent","onBeforeShow","onShow","onBeforeHide","createSlots","content","withCtx","createVNode","tag","loop","orientation","onCurrentTabIdChange","onEntryFocus","$slots","_","openBlock","createBlock","_component_el_button_group","key","mergeProps","buttonProps","size","tabindex","_component_el_icon","_component_arrow_down","createCommentVNode","Dropdown","pluginVue_exportHelper"],"sources":["../../../../../../packages/components/dropdown/src/dropdown.vue"],"sourcesContent":["<template>\n  <div :class=\"[ns.b(), ns.is('disabled', disabled)]\">\n    <el-tooltip\n      ref=\"popperRef\"\n      :role=\"role\"\n      :effect=\"effect\"\n      :fallback-placements=\"['bottom', 'top']\"\n      :popper-options=\"popperOptions\"\n      :gpu-acceleration=\"false\"\n      :hide-after=\"trigger === 'hover' ? hideTimeout : 0\"\n      :manual-mode=\"true\"\n      :placement=\"placement\"\n      :popper-class=\"[ns.e('popper'), popperClass]\"\n      :reference-element=\"referenceElementRef?.$el\"\n      :trigger=\"trigger\"\n      :trigger-keys=\"triggerKeys\"\n      :trigger-target-el=\"contentRef\"\n      :show-after=\"trigger === 'hover' ? showTimeout : 0\"\n      :stop-popper-mouse-event=\"false\"\n      :virtual-ref=\"triggeringElementRef\"\n      :virtual-triggering=\"splitButton\"\n      :disabled=\"disabled\"\n      :transition=\"`${ns.namespace.value}-zoom-in-top`\"\n      :teleported=\"teleported\"\n      pure\n      :persistent=\"persistent\"\n      @before-show=\"handleBeforeShowTooltip\"\n      @show=\"handleShowTooltip\"\n      @before-hide=\"handleBeforeHideTooltip\"\n    >\n      <template #content>\n        <el-scrollbar\n          ref=\"scrollbar\"\n          :wrap-style=\"wrapStyle\"\n          tag=\"div\"\n          :view-class=\"ns.e('list')\"\n        >\n          <el-roving-focus-group\n            :loop=\"loop\"\n            :current-tab-id=\"currentTabId\"\n            orientation=\"horizontal\"\n            @current-tab-id-change=\"handleCurrentTabIdChange\"\n            @entry-focus=\"handleEntryFocus\"\n          >\n            <el-dropdown-collection>\n              <slot name=\"dropdown\" />\n            </el-dropdown-collection>\n          </el-roving-focus-group>\n        </el-scrollbar>\n      </template>\n      <template v-if=\"!splitButton\" #default>\n        <el-only-child\n          :id=\"triggerId\"\n          ref=\"triggeringElementRef\"\n          role=\"button\"\n          :tabindex=\"tabindex\"\n        >\n          <slot name=\"default\" />\n        </el-only-child>\n      </template>\n    </el-tooltip>\n    <template v-if=\"splitButton\">\n      <el-button-group>\n        <el-button\n          ref=\"referenceElementRef\"\n          v-bind=\"buttonProps\"\n          :size=\"dropdownSize\"\n          :type=\"type\"\n          :disabled=\"disabled\"\n          :tabindex=\"tabindex\"\n          @click=\"handlerMainButtonClick\"\n        >\n          <slot name=\"default\" />\n        </el-button>\n        <el-button\n          :id=\"triggerId\"\n          ref=\"triggeringElementRef\"\n          v-bind=\"buttonProps\"\n          role=\"button\"\n          :size=\"dropdownSize\"\n          :type=\"type\"\n          :class=\"ns.e('caret-button')\"\n          :disabled=\"disabled\"\n          :tabindex=\"tabindex\"\n          :aria-label=\"t('el.dropdown.toggleDropdown')\"\n        >\n          <el-icon :class=\"ns.e('icon')\"><arrow-down /></el-icon>\n        </el-button>\n      </el-button-group>\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  onBeforeUnmount,\n  provide,\n  ref,\n  toRef,\n  unref,\n  watch,\n} from 'vue'\nimport ElButton from '@element-plus/components/button'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElIcon from '@element-plus/components/icon'\nimport ElRovingFocusGroup from '@element-plus/components/roving-focus-group'\nimport { ElOnlyChild } from '@element-plus/components/slot'\nimport { useFormSize } from '@element-plus/components/form'\nimport { addUnit, ensureArray } from '@element-plus/utils'\nimport { ArrowDown } from '@element-plus/icons-vue'\nimport { useId, useLocale, useNamespace } from '@element-plus/hooks'\nimport { ElCollection as ElDropdownCollection, dropdownProps } from './dropdown'\nimport { DROPDOWN_INJECTION_KEY } from './tokens'\n\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\nimport type { CSSProperties } from 'vue'\n\nconst { ButtonGroup: ElButtonGroup } = ElButton\n\nexport default defineComponent({\n  name: 'ElDropdown',\n  components: {\n    ElButton,\n    ElButtonGroup,\n    ElScrollbar,\n    ElDropdownCollection,\n    ElTooltip,\n    ElRovingFocusGroup,\n    ElOnlyChild,\n    ElIcon,\n    ArrowDown,\n  },\n  props: dropdownProps,\n  emits: ['visible-change', 'click', 'command'],\n  setup(props, { emit }) {\n    const _instance = getCurrentInstance()\n    const ns = useNamespace('dropdown')\n    const { t } = useLocale()\n\n    const triggeringElementRef = ref()\n    const referenceElementRef = ref()\n    const popperRef = ref<TooltipInstance>()\n    const contentRef = ref<HTMLElement>()\n    const scrollbar = ref(null)\n    const currentTabId = ref<string | null>(null)\n    const isUsingKeyboard = ref(false)\n\n    const wrapStyle = computed<CSSProperties>(() => ({\n      maxHeight: addUnit(props.maxHeight),\n    }))\n    const dropdownTriggerKls = computed(() => [ns.m(dropdownSize.value)])\n    const trigger = computed(() => ensureArray(props.trigger))\n\n    const defaultTriggerId = useId().value\n    const triggerId = computed<string>(() => props.id || defaultTriggerId)\n\n    // The goal of this code is to focus on the tooltip triggering element when it is hovered.\n    // This is a temporary fix for where closing the dropdown through pointerleave event focuses on a\n    // completely different element. For a permanent solution, remove all calls to any \"element.focus()\"\n    // that are triggered through pointer enter/leave events.\n    watch(\n      [triggeringElementRef, trigger],\n      ([triggeringElement, trigger], [prevTriggeringElement]) => {\n        if (prevTriggeringElement?.$el?.removeEventListener) {\n          prevTriggeringElement.$el.removeEventListener(\n            'pointerenter',\n            onAutofocusTriggerEnter\n          )\n        }\n        if (triggeringElement?.$el?.removeEventListener) {\n          triggeringElement.$el.removeEventListener(\n            'pointerenter',\n            onAutofocusTriggerEnter\n          )\n        }\n        if (\n          triggeringElement?.$el?.addEventListener &&\n          trigger.includes('hover')\n        ) {\n          triggeringElement.$el.addEventListener(\n            'pointerenter',\n            onAutofocusTriggerEnter\n          )\n        }\n      },\n      { immediate: true }\n    )\n\n    onBeforeUnmount(() => {\n      if (triggeringElementRef.value?.$el?.removeEventListener) {\n        triggeringElementRef.value.$el.removeEventListener(\n          'pointerenter',\n          onAutofocusTriggerEnter\n        )\n      }\n    })\n\n    function handleClick() {\n      handleClose()\n    }\n\n    function handleClose() {\n      popperRef.value?.onClose()\n    }\n\n    function handleOpen() {\n      popperRef.value?.onOpen()\n    }\n\n    const dropdownSize = useFormSize()\n\n    function commandHandler(...args: any[]) {\n      emit('command', ...args)\n    }\n\n    function onAutofocusTriggerEnter() {\n      triggeringElementRef.value?.$el?.focus()\n    }\n\n    function onItemEnter() {\n      // NOOP for now\n    }\n\n    function onItemLeave() {\n      const contentEl = unref(contentRef)\n\n      trigger.value.includes('hover') && contentEl?.focus()\n      currentTabId.value = null\n    }\n\n    function handleCurrentTabIdChange(id: string) {\n      currentTabId.value = id\n    }\n\n    function handleEntryFocus(e: Event) {\n      if (!isUsingKeyboard.value) {\n        e.preventDefault()\n        e.stopImmediatePropagation()\n      }\n    }\n\n    function handleBeforeShowTooltip() {\n      emit('visible-change', true)\n    }\n\n    function handleShowTooltip(event?: Event) {\n      if (event?.type === 'keydown') {\n        contentRef.value?.focus()\n      }\n    }\n\n    function handleBeforeHideTooltip() {\n      emit('visible-change', false)\n    }\n\n    provide(DROPDOWN_INJECTION_KEY, {\n      contentRef,\n      role: computed(() => props.role),\n      triggerId,\n      isUsingKeyboard,\n      onItemEnter,\n      onItemLeave,\n    })\n\n    provide('elDropdown', {\n      instance: _instance,\n      dropdownSize,\n      handleClick,\n      commandHandler,\n      trigger: toRef(props, 'trigger'),\n      hideOnClick: toRef(props, 'hideOnClick'),\n    })\n\n    const onFocusAfterTrapped = (e: Event) => {\n      e.preventDefault()\n      contentRef.value?.focus?.({\n        preventScroll: true,\n      })\n    }\n\n    const handlerMainButtonClick = (event: MouseEvent) => {\n      emit('click', event)\n    }\n\n    return {\n      t,\n      ns,\n      scrollbar,\n      wrapStyle,\n      dropdownTriggerKls,\n      dropdownSize,\n      triggerId,\n      currentTabId,\n      handleCurrentTabIdChange,\n      handlerMainButtonClick,\n      handleEntryFocus,\n      handleClose,\n      handleOpen,\n      handleBeforeShowTooltip,\n      handleShowTooltip,\n      handleBeforeHideTooltip,\n      onFocusAfterTrapped,\n      popperRef,\n      contentRef,\n      triggeringElementRef,\n      referenceElementRef,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}