{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/defineProperty.js\")[\"default\"];\nrequire(\"core-js/modules/es.error.to-string.js\");\nrequire(\"core-js/modules/es.array.concat.js\");\nrequire(\"core-js/modules/es.date.to-string.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/es.regexp.to-string.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar useTable = require('./use-table.js');\nvar tokens = require('./tokens.js');\nvar table = require('./table.js');\nvar mainTable = require('./renderers/main-table.js');\nvar leftTable = require('./renderers/left-table.js');\nvar rightTable = require('./renderers/right-table.js');\nvar _row = require('./renderers/row.js');\nvar _cell = require('./renderers/cell.js');\nvar _header = require('./renderers/header.js');\nvar headerCell = require('./renderers/header-cell.js');\nvar footer = require('./renderers/footer.js');\nvar empty = require('./renderers/empty.js');\nvar overlay = require('./renderers/overlay.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nfunction _isSlot(s) {\n  return typeof s === \"function\" || Object.prototype.toString.call(s) === \"[object Object]\" && !vue.isVNode(s);\n}\nvar COMPONENT_NAME = \"ElTableV2\";\nvar TableV2 = vue.defineComponent({\n  name: COMPONENT_NAME,\n  props: table.tableV2Props,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots,\n      expose = _ref.expose;\n    var ns = index.useNamespace(\"table-v2\");\n    var _useTable$useTable = useTable.useTable(props),\n      columnsStyles = _useTable$useTable.columnsStyles,\n      fixedColumnsOnLeft = _useTable$useTable.fixedColumnsOnLeft,\n      fixedColumnsOnRight = _useTable$useTable.fixedColumnsOnRight,\n      mainColumns = _useTable$useTable.mainColumns,\n      mainTableHeight = _useTable$useTable.mainTableHeight,\n      fixedTableHeight = _useTable$useTable.fixedTableHeight,\n      leftTableWidth = _useTable$useTable.leftTableWidth,\n      rightTableWidth = _useTable$useTable.rightTableWidth,\n      data = _useTable$useTable.data,\n      depthMap = _useTable$useTable.depthMap,\n      expandedRowKeys = _useTable$useTable.expandedRowKeys,\n      hasFixedColumns = _useTable$useTable.hasFixedColumns,\n      mainTableRef = _useTable$useTable.mainTableRef,\n      leftTableRef = _useTable$useTable.leftTableRef,\n      rightTableRef = _useTable$useTable.rightTableRef,\n      isDynamic = _useTable$useTable.isDynamic,\n      isResetting = _useTable$useTable.isResetting,\n      isScrolling = _useTable$useTable.isScrolling,\n      bodyWidth = _useTable$useTable.bodyWidth,\n      emptyStyle = _useTable$useTable.emptyStyle,\n      rootStyle = _useTable$useTable.rootStyle,\n      headerWidth = _useTable$useTable.headerWidth,\n      footerHeight = _useTable$useTable.footerHeight,\n      showEmpty = _useTable$useTable.showEmpty,\n      scrollTo = _useTable$useTable.scrollTo,\n      scrollToLeft = _useTable$useTable.scrollToLeft,\n      scrollToTop = _useTable$useTable.scrollToTop,\n      scrollToRow = _useTable$useTable.scrollToRow,\n      getRowHeight = _useTable$useTable.getRowHeight,\n      onColumnSorted = _useTable$useTable.onColumnSorted,\n      onRowHeightChange = _useTable$useTable.onRowHeightChange,\n      onRowHovered = _useTable$useTable.onRowHovered,\n      onRowExpanded = _useTable$useTable.onRowExpanded,\n      onRowsRendered = _useTable$useTable.onRowsRendered,\n      onScroll = _useTable$useTable.onScroll,\n      onVerticalScroll = _useTable$useTable.onVerticalScroll;\n    expose({\n      scrollTo: scrollTo,\n      scrollToLeft: scrollToLeft,\n      scrollToTop: scrollToTop,\n      scrollToRow: scrollToRow\n    });\n    vue.provide(tokens.TableV2InjectionKey, {\n      ns: ns,\n      isResetting: isResetting,\n      isScrolling: isScrolling\n    });\n    return function () {\n      var cache = props.cache,\n        cellProps = props.cellProps,\n        estimatedRowHeight = props.estimatedRowHeight,\n        expandColumnKey = props.expandColumnKey,\n        fixedData = props.fixedData,\n        headerHeight = props.headerHeight,\n        headerClass = props.headerClass,\n        headerProps = props.headerProps,\n        headerCellProps = props.headerCellProps,\n        sortBy = props.sortBy,\n        sortState = props.sortState,\n        rowHeight = props.rowHeight,\n        rowClass = props.rowClass,\n        rowEventHandlers = props.rowEventHandlers,\n        rowKey = props.rowKey,\n        rowProps = props.rowProps,\n        scrollbarAlwaysOn = props.scrollbarAlwaysOn,\n        indentSize = props.indentSize,\n        iconSize = props.iconSize,\n        useIsScrolling = props.useIsScrolling,\n        vScrollbarSize = props.vScrollbarSize,\n        width = props.width;\n      var _data = vue.unref(data);\n      var mainTableProps = {\n        cache: cache,\n        \"class\": ns.e(\"main\"),\n        columns: vue.unref(mainColumns),\n        data: _data,\n        fixedData: fixedData,\n        estimatedRowHeight: estimatedRowHeight,\n        bodyWidth: vue.unref(bodyWidth) + vScrollbarSize,\n        headerHeight: headerHeight,\n        headerWidth: vue.unref(headerWidth),\n        height: vue.unref(mainTableHeight),\n        mainTableRef: mainTableRef,\n        rowKey: rowKey,\n        rowHeight: rowHeight,\n        scrollbarAlwaysOn: scrollbarAlwaysOn,\n        scrollbarStartGap: 2,\n        scrollbarEndGap: vScrollbarSize,\n        useIsScrolling: useIsScrolling,\n        width: width,\n        getRowHeight: getRowHeight,\n        onRowsRendered: onRowsRendered,\n        onScroll: onScroll\n      };\n      var leftColumnsWidth = vue.unref(leftTableWidth);\n      var _fixedTableHeight = vue.unref(fixedTableHeight);\n      var leftTableProps = {\n        cache: cache,\n        \"class\": ns.e(\"left\"),\n        columns: vue.unref(fixedColumnsOnLeft),\n        data: _data,\n        fixedData: fixedData,\n        estimatedRowHeight: estimatedRowHeight,\n        leftTableRef: leftTableRef,\n        rowHeight: rowHeight,\n        bodyWidth: leftColumnsWidth,\n        headerWidth: leftColumnsWidth,\n        headerHeight: headerHeight,\n        height: _fixedTableHeight,\n        rowKey: rowKey,\n        scrollbarAlwaysOn: scrollbarAlwaysOn,\n        scrollbarStartGap: 2,\n        scrollbarEndGap: vScrollbarSize,\n        useIsScrolling: useIsScrolling,\n        width: leftColumnsWidth,\n        getRowHeight: getRowHeight,\n        onScroll: onVerticalScroll\n      };\n      var rightColumnsWidth = vue.unref(rightTableWidth);\n      var rightColumnsWidthWithScrollbar = rightColumnsWidth + vScrollbarSize;\n      var rightTableProps = {\n        cache: cache,\n        \"class\": ns.e(\"right\"),\n        columns: vue.unref(fixedColumnsOnRight),\n        data: _data,\n        fixedData: fixedData,\n        estimatedRowHeight: estimatedRowHeight,\n        rightTableRef: rightTableRef,\n        rowHeight: rowHeight,\n        bodyWidth: rightColumnsWidthWithScrollbar,\n        headerWidth: rightColumnsWidthWithScrollbar,\n        headerHeight: headerHeight,\n        height: _fixedTableHeight,\n        rowKey: rowKey,\n        scrollbarAlwaysOn: scrollbarAlwaysOn,\n        scrollbarStartGap: 2,\n        scrollbarEndGap: vScrollbarSize,\n        width: rightColumnsWidthWithScrollbar,\n        style: \"--\".concat(vue.unref(ns.namespace), \"-table-scrollbar-size: \").concat(vScrollbarSize, \"px\"),\n        useIsScrolling: useIsScrolling,\n        getRowHeight: getRowHeight,\n        onScroll: onVerticalScroll\n      };\n      var _columnsStyles = vue.unref(columnsStyles);\n      var tableRowProps = {\n        ns: ns,\n        depthMap: vue.unref(depthMap),\n        columnsStyles: _columnsStyles,\n        expandColumnKey: expandColumnKey,\n        expandedRowKeys: vue.unref(expandedRowKeys),\n        estimatedRowHeight: estimatedRowHeight,\n        hasFixedColumns: vue.unref(hasFixedColumns),\n        rowProps: rowProps,\n        rowClass: rowClass,\n        rowKey: rowKey,\n        rowEventHandlers: rowEventHandlers,\n        onRowHovered: onRowHovered,\n        onRowExpanded: onRowExpanded,\n        onRowHeightChange: onRowHeightChange\n      };\n      var tableCellProps = {\n        cellProps: cellProps,\n        expandColumnKey: expandColumnKey,\n        indentSize: indentSize,\n        iconSize: iconSize,\n        rowKey: rowKey,\n        expandedRowKeys: vue.unref(expandedRowKeys),\n        ns: ns\n      };\n      var tableHeaderProps = {\n        ns: ns,\n        headerClass: headerClass,\n        headerProps: headerProps,\n        columnsStyles: _columnsStyles\n      };\n      var tableHeaderCellProps = {\n        ns: ns,\n        sortBy: sortBy,\n        sortState: sortState,\n        headerCellProps: headerCellProps,\n        onColumnSorted: onColumnSorted\n      };\n      var tableSlots = {\n        row: function row(props2) {\n          return vue.createVNode(_row[\"default\"], vue.mergeProps(props2, tableRowProps), {\n            row: slots.row,\n            cell: function cell(props3) {\n              var _slot;\n              return slots.cell ? vue.createVNode(_cell[\"default\"], vue.mergeProps(props3, tableCellProps, {\n                \"style\": _columnsStyles[props3.column.key]\n              }), _isSlot(_slot = slots.cell(props3)) ? _slot : {\n                \"default\": function _default() {\n                  return [_slot];\n                }\n              }) : vue.createVNode(_cell[\"default\"], vue.mergeProps(props3, tableCellProps, {\n                \"style\": _columnsStyles[props3.column.key]\n              }), null);\n            }\n          });\n        },\n        header: function header(props2) {\n          return vue.createVNode(_header[\"default\"], vue.mergeProps(props2, tableHeaderProps), {\n            header: slots.header,\n            cell: function cell(props3) {\n              var _slot2;\n              return slots[\"header-cell\"] ? vue.createVNode(headerCell[\"default\"], vue.mergeProps(props3, tableHeaderCellProps, {\n                \"style\": _columnsStyles[props3.column.key]\n              }), _isSlot(_slot2 = slots[\"header-cell\"](props3)) ? _slot2 : {\n                \"default\": function _default() {\n                  return [_slot2];\n                }\n              }) : vue.createVNode(headerCell[\"default\"], vue.mergeProps(props3, tableHeaderCellProps, {\n                \"style\": _columnsStyles[props3.column.key]\n              }), null);\n            }\n          });\n        }\n      };\n      var rootKls = [props[\"class\"], ns.b(), ns.e(\"root\"), _defineProperty({}, ns.is(\"dynamic\"), vue.unref(isDynamic))];\n      var footerProps = {\n        \"class\": ns.e(\"footer\"),\n        style: vue.unref(footerHeight)\n      };\n      return vue.createVNode(\"div\", {\n        \"class\": rootKls,\n        \"style\": vue.unref(rootStyle)\n      }, [vue.createVNode(mainTable[\"default\"], mainTableProps, _isSlot(tableSlots) ? tableSlots : {\n        \"default\": function _default() {\n          return [tableSlots];\n        }\n      }), vue.createVNode(leftTable[\"default\"], leftTableProps, _isSlot(tableSlots) ? tableSlots : {\n        \"default\": function _default() {\n          return [tableSlots];\n        }\n      }), vue.createVNode(rightTable[\"default\"], rightTableProps, _isSlot(tableSlots) ? tableSlots : {\n        \"default\": function _default() {\n          return [tableSlots];\n        }\n      }), slots.footer && vue.createVNode(footer[\"default\"], footerProps, {\n        \"default\": slots.footer\n      }), vue.unref(showEmpty) && vue.createVNode(empty[\"default\"], {\n        \"class\": ns.e(\"empty\"),\n        \"style\": vue.unref(emptyStyle)\n      }, {\n        \"default\": slots.empty\n      }), slots.overlay && vue.createVNode(overlay[\"default\"], {\n        \"class\": ns.e(\"overlay\")\n      }, {\n        \"default\": slots.overlay\n      })]);\n    };\n  }\n});\nvar TableV2$1 = TableV2;\nexports[\"default\"] = TableV2$1;","map":{"version":3,"names":["_isSlot","s","Object","prototype","toString","call","vue","isVNode","setup","props","_ref","slots","expose","_useTable$useTable","useTable","columnsStyles","fixedColumnsOnLeft","fixedColumnsOnRight","mainColumns","mainTableHeight","fixedTableHeight","leftTableWidth","rightTableWidth","data","depthMap","expandedRowKeys","hasFixedColumns","mainTableRef","leftTableRef","rightTableRef","isDynamic","isResetting","isScrolling","bodyWidth","emptyStyle","rootStyle","headerWidth","footerHeight","showEmpty","scrollTo","scrollToLeft","scrollToTop","scrollToRow","getRowHeight","onColumnSorted","onRowHeightChange","onRowHovered","onRowExpanded","onRowsRendered","onScroll","onVerticalScroll","provide","tokens","TableV2InjectionKey","ns","cache","cellProps","estimatedRowHeight","expandColumnKey","fixedData","headerClass","headerProps","headerCellProps","sortBy","sortState","rowClass","rowEventHandlers","rowKey","rowProps","scrollbarAlwaysOn","indentSize","iconSize","useIsScrolling","vScrollbarSize","width","_data","unref","mainTableProps","e","columns","headerHeight","height","rowHeight","scrollbarStartGap","scrollbarEndGap","leftColumnsWidth","_fixedTableHeight","rightColumnsWidth","rightColumnsWidthWithScrollbar","rightTableProps","style","concat","namespace","_columnsStyles","tableRowProps","tableCellProps","tableHeaderProps","tableSlots","row","props2","createVNode","mergeProps","cell","props3","_slot","column","key","default","header","_slot2","headerCell","tableHeaderCellProps","rootKls","b","_defineProperty","is","footerProps","mainTable","leftTable","leftTableProps","rightTable","footer","empty","overlay","TableV2$1","TableV2"],"sources":["../../../../../../packages/components/table-v2/src/table-v2.tsx"],"sourcesContent":["// @ts-nocheck\nimport { defineComponent, provide, unref } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useTable } from './use-table'\nimport { TableV2InjectionKey } from './tokens'\nimport { tableV2Props } from './table'\n// renderers\nimport MainTable from './renderers/main-table'\nimport LeftTable from './renderers/left-table'\nimport RightTable from './renderers/right-table'\nimport Row from './renderers/row'\nimport Cell from './renderers/cell'\nimport Header from './renderers/header'\nimport HeaderCell from './renderers/header-cell'\nimport Footer from './renderers/footer'\nimport Empty from './renderers/empty'\nimport Overlay from './renderers/overlay'\n\nimport type { TableGridRowSlotParams } from './table-grid'\nimport type { ScrollStrategy } from './composables/use-scrollbar'\nimport type {\n  TableV2HeaderRendererParams,\n  TableV2HeaderRowCellRendererParams,\n  TableV2RowCellRenderParam,\n} from './components'\n\nconst COMPONENT_NAME = 'ElTableV2'\n\nconst TableV2 = defineComponent({\n  name: COMPONENT_NAME,\n  props: tableV2Props,\n  setup(props, { slots, expose }) {\n    const ns = useNamespace('table-v2')\n\n    const {\n      columnsStyles,\n      fixedColumnsOnLeft,\n      fixedColumnsOnRight,\n      mainColumns,\n      mainTableHeight,\n      fixedTableHeight,\n      leftTableWidth,\n      rightTableWidth,\n      data,\n      depthMap,\n      expandedRowKeys,\n      hasFixedColumns,\n      mainTableRef,\n      leftTableRef,\n      rightTableRef,\n      isDynamic,\n      isResetting,\n      isScrolling,\n\n      bodyWidth,\n      emptyStyle,\n      rootStyle,\n      headerWidth,\n      footerHeight,\n\n      showEmpty,\n\n      // exposes\n      scrollTo,\n      scrollToLeft,\n      scrollToTop,\n      scrollToRow,\n\n      getRowHeight,\n      onColumnSorted,\n      onRowHeightChange,\n      onRowHovered,\n      onRowExpanded,\n      onRowsRendered,\n      onScroll,\n      onVerticalScroll,\n    } = useTable(props)\n\n    expose({\n      /**\n       * @description scroll to a given position\n       * @params params {{ scrollLeft?: number, scrollTop?: number }} where to scroll to.\n       */\n      scrollTo,\n      /**\n       * @description scroll to a given position horizontally\n       * @params scrollLeft {Number} where to scroll to.\n       */\n      scrollToLeft,\n      /**\n       * @description scroll to a given position vertically\n       * @params scrollTop { Number } where to scroll to.\n       */\n      scrollToTop,\n      /**\n       * @description scroll to a given row\n       * @params row {Number} which row to scroll to\n       * @params @optional strategy {ScrollStrategy} use what strategy to scroll to\n       */\n      scrollToRow,\n    })\n\n    provide(TableV2InjectionKey, {\n      ns,\n      isResetting,\n      isScrolling,\n    })\n\n    return () => {\n      const {\n        cache,\n        cellProps,\n        estimatedRowHeight,\n        expandColumnKey,\n        fixedData,\n        headerHeight,\n        headerClass,\n        headerProps,\n        headerCellProps,\n        sortBy,\n        sortState,\n        rowHeight,\n        rowClass,\n        rowEventHandlers,\n        rowKey,\n        rowProps,\n        scrollbarAlwaysOn,\n        indentSize,\n        iconSize,\n        useIsScrolling,\n        vScrollbarSize,\n        width,\n      } = props\n\n      const _data = unref(data)\n\n      const mainTableProps = {\n        cache,\n        class: ns.e('main'),\n        columns: unref(mainColumns),\n        data: _data,\n        fixedData,\n        estimatedRowHeight,\n        bodyWidth: unref(bodyWidth) + vScrollbarSize,\n        headerHeight,\n        headerWidth: unref(headerWidth),\n        height: unref(mainTableHeight),\n        mainTableRef,\n        rowKey,\n        rowHeight,\n        scrollbarAlwaysOn,\n        scrollbarStartGap: 2,\n        scrollbarEndGap: vScrollbarSize,\n        useIsScrolling,\n        width,\n        getRowHeight,\n        onRowsRendered,\n        onScroll,\n      }\n\n      const leftColumnsWidth = unref(leftTableWidth)\n      const _fixedTableHeight = unref(fixedTableHeight)\n\n      const leftTableProps = {\n        cache,\n        class: ns.e('left'),\n        columns: unref(fixedColumnsOnLeft),\n        data: _data,\n        fixedData,\n        estimatedRowHeight,\n        leftTableRef,\n        rowHeight,\n        bodyWidth: leftColumnsWidth,\n        headerWidth: leftColumnsWidth,\n        headerHeight,\n        height: _fixedTableHeight,\n        rowKey,\n        scrollbarAlwaysOn,\n        scrollbarStartGap: 2,\n        scrollbarEndGap: vScrollbarSize,\n        useIsScrolling,\n        width: leftColumnsWidth,\n        getRowHeight,\n        onScroll: onVerticalScroll,\n      }\n\n      const rightColumnsWidth = unref(rightTableWidth)\n      const rightColumnsWidthWithScrollbar = rightColumnsWidth + vScrollbarSize\n\n      const rightTableProps = {\n        cache,\n        class: ns.e('right'),\n        columns: unref(fixedColumnsOnRight),\n        data: _data,\n        fixedData,\n        estimatedRowHeight,\n        rightTableRef,\n        rowHeight,\n        bodyWidth: rightColumnsWidthWithScrollbar,\n        headerWidth: rightColumnsWidthWithScrollbar,\n        headerHeight,\n        height: _fixedTableHeight,\n        rowKey,\n        scrollbarAlwaysOn,\n        scrollbarStartGap: 2,\n        scrollbarEndGap: vScrollbarSize,\n        width: rightColumnsWidthWithScrollbar,\n        style: `--${unref(\n          ns.namespace\n        )}-table-scrollbar-size: ${vScrollbarSize}px`,\n        useIsScrolling,\n        getRowHeight,\n        onScroll: onVerticalScroll,\n      }\n      const _columnsStyles = unref(columnsStyles)\n\n      const tableRowProps = {\n        ns,\n        depthMap: unref(depthMap),\n        columnsStyles: _columnsStyles,\n        expandColumnKey,\n        expandedRowKeys: unref(expandedRowKeys),\n        estimatedRowHeight,\n        hasFixedColumns: unref(hasFixedColumns),\n        rowProps,\n        rowClass,\n        rowKey,\n        rowEventHandlers,\n        onRowHovered,\n        onRowExpanded,\n        onRowHeightChange,\n      }\n\n      const tableCellProps = {\n        cellProps,\n        expandColumnKey,\n        indentSize,\n        iconSize,\n        rowKey,\n        expandedRowKeys: unref(expandedRowKeys),\n        ns,\n      }\n\n      const tableHeaderProps = {\n        ns,\n        headerClass,\n        headerProps,\n        columnsStyles: _columnsStyles,\n      }\n\n      const tableHeaderCellProps = {\n        ns,\n\n        sortBy,\n        sortState,\n        headerCellProps,\n        onColumnSorted,\n      }\n\n      const tableSlots = {\n        row: (props: TableGridRowSlotParams) => (\n          <Row {...props} {...tableRowProps}>\n            {{\n              row: slots.row,\n              cell: (props: TableV2RowCellRenderParam) =>\n                slots.cell ? (\n                  <Cell\n                    {...props}\n                    {...tableCellProps}\n                    style={_columnsStyles[props.column.key]}\n                  >\n                    {slots.cell(props)}\n                  </Cell>\n                ) : (\n                  <Cell\n                    {...props}\n                    {...tableCellProps}\n                    style={_columnsStyles[props.column.key]}\n                  />\n                ),\n            }}\n          </Row>\n        ),\n        header: (props: TableV2HeaderRendererParams) => (\n          <Header {...props} {...tableHeaderProps}>\n            {{\n              header: slots.header,\n              cell: (props: TableV2HeaderRowCellRendererParams) =>\n                slots['header-cell'] ? (\n                  <HeaderCell\n                    {...props}\n                    {...tableHeaderCellProps}\n                    style={_columnsStyles[props.column.key]}\n                  >\n                    {slots['header-cell'](props)}\n                  </HeaderCell>\n                ) : (\n                  <HeaderCell\n                    {...props}\n                    {...tableHeaderCellProps}\n                    style={_columnsStyles[props.column.key]}\n                  />\n                ),\n            }}\n          </Header>\n        ),\n      }\n\n      const rootKls = [\n        props.class,\n        ns.b(),\n        ns.e('root'),\n        {\n          [ns.is('dynamic')]: unref(isDynamic),\n        },\n      ]\n\n      const footerProps = {\n        class: ns.e('footer'),\n        style: unref(footerHeight),\n      }\n\n      return (\n        <div class={rootKls} style={unref(rootStyle)}>\n          <MainTable {...mainTableProps}>{tableSlots}</MainTable>\n          <LeftTable {...leftTableProps}>{tableSlots}</LeftTable>\n          <RightTable {...rightTableProps}>{tableSlots}</RightTable>\n          {slots.footer && (\n            <Footer {...footerProps}>{{ default: slots.footer }}</Footer>\n          )}\n          {unref(showEmpty) && (\n            <Empty class={ns.e('empty')} style={unref(emptyStyle)}>\n              {{ default: slots.empty }}\n            </Empty>\n          )}\n          {slots.overlay && (\n            <Overlay class={ns.e('overlay')}>\n              {{ default: slots.overlay }}\n            </Overlay>\n          )}\n        </div>\n      )\n    }\n  },\n})\n\nexport default TableV2\n\nexport type TableV2Instance = InstanceType<typeof TableV2> & {\n  /**\n   * @description scroll to a given position\n   * @params params {{ scrollLeft?: number, scrollTop?: number }} where to scroll to.\n   */\n  scrollTo: (param: { scrollLeft?: number; scrollTop?: number }) => void\n  /**\n   * @description scroll to a given position horizontally\n   * @params scrollLeft {Number} where to scroll to.\n   */\n  scrollToLeft: (scrollLeft: number) => void\n  /**\n   * @description scroll to a given position vertically\n   * @params scrollTop { Number } where to scroll to.\n   */\n  scrollToTop: (scrollTop: number) => void\n  /**\n   * @description scroll to a given row\n   * @params row {Number} which row to scroll to\n   * @params strategy {ScrollStrategy} use what strategy to scroll to\n   */\n  scrollToRow(row: number, strategy?: ScrollStrategy): void\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}