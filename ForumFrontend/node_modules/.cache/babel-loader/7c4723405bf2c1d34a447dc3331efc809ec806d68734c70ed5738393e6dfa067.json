{"ast":null,"code":"import _regeneratorRuntime from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _typeof from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _asyncToGenerator from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { User, Lock } from '@element-plus/icons-vue';\nimport { login } from '../api/user';\nexport default {\n  name: 'Login',\n  components: {\n    User: User,\n    Lock: Lock\n  },\n  setup: function setup() {\n    var router = useRouter();\n    var store = useStore();\n    var formRef = ref(null);\n    var loading = ref(false);\n\n    // 表单数据\n    var loginForm = reactive({\n      username: '',\n      password: ''\n    });\n\n    // 表单验证规则\n    var loginRules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }, {\n        min: 3,\n        max: 50,\n        message: '用户名长度应在3-50个字符之间',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        min: 6,\n        max: 20,\n        message: '密码长度应在6-20个字符之间',\n        trigger: 'blur'\n      }]\n    };\n\n    // 登录处理\n    var handleLogin = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, token, userInfo, redirect, errorMsg, responseData, fieldErrors, field;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return formRef.value.validate();\n            case 3:\n              // 显示加载状态\n              loading.value = true;\n\n              // 调用登录API\n              _context.next = 6;\n              return login(loginForm);\n            case 6:\n              response = _context.sent;\n              console.log('登录响应:', response);\n\n              // 检查响应中是否包含错误信息\n              if (!(response.msg && response.msg !== 'success')) {\n                _context.next = 10;\n                break;\n              }\n              throw new Error(response.msg);\n            case 10:\n              if (response.data) {\n                // 如果响应中有data字段\n                if (response.data.token) {\n                  token = response.data.token;\n                  userInfo = response.data.user_info || response.data.userInfo;\n                } else if (response.token) {\n                  token = response.token;\n                  userInfo = response.data.user_info || response.data.userInfo;\n                }\n              } else if (response.token) {\n                // 直接在响应根级别有token\n                token = response.token;\n                userInfo = response.user_info || response.userInfo;\n              } else if (response.access) {\n                // JWT格式的响应\n                token = response.access;\n                // 如果没有用户信息，创建一个简单的用户对象\n                userInfo = response.user || {\n                  username: loginForm.username\n                };\n              }\n              if (token) {\n                _context.next = 13;\n                break;\n              }\n              throw new Error('登录失败：服务器响应中没有找到token');\n            case 13:\n              console.log('解析后的token和用户信息:', {\n                token: token,\n                userInfo: userInfo\n              });\n\n              // 登录成功，保存token和用户信息\n              store.dispatch('login', {\n                token: token,\n                userInfo: userInfo\n              });\n\n              // 为确保一致性，也直接保存到localStorage\n              localStorage.setItem('token', token);\n              localStorage.setItem('userInfo', JSON.stringify(userInfo));\n\n              // 检查是否有重定向路径\n              redirect = router.currentRoute.value.query.redirect || '/';\n              console.log('登录成功，准备跳转到:', redirect);\n\n              // 确保Vuex存储已更新\n              _context.next = 21;\n              return store.dispatch('getUserInfo');\n            case 21:\n              // 添加延迟确保状态更新\n              setTimeout(function () {\n                console.log('执行跳转:', redirect);\n                router.push(redirect)[\"catch\"](function (err) {\n                  console.error('路由跳转失败:', err);\n                  // 如果跳转失败，尝试跳转到首页\n                  router.push('/');\n                });\n              }, 100);\n              _context.next = 30;\n              break;\n            case 24:\n              _context.prev = 24;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('登录失败:', _context.t0);\n\n              // 处理后端返回的错误信息\n              errorMsg = '登录失败，请检查用户名和密码';\n              if (_context.t0.response && _context.t0.response.data) {\n                responseData = _context.t0.response.data;\n                if (responseData.msg && _typeof(responseData.msg) === 'object') {\n                  // 处理字段错误\n                  fieldErrors = [];\n                  for (field in responseData.msg) {\n                    if (Array.isArray(responseData.msg[field])) {\n                      fieldErrors.push(\"\".concat(field, \": \").concat(responseData.msg[field].join(', ')));\n                    } else {\n                      fieldErrors.push(\"\".concat(field, \": \").concat(responseData.msg[field]));\n                    }\n                  }\n                  if (fieldErrors.length > 0) {\n                    errorMsg = fieldErrors.join('\\n');\n                  }\n                } else if (responseData.msg) {\n                  errorMsg = responseData.msg;\n                }\n              } else if (_context.t0.message) {\n                errorMsg = _context.t0.message;\n              }\n\n              // 使用全局的messageTracker来显示错误消息\n              if (window.messageTracker) {\n                window.messageTracker.showMessage(errorMsg, 'error', 'login-component-error');\n              } else {\n                // 如果全局对象不可用，再使用ElMessage\n                import('element-plus').then(function (_ref2) {\n                  var ElMessage = _ref2.ElMessage;\n                  ElMessage({\n                    message: errorMsg,\n                    type: 'error',\n                    dangerouslyUseHTMLString: true\n                  });\n                });\n              }\n            case 30:\n              _context.prev = 30;\n              loading.value = false;\n              return _context.finish(30);\n            case 33:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 24, 30, 33]]);\n      }));\n      return function handleLogin() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    return {\n      loginForm: loginForm,\n      formRef: formRef,\n      loginRules: loginRules,\n      loading: loading,\n      handleLogin: handleLogin\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","useStore","User","Lock","login","name","components","setup","router","store","formRef","loading","loginForm","username","password","loginRules","required","message","trigger","min","max","handleLogin","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","token","userInfo","redirect","errorMsg","responseData","fieldErrors","field","wrap","_callee$","_context","prev","next","value","validate","sent","console","log","msg","Error","data","user_info","access","user","dispatch","localStorage","setItem","JSON","stringify","currentRoute","query","setTimeout","push","err","error","t0","_typeof","Array","isArray","concat","join","length","window","messageTracker","showMessage","then","_ref2","ElMessage","type","dangerouslyUseHTMLString","finish","stop","apply","arguments"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-box\">\n      <div class=\"login-header\">\n        <h2>用户登录</h2>\n      </div>\n      <el-form\n        ref=\"formRef\"\n        :model=\"loginForm\"\n        :rules=\"loginRules\"\n        label-width=\"80px\"\n        class=\"login-form\"\n        label-position=\"top\"\n      >\n        <el-form-item label=\"账号\" prop=\"username\">\n          <el-input\n            v-model=\"loginForm.username\"\n            placeholder=\"请输入账号\"\n          >\n            <template #prefix>\n              <el-icon><User /></el-icon>\n            </template>\n          </el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input\n            v-model=\"loginForm.password\"\n            type=\"password\"\n            placeholder=\"请输入密码\"\n            show-password\n          >\n            <template #prefix>\n              <el-icon><Lock /></el-icon>\n            </template>\n          </el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button\n            type=\"primary\"\n            :loading=\"loading\"\n            @click=\"handleLogin\"\n            class=\"login-button\"\n          >登录</el-button>\n        </el-form-item>\n        <div class=\"login-options\">\n          <router-link to=\"/register\">没有账号？立即注册</router-link>\n          <router-link to=\"/reset-password\">忘记密码？</router-link>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { User, Lock } from '@element-plus/icons-vue'\nimport { login } from '../api/user'\n\nexport default {\n  name: 'Login',\n  components: {\n    User,\n    Lock\n  },\n  setup() {\n    const router = useRouter()\n    const store = useStore()\n    const formRef = ref(null)\n    const loading = ref(false)\n\n    // 表单数据\n    const loginForm = reactive({\n      username: '',\n      password: ''\n    })\n\n    // 表单验证规则\n    const loginRules = {\n      username: [\n        { required: true, message: '请输入用户名', trigger: 'blur' },\n        { min: 3, max: 50, message: '用户名长度应在3-50个字符之间', trigger: 'blur' }\n      ],\n      password: [\n        { required: true, message: '请输入密码', trigger: 'blur' },\n        { min: 6, max: 20, message: '密码长度应在6-20个字符之间', trigger: 'blur' }\n      ]\n    }\n\n    // 登录处理\n    const handleLogin = async () => {\n      try {\n        // 表单验证\n        await formRef.value.validate()\n\n        // 显示加载状态\n        loading.value = true\n\n        // 调用登录API\n        const response = await login(loginForm)\n        console.log('登录响应:', response)\n\n        // 检查响应中是否包含错误信息\n        if (response.msg && response.msg !== 'success') {\n          throw new Error(response.msg)\n        }\n\n        // 处理不同的响应格式\n        let token, userInfo\n\n        if (response.data) {\n          // 如果响应中有data字段\n          if (response.data.token) {\n            token = response.data.token\n            userInfo = response.data.user_info || response.data.userInfo\n          } else if (response.token) {\n            token = response.token\n            userInfo = response.data.user_info || response.data.userInfo\n          }\n        } else if (response.token) {\n          // 直接在响应根级别有token\n          token = response.token\n          userInfo = response.user_info || response.userInfo\n        } else if (response.access) {\n          // JWT格式的响应\n          token = response.access\n          // 如果没有用户信息，创建一个简单的用户对象\n          userInfo = response.user || { username: loginForm.username }\n        }\n\n        if (!token) {\n          throw new Error('登录失败：服务器响应中没有找到token')\n        }\n\n        console.log('解析后的token和用户信息:', { token, userInfo })\n\n        // 登录成功，保存token和用户信息\n        store.dispatch('login', { token, userInfo })\n        \n        // 为确保一致性，也直接保存到localStorage\n        localStorage.setItem('token', token)\n        localStorage.setItem('userInfo', JSON.stringify(userInfo))\n        \n        // 检查是否有重定向路径\n        const redirect = router.currentRoute.value.query.redirect || '/'\n        console.log('登录成功，准备跳转到:', redirect)\n        \n        // 确保Vuex存储已更新\n        await store.dispatch('getUserInfo')\n        \n        // 添加延迟确保状态更新\n        setTimeout(() => {\n          console.log('执行跳转:', redirect)\n          router.push(redirect).catch(err => {\n            console.error('路由跳转失败:', err)\n            // 如果跳转失败，尝试跳转到首页\n            router.push('/')\n          })\n        }, 100)\n      } catch (error) {\n        console.error('登录失败:', error)\n\n        // 处理后端返回的错误信息\n        let errorMsg = '登录失败，请检查用户名和密码'\n\n        if (error.response && error.response.data) {\n          const responseData = error.response.data\n\n          if (responseData.msg && typeof responseData.msg === 'object') {\n            // 处理字段错误\n            const fieldErrors = []\n            for (const field in responseData.msg) {\n              if (Array.isArray(responseData.msg[field])) {\n                fieldErrors.push(`${field}: ${responseData.msg[field].join(', ')}`)\n              } else {\n                fieldErrors.push(`${field}: ${responseData.msg[field]}`)\n              }\n            }\n            if (fieldErrors.length > 0) {\n              errorMsg = fieldErrors.join('\\n')\n            }\n          } else if (responseData.msg) {\n            errorMsg = responseData.msg\n          }\n        } else if (error.message) {\n          errorMsg = error.message\n        }\n\n        // 使用全局的messageTracker来显示错误消息\n        if (window.messageTracker) {\n          window.messageTracker.showMessage(errorMsg, 'error', 'login-component-error');\n        } else {\n          // 如果全局对象不可用，再使用ElMessage\n          import('element-plus').then(({ ElMessage }) => {\n            ElMessage({\n              message: errorMsg,\n              type: 'error',\n              dangerouslyUseHTMLString: true\n            });\n          });\n        }\n      } finally {\n        loading.value = false\n      }\n    }\n\n    return {\n      loginForm,\n      formRef,\n      loginRules,\n      loading,\n      handleLogin\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #f5f7fa;\n  padding: 20px 0;\n}\n\n.login-box {\n  width: 400px;\n  padding: 40px;\n  background-color: #fff;\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n}\n\n.login-header {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.login-header h2 {\n  font-weight: 600;\n  color: #303133;\n  font-size: 24px;\n  margin: 0;\n}\n\n.login-form {\n  margin-top: 20px;\n}\n\n.login-form :deep(.el-form-item__label) {\n  padding-bottom: 8px;\n  font-weight: 500;\n}\n\n.login-form :deep(.el-input__wrapper) {\n  box-shadow: 0 0 0 1px #dcdfe6 inset;\n  padding: 1px 15px;\n  height: 42px;\n  transition: all 0.2s;\n}\n\n.login-form :deep(.el-input__wrapper:hover) {\n  box-shadow: 0 0 0 1px #c0c4cc inset;\n}\n\n.login-form :deep(.el-input__wrapper.is-focus) {\n  box-shadow: 0 0 0 1px #409eff inset;\n}\n\n.login-form :deep(.el-form-item) {\n  margin-bottom: 25px;\n}\n\n.login-button {\n  width: 100%;\n  height: 42px;\n  font-size: 16px;\n  font-weight: 500;\n  margin-top: 10px;\n}\n\n.login-options {\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-top: 20px;\n  font-size: 14px;\n}\n\n.login-options a {\n  color: #409eff;\n  text-decoration: none;\n  transition: color 0.2s;\n}\n\n.login-options a:hover {\n  color: #66b1ff;\n  text-decoration: underline;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}