{"ast":null,"code":"import _objectSpread from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport { computed, onMounted, toRefs, reactive } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nimport { formatDateTime } from '@/utils/index';\nimport { getUserProfile, getUserById, updateUserProfile, getUserPosts, getUserComments, getUserFavorites, changePassword, uploadAvatar } from '@/api/profile';\n\n// 格式化日期函数\nvar formatDate = function formatDate(date) {\n  return formatDateTime(date);\n};\nexport default {\n  name: 'UserProfile',\n  setup: function setup() {\n    var route = useRoute();\n    var router = useRouter();\n    var store = useStore();\n\n    // 状态\n    var state = reactive({\n      loading: false,\n      userProfile: {},\n      userStats: {\n        posts_count: 0,\n        comments_count: 0,\n        favorites_count: 0\n      },\n      activeTab: 'posts',\n      // 帖子相关\n      postsLoading: false,\n      posts: [],\n      postsTotal: 0,\n      postsQuery: {\n        page: 1,\n        limit: 10\n      },\n      // 评论相关\n      commentsLoading: false,\n      comments: [],\n      commentsTotal: 0,\n      commentsQuery: {\n        page: 1,\n        limit: 10\n      },\n      // 收藏相关\n      favoritesLoading: false,\n      favorites: [],\n      favoritesTotal: 0,\n      favoritesQuery: {\n        page: 1,\n        limit: 10\n      },\n      // 编辑资料相关\n      editProfileDialogVisible: false,\n      profileForm: {\n        nickname: '',\n        avatar_url: ''\n      },\n      profileRules: {\n        nickname: [{\n          max: 50,\n          message: '昵称不能超过50个字符',\n          trigger: 'blur'\n        }]\n      },\n      uploadHeaders: {\n        Authorization: \"Bearer \".concat(localStorage.getItem('token'))\n      },\n      submitting: false,\n      imageUploading: false,\n      // 修改密码相关\n      changePasswordDialogVisible: false,\n      passwordForm: {\n        old_password: '',\n        new_password: '',\n        confirm_password: ''\n      },\n      passwordRules: {\n        old_password: [{\n          required: true,\n          message: '请输入当前密码',\n          trigger: 'blur'\n        }],\n        new_password: [{\n          required: true,\n          message: '请输入新密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '密码长度不能少于6个字符',\n          trigger: 'blur'\n        }],\n        confirm_password: [{\n          required: true,\n          message: '请再次输入新密码',\n          trigger: 'blur'\n        }, {\n          validator: function validator(rule, value, callback) {\n            if (value !== state.passwordForm.new_password) {\n              callback(new Error('两次输入的密码不一致'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }]\n      }\n    });\n\n    // 计算属性\n    var userId = computed(function () {\n      return route.params.id || 'me';\n    });\n    var isCurrentUser = computed(function () {\n      return !route.params.id || route.params.id === 'me' || route.params.id === store.getters.userId.toString();\n    });\n\n    // 从查询参数中获取激活的标签页\n    if (route.query.tab && ['posts', 'comments', 'favorites'].includes(route.query.tab)) {\n      state.activeTab = route.query.tab;\n    }\n\n    // 获取用户信息\n    var fetchUserProfile = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              state.loading = true;\n              _context.prev = 1;\n              // 检查本地存储的token\n              token = localStorage.getItem('token');\n              console.log('获取用户信息前的token:', token);\n              if (!(userId.value === 'me' || !userId.value)) {\n                _context.next = 11;\n                break;\n              }\n              console.log('获取当前用户信息');\n              _context.next = 8;\n              return getUserProfile();\n            case 8:\n              response = _context.sent;\n              _context.next = 15;\n              break;\n            case 11:\n              console.log('获取指定用户信息:', userId.value);\n              _context.next = 14;\n              return getUserById(userId.value);\n            case 14:\n              response = _context.sent;\n            case 15:\n              console.log('用户信息响应:', response);\n\n              // 处理不同的响应格式\n              if (!(response.code === 0)) {\n                _context.next = 20;\n                break;\n              }\n              state.userProfile = response.data;\n              _context.next = 27;\n              break;\n            case 20:\n              if (!response.id) {\n                _context.next = 24;\n                break;\n              }\n              // 直接返回了用户对象\n              state.userProfile = response;\n              _context.next = 27;\n              break;\n            case 24:\n              ElMessage.error('获取用户信息失败: 响应格式不正确');\n              console.error('响应格式不正确:', response);\n              return _context.abrupt(\"return\");\n            case 27:\n              // 初始化编辑表单\n              if (!state.profileForm) {\n                state.profileForm = {\n                  nickname: state.userProfile.nickname || '',\n                  avatar_url: state.userProfile.avatar_url || ''\n                };\n              } else {\n                state.profileForm.nickname = state.userProfile.nickname || '';\n                state.profileForm.avatar_url = state.userProfile.avatar_url || '';\n              }\n              _context.next = 34;\n              break;\n            case 30:\n              _context.prev = 30;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('获取用户信息失败:', _context.t0);\n              ElMessage.error('获取用户信息失败');\n            case 34:\n              _context.prev = 34;\n              state.loading = false;\n              return _context.finish(34);\n            case 37:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 30, 34, 37]]);\n      }));\n      return function fetchUserProfile() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    // 获取用户帖子\n    var fetchUserPosts = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              state.postsLoading = true;\n              _context2.prev = 1;\n              // 检查本地存储的token\n              token = localStorage.getItem('token');\n              console.log('获取用户帖子前的token:', token);\n              _context2.next = 6;\n              return getUserPosts(userId.value);\n            case 6:\n              response = _context2.sent;\n              console.log('用户帖子响应:', response);\n\n              // 处理不同的响应格式\n              if (!(response.code === 0 && response.data)) {\n                _context2.next = 14;\n                break;\n              }\n              // 标准格式响应\n              state.posts = response.data.results || [];\n              state.postsTotal = response.data.count || 0;\n              state.userStats.posts_count = response.data.count || 0;\n              _context2.next = 29;\n              break;\n            case 14:\n              if (!response.results) {\n                _context2.next = 20;\n                break;\n              }\n              // DRF分页响应格式\n              state.posts = response.results || [];\n              state.postsTotal = response.count || 0;\n              state.userStats.posts_count = response.count || 0;\n              _context2.next = 29;\n              break;\n            case 20:\n              if (!Array.isArray(response)) {\n                _context2.next = 26;\n                break;\n              }\n              // 直接返回数组\n              state.posts = response;\n              state.postsTotal = response.length;\n              state.userStats.posts_count = response.length;\n              _context2.next = 29;\n              break;\n            case 26:\n              // 其他格式\n              console.error('响应格式不正确:', response);\n              ElMessage.error('获取用户帖子失败: 响应格式不正确');\n              return _context2.abrupt(\"return\");\n            case 29:\n              _context2.next = 35;\n              break;\n            case 31:\n              _context2.prev = 31;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error('获取用户帖子失败:', _context2.t0);\n              ElMessage.error('获取用户帖子失败');\n            case 35:\n              _context2.prev = 35;\n              state.postsLoading = false;\n              return _context2.finish(35);\n            case 38:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[1, 31, 35, 38]]);\n      }));\n      return function fetchUserPosts() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 获取用户评论\n    var fetchUserComments = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              state.commentsLoading = true;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return getUserComments(userId.value);\n            case 4:\n              response = _context3.sent;\n              console.log('用户评论响应:', response);\n\n              // 处理不同的响应格式\n              if (!(response.code === 0 && response.data)) {\n                _context3.next = 12;\n                break;\n              }\n              // 标准格式响应\n              state.comments = response.data.results || [];\n              state.commentsTotal = response.data.count || 0;\n              state.userStats.comments_count = response.data.count || 0;\n              _context3.next = 27;\n              break;\n            case 12:\n              if (!response.results) {\n                _context3.next = 18;\n                break;\n              }\n              // DRF分页响应格式\n              state.comments = response.results || [];\n              state.commentsTotal = response.count || 0;\n              state.userStats.comments_count = response.count || 0;\n              _context3.next = 27;\n              break;\n            case 18:\n              if (!Array.isArray(response)) {\n                _context3.next = 24;\n                break;\n              }\n              // 直接返回数组\n              state.comments = response;\n              state.commentsTotal = response.length;\n              state.userStats.comments_count = response.length;\n              _context3.next = 27;\n              break;\n            case 24:\n              // 其他格式\n              console.error('响应格式不正确:', response);\n              ElMessage.error('获取用户评论失败: 响应格式不正确');\n              return _context3.abrupt(\"return\");\n            case 27:\n              _context3.next = 33;\n              break;\n            case 29:\n              _context3.prev = 29;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.error('获取用户评论失败:', _context3.t0);\n              ElMessage.error('获取用户评论失败');\n            case 33:\n              _context3.prev = 33;\n              state.commentsLoading = false;\n              return _context3.finish(33);\n            case 36:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[1, 29, 33, 36]]);\n      }));\n      return function fetchUserComments() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    // 获取用户收藏\n    var fetchUserFavorites = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              state.favoritesLoading = true;\n              _context4.prev = 1;\n              _context4.next = 4;\n              return getUserFavorites(userId.value);\n            case 4:\n              response = _context4.sent;\n              console.log('用户收藏响应:', response);\n\n              // 处理不同的响应格式\n              if (!(response.code === 0 && response.data)) {\n                _context4.next = 12;\n                break;\n              }\n              // 标准格式响应\n              state.favorites = response.data.results || [];\n              state.favoritesTotal = response.data.count || 0;\n              state.userStats.favorites_count = response.data.count || 0;\n              _context4.next = 27;\n              break;\n            case 12:\n              if (!response.results) {\n                _context4.next = 18;\n                break;\n              }\n              // DRF分页响应格式\n              state.favorites = response.results || [];\n              state.favoritesTotal = response.count || 0;\n              state.userStats.favorites_count = response.count || 0;\n              _context4.next = 27;\n              break;\n            case 18:\n              if (!Array.isArray(response)) {\n                _context4.next = 24;\n                break;\n              }\n              // 直接返回数组\n              state.favorites = response;\n              state.favoritesTotal = response.length;\n              state.userStats.favorites_count = response.length;\n              _context4.next = 27;\n              break;\n            case 24:\n              // 其他格式\n              console.error('响应格式不正确:', response);\n              ElMessage.error('获取用户收藏失败: 响应格式不正确');\n              return _context4.abrupt(\"return\");\n            case 27:\n              _context4.next = 33;\n              break;\n            case 29:\n              _context4.prev = 29;\n              _context4.t0 = _context4[\"catch\"](1);\n              console.error('获取用户收藏失败:', _context4.t0);\n              ElMessage.error('获取用户收藏失败');\n            case 33:\n              _context4.prev = 33;\n              state.favoritesLoading = false;\n              return _context4.finish(33);\n            case 36:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[1, 29, 33, 36]]);\n      }));\n      return function fetchUserFavorites() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    // 处理标签页切换\n    var handleTabClick = function handleTabClick(tab) {\n      state.activeTab = tab.name;\n      if (tab.name === 'posts' && state.posts.length === 0) {\n        fetchUserPosts();\n      } else if (tab.name === 'comments' && state.comments.length === 0) {\n        fetchUserComments();\n      } else if (tab.name === 'favorites' && state.favorites.length === 0) {\n        fetchUserFavorites();\n      }\n    };\n\n    // 处理帖子分页变化\n    var handlePostsPageChange = function handlePostsPageChange(page) {\n      state.postsQuery.page = page;\n      fetchUserPosts();\n    };\n\n    // 处理评论分页变化\n    var handleCommentsPageChange = function handleCommentsPageChange(page) {\n      state.commentsQuery.page = page;\n      fetchUserComments();\n    };\n\n    // 处理收藏分页变化\n    var handleFavoritesPageChange = function handleFavoritesPageChange(page) {\n      state.favoritesQuery.page = page;\n      fetchUserFavorites();\n    };\n\n    // 查看帖子\n    var viewPost = function viewPost(post) {\n      router.push({\n        name: 'PostDetail',\n        params: {\n          id: post.id\n        }\n      });\n    };\n\n    // 显示编辑资料对话框\n    var showEditProfileDialog = function showEditProfileDialog() {\n      try {\n        var _state$userProfile, _state$userProfile2;\n        console.log('点击编辑资料按钮');\n        console.log('当前对话框状态:', state.editProfileDialogVisible);\n        console.log('当前用户信息:', state.userProfile);\n\n        // 初始化表单数据 - 确保 profileForm 存在\n        if (!state.profileForm) {\n          state.profileForm = {\n            nickname: '',\n            avatar_url: ''\n          };\n        }\n\n        // 设置表单数据\n        state.profileForm.nickname = ((_state$userProfile = state.userProfile) === null || _state$userProfile === void 0 ? void 0 : _state$userProfile.nickname) || '';\n        state.profileForm.avatar_url = ((_state$userProfile2 = state.userProfile) === null || _state$userProfile2 === void 0 ? void 0 : _state$userProfile2.avatar_url) || '';\n\n        // 更新上传头部以确保使用最新的token\n        state.uploadHeaders = {\n          Authorization: \"Bearer \".concat(localStorage.getItem('token'))\n        };\n\n        // 显示对话框\n        state.editProfileDialogVisible = true;\n        console.log('设置对话框状态为:', state.editProfileDialogVisible);\n      } catch (error) {\n        console.error('显示编辑资料对话框出错:', error);\n        ElMessage.error('显示编辑资料对话框出错');\n      }\n    };\n\n    // 处理昵称输入\n    var handleNicknameInput = function handleNicknameInput(value) {\n      console.log('昵称输入:', value);\n      // 确保表单数据存在\n      if (!state.profileForm) {\n        var _state$userProfile3;\n        state.profileForm = {\n          nickname: value,\n          avatar_url: ((_state$userProfile3 = state.userProfile) === null || _state$userProfile3 === void 0 ? void 0 : _state$userProfile3.avatar_url) || ''\n        };\n      } else {\n        state.profileForm.nickname = value;\n      }\n    };\n\n    // 头像上传前的验证\n    var beforeAvatarUpload = function beforeAvatarUpload(file) {\n      state.imageUploading = true;\n      var isImage = file.type.startsWith('image/');\n      var isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isImage) {\n        ElMessage.error('头像必须是图片格式!');\n        state.imageUploading = false;\n        return false;\n      }\n      if (!isLt2M) {\n        ElMessage.error('头像大小不能超过 2MB!');\n        state.imageUploading = false;\n        return false;\n      }\n      return true;\n    };\n\n    // 处理头像上传\n    var handleAvatarUpload = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(options) {\n        var file, formData, response;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              file = options.file;\n              state.imageUploading = true;\n              _context5.prev = 2;\n              // 创建FormData\n              formData = new FormData();\n              formData.append('file', file);\n\n              // 调用上传API\n              _context5.next = 7;\n              return uploadAvatar(formData);\n            case 7:\n              response = _context5.sent;\n              if (response.code === 0) {\n                state.profileForm.avatar_url = response.data.avatar_url;\n                ElMessage.success('头像上传成功');\n              } else {\n                ElMessage.error(response.msg || '头像上传失败');\n              }\n              _context5.next = 15;\n              break;\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](2);\n              console.error('头像上传失败:', _context5.t0);\n              ElMessage.error('头像上传失败');\n            case 15:\n              _context5.prev = 15;\n              state.imageUploading = false;\n              return _context5.finish(15);\n            case 18:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[2, 11, 15, 18]]);\n      }));\n      return function handleAvatarUpload(_x) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    // 提交编辑资料表单\n    var submitProfileForm = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var formData, response;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              console.log('提交编辑资料表单');\n              console.log('表单数据:', state.profileForm);\n\n              // 确保表单数据存在\n              if (state.profileForm) {\n                _context6.next = 6;\n                break;\n              }\n              ElMessage.error('表单数据不存在');\n              return _context6.abrupt(\"return\");\n            case 6:\n              state.submitting = true;\n\n              // 准备要提交的数据\n              formData = {\n                nickname: state.profileForm.nickname || '',\n                avatar_url: state.profileForm.avatar_url || ''\n              };\n              _context6.prev = 8;\n              _context6.next = 11;\n              return updateUserProfile(formData);\n            case 11:\n              response = _context6.sent;\n              console.log('更新用户资料响应:', response);\n\n              // 无论响应如何，都先关闭对话框\n              state.editProfileDialogVisible = false;\n\n              // 先刷新用户信息，以确保显示最新数据\n              _context6.next = 16;\n              return fetchUserProfile();\n            case 16:\n              // 更新Vuex中的用户信息\n              store.dispatch('updateUserInfo', _objectSpread(_objectSpread({}, store.getters.userInfo), {}, {\n                nickname: formData.nickname,\n                avatar_url: formData.avatar_url\n              }));\n\n              // 最后显示成功消息\n              ElMessage.success('个人资料更新成功');\n              _context6.next = 27;\n              break;\n            case 20:\n              _context6.prev = 20;\n              _context6.t0 = _context6[\"catch\"](8);\n              console.error('调用API更新用户资料失败:', _context6.t0);\n\n              // 尝试刷新用户信息，查看是否实际更新成功\n              _context6.next = 25;\n              return fetchUserProfile();\n            case 25:\n              // 关闭对话框\n              state.editProfileDialogVisible = false;\n\n              // 显示错误消息\n              ElMessage.error('个人资料更新失败，请刷新页面查看最新状态');\n            case 27:\n              _context6.next = 34;\n              break;\n            case 29:\n              _context6.prev = 29;\n              _context6.t1 = _context6[\"catch\"](0);\n              console.error('个人资料更新失败:', _context6.t1);\n              ElMessage.error('个人资料更新失败');\n              // 关闭对话框\n              state.editProfileDialogVisible = false;\n            case 34:\n              _context6.prev = 34;\n              state.submitting = false;\n              return _context6.finish(34);\n            case 37:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, null, [[0, 29, 34, 37], [8, 20]]);\n      }));\n      return function submitProfileForm() {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    // 显示修改密码对话框\n    var showChangePasswordDialog = function showChangePasswordDialog() {\n      try {\n        console.log('点击修改密码按钮');\n        console.log('当前密码对话框状态:', state.changePasswordDialogVisible);\n\n        // 初始化密码表单 - 确保 passwordForm 存在\n        if (!state.passwordForm) {\n          state.passwordForm = {\n            old_password: '',\n            new_password: '',\n            confirm_password: ''\n          };\n        } else {\n          // 重置密码表单\n          state.passwordForm.old_password = '';\n          state.passwordForm.new_password = '';\n          state.passwordForm.confirm_password = '';\n        }\n\n        // 显示对话框\n        state.changePasswordDialogVisible = true;\n        console.log('设置密码对话框状态为:', state.changePasswordDialogVisible);\n      } catch (error) {\n        console.error('显示修改密码对话框出错:', error);\n        ElMessage.error('显示修改密码对话框出错');\n      }\n    };\n\n    // 提交修改密码表单\n    var submitPasswordForm = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              console.log('提交修改密码表单');\n\n              // 确保表单数据存在\n              if (state.passwordForm) {\n                _context7.next = 5;\n                break;\n              }\n              ElMessage.error('密码表单数据不存在');\n              return _context7.abrupt(\"return\");\n            case 5:\n              if (state.passwordForm.old_password) {\n                _context7.next = 8;\n                break;\n              }\n              ElMessage.error('请输入当前密码');\n              return _context7.abrupt(\"return\");\n            case 8:\n              if (state.passwordForm.new_password) {\n                _context7.next = 11;\n                break;\n              }\n              ElMessage.error('请输入新密码');\n              return _context7.abrupt(\"return\");\n            case 11:\n              if (!(state.passwordForm.new_password !== state.passwordForm.confirm_password)) {\n                _context7.next = 14;\n                break;\n              }\n              ElMessage.error('两次输入的密码不一致');\n              return _context7.abrupt(\"return\");\n            case 14:\n              state.submitting = true;\n              _context7.next = 17;\n              return changePassword(state.passwordForm);\n            case 17:\n              response = _context7.sent;\n              console.log('修改密码响应:', response);\n              if (response.code === 0) {\n                ElMessage.success(response.msg || '密码修改成功，请重新登录');\n                state.changePasswordDialogVisible = false;\n\n                // 退出登录\n                store.dispatch('logout');\n                router.push('/login');\n              } else {\n                ElMessage.error(response.msg || '密码修改失败');\n              }\n              _context7.next = 26;\n              break;\n            case 22:\n              _context7.prev = 22;\n              _context7.t0 = _context7[\"catch\"](0);\n              console.error('密码修改失败:', _context7.t0);\n              ElMessage.error('密码修改失败');\n            case 26:\n              _context7.prev = 26;\n              state.submitting = false;\n              return _context7.finish(26);\n            case 29:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, null, [[0, 22, 26, 29]]);\n      }));\n      return function submitPasswordForm() {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    // 生命周期钩子\n    onMounted(function () {\n      fetchUserProfile();\n      fetchUserPosts();\n    });\n    return _objectSpread(_objectSpread({}, toRefs(state)), {}, {\n      userId: userId,\n      isCurrentUser: isCurrentUser,\n      formatDate: formatDate,\n      handleTabClick: handleTabClick,\n      handlePostsPageChange: handlePostsPageChange,\n      handleCommentsPageChange: handleCommentsPageChange,\n      handleFavoritesPageChange: handleFavoritesPageChange,\n      viewPost: viewPost,\n      showEditProfileDialog: showEditProfileDialog,\n      handleNicknameInput: handleNicknameInput,\n      beforeAvatarUpload: beforeAvatarUpload,\n      handleAvatarUpload: handleAvatarUpload,\n      submitProfileForm: submitProfileForm,\n      showChangePasswordDialog: showChangePasswordDialog,\n      submitPasswordForm: submitPasswordForm\n    });\n  }\n};","map":{"version":3,"names":["computed","onMounted","toRefs","reactive","useRoute","useRouter","useStore","ElMessage","formatDateTime","getUserProfile","getUserById","updateUserProfile","getUserPosts","getUserComments","getUserFavorites","changePassword","uploadAvatar","formatDate","date","name","setup","route","router","store","state","loading","userProfile","userStats","posts_count","comments_count","favorites_count","activeTab","postsLoading","posts","postsTotal","postsQuery","page","limit","commentsLoading","comments","commentsTotal","commentsQuery","favoritesLoading","favorites","favoritesTotal","favoritesQuery","editProfileDialogVisible","profileForm","nickname","avatar_url","profileRules","max","message","trigger","uploadHeaders","Authorization","concat","localStorage","getItem","submitting","imageUploading","changePasswordDialogVisible","passwordForm","old_password","new_password","confirm_password","passwordRules","required","min","validator","rule","value","callback","Error","userId","params","id","isCurrentUser","getters","toString","query","tab","includes","fetchUserProfile","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","response","wrap","_callee$","_context","prev","next","console","log","sent","code","data","error","abrupt","t0","finish","stop","apply","arguments","fetchUserPosts","_ref2","_callee2","_callee2$","_context2","results","count","Array","isArray","length","fetchUserComments","_ref3","_callee3","_callee3$","_context3","fetchUserFavorites","_ref4","_callee4","_callee4$","_context4","handleTabClick","handlePostsPageChange","handleCommentsPageChange","handleFavoritesPageChange","viewPost","post","push","showEditProfileDialog","_state$userProfile","_state$userProfile2","handleNicknameInput","_state$userProfile3","beforeAvatarUpload","file","isImage","type","startsWith","isLt2M","size","handleAvatarUpload","_ref5","_callee5","options","formData","_callee5$","_context5","FormData","append","success","msg","_x","submitProfileForm","_ref6","_callee6","_callee6$","_context6","dispatch","_objectSpread","userInfo","t1","showChangePasswordDialog","submitPasswordForm","_ref7","_callee7","_callee7$","_context7"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\user\\Profile.vue"],"sourcesContent":["<template>\n  <div class=\"profile-container\">\n    <el-row :gutter=\"20\">\n      <!-- 左侧用户信息卡片 -->\n      <el-col :span=\"6\">\n        <el-card class=\"profile-card\">\n          <div v-if=\"loading\" class=\"loading-container\">\n            <el-skeleton :rows=\"5\" animated />\n          </div>\n          <div v-else class=\"user-info\">\n            <div class=\"avatar-container\">\n              <el-avatar :size=\"100\" :src=\"userProfile.avatar_url || ''\">\n                {{ userProfile.nickname?.charAt(0) || userProfile.username?.charAt(0) || 'U' }}\n              </el-avatar>\n            </div>\n            <h2 class=\"username\">{{ userProfile.nickname || userProfile.username }}</h2>\n            <div class=\"user-meta\">\n              <div class=\"meta-item\">\n                <i class=\"el-icon-user\"></i>\n                <span>{{ userProfile.username }}</span>\n              </div>\n              <div class=\"meta-item\">\n                <i class=\"el-icon-message\"></i>\n                <span>{{ userProfile.email }}</span>\n              </div>\n              <div class=\"meta-item\">\n                <i class=\"el-icon-date\"></i>\n                <span>注册于 {{ formatDate(userProfile.created_at) }}</span>\n              </div>\n              <div class=\"meta-item\">\n                <i class=\"el-icon-time\"></i>\n                <span>最后登录 {{ formatDate(userProfile.last_login) }}</span>\n              </div>\n            </div>\n\n            <div class=\"user-stats\">\n              <div class=\"stat-item\">\n                <div class=\"stat-value\">{{ userStats.posts_count || 0 }}</div>\n                <div class=\"stat-label\">帖子</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-value\">{{ userStats.comments_count || 0 }}</div>\n                <div class=\"stat-label\">评论</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-value\">{{ userStats.favorites_count || 0 }}</div>\n                <div class=\"stat-label\">收藏</div>\n              </div>\n            </div>\n\n            <div v-if=\"isCurrentUser\" class=\"user-actions\">\n              <el-button type=\"primary\" @click=\"showEditProfileDialog\">编辑资料</el-button>\n              <el-button @click=\"showChangePasswordDialog\">修改密码</el-button>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n\n      <!-- 右侧内容区域 -->\n      <el-col :span=\"18\">\n        <el-card class=\"content-card\">\n          <el-tabs v-model=\"activeTab\" @tab-click=\"handleTabClick\">\n            <el-tab-pane label=\"我的帖子\" name=\"posts\">\n              <div v-if=\"postsLoading\" class=\"loading-container\">\n                <el-skeleton :rows=\"5\" animated />\n              </div>\n              <div v-else-if=\"posts.length === 0\" class=\"empty-container\">\n                <el-empty description=\"暂无帖子\" />\n              </div>\n              <div v-else class=\"post-list\">\n                <div\n                  v-for=\"post in posts\"\n                  :key=\"post.id\"\n                  class=\"post-item\"\n                  @click=\"viewPost(post)\"\n                >\n                  <div class=\"post-title\">\n                    <el-tag v-if=\"post.is_pinned\" size=\"mini\" type=\"danger\">置顶</el-tag>\n                    <el-tag v-if=\"post.is_featured\" size=\"mini\" type=\"success\">精华</el-tag>\n                    <span>{{ post.title }}</span>\n                  </div>\n                  <div class=\"post-meta\">\n                    <div class=\"post-board\">\n                      <i class=\"el-icon-s-grid\"></i>\n                      <span>{{ post.board_name }}</span>\n                    </div>\n                    <div class=\"post-stats\">\n                      <span><i class=\"el-icon-view\"></i> {{ post.views }}</span>\n                      <span><i class=\"el-icon-star-on\"></i> {{ post.likes_count }}</span>\n                      <span><i class=\"el-icon-chat-dot-round\"></i> {{ post.comments_count }}</span>\n                    </div>\n                    <div class=\"post-time\">{{ formatDate(post.created_at) }}</div>\n                  </div>\n                </div>\n\n                <!-- 分页 -->\n                <div v-if=\"posts.length > 0\" class=\"pagination-container\">\n                  <el-pagination\n                    background\n                    layout=\"prev, pager, next\"\n                    :total=\"postsTotal\"\n                    :page-size=\"postsQuery.limit\"\n                    v-model:current-page=\"postsQuery.page\"\n                    @current-change=\"handlePostsPageChange\"\n                  >\n                  </el-pagination>\n                </div>\n              </div>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"我的评论\" name=\"comments\">\n              <div v-if=\"commentsLoading\" class=\"loading-container\">\n                <el-skeleton :rows=\"5\" animated />\n              </div>\n              <div v-else-if=\"comments.length === 0\" class=\"empty-container\">\n                <el-empty description=\"暂无评论\" />\n              </div>\n              <div v-else class=\"comment-list\">\n                <div\n                  v-for=\"comment in comments\"\n                  :key=\"comment.id\"\n                  class=\"comment-item\"\n                >\n                  <div class=\"comment-content\">{{ comment.content }}</div>\n                  <div class=\"comment-meta\">\n                    <div class=\"comment-post\" @click=\"viewPost({ id: comment.post })\">\n                      <i class=\"el-icon-document\"></i>\n                      <span>查看原帖</span>\n                    </div>\n                    <div class=\"comment-time\">{{ formatDate(comment.created_at) }}</div>\n                  </div>\n                </div>\n\n                <!-- 分页 -->\n                <div v-if=\"comments.length > 0\" class=\"pagination-container\">\n                  <el-pagination\n                    background\n                    layout=\"prev, pager, next\"\n                    :total=\"commentsTotal\"\n                    :page-size=\"commentsQuery.limit\"\n                    v-model:current-page=\"commentsQuery.page\"\n                    @current-change=\"handleCommentsPageChange\"\n                  >\n                  </el-pagination>\n                </div>\n              </div>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"我的收藏\" name=\"favorites\">\n              <div v-if=\"favoritesLoading\" class=\"loading-container\">\n                <el-skeleton :rows=\"5\" animated />\n              </div>\n              <div v-else-if=\"favorites.length === 0\" class=\"empty-container\">\n                <el-empty description=\"暂无收藏\" />\n              </div>\n              <div v-else class=\"favorite-list\">\n                <div\n                  v-for=\"favorite in favorites\"\n                  :key=\"favorite.id\"\n                  class=\"favorite-item\"\n                  @click=\"viewPost(favorite.post)\"\n                >\n                  <div class=\"post-title\">\n                    <el-tag v-if=\"favorite.post.is_pinned\" size=\"mini\" type=\"danger\">置顶</el-tag>\n                    <el-tag v-if=\"favorite.post.is_featured\" size=\"mini\" type=\"success\">精华</el-tag>\n                    <span>{{ favorite.post.title }}</span>\n                  </div>\n                  <div class=\"post-meta\">\n                    <div class=\"post-author\">\n                      <i class=\"el-icon-user\"></i>\n                      <span>{{ favorite.post.user.nickname || favorite.post.user.username }}</span>\n                    </div>\n                    <div class=\"post-board\">\n                      <i class=\"el-icon-s-grid\"></i>\n                      <span>{{ favorite.post.board_name }}</span>\n                    </div>\n                    <div class=\"post-stats\">\n                      <span><i class=\"el-icon-view\"></i> {{ favorite.post.views }}</span>\n                      <span><i class=\"el-icon-star-on\"></i> {{ favorite.post.likes_count }}</span>\n                      <span><i class=\"el-icon-chat-dot-round\"></i> {{ favorite.post.comments_count }}</span>\n                    </div>\n                    <div class=\"post-time\">{{ formatDate(favorite.created_at) }}</div>\n                  </div>\n                </div>\n\n                <!-- 分页 -->\n                <div v-if=\"favorites.length > 0\" class=\"pagination-container\">\n                  <el-pagination\n                    background\n                    layout=\"prev, pager, next\"\n                    :total=\"favoritesTotal\"\n                    :page-size=\"favoritesQuery.limit\"\n                    v-model:current-page=\"favoritesQuery.page\"\n                    @current-change=\"handleFavoritesPageChange\"\n                  >\n                  </el-pagination>\n                </div>\n              </div>\n            </el-tab-pane>\n          </el-tabs>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 编辑资料对话框 -->\n    <el-dialog\n      title=\"编辑个人资料\"\n      v-model=\"editProfileDialogVisible\"\n      width=\"500px\"\n      destroy-on-close\n    >\n      <el-form\n        ref=\"profileForm\"\n        :model=\"profileForm\"\n        :rules=\"profileRules\"\n        label-width=\"80px\"\n      >\n        <el-form-item label=\"昵称\" prop=\"nickname\">\n          <el-input\n            v-model=\"profileForm.nickname\"\n            placeholder=\"请输入昵称\"\n            @input=\"handleNicknameInput\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"头像\">\n          <div class=\"avatar-upload-container\">\n            <div class=\"avatar-preview\">\n              <el-avatar :size=\"80\" :src=\"profileForm.avatar_url || ''\">\n                {{ profileForm.nickname?.charAt(0) || userProfile.username?.charAt(0) || 'U' }}\n              </el-avatar>\n            </div>\n            <div class=\"upload-options\">\n              <el-upload\n                class=\"avatar-uploader\"\n                action=\"#\"\n                :http-request=\"handleAvatarUpload\"\n                :show-file-list=\"false\"\n                :before-upload=\"beforeAvatarUpload\"\n              >\n                <el-button type=\"primary\" size=\"small\">上传头像</el-button>\n              </el-upload>\n              <div class=\"url-input\">\n                <p class=\"hint-text\">或者直接输入图片URL：</p>\n                <el-input v-model=\"profileForm.avatar_url\" placeholder=\"请输入头像URL\"></el-input>\n              </div>\n            </div>\n          </div>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"editProfileDialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitProfileForm\" :loading=\"submitting\">确 定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n\n    <!-- 修改密码对话框 -->\n    <el-dialog\n      title=\"修改密码\"\n      v-model=\"changePasswordDialogVisible\"\n      width=\"500px\"\n      destroy-on-close\n    >\n      <el-form\n        ref=\"passwordForm\"\n        :model=\"passwordForm\"\n        :rules=\"passwordRules\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"当前密码\" prop=\"old_password\">\n          <el-input\n            v-model=\"passwordForm.old_password\"\n            type=\"password\"\n            placeholder=\"请输入当前密码\"\n            show-password\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"新密码\" prop=\"new_password\">\n          <el-input\n            v-model=\"passwordForm.new_password\"\n            type=\"password\"\n            placeholder=\"请输入新密码\"\n            show-password\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"确认新密码\" prop=\"confirm_password\">\n          <el-input\n            v-model=\"passwordForm.confirm_password\"\n            type=\"password\"\n            placeholder=\"请再次输入新密码\"\n            show-password\n          ></el-input>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"changePasswordDialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitPasswordForm\" :loading=\"submitting\">确 定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { computed, onMounted, toRefs, reactive } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { ElMessage } from 'element-plus'\nimport { formatDateTime } from '@/utils/index'\nimport {\n  getUserProfile,\n  getUserById,\n  updateUserProfile,\n  getUserPosts,\n  getUserComments,\n  getUserFavorites,\n  changePassword,\n  uploadAvatar\n} from '@/api/profile'\n\n// 格式化日期函数\nconst formatDate = (date) => {\n  return formatDateTime(date)\n}\n\nexport default {\n  name: 'UserProfile',\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n    const store = useStore()\n\n    // 状态\n    const state = reactive({\n      loading: false,\n      userProfile: {},\n      userStats: {\n        posts_count: 0,\n        comments_count: 0,\n        favorites_count: 0\n      },\n      activeTab: 'posts',\n\n      // 帖子相关\n      postsLoading: false,\n      posts: [],\n      postsTotal: 0,\n      postsQuery: {\n        page: 1,\n        limit: 10\n      },\n\n      // 评论相关\n      commentsLoading: false,\n      comments: [],\n      commentsTotal: 0,\n      commentsQuery: {\n        page: 1,\n        limit: 10\n      },\n\n      // 收藏相关\n      favoritesLoading: false,\n      favorites: [],\n      favoritesTotal: 0,\n      favoritesQuery: {\n        page: 1,\n        limit: 10\n      },\n\n      // 编辑资料相关\n      editProfileDialogVisible: false,\n      profileForm: {\n        nickname: '',\n        avatar_url: ''\n      },\n      profileRules: {\n        nickname: [\n          { max: 50, message: '昵称不能超过50个字符', trigger: 'blur' }\n        ]\n      },\n      uploadHeaders: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      },\n      submitting: false,\n      imageUploading: false,\n\n      // 修改密码相关\n      changePasswordDialogVisible: false,\n      passwordForm: {\n        old_password: '',\n        new_password: '',\n        confirm_password: ''\n      },\n      passwordRules: {\n        old_password: [\n          { required: true, message: '请输入当前密码', trigger: 'blur' }\n        ],\n        new_password: [\n          { required: true, message: '请输入新密码', trigger: 'blur' },\n          { min: 6, message: '密码长度不能少于6个字符', trigger: 'blur' }\n        ],\n        confirm_password: [\n          { required: true, message: '请再次输入新密码', trigger: 'blur' },\n          {\n            validator: (rule, value, callback) => {\n              if (value !== state.passwordForm.new_password) {\n                callback(new Error('两次输入的密码不一致'))\n              } else {\n                callback()\n              }\n            },\n            trigger: 'blur'\n          }\n        ]\n      }\n    })\n\n    // 计算属性\n    const userId = computed(() => route.params.id || 'me')\n    const isCurrentUser = computed(() => !route.params.id || route.params.id === 'me' || route.params.id === store.getters.userId.toString())\n\n    // 从查询参数中获取激活的标签页\n    if (route.query.tab && ['posts', 'comments', 'favorites'].includes(route.query.tab)) {\n      state.activeTab = route.query.tab\n    }\n\n    // 获取用户信息\n    const fetchUserProfile = async () => {\n      state.loading = true\n      try {\n        // 检查本地存储的token\n        const token = localStorage.getItem('token')\n        console.log('获取用户信息前的token:', token)\n\n        let response\n        if (userId.value === 'me' || !userId.value) {\n          console.log('获取当前用户信息')\n          response = await getUserProfile()\n        } else {\n          console.log('获取指定用户信息:', userId.value)\n          response = await getUserById(userId.value)\n        }\n\n        console.log('用户信息响应:', response)\n\n        // 处理不同的响应格式\n        if (response.code === 0) {\n          state.userProfile = response.data\n        } else if (response.id) {\n          // 直接返回了用户对象\n          state.userProfile = response\n        } else {\n          ElMessage.error('获取用户信息失败: 响应格式不正确')\n          console.error('响应格式不正确:', response)\n          return\n        }\n\n        // 初始化编辑表单\n        if (!state.profileForm) {\n          state.profileForm = {\n            nickname: state.userProfile.nickname || '',\n            avatar_url: state.userProfile.avatar_url || ''\n          }\n        } else {\n          state.profileForm.nickname = state.userProfile.nickname || ''\n          state.profileForm.avatar_url = state.userProfile.avatar_url || ''\n        }\n      } catch (error) {\n        console.error('获取用户信息失败:', error)\n        ElMessage.error('获取用户信息失败')\n      } finally {\n        state.loading = false\n      }\n    }\n\n    // 获取用户帖子\n    const fetchUserPosts = async () => {\n      state.postsLoading = true\n      try {\n        // 检查本地存储的token\n        const token = localStorage.getItem('token')\n        console.log('获取用户帖子前的token:', token)\n\n        const response = await getUserPosts(userId.value)\n        console.log('用户帖子响应:', response)\n\n        // 处理不同的响应格式\n        if (response.code === 0 && response.data) {\n          // 标准格式响应\n          state.posts = response.data.results || []\n          state.postsTotal = response.data.count || 0\n          state.userStats.posts_count = response.data.count || 0\n        } else if (response.results) {\n          // DRF分页响应格式\n          state.posts = response.results || []\n          state.postsTotal = response.count || 0\n          state.userStats.posts_count = response.count || 0\n        } else if (Array.isArray(response)) {\n          // 直接返回数组\n          state.posts = response\n          state.postsTotal = response.length\n          state.userStats.posts_count = response.length\n        } else {\n          // 其他格式\n          console.error('响应格式不正确:', response)\n          ElMessage.error('获取用户帖子失败: 响应格式不正确')\n          return\n        }\n      } catch (error) {\n        console.error('获取用户帖子失败:', error)\n        ElMessage.error('获取用户帖子失败')\n      } finally {\n        state.postsLoading = false\n      }\n    }\n\n    // 获取用户评论\n    const fetchUserComments = async () => {\n      state.commentsLoading = true\n      try {\n        const response = await getUserComments(userId.value)\n        console.log('用户评论响应:', response)\n\n        // 处理不同的响应格式\n        if (response.code === 0 && response.data) {\n          // 标准格式响应\n          state.comments = response.data.results || []\n          state.commentsTotal = response.data.count || 0\n          state.userStats.comments_count = response.data.count || 0\n        } else if (response.results) {\n          // DRF分页响应格式\n          state.comments = response.results || []\n          state.commentsTotal = response.count || 0\n          state.userStats.comments_count = response.count || 0\n        } else if (Array.isArray(response)) {\n          // 直接返回数组\n          state.comments = response\n          state.commentsTotal = response.length\n          state.userStats.comments_count = response.length\n        } else {\n          // 其他格式\n          console.error('响应格式不正确:', response)\n          ElMessage.error('获取用户评论失败: 响应格式不正确')\n          return\n        }\n      } catch (error) {\n        console.error('获取用户评论失败:', error)\n        ElMessage.error('获取用户评论失败')\n      } finally {\n        state.commentsLoading = false\n      }\n    }\n\n    // 获取用户收藏\n    const fetchUserFavorites = async () => {\n      state.favoritesLoading = true\n      try {\n        const response = await getUserFavorites(userId.value)\n        console.log('用户收藏响应:', response)\n\n        // 处理不同的响应格式\n        if (response.code === 0 && response.data) {\n          // 标准格式响应\n          state.favorites = response.data.results || []\n          state.favoritesTotal = response.data.count || 0\n          state.userStats.favorites_count = response.data.count || 0\n        } else if (response.results) {\n          // DRF分页响应格式\n          state.favorites = response.results || []\n          state.favoritesTotal = response.count || 0\n          state.userStats.favorites_count = response.count || 0\n        } else if (Array.isArray(response)) {\n          // 直接返回数组\n          state.favorites = response\n          state.favoritesTotal = response.length\n          state.userStats.favorites_count = response.length\n        } else {\n          // 其他格式\n          console.error('响应格式不正确:', response)\n          ElMessage.error('获取用户收藏失败: 响应格式不正确')\n          return\n        }\n      } catch (error) {\n        console.error('获取用户收藏失败:', error)\n        ElMessage.error('获取用户收藏失败')\n      } finally {\n        state.favoritesLoading = false\n      }\n    }\n\n    // 处理标签页切换\n    const handleTabClick = (tab) => {\n      state.activeTab = tab.name\n\n      if (tab.name === 'posts' && state.posts.length === 0) {\n        fetchUserPosts()\n      } else if (tab.name === 'comments' && state.comments.length === 0) {\n        fetchUserComments()\n      } else if (tab.name === 'favorites' && state.favorites.length === 0) {\n        fetchUserFavorites()\n      }\n    }\n\n    // 处理帖子分页变化\n    const handlePostsPageChange = (page) => {\n      state.postsQuery.page = page\n      fetchUserPosts()\n    }\n\n    // 处理评论分页变化\n    const handleCommentsPageChange = (page) => {\n      state.commentsQuery.page = page\n      fetchUserComments()\n    }\n\n    // 处理收藏分页变化\n    const handleFavoritesPageChange = (page) => {\n      state.favoritesQuery.page = page\n      fetchUserFavorites()\n    }\n\n    // 查看帖子\n    const viewPost = (post) => {\n      router.push({ name: 'PostDetail', params: { id: post.id } })\n    }\n\n    // 显示编辑资料对话框\n    const showEditProfileDialog = () => {\n      try {\n        console.log('点击编辑资料按钮')\n        console.log('当前对话框状态:', state.editProfileDialogVisible)\n        console.log('当前用户信息:', state.userProfile)\n\n        // 初始化表单数据 - 确保 profileForm 存在\n        if (!state.profileForm) {\n          state.profileForm = {\n            nickname: '',\n            avatar_url: ''\n          }\n        }\n\n        // 设置表单数据\n        state.profileForm.nickname = state.userProfile?.nickname || ''\n        state.profileForm.avatar_url = state.userProfile?.avatar_url || ''\n\n        // 更新上传头部以确保使用最新的token\n        state.uploadHeaders = {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n\n        // 显示对话框\n        state.editProfileDialogVisible = true\n        console.log('设置对话框状态为:', state.editProfileDialogVisible)\n      } catch (error) {\n        console.error('显示编辑资料对话框出错:', error)\n        ElMessage.error('显示编辑资料对话框出错')\n      }\n    }\n\n    // 处理昵称输入\n    const handleNicknameInput = (value) => {\n      console.log('昵称输入:', value)\n      // 确保表单数据存在\n      if (!state.profileForm) {\n        state.profileForm = {\n          nickname: value,\n          avatar_url: state.userProfile?.avatar_url || ''\n        }\n      } else {\n        state.profileForm.nickname = value\n      }\n    }\n\n    // 头像上传前的验证\n    const beforeAvatarUpload = (file) => {\n      state.imageUploading = true\n      const isImage = file.type.startsWith('image/')\n      const isLt2M = file.size / 1024 / 1024 < 2\n\n      if (!isImage) {\n        ElMessage.error('头像必须是图片格式!')\n        state.imageUploading = false\n        return false\n      }\n      if (!isLt2M) {\n        ElMessage.error('头像大小不能超过 2MB!')\n        state.imageUploading = false\n        return false\n      }\n      return true\n    }\n\n    // 处理头像上传\n    const handleAvatarUpload = async (options) => {\n      const { file } = options\n      state.imageUploading = true\n\n      try {\n        // 创建FormData\n        const formData = new FormData()\n        formData.append('file', file)\n\n        // 调用上传API\n        const response = await uploadAvatar(formData)\n\n        if (response.code === 0) {\n          state.profileForm.avatar_url = response.data.avatar_url\n          ElMessage.success('头像上传成功')\n        } else {\n          ElMessage.error(response.msg || '头像上传失败')\n        }\n      } catch (error) {\n        console.error('头像上传失败:', error)\n        ElMessage.error('头像上传失败')\n      } finally {\n        state.imageUploading = false\n      }\n    }\n\n    // 提交编辑资料表单\n    const submitProfileForm = async () => {\n      try {\n        console.log('提交编辑资料表单')\n        console.log('表单数据:', state.profileForm)\n\n        // 确保表单数据存在\n        if (!state.profileForm) {\n          ElMessage.error('表单数据不存在')\n          return\n        }\n\n        state.submitting = true\n\n        // 准备要提交的数据\n        const formData = {\n          nickname: state.profileForm.nickname || '',\n          avatar_url: state.profileForm.avatar_url || ''\n        }\n\n        try {\n          const response = await updateUserProfile(formData)\n          console.log('更新用户资料响应:', response)\n\n          // 无论响应如何，都先关闭对话框\n          state.editProfileDialogVisible = false\n\n          // 先刷新用户信息，以确保显示最新数据\n          await fetchUserProfile()\n\n          // 更新Vuex中的用户信息\n          store.dispatch('updateUserInfo', {\n            ...store.getters.userInfo,\n            nickname: formData.nickname,\n            avatar_url: formData.avatar_url\n          })\n\n          // 最后显示成功消息\n          ElMessage.success('个人资料更新成功')\n        } catch (apiError) {\n          console.error('调用API更新用户资料失败:', apiError)\n\n          // 尝试刷新用户信息，查看是否实际更新成功\n          await fetchUserProfile()\n\n          // 关闭对话框\n          state.editProfileDialogVisible = false\n\n          // 显示错误消息\n          ElMessage.error('个人资料更新失败，请刷新页面查看最新状态')\n        }\n      } catch (error) {\n        console.error('个人资料更新失败:', error)\n        ElMessage.error('个人资料更新失败')\n        // 关闭对话框\n        state.editProfileDialogVisible = false\n      } finally {\n        state.submitting = false\n      }\n    }\n\n    // 显示修改密码对话框\n    const showChangePasswordDialog = () => {\n      try {\n        console.log('点击修改密码按钮')\n        console.log('当前密码对话框状态:', state.changePasswordDialogVisible)\n\n        // 初始化密码表单 - 确保 passwordForm 存在\n        if (!state.passwordForm) {\n          state.passwordForm = {\n            old_password: '',\n            new_password: '',\n            confirm_password: ''\n          }\n        } else {\n          // 重置密码表单\n          state.passwordForm.old_password = ''\n          state.passwordForm.new_password = ''\n          state.passwordForm.confirm_password = ''\n        }\n\n        // 显示对话框\n        state.changePasswordDialogVisible = true\n        console.log('设置密码对话框状态为:', state.changePasswordDialogVisible)\n      } catch (error) {\n        console.error('显示修改密码对话框出错:', error)\n        ElMessage.error('显示修改密码对话框出错')\n      }\n    }\n\n    // 提交修改密码表单\n    const submitPasswordForm = async () => {\n      try {\n        console.log('提交修改密码表单')\n\n        // 确保表单数据存在\n        if (!state.passwordForm) {\n          ElMessage.error('密码表单数据不存在')\n          return\n        }\n\n        // 验证密码\n        if (!state.passwordForm.old_password) {\n          ElMessage.error('请输入当前密码')\n          return\n        }\n\n        if (!state.passwordForm.new_password) {\n          ElMessage.error('请输入新密码')\n          return\n        }\n\n        if (state.passwordForm.new_password !== state.passwordForm.confirm_password) {\n          ElMessage.error('两次输入的密码不一致')\n          return\n        }\n\n        state.submitting = true\n\n        const response = await changePassword(state.passwordForm)\n        console.log('修改密码响应:', response)\n\n        if (response.code === 0) {\n          ElMessage.success(response.msg || '密码修改成功，请重新登录')\n          state.changePasswordDialogVisible = false\n\n          // 退出登录\n          store.dispatch('logout')\n          router.push('/login')\n        } else {\n          ElMessage.error(response.msg || '密码修改失败')\n        }\n      } catch (error) {\n        console.error('密码修改失败:', error)\n        ElMessage.error('密码修改失败')\n      } finally {\n        state.submitting = false\n      }\n    }\n\n    // 生命周期钩子\n    onMounted(() => {\n      fetchUserProfile()\n      fetchUserPosts()\n    })\n\n    return {\n      ...toRefs(state),\n      userId,\n      isCurrentUser,\n      formatDate,\n      handleTabClick,\n      handlePostsPageChange,\n      handleCommentsPageChange,\n      handleFavoritesPageChange,\n      viewPost,\n      showEditProfileDialog,\n      handleNicknameInput,\n      beforeAvatarUpload,\n      handleAvatarUpload,\n      submitProfileForm,\n      showChangePasswordDialog,\n      submitPasswordForm\n    }\n  }\n}\n</script>\n\n<style scoped>\n.profile-container {\n  padding: 20px;\n}\n\n.loading-container {\n  padding: 20px 0;\n}\n\n.profile-card,\n.content-card {\n  margin-bottom: 20px;\n}\n\n.user-info {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.avatar-container {\n  margin-bottom: 15px;\n}\n\n.username {\n  margin: 0 0 15px;\n  font-size: 20px;\n}\n\n.user-meta {\n  width: 100%;\n  margin-bottom: 20px;\n}\n\n.meta-item {\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n  color: #606266;\n}\n\n.meta-item i {\n  margin-right: 8px;\n  width: 16px;\n  text-align: center;\n}\n\n.user-stats {\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 15px 0;\n  border-top: 1px solid #ebeef5;\n  border-bottom: 1px solid #ebeef5;\n}\n\n.stat-item {\n  text-align: center;\n}\n\n.stat-value {\n  font-size: 20px;\n  font-weight: bold;\n  color: #409eff;\n}\n\n.stat-label {\n  font-size: 14px;\n  color: #606266;\n}\n\n.user-actions {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 10px;\n}\n\n.empty-container {\n  padding: 40px 0;\n}\n\n.post-list,\n.comment-list,\n.favorite-list {\n  margin-bottom: 20px;\n}\n\n.post-item,\n.favorite-item {\n  padding: 15px;\n  border-bottom: 1px solid #ebeef5;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.post-item:hover,\n.favorite-item:hover {\n  background-color: #f5f7fa;\n}\n\n.post-item:last-child,\n.favorite-item:last-child {\n  border-bottom: none;\n}\n\n.post-title {\n  font-size: 16px;\n  font-weight: bold;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n}\n\n.post-title .el-tag {\n  margin-right: 8px;\n}\n\n.post-meta {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 13px;\n  color: #909399;\n}\n\n.post-board,\n.post-author {\n  display: flex;\n  align-items: center;\n}\n\n.post-board i,\n.post-author i {\n  margin-right: 5px;\n}\n\n.post-stats {\n  display: flex;\n}\n\n.post-stats span {\n  margin-right: 15px;\n  display: flex;\n  align-items: center;\n}\n\n.post-stats span i {\n  margin-right: 5px;\n}\n\n.comment-item {\n  padding: 15px;\n  border-bottom: 1px solid #ebeef5;\n}\n\n.comment-item:last-child {\n  border-bottom: none;\n}\n\n.comment-content {\n  margin-bottom: 10px;\n  line-height: 1.5;\n  white-space: pre-wrap;\n}\n\n.comment-meta {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 13px;\n  color: #909399;\n}\n\n.comment-post {\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  color: #409eff;\n}\n\n.comment-post i {\n  margin-right: 5px;\n}\n\n.pagination-container {\n  text-align: center;\n  margin-top: 20px;\n}\n\n.avatar-upload-container {\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 15px;\n}\n\n.avatar-preview {\n  margin-right: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.upload-options {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.avatar-uploader {\n  margin-bottom: 15px;\n}\n\n.url-input {\n  margin-top: 10px;\n}\n\n.hint-text {\n  font-size: 12px;\n  color: #909399;\n  margin-bottom: 5px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}