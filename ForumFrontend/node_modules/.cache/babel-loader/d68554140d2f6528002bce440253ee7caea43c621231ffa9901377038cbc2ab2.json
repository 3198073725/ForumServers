{"ast":null,"code":"import _typeof from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _regeneratorRuntime from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { getBoardList } from '@/api/board';\nimport { createPost, getPostDetail, updatePost } from '@/api/post';\nimport { mapGetters } from 'vuex';\nimport RichTextEditor from '@/components/RichTextEditor.vue';\nexport default {\n  name: 'PostCreate',\n  components: {\n    RichTextEditor: RichTextEditor\n  },\n  data: function data() {\n    return {\n      isEdit: false,\n      postId: null,\n      submitting: false,\n      boardOptions: [],\n      postForm: {\n        title: '',\n        board: null,\n        content: ''\n      },\n      postRules: {\n        title: [{\n          required: true,\n          message: '请输入帖子标题',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 100,\n          message: '长度在 2 到 100 个字符',\n          trigger: 'blur'\n        }],\n        board: [{\n          required: true,\n          message: '请选择板块',\n          trigger: 'change'\n        }],\n        content: [{\n          required: true,\n          message: '请输入帖子内容',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters(['isAdmin', 'isAuthenticated'])), {}, {\n    isLogin: function isLogin() {\n      return this.isAuthenticated;\n    }\n  }),\n  created: function created() {\n    var _this = this;\n    console.log('发帖页面创建, 登录状态:', this.isLogin, '认证状态:', this.isAuthenticated);\n\n    // 检查是否登录\n    if (!this.isLogin) {\n      console.log('发帖页面检测到未登录，跳转到登录页面');\n      this.$message.warning('请先登录');\n      this.$router.push({\n        name: 'Login',\n        query: {\n          redirect: this.$route.fullPath\n        }\n      });\n      return;\n    }\n    console.log('发帖页面检测到已登录，继续加载页面');\n\n    // 清除可能的成功消息提示\n    this.$message.closeAll();\n\n    // 添加延时清除，确保异步请求完成后也不会显示消息\n    setTimeout(function () {\n      console.log('组件内延时清除消息');\n      _this.$message.closeAll();\n    }, 200);\n\n    // 获取板块选项\n    this.fetchBoardOptions();\n\n    // 检查是否是编辑模式\n    var id = this.$route.params.id;\n    if (id) {\n      this.isEdit = true;\n      this.postId = id;\n      this.fetchPostDetail(id);\n    } else {\n      // 如果是从板块详情页跳转过来，预设板块\n      var boardId = this.$route.params.boardId;\n      if (boardId) {\n        this.postForm.board = parseInt(boardId);\n      }\n    }\n  },\n  methods: {\n    // 获取板块选项\n    fetchBoardOptions: function fetchBoardOptions() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, boardsData;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              // 清除所有消息，确保不显示\"操作成功\"\n              _this2.$message.closeAll();\n              console.log('开始获取板块列表...');\n              _context.next = 5;\n              return getBoardList();\n            case 5:\n              response = _context.sent;\n              console.log('板块列表响应:', response);\n              boardsData = [];\n              if (response && response.status === 0 && response.data) {\n                // 处理Django REST framework自定义响应格式\n                console.log('使用status=0格式处理板块列表数据');\n                boardsData = response.data || [];\n              } else if (response && response.code === 0 && response.data) {\n                // 处理另一种自定义响应格式\n                console.log('使用code=0格式处理板块列表数据');\n                boardsData = response.data || [];\n              } else if (response && Array.isArray(response)) {\n                // 直接返回数组的情况\n                console.log('使用数组格式处理板块列表数据');\n                boardsData = response;\n              } else {\n                console.error('获取板块列表失败:', response ? response.msg : '未知错误');\n                boardsData = []; // 如果获取失败，设置为空数组\n                _this2.$message.error((response === null || response === void 0 ? void 0 : response.msg) || '获取板块列表失败');\n              }\n\n              // 过滤板块列表，如果不是管理员，则过滤掉\"推荐\"和\"精选\"板块\n              if (!_this2.isAdmin) {\n                console.log('非管理员用户，过滤掉推荐和精选板块');\n                boardsData = boardsData.filter(function (board) {\n                  return board.name !== '推荐' && board.name !== '精选';\n                });\n              }\n              _this2.boardOptions = boardsData;\n\n              // 再次清除所有消息，确保不显示\"操作成功\"\n              _this2.$message.closeAll();\n              console.log('获取到的板块选项:', _this2.boardOptions);\n              _context.next = 19;\n              break;\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('获取板块列表失败:', _context.t0);\n              _this2.$message.error('获取板块列表失败');\n            case 19:\n              // 添加延时清除，确保异步请求完成后也不会显示消息\n              setTimeout(function () {\n                console.log('获取板块列表后延时清除消息');\n                _this2.$message.closeAll();\n              }, 300);\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 15]]);\n      }))();\n    },\n    // 获取帖子详情（编辑模式）\n    fetchPostDetail: function fetchPostDetail(id) {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response, post;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return getPostDetail(id);\n            case 3:\n              response = _context2.sent;\n              if (response.code === 0) {\n                post = response.data;\n                _this3.postForm = {\n                  title: post.title,\n                  board: post.board.id,\n                  content: post.content\n                };\n\n                // 检查是否有权限编辑\n                if (!_this3.isAdmin && post.user.id !== _this3.$store.getters.userId) {\n                  _this3.$message.error('您没有权限编辑该帖子');\n                  _this3.$router.push({\n                    name: 'PostDetail',\n                    params: {\n                      id: id\n                    }\n                  });\n                }\n              } else {\n                _this3.$message.error(response.msg || '获取帖子详情失败');\n                _this3.$router.push({\n                  name: 'PostList'\n                });\n              }\n              _context2.next = 12;\n              break;\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('获取帖子详情失败:', _context2.t0);\n              _this3.$message.error('获取帖子详情失败');\n              _this3.$router.push({\n                name: 'PostList'\n              });\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 7]]);\n      }))();\n    },\n    // 取消\n    cancel: function cancel() {\n      // 使用router.back()返回上一页\n      this.$router.back();\n    },\n    // 提交表单\n    submitForm: function submitForm() {\n      var _this4 = this;\n      console.log('开始提交表单，当前表单数据:', this.postForm);\n\n      // 先检查内容是否为空\n      if (!this.postForm.content || this.postForm.content === '<p><br></p>') {\n        this.$message.warning('请输入帖子内容');\n        return;\n      }\n      this.$refs.postForm.validate(/*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(valid, fields) {\n          var response, _response$data, _response$data2, postId, match, homeComponent, _response;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                console.log('表单验证结果:', valid, '验证失败字段:', fields);\n                if (!valid) {\n                  _context3.next = 26;\n                  break;\n                }\n                _this4.submitting = true;\n                _context3.prev = 3;\n                if (!_this4.isEdit) {\n                  _context3.next = 10;\n                  break;\n                }\n                _context3.next = 7;\n                return updatePost(_this4.postId, _this4.postForm);\n              case 7:\n                response = _context3.sent;\n                _context3.next = 13;\n                break;\n              case 10:\n                _context3.next = 12;\n                return createPost(_this4.postForm);\n              case 12:\n                response = _context3.sent;\n              case 13:\n                console.log('提交帖子响应:', response);\n                if (response && (response.code === 0 || response.status === 0)) {\n                  // 打印完整的响应对象\n                  console.log('发布成功，完整响应对象:', {\n                    response: response,\n                    responseData: response.data,\n                    responseType: _typeof(response.data),\n                    hasId: (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.id,\n                    hasPostId: (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.post_id\n                  });\n\n                  // 获取帖子ID\n\n                  if (_this4.isEdit) {\n                    postId = _this4.postId;\n                  } else {\n                    // 尝试从不同位置获取帖子ID\n                    if (response.data) {\n                      if (typeof response.data === 'number') {\n                        postId = response.data;\n                      } else if (_typeof(response.data) === 'object') {\n                        postId = response.data.id || response.data.post_id || response.data.postId;\n                      }\n                    }\n\n                    // 如果在data中没找到，尝试在response根级别查找\n                    if (!postId) {\n                      postId = response.id || response.post_id || response.postId;\n                    }\n\n                    // 如果还是没找到，尝试解析响应消息中的ID\n                    if (!postId && response.msg) {\n                      match = response.msg.match(/ID[:：]?\\s*(\\d+)/i);\n                      if (match) {\n                        postId = parseInt(match[1]);\n                      }\n                    }\n                  }\n                  console.log('解析后的帖子ID:', postId);\n                  if (postId) {\n                    // 发布成功后，尝试刷新首页的帖子列表\n                    try {\n                      // 获取Home组件实例\n                      homeComponent = _this4.$root.$children.find(function (child) {\n                        return child.$options.name === 'Home';\n                      });\n                      if (homeComponent) {\n                        console.log('找到Home组件，刷新最新帖子列表');\n                        homeComponent.fetchLatestPosts();\n                      } else {\n                        console.log('未找到Home组件，可能已被卸载');\n                      }\n                    } catch (error) {\n                      console.error('刷新帖子列表失败:', error);\n                    }\n\n                    // 使用setTimeout确保路由跳转在当前操作完成后执行\n                    setTimeout(function () {\n                      console.log('跳转到帖子详情页:', postId);\n                      _this4.$router.push({\n                        name: 'PostDetail',\n                        params: {\n                          id: postId\n                        }\n                      });\n                    }, 500);\n                  } else {\n                    console.error('无法获取帖子ID，无法跳转到详情页');\n                    _this4.$message.warning('操作成功，但无法跳转到详情页');\n                    // 返回上一页\n                    setTimeout(function () {\n                      _this4.$router.back();\n                    }, 500);\n                  }\n                } else {\n                  console.error('提交失败，响应:', response);\n                  _this4.$message.error(((_response = response) === null || _response === void 0 ? void 0 : _response.msg) || (_this4.isEdit ? '更新失败' : '发布失败'));\n                }\n                _context3.next = 21;\n                break;\n              case 17:\n                _context3.prev = 17;\n                _context3.t0 = _context3[\"catch\"](3);\n                console.error(_this4.isEdit ? '更新帖子失败:' : '发布帖子失败:', _context3.t0);\n                _this4.$message.error(_this4.isEdit ? '更新帖子失败' : '发布帖子失败');\n              case 21:\n                _context3.prev = 21;\n                _this4.submitting = false;\n                return _context3.finish(21);\n              case 24:\n                _context3.next = 29;\n                break;\n              case 26:\n                console.log('表单验证失败');\n                // 显示具体的验证错误信息\n                if (fields) {\n                  if (fields.title) {\n                    _this4.$message.warning(fields.title[0].message);\n                  } else if (fields.board) {\n                    _this4.$message.warning(fields.board[0].message);\n                  } else if (fields.content) {\n                    _this4.$message.warning(fields.content[0].message);\n                  } else {\n                    _this4.$message.warning('请填写完整的表单信息');\n                  }\n                }\n                return _context3.abrupt(\"return\", false);\n              case 29:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3, null, [[3, 17, 21, 24]]);\n        }));\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    // 处理内容变化\n    handleContentChange: function handleContentChange(content) {\n      var _this5 = this;\n      console.log('内容变化:', content);\n\n      // 处理空内容的情况\n      if (!content || content === '<p><br></p>') {\n        this.postForm.content = '';\n        this.$message.warning('请输入帖子内容');\n      } else {\n        this.postForm.content = content;\n      }\n\n      // 手动触发表单验证\n      this.$nextTick(function () {\n        _this5.$refs.postForm.validateField('content');\n      });\n    }\n  }\n};","map":{"version":3,"names":["getBoardList","createPost","getPostDetail","updatePost","mapGetters","RichTextEditor","name","components","data","isEdit","postId","submitting","boardOptions","postForm","title","board","content","postRules","required","message","trigger","min","max","computed","_objectSpread","isLogin","isAuthenticated","created","_this","console","log","$message","warning","$router","push","query","redirect","$route","fullPath","closeAll","setTimeout","fetchBoardOptions","id","params","fetchPostDetail","boardId","parseInt","methods","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","boardsData","wrap","_callee$","_context","prev","next","sent","status","code","Array","isArray","error","msg","isAdmin","filter","t0","stop","_this3","_callee2","post","_callee2$","_context2","user","$store","getters","userId","cancel","back","submitForm","_this4","$refs","validate","_ref","_callee3","valid","fields","_response$data","_response$data2","match","homeComponent","_response","_callee3$","_context3","responseData","responseType","_typeof","hasId","hasPostId","post_id","$root","$children","find","child","$options","fetchLatestPosts","finish","abrupt","_x","_x2","apply","arguments","handleContentChange","_this5","$nextTick","validateField"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\post\\PostCreate.vue"],"sourcesContent":["<template>\n  <div class=\"post-create-container\">\n    <el-card class=\"post-form-card\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span>{{ isEdit ? '编辑帖子' : '发布新帖' }}</span>\n      </div>\n\n      <el-form\n        ref=\"postForm\"\n        :model=\"postForm\"\n        :rules=\"postRules\"\n        label-width=\"80px\"\n        :validate-on-rule-change=\"false\"\n        @submit.prevent\n      >\n        <el-form-item label=\"标题\" prop=\"title\">\n          <el-input v-model=\"postForm.title\" placeholder=\"请输入帖子标题\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"板块\" prop=\"board\">\n          <el-select\n            v-model=\"postForm.board\"\n            placeholder=\"请选择板块\"\n            style=\"width: 100%\"\n            :disabled=\"isEdit && !isAdmin\"\n          >\n            <el-option\n              v-for=\"board in boardOptions\"\n              :key=\"board.id\"\n              :label=\"board.name\"\n              :value=\"board.id\"\n            >\n            </el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"内容\" prop=\"content\" :show-message=\"false\">\n          <rich-text-editor\n            v-model=\"postForm.content\"\n            :disabled=\"false\"\n            @change=\"handleContentChange\"\n          />\n        </el-form-item>\n\n        <el-form-item>\n          <el-button @click=\"cancel\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitForm\" :loading=\"submitting\">\n            {{ isEdit ? '保存修改' : '发布帖子' }}\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { getBoardList } from '@/api/board'\nimport { createPost, getPostDetail, updatePost } from '@/api/post'\nimport { mapGetters } from 'vuex'\nimport RichTextEditor from '@/components/RichTextEditor.vue'\n\nexport default {\n  name: 'PostCreate',\n  components: {\n    RichTextEditor\n  },\n  data() {\n    return {\n      isEdit: false,\n      postId: null,\n      submitting: false,\n      boardOptions: [],\n      postForm: {\n        title: '',\n        board: null,\n        content: ''\n      },\n      postRules: {\n        title: [\n          { required: true, message: '请输入帖子标题', trigger: 'blur' },\n          { min: 2, max: 100, message: '长度在 2 到 100 个字符', trigger: 'blur' }\n        ],\n        board: [\n          { required: true, message: '请选择板块', trigger: 'change' }\n        ],\n        content: [\n          { \n            required: true, \n            message: '请输入帖子内容', \n            trigger: 'change'\n          }\n        ]\n      }\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'isAdmin',\n      'isAuthenticated'\n    ]),\n    isLogin() {\n      return this.isAuthenticated\n    }\n  },\n  created() {\n    console.log('发帖页面创建, 登录状态:', this.isLogin, '认证状态:', this.isAuthenticated)\n\n    // 检查是否登录\n    if (!this.isLogin) {\n      console.log('发帖页面检测到未登录，跳转到登录页面')\n      this.$message.warning('请先登录')\n      this.$router.push({ name: 'Login', query: { redirect: this.$route.fullPath } })\n      return\n    }\n\n    console.log('发帖页面检测到已登录，继续加载页面')\n\n    // 清除可能的成功消息提示\n    this.$message.closeAll()\n\n    // 添加延时清除，确保异步请求完成后也不会显示消息\n    setTimeout(() => {\n      console.log('组件内延时清除消息')\n      this.$message.closeAll()\n    }, 200)\n\n    // 获取板块选项\n    this.fetchBoardOptions()\n\n    // 检查是否是编辑模式\n    const id = this.$route.params.id\n    if (id) {\n      this.isEdit = true\n      this.postId = id\n      this.fetchPostDetail(id)\n    } else {\n      // 如果是从板块详情页跳转过来，预设板块\n      const boardId = this.$route.params.boardId\n      if (boardId) {\n        this.postForm.board = parseInt(boardId)\n      }\n    }\n  },\n  methods: {\n    // 获取板块选项\n    async fetchBoardOptions() {\n      try {\n        // 清除所有消息，确保不显示\"操作成功\"\n        this.$message.closeAll()\n\n        console.log('开始获取板块列表...')\n        const response = await getBoardList()\n        console.log('板块列表响应:', response)\n\n        let boardsData = []\n        if (response && response.status === 0 && response.data) {\n          // 处理Django REST framework自定义响应格式\n          console.log('使用status=0格式处理板块列表数据')\n          boardsData = response.data || []\n        } else if (response && response.code === 0 && response.data) {\n          // 处理另一种自定义响应格式\n          console.log('使用code=0格式处理板块列表数据')\n          boardsData = response.data || []\n        } else if (response && Array.isArray(response)) {\n          // 直接返回数组的情况\n          console.log('使用数组格式处理板块列表数据')\n          boardsData = response\n        } else {\n          console.error('获取板块列表失败:', response ? response.msg : '未知错误')\n          boardsData = [] // 如果获取失败，设置为空数组\n          this.$message.error(response?.msg || '获取板块列表失败')\n        }\n        \n        // 过滤板块列表，如果不是管理员，则过滤掉\"推荐\"和\"精选\"板块\n        if (!this.isAdmin) {\n          console.log('非管理员用户，过滤掉推荐和精选板块')\n          boardsData = boardsData.filter(board => \n            board.name !== '推荐' && board.name !== '精选'\n          )\n        }\n        \n        this.boardOptions = boardsData\n        \n        // 再次清除所有消息，确保不显示\"操作成功\"\n        this.$message.closeAll()\n        \n        console.log('获取到的板块选项:', this.boardOptions)\n      } catch (error) {\n        console.error('获取板块列表失败:', error)\n        this.$message.error('获取板块列表失败')\n      }\n\n      // 添加延时清除，确保异步请求完成后也不会显示消息\n      setTimeout(() => {\n        console.log('获取板块列表后延时清除消息')\n        this.$message.closeAll()\n      }, 300)\n    },\n\n    // 获取帖子详情（编辑模式）\n    async fetchPostDetail(id) {\n      try {\n        const response = await getPostDetail(id)\n        if (response.code === 0) {\n          const post = response.data\n          this.postForm = {\n            title: post.title,\n            board: post.board.id,\n            content: post.content\n          }\n\n          // 检查是否有权限编辑\n          if (!this.isAdmin && post.user.id !== this.$store.getters.userId) {\n            this.$message.error('您没有权限编辑该帖子')\n            this.$router.push({ name: 'PostDetail', params: { id } })\n          }\n        } else {\n          this.$message.error(response.msg || '获取帖子详情失败')\n          this.$router.push({ name: 'PostList' })\n        }\n      } catch (error) {\n        console.error('获取帖子详情失败:', error)\n        this.$message.error('获取帖子详情失败')\n        this.$router.push({ name: 'PostList' })\n      }\n    },\n\n    // 取消\n    cancel() {\n      // 使用router.back()返回上一页\n      this.$router.back()\n    },\n\n    // 提交表单\n    submitForm() {\n      console.log('开始提交表单，当前表单数据:', this.postForm);\n      \n      // 先检查内容是否为空\n      if (!this.postForm.content || this.postForm.content === '<p><br></p>') {\n        this.$message.warning('请输入帖子内容');\n        return;\n      }\n      \n      this.$refs.postForm.validate(async (valid, fields) => {\n        console.log('表单验证结果:', valid, '验证失败字段:', fields);\n        \n        if (valid) {\n          this.submitting = true;\n          try {\n            let response;\n            if (this.isEdit) {\n              response = await updatePost(this.postId, this.postForm);\n            } else {\n              response = await createPost(this.postForm);\n            }\n\n            console.log('提交帖子响应:', response);\n\n            if (response && (response.code === 0 || response.status === 0)) {\n              // 打印完整的响应对象\n              console.log('发布成功，完整响应对象:', {\n                response,\n                responseData: response.data,\n                responseType: typeof response.data,\n                hasId: response.data?.id,\n                hasPostId: response.data?.post_id\n              });\n\n              // 获取帖子ID\n              let postId;\n              if (this.isEdit) {\n                postId = this.postId;\n              } else {\n                // 尝试从不同位置获取帖子ID\n                if (response.data) {\n                  if (typeof response.data === 'number') {\n                    postId = response.data;\n                  } else if (typeof response.data === 'object') {\n                    postId = response.data.id || response.data.post_id || response.data.postId;\n                  }\n                }\n                \n                // 如果在data中没找到，尝试在response根级别查找\n                if (!postId) {\n                  postId = response.id || response.post_id || response.postId;\n                }\n                \n                // 如果还是没找到，尝试解析响应消息中的ID\n                if (!postId && response.msg) {\n                  const match = response.msg.match(/ID[:：]?\\s*(\\d+)/i);\n                  if (match) {\n                    postId = parseInt(match[1]);\n                  }\n                }\n              }\n\n              console.log('解析后的帖子ID:', postId);\n\n              if (postId) {\n                // 发布成功后，尝试刷新首页的帖子列表\n                try {\n                  // 获取Home组件实例\n                  const homeComponent = this.$root.$children.find(child => child.$options.name === 'Home');\n                  if (homeComponent) {\n                    console.log('找到Home组件，刷新最新帖子列表');\n                    homeComponent.fetchLatestPosts();\n                  } else {\n                    console.log('未找到Home组件，可能已被卸载');\n                  }\n                } catch (error) {\n                  console.error('刷新帖子列表失败:', error);\n                }\n                \n                // 使用setTimeout确保路由跳转在当前操作完成后执行\n                setTimeout(() => {\n                  console.log('跳转到帖子详情页:', postId);\n                  this.$router.push({ name: 'PostDetail', params: { id: postId } });\n                }, 500);\n              } else {\n                console.error('无法获取帖子ID，无法跳转到详情页');\n                this.$message.warning('操作成功，但无法跳转到详情页');\n                // 返回上一页\n                setTimeout(() => {\n                  this.$router.back();\n                }, 500);\n              }\n            } else {\n              console.error('提交失败，响应:', response);\n              this.$message.error(response?.msg || (this.isEdit ? '更新失败' : '发布失败'));\n            }\n          } catch (error) {\n            console.error(this.isEdit ? '更新帖子失败:' : '发布帖子失败:', error);\n            this.$message.error(this.isEdit ? '更新帖子失败' : '发布帖子失败');\n          } finally {\n            this.submitting = false;\n          }\n        } else {\n          console.log('表单验证失败');\n          // 显示具体的验证错误信息\n          if (fields) {\n            if (fields.title) {\n              this.$message.warning(fields.title[0].message);\n            } else if (fields.board) {\n              this.$message.warning(fields.board[0].message);\n            } else if (fields.content) {\n              this.$message.warning(fields.content[0].message);\n            } else {\n              this.$message.warning('请填写完整的表单信息');\n            }\n          }\n          return false;\n        }\n      });\n    },\n\n    // 处理内容变化\n    handleContentChange(content) {\n      console.log('内容变化:', content);\n      \n      // 处理空内容的情况\n      if (!content || content === '<p><br></p>') {\n        this.postForm.content = '';\n        this.$message.warning('请输入帖子内容');\n      } else {\n        this.postForm.content = content;\n      }\n      \n      // 手动触发表单验证\n      this.$nextTick(() => {\n        this.$refs.postForm.validateField('content');\n      });\n    }\n  }\n}\n</script>\n\n<style scoped>\n.post-create-container {\n  max-width: 1200px;\n  margin: 20px auto;\n  padding: 0 20px;\n}\n\n.post-form-card {\n  margin-bottom: 20px;\n}\n\n:deep(.el-form-item__content) {\n  line-height: normal;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}