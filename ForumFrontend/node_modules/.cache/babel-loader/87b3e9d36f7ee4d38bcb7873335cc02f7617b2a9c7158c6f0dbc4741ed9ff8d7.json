{"ast":null,"code":"'use strict';\n\nvar _objectWithoutProperties = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectWithoutProperties.js\")[\"default\"];\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nvar _excluded = [\"cacheOptions\"];\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar lodashUnified = require('lodash-unified');\nvar index = require('../../select/index.js');\nvar index$1 = require('../../tree/index.js');\nvar select = require('./select.js');\nvar tree = require('./tree.js');\nvar cacheOptions = require('./cache-options.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar _sfc_main = vue.defineComponent({\n  name: \"ElTreeSelect\",\n  inheritAttrs: false,\n  props: _objectSpread(_objectSpread(_objectSpread({}, index.ElSelect.props), index$1.ElTree.props), {}, {\n    cacheData: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    }\n  }),\n  setup: function setup(props, context) {\n    var slots = context.slots,\n      expose = context.expose;\n    var select$1 = vue.ref();\n    var tree$1 = vue.ref();\n    var key = vue.computed(function () {\n      return props.nodeKey || props.valueKey || \"value\";\n    });\n    var selectProps = select.useSelect(props, context, {\n      select: select$1,\n      tree: tree$1,\n      key: key\n    });\n    var _tree$useTree = tree.useTree(props, context, {\n        select: select$1,\n        tree: tree$1,\n        key: key\n      }),\n      cacheOptions$1 = _tree$useTree.cacheOptions,\n      treeProps = _objectWithoutProperties(_tree$useTree, _excluded);\n    var methods = vue.reactive({});\n    expose(methods);\n    vue.onMounted(function () {\n      Object.assign(methods, _objectSpread(_objectSpread({}, lodashUnified.pick(tree$1.value, [\"filter\", \"updateKeyChildren\", \"getCheckedNodes\", \"setCheckedNodes\", \"getCheckedKeys\", \"setCheckedKeys\", \"setChecked\", \"getHalfCheckedNodes\", \"getHalfCheckedKeys\", \"getCurrentKey\", \"getCurrentNode\", \"setCurrentKey\", \"setCurrentNode\", \"getNode\", \"remove\", \"append\", \"insertBefore\", \"insertAfter\"])), lodashUnified.pick(select$1.value, [\"focus\", \"blur\", \"selectedLabel\"])));\n    });\n    return function () {\n      return vue.h(index.ElSelect, vue.reactive(_objectSpread(_objectSpread({}, selectProps), {}, {\n        ref: function ref(ref2) {\n          return select$1.value = ref2;\n        }\n      })), _objectSpread(_objectSpread({}, slots), {}, {\n        \"default\": function _default() {\n          return [vue.h(cacheOptions[\"default\"], {\n            data: cacheOptions$1.value\n          }), vue.h(index$1.ElTree, vue.reactive(_objectSpread(_objectSpread({}, treeProps), {}, {\n            ref: function ref(ref2) {\n              return tree$1.value = ref2;\n            }\n          })))];\n        }\n      }));\n    };\n  }\n});\nvar TreeSelect = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"tree-select.vue\"]]);\nexports[\"default\"] = TreeSelect;","map":{"version":3,"names":["_sfc_main","vue","defineComponent","name","inheritAttrs","props","_objectSpread","index","ElSelect","index$1","ElTree","cacheData","type","Array","default","setup","context","slots","expose","select$1","ref","tree$1","key","computed","nodeKey","valueKey","selectProps","select","useSelect","tree","_tree$useTree","useTree","cacheOptions$1","cacheOptions","treeProps","_objectWithoutProperties","_excluded","methods","reactive","onMounted","Object","assign","lodashUnified","pick","value","h","ref2","data","TreeSelect","pluginVue_exportHelper"],"sources":["../../../../../../packages/components/tree-select/src/tree-select.vue"],"sourcesContent":["<script lang=\"ts\">\n// @ts-nocheck\nimport { computed, defineComponent, h, onMounted, reactive, ref } from 'vue'\nimport { pick } from 'lodash-unified'\nimport ElSelect from '@element-plus/components/select'\nimport ElTree from '@element-plus/components/tree'\nimport { useSelect } from './select'\nimport { useTree } from './tree'\nimport CacheOptions from './cache-options'\n\nexport default defineComponent({\n  name: 'ElTreeSelect',\n  // disable `ElSelect` inherit current attrs\n  inheritAttrs: false,\n  props: {\n    ...ElSelect.props,\n    ...ElTree.props,\n    /**\n     * @description The cached data of the lazy node, the structure is the same as the data, used to get the label of the unloaded data\n     */\n    cacheData: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  setup(props, context) {\n    const { slots, expose } = context\n\n    const select = ref<InstanceType<typeof ElSelect>>()\n    const tree = ref<InstanceType<typeof ElTree>>()\n\n    const key = computed(() => props.nodeKey || props.valueKey || 'value')\n\n    const selectProps = useSelect(props, context, { select, tree, key })\n    const { cacheOptions, ...treeProps } = useTree(props, context, {\n      select,\n      tree,\n      key,\n    })\n\n    // expose ElTree/ElSelect methods\n    const methods = reactive({})\n    expose(methods)\n    onMounted(() => {\n      Object.assign(methods, {\n        ...pick(tree.value, [\n          'filter',\n          'updateKeyChildren',\n          'getCheckedNodes',\n          'setCheckedNodes',\n          'getCheckedKeys',\n          'setCheckedKeys',\n          'setChecked',\n          'getHalfCheckedNodes',\n          'getHalfCheckedKeys',\n          'getCurrentKey',\n          'getCurrentNode',\n          'setCurrentKey',\n          'setCurrentNode',\n          'getNode',\n          'remove',\n          'append',\n          'insertBefore',\n          'insertAfter',\n        ]),\n        ...pick(select.value, ['focus', 'blur', 'selectedLabel']),\n      })\n    })\n\n    return () =>\n      h(\n        ElSelect,\n        /**\n         * 1. The `props` is processed into `Refs`, but `v-bind` and\n         * render function props cannot read `Refs`, so use `reactive`\n         * unwrap the `Refs` and keep reactive.\n         * 2. The keyword `ref` requires `Ref`, but `reactive` broke it,\n         * so use function.\n         */\n        reactive({\n          ...selectProps,\n          ref: (ref) => (select.value = ref),\n        }),\n        {\n          ...slots,\n          default: () => [\n            h(CacheOptions, { data: cacheOptions.value }),\n            h(\n              ElTree,\n              reactive({\n                ...treeProps,\n                ref: (ref) => (tree.value = ref),\n              })\n            ),\n          ],\n        }\n      )\n  },\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;;AAUA,IAAKA,SAAA,GAAaC,GAAA,CAAAC,eAAa;EAC7BC,IAAM;EAAAC,YAAA;EAENC,KAAc,EAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACPC,KAAA,CAAAC,QAAA,CAAAH,KAAA,GACFI,OAAA,CAAAC,MAAS,CAAAL,KAAA;IACZM,SAAU;MAAAC,IAAA,EAAAC,KAAA;MAAA,oBAAAC,SAAA;QAAA;MAAA;IAAA;EAAA;EAICC,KACH,WADGA,KACHA,CAAAV,KAAA,EAAAW,OAAA;IACN,IAAAC,KAAA,GAAgBD,OAAA,CAAhBC,KAAA;MAAAC,MAAgB,GAAAF,OAAA,CAAhBE,MAAgB;IAClB,IAAAC,QAAA,GAAAlB,GAAA,CAAAmB,GAAA;IACF,IAAAC,MAAA,GAAApB,GAAA,CAAAmB,GAAA;IACA,IAAAE,GAAA,GAAsBrB,GAAA,CAAAsB,QAAA;MAAA,OAAAlB,KAAA,CAAAmB,OAAA,IAAAnB,KAAA,CAAAoB,QAAA;IAAA;IACd,IAAAC,WAAS,GAAAC,MAAA,CAAAC,SAAW,CAAAvB,KAAA,EAAAW,OAAA;MAAAW,MAAA,EAAAR,QAAA;MAAAU,IAAA,EAAAR,MAAA;MAAAC,GAAA,EAAAA;IAAA;IAE1B,IAAAQ,aAAA,GAAkDD,IAAA,CAAAE,OAAA,CAAA1B,KAAA,EAAAW,OAAA;QAClDW,MAAA,EAAAR,QAAA;QAEAU,IAAA,EAAAR,MAAM;QAEAC,GAAA,EAAAA;MACN;MANMU,cAA4C,GAAAF,aAAA,CAA5CG,YAAA;MAA4CC,SAAA,GAAAC,wBAAA,CAAAL,aAAA,EAAAM,SAAA;IAOhD,IAAAC,OAAA,GAAApC,GAAA,CAAAqC,QAAA;IACApB,MAAA,CAAAmB,OAAA;IACApC,GAAA,CAAAsC,SAAA;MACDC,MAAA,CAAAC,MAAA,CAAAJ,OAAA,EAAA/B,aAAA,CAAAA,aAAA,KAGKoC,aAAA,CAAAC,IAAA,CAAAtB,MAAU,CAASuB,KAAA,GACzB,QAAc,EACd,mBAAgB,EACd,iBAAuB,EACrB,iBAAoB,EAClB,kBACA,kBACA,cACA,uBACA,sBACA,iBACA,kBACA,iBACA,kBACA,WACA,UACA,UACA,gBACA,cACA,IACAF,aAAA,CAAAC,IAAA,CAAAxB,QAAA,CAAAyB,KAAA,sCACA;IAAA,CACA;IAAA,OACD;MAAA,OAAA3C,GAAA,CAAA4C,CAAA,CAAAtC,KAAA,CAAAC,QAAA,EAAAP,GAAA,CAAAqC,QAAA,CAAAhC,aAAA,CAAAA,aAAA,KACDoB,WAAe;QACjBN,GAAC,WAADA,GAACA,CAAA0B,IAAA;UAAA,OAAA3B,QAAA,CAAAyB,KAAA,GAAAE,IAAA;QAAA;MAAA,EACF,GAAAxC,aAAA,CAAAA,aAAA,KAEDW,KACE;QACE,oBAAAH,SAAA;UAAA,QAAAb,GAAA,CAAA4C,CAAA,CAAAZ,YAAA;YAAAc,IAAA,EAAAf,cAAA,CAAAY;UAAA,IAAA3C,GAAA,CAAA4C,CAAA,CAAApC,OAAA,CAAAC,MAAA,EAAAT,GAAA,CAAAqC,QAAA,CAAAhC,aAAA,CAAAA,aAAA,KAAA4B,SAAA;YAAAd,GAAA,WAAAA,IAAA0B,IAAA;cAAA,OAAAzB,MAAA,CAAAuB,KAAA,GAAAE,IAAA;YAAA;UAAA;QAAA;MAAA;IAAA;EAAA;AAQS;AAEuB,IAAAE,UAAA,GAC/B,eAAAC,sBAAA,YAAAjD,SAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}