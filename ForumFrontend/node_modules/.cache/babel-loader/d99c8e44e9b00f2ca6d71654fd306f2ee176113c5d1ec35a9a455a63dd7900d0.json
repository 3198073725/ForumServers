{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.includes.js\");\nrequire(\"core-js/modules/es.array.some.js\");\nrequire(\"core-js/modules/es.iterator.constructor.js\");\nrequire(\"core-js/modules/es.iterator.some.js\");\nrequire(\"core-js/modules/es.number.constructor.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/es.string.includes.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar lodashUnified = require('lodash-unified');\nvar groupItem = require('./group-item.js');\nvar optionItem = require('./option-item.js');\nvar useProps = require('./useProps.js');\nvar token = require('./token.js');\nvar fixedSizeList = require('../../virtual-list/src/components/fixed-size-list.js');\nvar dynamicSizeList = require('../../virtual-list/src/components/dynamic-size-list.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar types = require('../../../utils/types.js');\nvar core = require('@vueuse/core');\nvar aria = require('../../../constants/aria.js');\nvar shared = require('@vue/shared');\nvar props = {\n  loading: Boolean,\n  data: {\n    type: Array,\n    required: true\n  },\n  hoveringIndex: Number,\n  width: Number\n};\nvar ElSelectMenu = vue.defineComponent({\n  name: \"ElSelectDropdown\",\n  props: props,\n  setup: function setup(props2, _ref) {\n    var slots = _ref.slots,\n      expose = _ref.expose;\n    var select = vue.inject(token.selectV2InjectionKey);\n    var ns = index.useNamespace(\"select\");\n    var _useProps$useProps = useProps.useProps(select.props),\n      getLabel = _useProps$useProps.getLabel,\n      getValue = _useProps$useProps.getValue,\n      getDisabled = _useProps$useProps.getDisabled;\n    var cachedHeights = vue.ref([]);\n    var listRef = vue.ref();\n    var size = vue.computed(function () {\n      return props2.data.length;\n    });\n    vue.watch(function () {\n      return size.value;\n    }, function () {\n      var _a, _b;\n      (_b = (_a = select.tooltipRef.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);\n    });\n    var isSized = vue.computed(function () {\n      return types.isUndefined(select.props.estimatedOptionHeight);\n    });\n    var listProps = vue.computed(function () {\n      if (isSized.value) {\n        return {\n          itemSize: select.props.itemHeight\n        };\n      }\n      return {\n        estimatedSize: select.props.estimatedOptionHeight,\n        itemSize: function itemSize(idx) {\n          return cachedHeights.value[idx];\n        }\n      };\n    });\n    var contains = function contains() {\n      var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var target = arguments.length > 1 ? arguments[1] : undefined;\n      var valueKey = select.props.valueKey;\n      if (!shared.isObject(target)) {\n        return arr.includes(target);\n      }\n      return arr && arr.some(function (item) {\n        return vue.toRaw(lodashUnified.get(item, valueKey)) === lodashUnified.get(target, valueKey);\n      });\n    };\n    var isEqual = function isEqual(selected, target) {\n      if (!shared.isObject(target)) {\n        return selected === target;\n      } else {\n        var valueKey = select.props.valueKey;\n        return lodashUnified.get(selected, valueKey) === lodashUnified.get(target, valueKey);\n      }\n    };\n    var isItemSelected = function isItemSelected(modelValue, target) {\n      if (select.props.multiple) {\n        return contains(modelValue, getValue(target));\n      }\n      return isEqual(modelValue, getValue(target));\n    };\n    var isItemDisabled = function isItemDisabled(modelValue, selected) {\n      var _select$props = select.props,\n        disabled = _select$props.disabled,\n        multiple = _select$props.multiple,\n        multipleLimit = _select$props.multipleLimit;\n      return disabled || !selected && (multiple ? multipleLimit > 0 && modelValue.length >= multipleLimit : false);\n    };\n    var isItemHovering = function isItemHovering(target) {\n      return props2.hoveringIndex === target;\n    };\n    var scrollToItem = function scrollToItem(index) {\n      var list = listRef.value;\n      if (list) {\n        list.scrollToItem(index);\n      }\n    };\n    var resetScrollTop = function resetScrollTop() {\n      var list = listRef.value;\n      if (list) {\n        list.resetScrollTop();\n      }\n    };\n    var exposed = {\n      listRef: listRef,\n      isSized: isSized,\n      isItemDisabled: isItemDisabled,\n      isItemHovering: isItemHovering,\n      isItemSelected: isItemSelected,\n      scrollToItem: scrollToItem,\n      resetScrollTop: resetScrollTop\n    };\n    expose(exposed);\n    var Item = function Item(itemProps) {\n      var index = itemProps.index,\n        data = itemProps.data,\n        style = itemProps.style;\n      var sized = vue.unref(isSized);\n      var _vue$unref = vue.unref(listProps),\n        itemSize = _vue$unref.itemSize,\n        estimatedSize = _vue$unref.estimatedSize;\n      var modelValue = select.props.modelValue;\n      var onSelect = select.onSelect,\n        onHover = select.onHover;\n      var item = data[index];\n      if (item.type === \"Group\") {\n        return vue.createVNode(groupItem[\"default\"], {\n          \"item\": item,\n          \"style\": style,\n          \"height\": sized ? itemSize : estimatedSize\n        }, null);\n      }\n      var isSelected = isItemSelected(modelValue, item);\n      var isDisabled = isItemDisabled(modelValue, isSelected);\n      var isHovering = isItemHovering(index);\n      return vue.createVNode(optionItem[\"default\"], vue.mergeProps(itemProps, {\n        \"selected\": isSelected,\n        \"disabled\": getDisabled(item) || isDisabled,\n        \"created\": !!item.created,\n        \"hovering\": isHovering,\n        \"item\": item,\n        \"onSelect\": onSelect,\n        \"onHover\": onHover\n      }), {\n        \"default\": function _default(props3) {\n          var _a;\n          return ((_a = slots[\"default\"]) == null ? void 0 : _a.call(slots, props3)) || vue.createVNode(\"span\", null, [getLabel(item)]);\n        }\n      });\n    };\n    var onKeyboardNavigate = select.onKeyboardNavigate,\n      onKeyboardSelect = select.onKeyboardSelect;\n    var onForward = function onForward() {\n      onKeyboardNavigate(\"forward\");\n    };\n    var onBackward = function onBackward() {\n      onKeyboardNavigate(\"backward\");\n    };\n    var onKeydown = function onKeydown(e) {\n      var code = e.code;\n      var _aria$EVENT_CODE = aria.EVENT_CODE,\n        tab = _aria$EVENT_CODE.tab,\n        esc = _aria$EVENT_CODE.esc,\n        down = _aria$EVENT_CODE.down,\n        up = _aria$EVENT_CODE.up,\n        enter = _aria$EVENT_CODE.enter,\n        numpadEnter = _aria$EVENT_CODE.numpadEnter;\n      if ([esc, down, up, enter, numpadEnter].includes(code)) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      switch (code) {\n        case tab:\n        case esc:\n          break;\n        case down:\n          onForward();\n          break;\n        case up:\n          onBackward();\n          break;\n        case enter:\n        case numpadEnter:\n          onKeyboardSelect();\n          break;\n      }\n    };\n    return function () {\n      var _a, _b, _c, _d;\n      var data = props2.data,\n        width = props2.width;\n      var _select$props2 = select.props,\n        height = _select$props2.height,\n        multiple = _select$props2.multiple,\n        scrollbarAlwaysOn = _select$props2.scrollbarAlwaysOn;\n      var isScrollbarAlwaysOn = vue.computed(function () {\n        return core.isIOS ? true : scrollbarAlwaysOn;\n      });\n      var List = vue.unref(isSized) ? fixedSizeList[\"default\"] : dynamicSizeList[\"default\"];\n      return vue.createVNode(\"div\", {\n        \"class\": [ns.b(\"dropdown\"), ns.is(\"multiple\", multiple)],\n        \"style\": {\n          width: \"\".concat(width, \"px\")\n        }\n      }, [(_a = slots.header) == null ? void 0 : _a.call(slots), ((_b = slots.loading) == null ? void 0 : _b.call(slots)) || ((_c = slots.empty) == null ? void 0 : _c.call(slots)) || vue.createVNode(List, vue.mergeProps({\n        \"ref\": listRef\n      }, vue.unref(listProps), {\n        \"className\": ns.be(\"dropdown\", \"list\"),\n        \"scrollbarAlwaysOn\": isScrollbarAlwaysOn.value,\n        \"data\": data,\n        \"height\": height,\n        \"width\": width,\n        \"total\": data.length,\n        \"onKeydown\": onKeydown\n      }), {\n        \"default\": function _default(props3) {\n          return vue.createVNode(Item, props3, null);\n        }\n      }), (_d = slots.footer) == null ? void 0 : _d.call(slots)]);\n    };\n  }\n});\nexports[\"default\"] = ElSelectMenu;","map":{"version":3,"names":["props","loading","Boolean","data","type","Array","required","hoveringIndex","Number","width","ElSelectMenu","vue","defineComponent","name","slots","_ref","expose","select","inject","token","selectV2InjectionKey","ns","index","useNamespace","_useProps$useProps","useProps","getLabel","getValue","getDisabled","cachedHeights","ref","listRef","size","computed","props2","length","watch","value","_a","_b","tooltipRef","updatePopper","call","isSized","types","isUndefined","estimatedOptionHeight","listProps","itemSize","itemHeight","estimatedSize","idx","contains","arr","arguments","undefined","target","valueKey","shared","isObject","includes","some","item","toRaw","lodashUnified","get","isEqual","selected","isItemSelected","modelValue","multiple","isItemDisabled","_select$props","disabled","multipleLimit","isItemHovering","scrollToItem","list","resetScrollTop","exposed","Item","itemProps","style","sized","unref","_vue$unref","onSelect","onHover","createVNode","groupItem","isSelected","isDisabled","isHovering","optionItem","mergeProps","created","default","props3","onKeyboardNavigate","onKeyboardSelect","onForward","onBackward","onKeydown","e","_aria$EVENT_CODE","aria","EVENT_CODE","tab","esc","down","enter","numpadEnter","preventDefault","stopPropagation","up","_c","_d","_select$props2","height","core","isIOS","scrollbarAlwaysOn","List","fixedSizeList","dynamicSizeList","b","is","concat","header","empty","be","isScrollbarAlwaysOn","footer"],"sources":["../../../../../../packages/components/select-v2/src/select-dropdown.tsx"],"sourcesContent":["import {\n  computed,\n  defineComponent,\n  inject,\n  ref,\n  toRaw,\n  unref,\n  watch,\n} from 'vue'\nimport { get } from 'lodash-unified'\nimport { isIOS, isObject, isUndefined } from '@element-plus/utils'\nimport {\n  DynamicSizeList,\n  FixedSizeList,\n} from '@element-plus/components/virtual-list'\nimport { useNamespace } from '@element-plus/hooks'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport GroupItem from './group-item.vue'\nimport OptionItem from './option-item.vue'\nimport { useProps } from './useProps'\n\nimport { selectV2InjectionKey } from './token'\n\nimport type {\n  DynamicSizeListInstance,\n  FixedSizeListInstance,\n  ItemProps,\n} from '@element-plus/components/virtual-list'\nimport type { Option, OptionItemProps } from './select.types'\nimport type {\n  ComponentPublicInstance,\n  ComputedRef,\n  ExtractPropTypes,\n  Ref,\n} from 'vue'\n\nconst props = {\n  loading: Boolean,\n  data: {\n    type: Array,\n    required: true as const,\n  },\n  hoveringIndex: Number,\n  width: Number,\n}\ninterface SelectDropdownExposed {\n  listRef: Ref<FixedSizeListInstance | DynamicSizeListInstance | undefined>\n  isSized: ComputedRef<boolean>\n  isItemDisabled: (modelValue: any[] | any, selected: boolean) => boolean\n  isItemHovering: (target: number) => boolean\n  isItemSelected: (modelValue: any[] | any, target: Option) => boolean\n  scrollToItem: (index: number) => void\n  resetScrollTop: () => void\n}\nexport type SelectDropdownInstance = ComponentPublicInstance<\n  ExtractPropTypes<typeof props>,\n  SelectDropdownExposed\n>\nexport default defineComponent({\n  name: 'ElSelectDropdown',\n  props,\n  setup(props, { slots, expose }) {\n    const select = inject(selectV2InjectionKey)!\n    const ns = useNamespace('select')\n    const { getLabel, getValue, getDisabled } = useProps(select.props)\n\n    const cachedHeights = ref<Array<number>>([])\n\n    const listRef = ref<FixedSizeListInstance | DynamicSizeListInstance>()\n\n    const size = computed(() => props.data.length)\n    watch(\n      () => size.value,\n      () => {\n        select.tooltipRef.value?.updatePopper?.()\n      }\n    )\n\n    const isSized = computed(() =>\n      isUndefined(select.props.estimatedOptionHeight)\n    )\n    const listProps = computed(() => {\n      if (isSized.value) {\n        return {\n          itemSize: select.props.itemHeight,\n        }\n      }\n\n      return {\n        estimatedSize: select.props.estimatedOptionHeight,\n        itemSize: (idx: number) => cachedHeights.value[idx],\n      }\n    })\n\n    const contains = (arr: Array<any> = [], target: any) => {\n      const {\n        props: { valueKey },\n      } = select\n\n      if (!isObject(target)) {\n        return arr.includes(target)\n      }\n\n      return (\n        arr &&\n        arr.some((item) => {\n          return toRaw(get(item, valueKey)) === get(target, valueKey)\n        })\n      )\n    }\n    const isEqual = (selected: unknown, target: unknown) => {\n      if (!isObject(target)) {\n        return selected === target\n      } else {\n        const { valueKey } = select.props\n        return get(selected, valueKey) === get(target, valueKey)\n      }\n    }\n\n    const isItemSelected: SelectDropdownExposed['isItemSelected'] = (\n      modelValue,\n      target\n    ) => {\n      if (select.props.multiple) {\n        return contains(modelValue, getValue(target))\n      }\n      return isEqual(modelValue, getValue(target))\n    }\n\n    const isItemDisabled: SelectDropdownExposed['isItemDisabled'] = (\n      modelValue,\n      selected\n    ) => {\n      const { disabled, multiple, multipleLimit } = select.props\n      return (\n        disabled ||\n        (!selected &&\n          (multiple\n            ? multipleLimit > 0 && modelValue.length >= multipleLimit\n            : false))\n      )\n    }\n\n    const isItemHovering: SelectDropdownExposed['isItemHovering'] = (target) =>\n      props.hoveringIndex === target\n\n    const scrollToItem: SelectDropdownExposed['scrollToItem'] = (index) => {\n      const list = listRef.value\n      if (list) {\n        list.scrollToItem(index)\n      }\n    }\n\n    const resetScrollTop: SelectDropdownExposed['resetScrollTop'] = () => {\n      const list = listRef.value\n      if (list) {\n        list.resetScrollTop()\n      }\n    }\n    const exposed: SelectDropdownExposed = {\n      listRef,\n      isSized,\n\n      isItemDisabled,\n      isItemHovering,\n      isItemSelected,\n      scrollToItem,\n      resetScrollTop,\n    }\n    expose(exposed)\n\n    const Item = (itemProps: ItemProps<any>) => {\n      const { index, data, style } = itemProps\n      const sized = unref(isSized)\n      const { itemSize, estimatedSize } = unref(listProps)\n      const { modelValue } = select.props\n      const { onSelect, onHover } = select\n      const item = data[index]\n      if (item.type === 'Group') {\n        return (\n          <GroupItem\n            item={item}\n            style={style}\n            height={sized ? (itemSize as number) : estimatedSize}\n          />\n        )\n      }\n\n      const isSelected = isItemSelected(modelValue, item)\n      const isDisabled = isItemDisabled(modelValue, isSelected)\n      const isHovering = isItemHovering(index)\n      return (\n        <OptionItem\n          {...itemProps}\n          selected={isSelected}\n          disabled={getDisabled(item) || isDisabled}\n          created={!!item.created}\n          hovering={isHovering}\n          item={item}\n          onSelect={onSelect}\n          onHover={onHover}\n        >\n          {{\n            default: (props: OptionItemProps) =>\n              slots.default?.(props) || <span>{getLabel(item)}</span>,\n          }}\n        </OptionItem>\n      )\n    }\n\n    // computed\n    const { onKeyboardNavigate, onKeyboardSelect } = select\n\n    const onForward = () => {\n      onKeyboardNavigate('forward')\n    }\n\n    const onBackward = () => {\n      onKeyboardNavigate('backward')\n    }\n\n    const onEscOrTab = () => {\n      // The following line actually doesn't work. Fixing it may introduce a small breaking change for some users, so just comment it out for now.\n      // select.expanded = false\n    }\n\n    const onKeydown = (e: KeyboardEvent) => {\n      const { code } = e\n      const { tab, esc, down, up, enter, numpadEnter } = EVENT_CODE\n      if ([esc, down, up, enter, numpadEnter].includes(code)) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      switch (code) {\n        case tab:\n        case esc:\n          onEscOrTab()\n          break\n        case down:\n          onForward()\n          break\n        case up:\n          onBackward()\n          break\n        case enter:\n        case numpadEnter:\n          onKeyboardSelect()\n          break\n      }\n    }\n\n    return () => {\n      const { data, width } = props\n      const { height, multiple, scrollbarAlwaysOn } = select.props\n      const isScrollbarAlwaysOn = computed(() => {\n        // fix https://github.com/element-plus/element-plus/issues/19127\n        return isIOS ? true : scrollbarAlwaysOn\n      })\n\n      const List = unref(isSized) ? FixedSizeList : DynamicSizeList\n\n      return (\n        <div\n          class={[ns.b('dropdown'), ns.is('multiple', multiple)]}\n          style={{\n            width: `${width}px`,\n          }}\n        >\n          {slots.header?.()}\n          {slots.loading?.() || slots.empty?.() || (\n            <List\n              ref={listRef}\n              {...unref(listProps)}\n              className={ns.be('dropdown', 'list')}\n              scrollbarAlwaysOn={isScrollbarAlwaysOn.value}\n              data={data}\n              height={height}\n              width={width}\n              total={data.length}\n              // @ts-ignore - dts problem\n              onKeydown={onKeydown}\n            >\n              {{\n                default: (props: ItemProps<any>) => <Item {...props} />,\n              }}\n            </List>\n          )}\n          {slots.footer?.()}\n        </div>\n      )\n    }\n  },\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}