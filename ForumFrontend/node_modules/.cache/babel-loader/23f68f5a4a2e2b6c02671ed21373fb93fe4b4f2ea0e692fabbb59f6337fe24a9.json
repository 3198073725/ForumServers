{"ast":null,"code":"import _regeneratorRuntime from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { getConversations, getMessagesWithUser } from '@/api/messages';\nvar state = {\n  conversations: [],\n  activeChat: null,\n  messages: {},\n  loadingStates: {},\n  hasMoreMessages: {},\n  currentPages: {}\n};\nvar getters = {\n  allConversations: function allConversations(state) {\n    return state.conversations;\n  },\n  activeConversation: function activeConversation(state) {\n    return state.activeChat;\n  },\n  messagesByUserId: function messagesByUserId(state) {\n    return function (userId) {\n      return state.messages[userId] || [];\n    };\n  },\n  unreadCountByUserId: function unreadCountByUserId(state) {\n    return function (userId) {\n      var conversation = state.conversations.find(function (c) {\n        return c.user.id === userId;\n      });\n      return conversation ? conversation.unread_count : 0;\n    };\n  },\n  totalUnreadCount: function totalUnreadCount(state) {\n    return state.conversations.reduce(function (total, conv) {\n      return total + conv.unread_count;\n    }, 0);\n  },\n  isLoadingMessages: function isLoadingMessages(state) {\n    return function (userId) {\n      return state.loadingStates[userId] || false;\n    };\n  },\n  hasMoreMessages: function hasMoreMessages(state) {\n    return function (userId) {\n      return state.hasMoreMessages[userId] || false;\n    };\n  }\n};\nvar mutations = {\n  setConversations: function setConversations(state, conversations) {\n    state.conversations = conversations;\n  },\n  updateConversation: function updateConversation(state, _ref) {\n    var userId = _ref.userId,\n      lastMessage = _ref.lastMessage,\n      unreadCount = _ref.unreadCount;\n    var index = state.conversations.findIndex(function (c) {\n      return c.user.id === userId;\n    });\n    if (index !== -1) {\n      // 更新现有对话\n      var conversation = _objectSpread({}, state.conversations[index]);\n      if (lastMessage) conversation.last_message = lastMessage;\n      if (unreadCount !== undefined) conversation.unread_count = unreadCount;\n\n      // 将更新的对话移到顶部\n      state.conversations.splice(index, 1);\n      state.conversations.unshift(conversation);\n    } else if (lastMessage) {\n      // 添加新对话\n      state.conversations.unshift({\n        user: {\n          id: userId\n        },\n        last_message: lastMessage,\n        unread_count: unreadCount || 0\n      });\n    }\n  },\n  setActiveChat: function setActiveChat(state, userId) {\n    state.activeChat = userId;\n  },\n  setMessages: function setMessages(state, _ref2) {\n    var userId = _ref2.userId,\n      messages = _ref2.messages,\n      hasMore = _ref2.hasMore,\n      page = _ref2.page;\n    // 初始化消息列表（如果不存在）\n    if (!state.messages[userId]) {\n      state.messages[userId] = [];\n    }\n    if (page === 1) {\n      // 替换消息列表\n      state.messages[userId] = messages;\n    } else {\n      // 合并消息列表，避免重复\n      var existingIds = new Set(state.messages[userId].map(function (m) {\n        return m.id;\n      }));\n      var newMessages = messages.filter(function (m) {\n        return !existingIds.has(m.id);\n      });\n      state.messages[userId] = [].concat(_toConsumableArray(state.messages[userId]), _toConsumableArray(newMessages));\n    }\n\n    // 更新分页状态\n    state.hasMoreMessages[userId] = hasMore;\n    state.currentPages[userId] = page;\n  },\n  addMessage: function addMessage(state, _ref3) {\n    var userId = _ref3.userId,\n      message = _ref3.message;\n    // 初始化消息列表（如果不存在）\n    if (!state.messages[userId]) {\n      state.messages[userId] = [];\n    }\n\n    // 避免重复添加\n    var exists = state.messages[userId].some(function (m) {\n      return m.id === message.id;\n    });\n    if (!exists) {\n      state.messages[userId].push(message);\n\n      // 更新对话列表中的最后一条消息\n      var lastMessage = {\n        id: message.id,\n        content: message.content,\n        timestamp: message.timestamp,\n        is_outgoing: message.senderId === userId\n      };\n\n      // 如果是接收到的消息且不是当前活跃聊天，增加未读计数\n      var unreadIncrement = 0;\n      if (message.senderId === userId && state.activeChat !== userId) {\n        unreadIncrement = 1;\n      }\n      this.commit('chat/updateConversation', {\n        userId: userId,\n        lastMessage: lastMessage,\n        unreadCount: this.getters['chat/unreadCountByUserId'](userId) + unreadIncrement\n      });\n    }\n  },\n  markMessagesAsRead: function markMessagesAsRead(state, userId) {\n    // 标记所有来自该用户的消息为已读\n    if (state.messages[userId]) {\n      state.messages[userId].forEach(function (message) {\n        if (message.senderId === userId) {\n          message.isRead = true;\n        }\n      });\n    }\n\n    // 更新对话列表中的未读计数\n    var index = state.conversations.findIndex(function (c) {\n      return c.user.id === userId;\n    });\n    if (index !== -1) {\n      state.conversations[index].unread_count = 0;\n    }\n  },\n  setLoadingState: function setLoadingState(state, _ref4) {\n    var userId = _ref4.userId,\n      isLoading = _ref4.isLoading;\n    state.loadingStates[userId] = isLoading;\n  }\n};\nvar actions = {\n  fetchConversations: function fetchConversations(_ref5) {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var commit, response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref5.commit;\n            _context.prev = 1;\n            _context.next = 4;\n            return getConversations();\n          case 4:\n            response = _context.sent;\n            if (response && response.data) {\n              commit('setConversations', response.data);\n            }\n            _context.next = 11;\n            break;\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            console.error('获取对话列表失败:', _context.t0);\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[1, 8]]);\n    }))();\n  },\n  fetchMessagesWithUser: function fetchMessagesWithUser(_ref6, _ref7) {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var commit, userId, _ref7$page, page, _ref7$pageSize, pageSize, response, _response$data, messages, has_more, returnedPage;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            commit = _ref6.commit;\n            userId = _ref7.userId, _ref7$page = _ref7.page, page = _ref7$page === void 0 ? 1 : _ref7$page, _ref7$pageSize = _ref7.pageSize, pageSize = _ref7$pageSize === void 0 ? 20 : _ref7$pageSize;\n            commit('setLoadingState', {\n              userId: userId,\n              isLoading: true\n            });\n            _context2.prev = 3;\n            _context2.next = 6;\n            return getMessagesWithUser(userId, page, pageSize);\n          case 6:\n            response = _context2.sent;\n            if (response && response.data) {\n              _response$data = response.data, messages = _response$data.messages, has_more = _response$data.has_more, returnedPage = _response$data.page;\n              commit('setMessages', {\n                userId: userId,\n                messages: messages,\n                hasMore: has_more,\n                page: returnedPage\n              });\n            }\n            _context2.next = 13;\n            break;\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](3);\n            console.error(\"\\u83B7\\u53D6\\u4E0E\\u7528\\u6237\".concat(userId, \"\\u7684\\u6D88\\u606F\\u5931\\u8D25:\"), _context2.t0);\n          case 13:\n            _context2.prev = 13;\n            commit('setLoadingState', {\n              userId: userId,\n              isLoading: false\n            });\n            return _context2.finish(13);\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[3, 10, 13, 16]]);\n    }))();\n  },\n  loadMoreMessages: function loadMoreMessages(_ref8, userId) {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var commit, state, dispatch, nextPage;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            commit = _ref8.commit, state = _ref8.state, dispatch = _ref8.dispatch;\n            if (!(!state.hasMoreMessages[userId] || state.loadingStates[userId])) {\n              _context3.next = 3;\n              break;\n            }\n            return _context3.abrupt(\"return\");\n          case 3:\n            nextPage = (state.currentPages[userId] || 0) + 1;\n            _context3.next = 6;\n            return dispatch('fetchMessagesWithUser', {\n              userId: userId,\n              page: nextPage\n            });\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }))();\n  },\n  setActiveChat: function setActiveChat(_ref9, userId) {\n    var commit = _ref9.commit,\n      dispatch = _ref9.dispatch;\n    commit('setActiveChat', userId);\n    if (userId) {\n      // 加载消息历史\n      dispatch('fetchMessagesWithUser', {\n        userId: userId,\n        page: 1\n      });\n\n      // 标记消息为已读\n      commit('markMessagesAsRead', userId);\n\n      // 通过API标记为已读\n      dispatch('markMessagesAsRead', userId);\n    }\n  },\n  markMessagesAsRead: function markMessagesAsRead(_ref0, userId) {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      var commit;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            commit = _ref0.commit;\n            try {\n              // 调用API标记消息为已读\n              // await markMessagesAsRead(userId);\n\n              // 本地标记为已读\n              commit('markMessagesAsRead', userId);\n            } catch (error) {\n              console.error(\"\\u6807\\u8BB0\\u4E0E\\u7528\\u6237\".concat(userId, \"\\u7684\\u6D88\\u606F\\u4E3A\\u5DF2\\u8BFB\\u5931\\u8D25:\"), error);\n            }\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }))();\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};","map":{"version":3,"names":["getConversations","getMessagesWithUser","state","conversations","activeChat","messages","loadingStates","hasMoreMessages","currentPages","getters","allConversations","activeConversation","messagesByUserId","userId","unreadCountByUserId","conversation","find","c","user","id","unread_count","totalUnreadCount","reduce","total","conv","isLoadingMessages","mutations","setConversations","updateConversation","_ref","lastMessage","unreadCount","index","findIndex","_objectSpread","last_message","undefined","splice","unshift","setActiveChat","setMessages","_ref2","hasMore","page","existingIds","Set","map","m","newMessages","filter","has","concat","_toConsumableArray","addMessage","_ref3","message","exists","some","push","content","timestamp","is_outgoing","senderId","unreadIncrement","commit","markMessagesAsRead","forEach","isRead","setLoadingState","_ref4","isLoading","actions","fetchConversations","_ref5","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","sent","data","t0","console","error","stop","fetchMessagesWithUser","_ref6","_ref7","_callee2","_ref7$page","_ref7$pageSize","pageSize","_response$data","has_more","returnedPage","_callee2$","_context2","finish","loadMoreMessages","_ref8","_callee3","dispatch","nextPage","_callee3$","_context3","abrupt","_ref9","_ref0","_callee4","_callee4$","_context4","namespaced"],"sources":["H:/ForumServers/ForumFrontend/src/store/modules/chat.js"],"sourcesContent":["import { getConversations, getMessagesWithUser } from '@/api/messages';\r\n\r\nconst state = {\r\n  conversations: [],\r\n  activeChat: null,\r\n  messages: {},\r\n  loadingStates: {},\r\n  hasMoreMessages: {},\r\n  currentPages: {}\r\n};\r\n\r\nconst getters = {\r\n  allConversations: state => state.conversations,\r\n  \r\n  activeConversation: state => state.activeChat,\r\n  \r\n  messagesByUserId: state => userId => {\r\n    return state.messages[userId] || [];\r\n  },\r\n  \r\n  unreadCountByUserId: state => userId => {\r\n    const conversation = state.conversations.find(c => c.user.id === userId);\r\n    return conversation ? conversation.unread_count : 0;\r\n  },\r\n  \r\n  totalUnreadCount: state => {\r\n    return state.conversations.reduce((total, conv) => total + conv.unread_count, 0);\r\n  },\r\n  \r\n  isLoadingMessages: state => userId => {\r\n    return state.loadingStates[userId] || false;\r\n  },\r\n  \r\n  hasMoreMessages: state => userId => {\r\n    return state.hasMoreMessages[userId] || false;\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n  setConversations(state, conversations) {\r\n    state.conversations = conversations;\r\n  },\r\n  \r\n  updateConversation(state, { userId, lastMessage, unreadCount }) {\r\n    const index = state.conversations.findIndex(c => c.user.id === userId);\r\n    \r\n    if (index !== -1) {\r\n      // 更新现有对话\r\n      const conversation = { ...state.conversations[index] };\r\n      if (lastMessage) conversation.last_message = lastMessage;\r\n      if (unreadCount !== undefined) conversation.unread_count = unreadCount;\r\n      \r\n      // 将更新的对话移到顶部\r\n      state.conversations.splice(index, 1);\r\n      state.conversations.unshift(conversation);\r\n    } else if (lastMessage) {\r\n      // 添加新对话\r\n      state.conversations.unshift({\r\n        user: { id: userId },\r\n        last_message: lastMessage,\r\n        unread_count: unreadCount || 0\r\n      });\r\n    }\r\n  },\r\n  \r\n  setActiveChat(state, userId) {\r\n    state.activeChat = userId;\r\n  },\r\n  \r\n  setMessages(state, { userId, messages, hasMore, page }) {\r\n    // 初始化消息列表（如果不存在）\r\n    if (!state.messages[userId]) {\r\n      state.messages[userId] = [];\r\n    }\r\n    \r\n    if (page === 1) {\r\n      // 替换消息列表\r\n      state.messages[userId] = messages;\r\n    } else {\r\n      // 合并消息列表，避免重复\r\n      const existingIds = new Set(state.messages[userId].map(m => m.id));\r\n      const newMessages = messages.filter(m => !existingIds.has(m.id));\r\n      state.messages[userId] = [...state.messages[userId], ...newMessages];\r\n    }\r\n    \r\n    // 更新分页状态\r\n    state.hasMoreMessages[userId] = hasMore;\r\n    state.currentPages[userId] = page;\r\n  },\r\n  \r\n  addMessage(state, { userId, message }) {\r\n    // 初始化消息列表（如果不存在）\r\n    if (!state.messages[userId]) {\r\n      state.messages[userId] = [];\r\n    }\r\n    \r\n    // 避免重复添加\r\n    const exists = state.messages[userId].some(m => m.id === message.id);\r\n    if (!exists) {\r\n      state.messages[userId].push(message);\r\n      \r\n      // 更新对话列表中的最后一条消息\r\n      const lastMessage = {\r\n        id: message.id,\r\n        content: message.content,\r\n        timestamp: message.timestamp,\r\n        is_outgoing: message.senderId === userId\r\n      };\r\n      \r\n      // 如果是接收到的消息且不是当前活跃聊天，增加未读计数\r\n      let unreadIncrement = 0;\r\n      if (message.senderId === userId && state.activeChat !== userId) {\r\n        unreadIncrement = 1;\r\n      }\r\n      \r\n      this.commit('chat/updateConversation', { \r\n        userId, \r\n        lastMessage,\r\n        unreadCount: this.getters['chat/unreadCountByUserId'](userId) + unreadIncrement\r\n      });\r\n    }\r\n  },\r\n  \r\n  markMessagesAsRead(state, userId) {\r\n    // 标记所有来自该用户的消息为已读\r\n    if (state.messages[userId]) {\r\n      state.messages[userId].forEach(message => {\r\n        if (message.senderId === userId) {\r\n          message.isRead = true;\r\n        }\r\n      });\r\n    }\r\n    \r\n    // 更新对话列表中的未读计数\r\n    const index = state.conversations.findIndex(c => c.user.id === userId);\r\n    if (index !== -1) {\r\n      state.conversations[index].unread_count = 0;\r\n    }\r\n  },\r\n  \r\n  setLoadingState(state, { userId, isLoading }) {\r\n    state.loadingStates[userId] = isLoading;\r\n  }\r\n};\r\n\r\nconst actions = {\r\n  async fetchConversations({ commit }) {\r\n    try {\r\n      const response = await getConversations();\r\n      if (response && response.data) {\r\n        commit('setConversations', response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('获取对话列表失败:', error);\r\n    }\r\n  },\r\n  \r\n  async fetchMessagesWithUser({ commit }, { userId, page = 1, pageSize = 20 }) {\r\n    commit('setLoadingState', { userId, isLoading: true });\r\n    \r\n    try {\r\n      const response = await getMessagesWithUser(userId, page, pageSize);\r\n      if (response && response.data) {\r\n        const { messages, has_more, page: returnedPage } = response.data;\r\n        \r\n        commit('setMessages', {\r\n          userId,\r\n          messages,\r\n          hasMore: has_more,\r\n          page: returnedPage\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(`获取与用户${userId}的消息失败:`, error);\r\n    } finally {\r\n      commit('setLoadingState', { userId, isLoading: false });\r\n    }\r\n  },\r\n  \r\n  async loadMoreMessages({ commit, state, dispatch }, userId) {\r\n    if (!state.hasMoreMessages[userId] || state.loadingStates[userId]) return;\r\n    \r\n    const nextPage = (state.currentPages[userId] || 0) + 1;\r\n    await dispatch('fetchMessagesWithUser', { userId, page: nextPage });\r\n  },\r\n  \r\n  setActiveChat({ commit, dispatch }, userId) {\r\n    commit('setActiveChat', userId);\r\n    \r\n    if (userId) {\r\n      // 加载消息历史\r\n      dispatch('fetchMessagesWithUser', { userId, page: 1 });\r\n      \r\n      // 标记消息为已读\r\n      commit('markMessagesAsRead', userId);\r\n      \r\n      // 通过API标记为已读\r\n      dispatch('markMessagesAsRead', userId);\r\n    }\r\n  },\r\n  \r\n  async markMessagesAsRead({ commit }, userId) {\r\n    try {\r\n      // 调用API标记消息为已读\r\n      // await markMessagesAsRead(userId);\r\n      \r\n      // 本地标记为已读\r\n      commit('markMessagesAsRead', userId);\r\n    } catch (error) {\r\n      console.error(`标记与用户${userId}的消息为已读失败:`, error);\r\n    }\r\n  }\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  mutations,\r\n  actions\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}