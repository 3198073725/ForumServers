{"ast":null,"code":"'use strict';\n\nvar _typeof = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"];\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar dayjs = require('dayjs');\nvar shared = require('@vue/shared');\nfunction _interopDefaultLegacy(e) {\n  return e && _typeof(e) === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);\nvar useShortcut = function useShortcut(lang) {\n  var _vue$getCurrentInstan = vue.getCurrentInstance(),\n    emit = _vue$getCurrentInstan.emit;\n  var attrs = vue.useAttrs();\n  var slots = vue.useSlots();\n  var handleShortcutClick = function handleShortcutClick(shortcut) {\n    var shortcutValues = shared.isFunction(shortcut.value) ? shortcut.value() : shortcut.value;\n    if (shortcutValues) {\n      emit(\"pick\", [dayjs__default[\"default\"](shortcutValues[0]).locale(lang.value), dayjs__default[\"default\"](shortcutValues[1]).locale(lang.value)]);\n      return;\n    }\n    if (shortcut.onClick) {\n      shortcut.onClick({\n        attrs: attrs,\n        slots: slots,\n        emit: emit\n      });\n    }\n  };\n  return handleShortcutClick;\n};\nexports.useShortcut = useShortcut;","map":{"version":3,"names":["useShortcut","lang","_vue$getCurrentInstan","vue","getCurrentInstance","emit","attrs","useAttrs","slots","useSlots","handleShortcutClick","shortcut","shortcutValues","shared","isFunction","value","dayjs__default","locale","onClick"],"sources":["../../../../../../../packages/components/date-picker/src/composables/use-shortcut.ts"],"sourcesContent":["import { getCurrentInstance, useAttrs, useSlots } from 'vue'\nimport dayjs from 'dayjs'\nimport { isFunction } from '@element-plus/utils'\n\nimport type { SetupContext } from 'vue'\nimport type { useLocale } from '@element-plus/hooks'\nimport type { RangePickerSharedEmits } from '../props/shared'\n\n// FIXME: extract this to `date-picker.ts`\nexport type Shortcut = {\n  text: string\n  value: [Date, Date] | (() => [Date, Date])\n  onClick?: (ctx: Omit<SetupContext<RangePickerSharedEmits>, 'expose'>) => void\n}\n\nexport const useShortcut = (lang: ReturnType<typeof useLocale>['lang']) => {\n  const { emit } = getCurrentInstance()!\n  const attrs = useAttrs()\n  const slots = useSlots()\n\n  const handleShortcutClick = (shortcut: Shortcut) => {\n    const shortcutValues = isFunction(shortcut.value)\n      ? shortcut.value()\n      : shortcut.value\n\n    if (shortcutValues) {\n      emit('pick', [\n        dayjs(shortcutValues[0]).locale(lang.value),\n        dayjs(shortcutValues[1]).locale(lang.value),\n      ])\n      return\n    }\n    if (shortcut.onClick) {\n      shortcut.onClick({\n        attrs,\n        slots,\n        emit,\n      })\n    }\n  }\n\n  return handleShortcutClick\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAGY,IAACA,WAAW,GAAG,SAAdA,WAAWA,CAAIC,IAAI,EAAK;EACnC,IAAAC,qBAAA,GAAiBC,GAAA,CAAAC,kBAAkB,EAAE;IAA7BC,IAAI,GAAAH,qBAAA,CAAJG,IAAI;EACZ,IAAMC,KAAK,GAAGH,GAAA,CAAAI,QAAQ,EAAE;EACxB,IAAMC,KAAK,GAAGL,GAAA,CAAAM,QAAQ,EAAE;EACxB,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,QAAQ,EAAK;IACxC,IAAMC,cAAc,GAAGC,MAAA,CAAAC,UAAU,CAACH,QAAQ,CAACI,KAAK,CAAC,GAAGJ,QAAQ,CAACI,KAAK,EAAE,GAAGJ,QAAQ,CAACI,KAAK;IACrF,IAAIH,cAAc,EAAE;MAClBP,IAAI,CAAC,MAAM,EAAE,CACXW,cAAA,WAAK,CAACJ,cAAc,CAAC,CAAC,CAAC,CAAC,CAACK,MAAM,CAAChB,IAAI,CAACc,KAAK,CAAC,EAC3CC,cAAA,WAAK,CAACJ,cAAc,CAAC,CAAC,CAAC,CAAC,CAACK,MAAM,CAAChB,IAAI,CAACc,KAAK,CAAC,CAC5C,CAAC;MACF;IACN;IACI,IAAIJ,QAAQ,CAACO,OAAO,EAAE;MACpBP,QAAQ,CAACO,OAAO,CAAC;QACfZ,KAAK,EAALA,KAAK;QACLE,KAAK,EAALA,KAAK;QACLH,IAAI,EAAJA;MACR,CAAO,CAAC;IACR;EACA,CAAG;EACD,OAAOK,mBAAmB;AAC5B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}