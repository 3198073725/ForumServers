{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withKeys as _withKeys, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"user-management-container\"\n};\nvar _hoisted_2 = {\n  slot: \"header\",\n  \"class\": \"clearfix\"\n};\nvar _hoisted_3 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_4 = {\n  key: 1\n};\nvar _hoisted_5 = {\n  \"slot-scope\": \"scope\"\n};\nvar _hoisted_6 = {\n  \"slot-scope\": \"scope\"\n};\nvar _hoisted_7 = {\n  \"slot-scope\": \"scope\"\n};\nvar _hoisted_8 = {\n  \"slot-scope\": \"scope\"\n};\nvar _hoisted_9 = {\n  \"slot-scope\": \"scope\"\n};\nvar _hoisted_10 = {\n  \"class\": \"pagination-container\"\n};\nvar _hoisted_11 = {\n  \"class\": \"avatar-preview\"\n};\nvar _hoisted_12 = {\n  slot: \"footer\",\n  \"class\": \"dialog-footer\"\n};\nvar _hoisted_13 = {\n  slot: \"footer\",\n  \"class\": \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  var _component_el_table_column = _resolveComponent(\"el-table-column\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_el_table = _resolveComponent(\"el-table\");\n  var _component_el_pagination = _resolveComponent(\"el-pagination\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_avatar = _resolveComponent(\"el-avatar\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_dialog = _resolveComponent(\"el-dialog\");\n  var _component_el_option = _resolveComponent(\"el-option\");\n  var _component_el_select = _resolveComponent(\"el-select\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    \"class\": \"user-management-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_2, [_cache[12] || (_cache[12] = _createElementVNode(\"span\", null, \"用户管理\", -1 /* HOISTED */)), _createVNode(_component_el_input, {\n        modelValue: $setup.searchQuery,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return $setup.searchQuery = $event;\n        }),\n        placeholder: \"搜索用户名或邮箱\",\n        style: {\n          \"width\": \"300px\",\n          \"float\": \"right\"\n        },\n        clearable: \"\",\n        onKeyup: _withKeys($setup.handleSearch, [\"enter\", \"native\"]),\n        onClear: $setup.handleSearch\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_button, {\n            slot: \"append\",\n            icon: \"el-icon-search\",\n            onClick: $setup.handleSearch\n          }, null, 8 /* PROPS */, [\"onClick\"])];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\", \"onKeyup\", \"onClear\"])]), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_skeleton, {\n        rows: 10,\n        animated: \"\"\n      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_table, {\n        data: $setup.users,\n        style: {\n          \"width\": \"100%\"\n        },\n        border: \"\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_table_column, {\n            prop: \"id\",\n            label: \"ID\",\n            width: \"80\",\n            align: \"center\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"username\",\n            label: \"用户名\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"nickname\",\n            label: \"昵称\",\n            width: \"120\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createElementVNode(\"template\", _hoisted_5, [_createTextVNode(_toDisplayString(_ctx.scope.row.nickname || '-'), 1 /* TEXT */)])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"email\",\n            label: \"邮箱\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"role\",\n            label: \"角色\",\n            width: \"100\",\n            align: \"center\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createElementVNode(\"template\", _hoisted_6, [_createVNode(_component_el_tag, {\n                type: $setup.getRoleTagType(_ctx.scope.row.role)\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString($setup.getRoleLabel(_ctx.scope.row.role)), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"type\"])])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"created_at\",\n            label: \"注册时间\",\n            width: \"180\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createElementVNode(\"template\", _hoisted_7, [_createTextVNode(_toDisplayString($setup.formatDate(_ctx.scope.row.created_at)), 1 /* TEXT */)])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"last_login\",\n            label: \"最后登录\",\n            width: \"180\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createElementVNode(\"template\", _hoisted_8, [_createTextVNode(_toDisplayString(_ctx.scope.row.last_login ? $setup.formatDate(_ctx.scope.row.last_login) : '-'), 1 /* TEXT */)])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            label: \"操作\",\n            align: \"center\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createElementVNode(\"template\", _hoisted_9, [_createVNode(_component_el_button, {\n                size: \"mini\",\n                type: \"primary\",\n                onClick: _cache[1] || (_cache[1] = function ($event) {\n                  return $setup.handleViewUser(_ctx.scope.row);\n                })\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[13] || (_cache[13] = [_createTextVNode(\" 查看 \")]);\n                }),\n                _: 1 /* STABLE */,\n                __: [13]\n              }), _createVNode(_component_el_button, {\n                size: \"mini\",\n                type: \"success\",\n                onClick: _cache[2] || (_cache[2] = function ($event) {\n                  return $setup.handleEditUser(_ctx.scope.row);\n                })\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[14] || (_cache[14] = [_createTextVNode(\" 编辑 \")]);\n                }),\n                _: 1 /* STABLE */,\n                __: [14]\n              }), _createVNode(_component_el_button, {\n                size: \"mini\",\n                type: \"warning\",\n                onClick: _cache[3] || (_cache[3] = function ($event) {\n                  return $setup.handleChangeRole(_ctx.scope.row);\n                })\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[15] || (_cache[15] = [_createTextVNode(\" 角色 \")]);\n                }),\n                _: 1 /* STABLE */,\n                __: [15]\n              }), _createVNode(_component_el_button, {\n                size: \"mini\",\n                type: \"danger\",\n                onClick: _cache[4] || (_cache[4] = function ($event) {\n                  return $setup.handleDeleteUser(_ctx.scope.row);\n                }),\n                disabled: _ctx.scope.row.id === $setup.currentUserId\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[16] || (_cache[16] = [_createTextVNode(\" 删除 \")]);\n                }),\n                _: 1 /* STABLE */,\n                __: [16]\n              }, 8 /* PROPS */, [\"disabled\"])])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"data\"]), _createCommentVNode(\" 分页 \"), _createElementVNode(\"div\", _hoisted_10, [_createVNode(_component_el_pagination, {\n        background: \"\",\n        layout: \"total, sizes, prev, pager, next, jumper\",\n        total: $setup.total,\n        \"page-sizes\": [10, 20, 50, 100],\n        \"page-size\": $setup.pageSize,\n        \"current-page\": $setup.currentPage,\n        onSizeChange: $setup.handleSizeChange,\n        onCurrentChange: $setup.handleCurrentChange\n      }, null, 8 /* PROPS */, [\"total\", \"page-size\", \"current-page\", \"onSizeChange\", \"onCurrentChange\"])])]))];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 编辑用户对话框 \"), _createVNode(_component_el_dialog, {\n    title: \"编辑用户信息\",\n    visible: $setup.editDialogVisible,\n    width: \"500px\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        ref: \"userForm\",\n        model: $setup.userForm,\n        rules: $setup.userRules,\n        \"label-width\": \"80px\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"用户名\",\n            prop: \"username\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.userForm.username,\n                \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n                  return $setup.userForm.username = $event;\n                }),\n                disabled: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"邮箱\",\n            prop: \"email\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.userForm.email,\n                \"onUpdate:modelValue\": _cache[6] || (_cache[6] = function ($event) {\n                  return $setup.userForm.email = $event;\n                }),\n                disabled: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"昵称\",\n            prop: \"nickname\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.userForm.nickname,\n                \"onUpdate:modelValue\": _cache[7] || (_cache[7] = function ($event) {\n                  return $setup.userForm.nickname = $event;\n                })\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"头像URL\",\n            prop: \"avatar_url\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.userForm.avatar_url,\n                \"onUpdate:modelValue\": _cache[8] || (_cache[8] = function ($event) {\n                  return $setup.userForm.avatar_url = $event;\n                })\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"div\", _hoisted_11, [_createVNode(_component_el_avatar, {\n                size: 60,\n                src: $setup.userForm.avatar_url || ''\n              }, {\n                \"default\": _withCtx(function () {\n                  var _$setup$userForm$nick, _$setup$userForm$user;\n                  return [_createTextVNode(_toDisplayString(((_$setup$userForm$nick = $setup.userForm.nickname) === null || _$setup$userForm$nick === void 0 ? void 0 : _$setup$userForm$nick.charAt(0)) || ((_$setup$userForm$user = $setup.userForm.username) === null || _$setup$userForm$user === void 0 ? void 0 : _$setup$userForm$user.charAt(0)) || 'U'), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"src\"])])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\", \"rules\"]), _createElementVNode(\"span\", _hoisted_12, [_createVNode(_component_el_button, {\n        onClick: _cache[9] || (_cache[9] = function ($event) {\n          return $setup.editDialogVisible = false;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[17] || (_cache[17] = [_createTextVNode(\"取 消\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [17]\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.submitUserForm,\n        loading: $setup.submitting\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[18] || (_cache[18] = [_createTextVNode(\"确 定\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [18]\n      }, 8 /* PROPS */, [\"onClick\", \"loading\"])])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\"]), _createCommentVNode(\" 修改角色对话框 \"), _createVNode(_component_el_dialog, {\n    title: \"修改用户角色\",\n    visible: $setup.roleDialogVisible,\n    width: \"400px\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        ref: \"roleForm\",\n        model: $setup.roleForm,\n        \"label-width\": \"80px\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"用户名\"\n          }, {\n            \"default\": _withCtx(function () {\n              var _$setup$currentUser;\n              return [_createElementVNode(\"span\", null, _toDisplayString((_$setup$currentUser = $setup.currentUser) === null || _$setup$currentUser === void 0 ? void 0 : _$setup$currentUser.username), 1 /* TEXT */)];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"当前角色\"\n          }, {\n            \"default\": _withCtx(function () {\n              var _$setup$currentUser2;\n              return [_createVNode(_component_el_tag, {\n                type: $setup.getRoleTagType((_$setup$currentUser2 = $setup.currentUser) === null || _$setup$currentUser2 === void 0 ? void 0 : _$setup$currentUser2.role)\n              }, {\n                \"default\": _withCtx(function () {\n                  var _$setup$currentUser3;\n                  return [_createTextVNode(_toDisplayString($setup.getRoleLabel((_$setup$currentUser3 = $setup.currentUser) === null || _$setup$currentUser3 === void 0 ? void 0 : _$setup$currentUser3.role)), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"type\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"新角色\",\n            prop: \"role\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_select, {\n                modelValue: $setup.roleForm.role,\n                \"onUpdate:modelValue\": _cache[10] || (_cache[10] = function ($event) {\n                  return $setup.roleForm.role = $event;\n                }),\n                placeholder: \"请选择角色\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.roleOptions, function (item) {\n                    return _openBlock(), _createBlock(_component_el_option, {\n                      key: item.value,\n                      label: item.label,\n                      value: item.value\n                    }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n                  }), 128 /* KEYED_FRAGMENT */))];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\"]), _createElementVNode(\"span\", _hoisted_13, [_createVNode(_component_el_button, {\n        onClick: _cache[11] || (_cache[11] = function ($event) {\n          return $setup.roleDialogVisible = false;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[19] || (_cache[19] = [_createTextVNode(\"取 消\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [19]\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.submitRoleForm,\n        loading: $setup.submitting\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[20] || (_cache[20] = [_createTextVNode(\"确 定\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [20]\n      }, 8 /* PROPS */, [\"onClick\", \"loading\"])])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\"])]);\n}","map":{"version":3,"names":["slot","key","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","_withCtx","_createElementVNode","_hoisted_2","_component_el_input","modelValue","$setup","searchQuery","_cache","$event","placeholder","style","clearable","onKeyup","_withKeys","handleSearch","onClear","_component_el_button","icon","onClick","_","loading","_hoisted_3","_component_el_skeleton","rows","animated","_hoisted_4","_component_el_table","data","users","border","_component_el_table_column","prop","label","width","align","_hoisted_5","_createTextVNode","_toDisplayString","_ctx","scope","row","nickname","_hoisted_6","_component_el_tag","type","getRoleTagType","role","getRoleLabel","_hoisted_7","formatDate","created_at","_hoisted_8","last_login","_hoisted_9","size","handleViewUser","__","handleEditUser","handleChangeRole","handleDeleteUser","disabled","id","currentUserId","_createCommentVNode","_hoisted_10","_component_el_pagination","background","layout","total","pageSize","currentPage","onSizeChange","handleSizeChange","onCurrentChange","handleCurrentChange","_component_el_dialog","title","visible","editDialogVisible","_component_el_form","ref","model","userForm","rules","userRules","_component_el_form_item","username","email","avatar_url","_hoisted_11","_component_el_avatar","src","_$setup$userForm$nick","_$setup$userForm$user","charAt","_hoisted_12","submitUserForm","submitting","roleDialogVisible","roleForm","_$setup$currentUser","currentUser","_$setup$currentUser2","_$setup$currentUser3","_component_el_select","_Fragment","_renderList","roleOptions","item","_createBlock","_component_el_option","value","_hoisted_13","submitRoleForm"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\admin\\UserManagement.vue"],"sourcesContent":["<template>\n  <div class=\"user-management-container\">\n    <el-card class=\"user-management-card\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span>用户管理</span>\n        <el-input\n          v-model=\"searchQuery\"\n          placeholder=\"搜索用户名或邮箱\"\n          style=\"width: 300px; float: right\"\n          clearable\n          @keyup.enter.native=\"handleSearch\"\n          @clear=\"handleSearch\"\n        >\n          <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"handleSearch\"></el-button>\n        </el-input>\n      </div>\n      \n      <div v-if=\"loading\" class=\"loading-container\">\n        <el-skeleton :rows=\"10\" animated />\n      </div>\n      <div v-else>\n        <el-table\n          :data=\"users\"\n          style=\"width: 100%\"\n          border\n        >\n          <el-table-column\n            prop=\"id\"\n            label=\"ID\"\n            width=\"80\"\n            align=\"center\"\n          >\n          </el-table-column>\n          \n          <el-table-column\n            prop=\"username\"\n            label=\"用户名\"\n            width=\"120\"\n          >\n          </el-table-column>\n          \n          <el-table-column\n            prop=\"nickname\"\n            label=\"昵称\"\n            width=\"120\"\n          >\n            <template slot-scope=\"scope\">\n              {{ scope.row.nickname || '-' }}\n            </template>\n          </el-table-column>\n          \n          <el-table-column\n            prop=\"email\"\n            label=\"邮箱\"\n            width=\"180\"\n          >\n          </el-table-column>\n          \n          <el-table-column\n            prop=\"role\"\n            label=\"角色\"\n            width=\"100\"\n            align=\"center\"\n          >\n            <template slot-scope=\"scope\">\n              <el-tag\n                :type=\"getRoleTagType(scope.row.role)\"\n              >\n                {{ getRoleLabel(scope.row.role) }}\n              </el-tag>\n            </template>\n          </el-table-column>\n          \n          <el-table-column\n            prop=\"created_at\"\n            label=\"注册时间\"\n            width=\"180\"\n          >\n            <template slot-scope=\"scope\">\n              {{ formatDate(scope.row.created_at) }}\n            </template>\n          </el-table-column>\n          \n          <el-table-column\n            prop=\"last_login\"\n            label=\"最后登录\"\n            width=\"180\"\n          >\n            <template slot-scope=\"scope\">\n              {{ scope.row.last_login ? formatDate(scope.row.last_login) : '-' }}\n            </template>\n          </el-table-column>\n          \n          <el-table-column\n            label=\"操作\"\n            align=\"center\"\n          >\n            <template slot-scope=\"scope\">\n              <el-button\n                size=\"mini\"\n                type=\"primary\"\n                @click=\"handleViewUser(scope.row)\"\n              >\n                查看\n              </el-button>\n              <el-button\n                size=\"mini\"\n                type=\"success\"\n                @click=\"handleEditUser(scope.row)\"\n              >\n                编辑\n              </el-button>\n              <el-button\n                size=\"mini\"\n                type=\"warning\"\n                @click=\"handleChangeRole(scope.row)\"\n              >\n                角色\n              </el-button>\n              <el-button\n                size=\"mini\"\n                type=\"danger\"\n                @click=\"handleDeleteUser(scope.row)\"\n                :disabled=\"scope.row.id === currentUserId\"\n              >\n                删除\n              </el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n        \n        <!-- 分页 -->\n        <div class=\"pagination-container\">\n          <el-pagination\n            background\n            layout=\"total, sizes, prev, pager, next, jumper\"\n            :total=\"total\"\n            :page-sizes=\"[10, 20, 50, 100]\"\n            :page-size=\"pageSize\"\n            :current-page.sync=\"currentPage\"\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n          >\n          </el-pagination>\n        </div>\n      </div>\n    </el-card>\n    \n    <!-- 编辑用户对话框 -->\n    <el-dialog\n      title=\"编辑用户信息\"\n      :visible.sync=\"editDialogVisible\"\n      width=\"500px\"\n    >\n      <el-form\n        ref=\"userForm\"\n        :model=\"userForm\"\n        :rules=\"userRules\"\n        label-width=\"80px\"\n      >\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"userForm.username\" disabled></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"userForm.email\" disabled></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"昵称\" prop=\"nickname\">\n          <el-input v-model=\"userForm.nickname\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"头像URL\" prop=\"avatar_url\">\n          <el-input v-model=\"userForm.avatar_url\"></el-input>\n          <div class=\"avatar-preview\">\n            <el-avatar :size=\"60\" :src=\"userForm.avatar_url || ''\">\n              {{ userForm.nickname?.charAt(0) || userForm.username?.charAt(0) || 'U' }}\n            </el-avatar>\n          </div>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submitUserForm\" :loading=\"submitting\">确 定</el-button>\n      </span>\n    </el-dialog>\n    \n    <!-- 修改角色对话框 -->\n    <el-dialog\n      title=\"修改用户角色\"\n      :visible.sync=\"roleDialogVisible\"\n      width=\"400px\"\n    >\n      <el-form\n        ref=\"roleForm\"\n        :model=\"roleForm\"\n        label-width=\"80px\"\n      >\n        <el-form-item label=\"用户名\">\n          <span>{{ currentUser?.username }}</span>\n        </el-form-item>\n        \n        <el-form-item label=\"当前角色\">\n          <el-tag :type=\"getRoleTagType(currentUser?.role)\">\n            {{ getRoleLabel(currentUser?.role) }}\n          </el-tag>\n        </el-form-item>\n        \n        <el-form-item label=\"新角色\" prop=\"role\">\n          <el-select v-model=\"roleForm.role\" placeholder=\"请选择角色\">\n            <el-option\n              v-for=\"item in roleOptions\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            >\n            </el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"roleDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submitRoleForm\" :loading=\"submitting\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { formatDate } from '@/utils/index'\n\n// 模拟API调用\nconst mockUsers = [\n  {\n    id: 1,\n    username: 'admin',\n    nickname: '管理员',\n    email: 'admin@example.com',\n    avatar_url: '',\n    role: 'admin',\n    created_at: '2023-05-01T12:00:00Z',\n    last_login: '2023-05-19T08:30:00Z'\n  },\n  {\n    id: 2,\n    username: 'moderator',\n    nickname: '版主',\n    email: 'moderator@example.com',\n    avatar_url: '',\n    role: 'moderator',\n    created_at: '2023-05-02T14:30:00Z',\n    last_login: '2023-05-18T16:45:00Z'\n  },\n  {\n    id: 3,\n    username: 'user1',\n    nickname: '普通用户1',\n    email: 'user1@example.com',\n    avatar_url: '',\n    role: 'user',\n    created_at: '2023-05-03T09:15:00Z',\n    last_login: '2023-05-17T10:20:00Z'\n  }\n]\n\nexport default {\n  name: 'UserManagement',\n  setup() {\n    const router = useRouter()\n    const store = useStore()\n    \n    // 状态\n    const loading = ref(false)\n    const users = ref([])\n    const total = ref(0)\n    const currentPage = ref(1)\n    const pageSize = ref(10)\n    const searchQuery = ref('')\n    \n    // 当前用户ID\n    const currentUserId = computed(() => store.getters.userInfo?.id)\n    \n    // 编辑用户对话框\n    const editDialogVisible = ref(false)\n    const userForm = ref({\n      id: null,\n      username: '',\n      email: '',\n      nickname: '',\n      avatar_url: ''\n    })\n    const userRules = {\n      nickname: [\n        { max: 50, message: '昵称不能超过50个字符', trigger: 'blur' }\n      ]\n    }\n    \n    // 修改角色对话框\n    const roleDialogVisible = ref(false)\n    const currentUser = ref(null)\n    const roleForm = ref({\n      role: ''\n    })\n    const roleOptions = [\n      { value: 'user', label: '普通用户' },\n      { value: 'moderator', label: '版主' },\n      { value: 'admin', label: '管理员' }\n    ]\n    \n    const submitting = ref(false)\n    \n    // 获取用户列表\n    const fetchUsers = async () => {\n      loading.value = true\n      try {\n        // 模拟API调用\n        setTimeout(() => {\n          users.value = mockUsers\n          total.value = mockUsers.length\n          loading.value = false\n        }, 500)\n        \n        // 实际API调用\n        // const response = await getUserList({\n        //   page: currentPage.value,\n        //   page_size: pageSize.value,\n        //   search: searchQuery.value\n        // })\n        // if (response.code === 0) {\n        //   users.value = response.data.results || []\n        //   total.value = response.data.count || 0\n        // } else {\n        //   ElMessage.error(response.msg || '获取用户列表失败')\n        // }\n      } catch (error) {\n        console.error('获取用户列表失败:', error)\n        ElMessage.error('获取用户列表失败')\n      } finally {\n        loading.value = false\n      }\n    }\n    \n    // 处理搜索\n    const handleSearch = () => {\n      currentPage.value = 1\n      fetchUsers()\n    }\n    \n    // 处理页码变化\n    const handleCurrentChange = (page) => {\n      currentPage.value = page\n      fetchUsers()\n    }\n    \n    // 处理每页条数变化\n    const handleSizeChange = (size) => {\n      pageSize.value = size\n      currentPage.value = 1\n      fetchUsers()\n    }\n    \n    // 查看用户\n    const handleViewUser = (user) => {\n      router.push({ name: 'UserProfile', params: { id: user.id } })\n    }\n    \n    // 编辑用户\n    const handleEditUser = (user) => {\n      userForm.value = {\n        id: user.id,\n        username: user.username,\n        email: user.email,\n        nickname: user.nickname || '',\n        avatar_url: user.avatar_url || ''\n      }\n      editDialogVisible.value = true\n    }\n    \n    // 提交用户表单\n    const submitUserForm = async () => {\n      submitting.value = true\n      try {\n        // 模拟API调用\n        setTimeout(() => {\n          const index = users.value.findIndex(u => u.id === userForm.value.id)\n          if (index !== -1) {\n            users.value[index] = {\n              ...users.value[index],\n              nickname: userForm.value.nickname,\n              avatar_url: userForm.value.avatar_url\n            }\n          }\n          \n          ElMessage.success('用户信息更新成功')\n          editDialogVisible.value = false\n          submitting.value = false\n        }, 500)\n        \n        // 实际API调用\n        // const response = await updateUser(userForm.value.id, {\n        //   nickname: userForm.value.nickname,\n        //   avatar_url: userForm.value.avatar_url\n        // })\n        // if (response.code === 0) {\n        //   ElMessage.success(response.msg || '用户信息更新成功')\n        //   editDialogVisible.value = false\n        //   fetchUsers()\n        // } else {\n        //   ElMessage.error(response.msg || '用户信息更新失败')\n        // }\n      } catch (error) {\n        console.error('用户信息更新失败:', error)\n        ElMessage.error('用户信息更新失败')\n      } finally {\n        submitting.value = false\n      }\n    }\n    \n    // 修改角色\n    const handleChangeRole = (user) => {\n      currentUser.value = user\n      roleForm.value.role = user.role\n      roleDialogVisible.value = true\n    }\n    \n    // 提交角色表单\n    const submitRoleForm = async () => {\n      if (!currentUser.value) return\n      \n      submitting.value = true\n      try {\n        // 模拟API调用\n        setTimeout(() => {\n          const index = users.value.findIndex(u => u.id === currentUser.value.id)\n          if (index !== -1) {\n            users.value[index] = {\n              ...users.value[index],\n              role: roleForm.value.role\n            }\n          }\n          \n          ElMessage.success('用户角色更新成功')\n          roleDialogVisible.value = false\n          submitting.value = false\n        }, 500)\n        \n        // 实际API调用\n        // const response = await updateUserRole(currentUser.value.id, {\n        //   role: roleForm.value.role\n        // })\n        // if (response.code === 0) {\n        //   ElMessage.success(response.msg || '用户角色更新成功')\n        //   roleDialogVisible.value = false\n        //   fetchUsers()\n        // } else {\n        //   ElMessage.error(response.msg || '用户角色更新失败')\n        // }\n      } catch (error) {\n        console.error('用户角色更新失败:', error)\n        ElMessage.error('用户角色更新失败')\n      } finally {\n        submitting.value = false\n      }\n    }\n    \n    // 删除用户\n    const handleDeleteUser = async (user) => {\n      try {\n        await ElMessageBox.confirm(\n          `确定要删除用户 \"${user.username}\" 吗？此操作不可逆！`,\n          '警告',\n          {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }\n        )\n        \n        // 模拟API调用\n        setTimeout(() => {\n          users.value = users.value.filter(u => u.id !== user.id)\n          total.value = users.value.length\n          \n          ElMessage.success('用户删除成功')\n        }, 500)\n        \n        // 实际API调用\n        // const response = await deleteUser(user.id)\n        // if (response.code === 0) {\n        //   ElMessage.success(response.msg || '用户删除成功')\n        //   fetchUsers()\n        // } else {\n        //   ElMessage.error(response.msg || '用户删除失败')\n        // }\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('用户删除失败:', error)\n          ElMessage.error('用户删除失败')\n        }\n      }\n    }\n    \n    // 获取角色标签类型\n    const getRoleTagType = (role) => {\n      switch (role) {\n        case 'admin':\n          return 'danger'\n        case 'moderator':\n          return 'warning'\n        case 'user':\n          return 'success'\n        default:\n          return 'info'\n      }\n    }\n    \n    // 获取角色标签文本\n    const getRoleLabel = (role) => {\n      switch (role) {\n        case 'admin':\n          return '管理员'\n        case 'moderator':\n          return '版主'\n        case 'user':\n          return '普通用户'\n        default:\n          return '未知'\n      }\n    }\n    \n    // 生命周期钩子\n    onMounted(() => {\n      fetchUsers()\n    })\n    \n    return {\n      loading,\n      users,\n      total,\n      currentPage,\n      pageSize,\n      searchQuery,\n      currentUserId,\n      editDialogVisible,\n      userForm,\n      userRules,\n      roleDialogVisible,\n      currentUser,\n      roleForm,\n      roleOptions,\n      submitting,\n      formatDate,\n      handleSearch,\n      handleCurrentChange,\n      handleSizeChange,\n      handleViewUser,\n      handleEditUser,\n      submitUserForm,\n      handleChangeRole,\n      submitRoleForm,\n      handleDeleteUser,\n      getRoleTagType,\n      getRoleLabel\n    }\n  }\n}\n</script>\n\n<style scoped>\n.user-management-container {\n  padding: 20px;\n}\n\n.user-management-card {\n  margin-bottom: 20px;\n}\n\n.loading-container {\n  padding: 20px 0;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.avatar-preview {\n  margin-top: 10px;\n  display: flex;\n  justify-content: center;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}