{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar index$1 = require('../../../icon/index.js');\nvar prev = require('./prev.js');\nvar pluginVue_exportHelper = require('../../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../../hooks/use-locale/index.js');\nvar __default__ = vue.defineComponent({\n  name: \"ElPaginationPrev\"\n});\nvar _sfc_main = /* @__PURE__ */vue.defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: prev.paginationPrevProps,\n  emits: prev.paginationPrevEmits,\n  setup: function setup(__props) {\n    var props = __props;\n    var _index$useLocale = index.useLocale(),\n      t = _index$useLocale.t;\n    var internalDisabled = vue.computed(function () {\n      return props.disabled || props.currentPage <= 1;\n    });\n    return function (_ctx, _cache) {\n      return vue.openBlock(), vue.createElementBlock(\"button\", {\n        type: \"button\",\n        \"class\": \"btn-prev\",\n        disabled: vue.unref(internalDisabled),\n        \"aria-label\": _ctx.prevText || vue.unref(t)(\"el.pagination.prev\"),\n        \"aria-disabled\": vue.unref(internalDisabled),\n        onClick: function onClick($event) {\n          return _ctx.$emit(\"click\", $event);\n        }\n      }, [_ctx.prevText ? (vue.openBlock(), vue.createElementBlock(\"span\", {\n        key: 0\n      }, vue.toDisplayString(_ctx.prevText), 1)) : (vue.openBlock(), vue.createBlock(vue.unref(index$1.ElIcon), {\n        key: 1\n      }, {\n        \"default\": vue.withCtx(function () {\n          return [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.prevIcon)))];\n        }),\n        _: 1\n      }))], 8, [\"disabled\", \"aria-label\", \"aria-disabled\", \"onClick\"]);\n    };\n  }\n}));\nvar Prev = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"prev.vue\"]]);\nexports[\"default\"] = Prev;","map":{"version":3,"names":["name","_index$useLocale","index","useLocale","t","internalDisabled","vue","computed","props","disabled","currentPage","_ctx","_cache","openBlock","createElementBlock"],"sources":["../../../../../../../packages/components/pagination/src/components/prev.vue"],"sourcesContent":["<template>\n  <button\n    type=\"button\"\n    class=\"btn-prev\"\n    :disabled=\"internalDisabled\"\n    :aria-label=\"prevText || t('el.pagination.prev')\"\n    :aria-disabled=\"internalDisabled\"\n    @click=\"$emit('click', $event)\"\n  >\n    <span v-if=\"prevText\">{{ prevText }}</span>\n    <el-icon v-else>\n      <component :is=\"prevIcon\" />\n    </el-icon>\n  </button>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useLocale } from '@element-plus/hooks'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { paginationPrevEmits, paginationPrevProps } from './prev'\n\ndefineOptions({\n  name: 'ElPaginationPrev',\n})\n\nconst props = defineProps(paginationPrevProps)\ndefineEmits(paginationPrevEmits)\n\nconst { t } = useLocale()\n\nconst internalDisabled = computed(\n  () => props.disabled || props.currentPage <= 1\n)\n</script>\n"],"mappings":";;;;;;;;;;;;qCAsBc;EACZA,IAAM;AACR;;;;;;IAKM,IAAAC,gBAAA,GAAQC,KAAA,CAAAC,SAAU;MAAhBC,CAAE,GAAAH,gBAAA,CAAFG,CAAE;IAEV,IAAMC,gBAAmB,GAAAC,GAAA,CAAAC,QAAA;MAAA,OAAAC,KAAA,CAAAC,QAAA,IAAAD,KAAA,CAAAE,WAAA;IAAA;IAAA,OACjB,UAAAC,IAAA,EAAMC,MAAY;MAC1B,OAAAN,GAAA,CAAAO,SAAA,IAAAP,GAAA,CAAAQ,kBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}