{"ast":null,"code":"import _objectSpread from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport { ref, watch, onMounted } from 'vue';\nimport { QuillEditor } from '@vueup/vue-quill';\nimport '@vueup/vue-quill/dist/vue-quill.snow.css';\nimport { defaultQuillOptions } from '@/utils/quill-config';\nexport default {\n  name: 'RichTextEditor',\n  components: {\n    QuillEditor: QuillEditor\n  },\n  props: {\n    modelValue: {\n      type: String,\n      \"default\": ''\n    },\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  emits: ['update:modelValue', 'change'],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var content = ref(props.modelValue);\n    var quillEditor = ref(null);\n    var handleChange = function handleChange(delta, oldDelta, source) {\n      if (source === 'user') {\n        // 获取编辑器实例\n        var quill = quillEditor.value.getQuill();\n        // 获取HTML内容\n        var html = quill.root.innerHTML;\n        // 获取纯文本内容\n        var text = quill.getText().trim();\n        console.log('RichTextEditor - 内容变化:', {\n          html: html,\n          text: text,\n          isEmpty: !text\n        });\n\n        // 如果纯文本内容为空，说明编辑器是空的\n        if (!text || text === '\\n') {\n          content.value = '';\n          emit('update:modelValue', '');\n          emit('change', '');\n        } else {\n          content.value = html;\n          emit('update:modelValue', html);\n          emit('change', html);\n        }\n      }\n    };\n\n    // 增强对modelValue变化的监听\n    watch(function () {\n      return props.modelValue;\n    }, function (newValue, oldValue) {\n      console.log('RichTextEditor - modelValue变化:', {\n        newValue: newValue,\n        oldValue: oldValue,\n        contentValue: content.value\n      });\n      if (newValue !== content.value) {\n        content.value = newValue || '';\n\n        // 如果编辑器已经初始化，手动更新内容\n        if (quillEditor.value && quillEditor.value.getQuill) {\n          console.log('手动更新Quill编辑器内容');\n          var quill = quillEditor.value.getQuill();\n          if (quill) {\n            // 清空当前内容\n            quill.setText('');\n            // 设置新内容（如果是HTML格式）\n            if (newValue && newValue.trim()) {\n              quill.clipboard.dangerouslyPasteHTML(0, newValue);\n            }\n          }\n        }\n      }\n    }, {\n      immediate: true\n    });\n\n    // 使用默认配置并添加自定义设置\n    var editorOption = _objectSpread(_objectSpread({}, defaultQuillOptions), {}, {\n      readOnly: props.disabled\n    });\n    onMounted(function () {\n      console.log('RichTextEditor - 组件挂载，初始值:', props.modelValue);\n\n      // 初始化时设置内容\n      if (quillEditor.value) {\n        console.log('RichTextEditor - 设置初始内容');\n\n        // 立即设置内容，不需要延时\n        try {\n          var quill = quillEditor.value.getQuill();\n          if (quill) {\n            // 确保使用现代 API\n            Object.assign(quill.options, {\n              experimental: {\n                useModernScrollingApi: true,\n                useMutationObserver: true\n              }\n            });\n\n            // 清空当前内容\n            quill.setText('');\n            // 设置新内容（如果是HTML格式）\n            if (props.modelValue && props.modelValue.trim()) {\n              quill.clipboard.dangerouslyPasteHTML(0, props.modelValue);\n              content.value = props.modelValue;\n              console.log('RichTextEditor - 初始内容设置成功');\n            }\n          }\n        } catch (error) {\n          console.error('RichTextEditor - 设置初始内容失败:', error);\n        }\n      }\n\n      // 添加警告监听器，捕获并屏蔽Quill相关警告\n      var originalWarn = console.warn;\n      console.warn = function (msg) {\n        if (msg && typeof msg === 'string' && (msg.includes('DOMNodeInserted') || msg.includes('Listener added for a') || msg.includes('mutation event'))) {\n          // 忽略Quill相关警告\n          return;\n        }\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        originalWarn.call.apply(originalWarn, [console, msg].concat(args));\n      };\n    });\n    return {\n      content: content,\n      editorOption: _objectSpread(_objectSpread({}, editorOption), {}, {\n        experimental: {\n          useModernScrollingApi: true,\n          useMutationObserver: true\n        }\n      }),\n      handleChange: handleChange,\n      quillEditor: quillEditor\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","QuillEditor","defaultQuillOptions","name","components","props","modelValue","type","String","disabled","Boolean","emits","setup","_ref","emit","content","quillEditor","handleChange","delta","oldDelta","source","quill","value","getQuill","html","root","innerHTML","text","getText","trim","console","log","isEmpty","newValue","oldValue","contentValue","setText","clipboard","dangerouslyPasteHTML","immediate","editorOption","_objectSpread","readOnly","Object","assign","options","experimental","useModernScrollingApi","useMutationObserver","error","originalWarn","warn","msg","includes","_len","arguments","length","args","Array","_key","call","apply","concat"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\components\\RichTextEditor.vue"],"sourcesContent":["<template>\n  <div class=\"rich-text-editor\">\n    <quill-editor\n      :content=\"content\"\n      @update:content=\"val => content = val\"\n      :options=\"editorOption\"\n      @textChange=\"handleChange\"\n      :disabled=\"disabled\"\n      ref=\"quillEditor\"\n    />\n  </div>\n</template>\n\n<script>\nimport { ref, watch, onMounted } from 'vue'\nimport { QuillEditor } from '@vueup/vue-quill'\nimport '@vueup/vue-quill/dist/vue-quill.snow.css'\nimport { defaultQuillOptions } from '@/utils/quill-config'\n\nexport default {\n  name: 'RichTextEditor',\n  components: {\n    QuillEditor\n  },\n  props: {\n    modelValue: {\n      type: String,\n      default: ''\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['update:modelValue', 'change'],\n  setup(props, { emit }) {\n    const content = ref(props.modelValue)\n    const quillEditor = ref(null)\n\n    const handleChange = (delta, oldDelta, source) => {\n      if (source === 'user') {\n        // 获取编辑器实例\n        const quill = quillEditor.value.getQuill();\n        // 获取HTML内容\n        const html = quill.root.innerHTML;\n        // 获取纯文本内容\n        const text = quill.getText().trim();\n        \n        console.log('RichTextEditor - 内容变化:', {\n          html: html,\n          text: text,\n          isEmpty: !text\n        });\n        \n        // 如果纯文本内容为空，说明编辑器是空的\n        if (!text || text === '\\n') {\n          content.value = '';\n          emit('update:modelValue', '');\n          emit('change', '');\n        } else {\n          content.value = html;\n          emit('update:modelValue', html);\n          emit('change', html);\n        }\n      }\n    }\n\n    // 增强对modelValue变化的监听\n    watch(() => props.modelValue, (newValue, oldValue) => {\n      console.log('RichTextEditor - modelValue变化:', { \n        newValue, \n        oldValue, \n        contentValue: content.value \n      });\n      \n      if (newValue !== content.value) {\n        content.value = newValue || '';\n        \n        // 如果编辑器已经初始化，手动更新内容\n        if (quillEditor.value && quillEditor.value.getQuill) {\n          console.log('手动更新Quill编辑器内容');\n          const quill = quillEditor.value.getQuill();\n          if (quill) {\n            // 清空当前内容\n            quill.setText('');\n            // 设置新内容（如果是HTML格式）\n            if (newValue && newValue.trim()) {\n              quill.clipboard.dangerouslyPasteHTML(0, newValue);\n            }\n          }\n        }\n      }\n    }, { immediate: true })\n\n    // 使用默认配置并添加自定义设置\n    const editorOption = {\n      ...defaultQuillOptions,\n      readOnly: props.disabled\n    }\n\n    onMounted(() => {\n      console.log('RichTextEditor - 组件挂载，初始值:', props.modelValue);\n      \n      // 初始化时设置内容\n      if (quillEditor.value) {\n        console.log('RichTextEditor - 设置初始内容');\n        \n        // 立即设置内容，不需要延时\n        try {\n          const quill = quillEditor.value.getQuill();\n          if (quill) {\n            // 确保使用现代 API\n            Object.assign(quill.options, {\n              experimental: {\n                useModernScrollingApi: true,\n                useMutationObserver: true\n              }\n            });\n\n            // 清空当前内容\n            quill.setText('');\n            // 设置新内容（如果是HTML格式）\n            if (props.modelValue && props.modelValue.trim()) {\n              quill.clipboard.dangerouslyPasteHTML(0, props.modelValue);\n              content.value = props.modelValue;\n              console.log('RichTextEditor - 初始内容设置成功');\n            }\n          }\n        } catch (error) {\n          console.error('RichTextEditor - 设置初始内容失败:', error);\n        }\n      }\n      \n      // 添加警告监听器，捕获并屏蔽Quill相关警告\n      const originalWarn = console.warn;\n      console.warn = function(msg, ...args) {\n        if (msg && typeof msg === 'string' && \n            (msg.includes('DOMNodeInserted') || \n             msg.includes('Listener added for a') ||\n             msg.includes('mutation event'))) {\n          // 忽略Quill相关警告\n          return;\n        }\n        originalWarn.call(console, msg, ...args);\n      };\n    })\n\n    return {\n      content,\n      editorOption: {\n        ...editorOption,\n        experimental: {\n          useModernScrollingApi: true,\n          useMutationObserver: true\n        }\n      },\n      handleChange,\n      quillEditor\n    }\n  }\n}\n</script>\n\n<style scoped>\n.rich-text-editor {\n  width: 100%;\n}\n\n:deep(.ql-container) {\n  min-height: 300px;\n  font-size: 16px;\n  line-height: 1.5;\n}\n\n:deep(.ql-editor) {\n  min-height: 300px;\n  padding: 12px 15px;\n}\n\n:deep(.ql-toolbar) {\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  background-color: #f8f9fa;\n}\n\n:deep(.ql-container) {\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n}\n\n:deep(.ql-editor p) {\n  margin-bottom: 1em;\n}\n\n:deep(.ql-editor img) {\n  max-width: 100%;\n  height: auto;\n}\n\n:deep(.ql-editor blockquote) {\n  border-left: 4px solid #ccc;\n  margin: 0;\n  padding-left: 16px;\n}\n\n:deep(.ql-editor pre.ql-syntax) {\n  background-color: #f8f9fa;\n  border-radius: 4px;\n  padding: 12px;\n  margin: 8px 0;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}