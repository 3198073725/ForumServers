{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/defineProperty.js\")[\"default\"];\nrequire(\"core-js/modules/es.number.constructor.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar types = require('../../../utils/types.js');\nvar shared = require('@vue/shared');\nvar event = require('../../../constants/event.js');\nvar emitChangeFn = function emitChangeFn(value) {\n  return types.isNumber(value) || shared.isString(value) || shared.isArray(value);\n};\nvar collapseProps = runtime.buildProps({\n  accordion: Boolean,\n  modelValue: {\n    type: runtime.definePropType([Array, String, Number]),\n    \"default\": function _default() {\n      return void 0;\n    }\n  },\n  expandIconPosition: {\n    type: runtime.definePropType([String]),\n    \"default\": \"right\"\n  }\n});\nvar collapseEmits = _defineProperty(_defineProperty({}, event.UPDATE_MODEL_EVENT, emitChangeFn), event.CHANGE_EVENT, emitChangeFn);\nexports.collapseEmits = collapseEmits;\nexports.collapseProps = collapseProps;\nexports.emitChangeFn = emitChangeFn;","map":{"version":3,"names":["emitChangeFn","value","types","isNumber","shared","isString","isArray","collapseProps","runtime","buildProps","accordion","Boolean","modelValue","type","definePropType","Array","String","Number","default","expandIconPosition","collapseEmits","_defineProperty","event","UPDATE_MODEL_EVENT","CHANGE_EVENT"],"sources":["../../../../../../packages/components/collapse/src/collapse.ts"],"sourcesContent":["import {\n  buildProps,\n  definePropType,\n  isArray,\n  isNumber,\n  isString,\n} from '@element-plus/utils'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport type { ExtractPropTypes } from 'vue'\nimport type { Arrayable } from '@element-plus/utils'\n\nexport type CollapseActiveName = string | number\nexport type CollapseModelValue = Arrayable<CollapseActiveName>\n\nexport type CollapseIconPositionType = 'left' | 'right'\n\nexport const emitChangeFn = (value: CollapseModelValue) =>\n  isNumber(value) || isString(value) || isArray(value)\n\nexport const collapseProps = buildProps({\n  /**\n   * @description whether to activate accordion mode\n   */\n  accordion: Boolean,\n  /**\n   * @description currently active panel, the type is `string` in accordion mode, otherwise it is `array`\n   */\n  modelValue: {\n    type: definePropType<CollapseModelValue>([Array, String, Number]),\n    default: () => undefined,\n  },\n  /**\n   * @description set expand icon position\n   */\n  expandIconPosition: {\n    type: definePropType<CollapseIconPositionType>([String]),\n    default: 'right',\n  },\n} as const)\nexport type CollapseProps = ExtractPropTypes<typeof collapseProps>\n\nexport const collapseEmits = {\n  [UPDATE_MODEL_EVENT]: emitChangeFn,\n  [CHANGE_EVENT]: emitChangeFn,\n}\nexport type CollapseEmits = typeof collapseEmits\n"],"mappings":";;;;;;;;;;;;AAQY,IAACA,YAAY,GAAG,SAAfA,YAAYA,CAAIC,KAAK;EAAA,OAAKC,KAAA,CAAAC,QAAQ,CAACF,KAAK,CAAC,IAAIG,MAAA,CAAAC,QAAQ,CAACJ,KAAK,CAAC,IAAIG,MAAA,CAAAE,OAAO,CAACL,KAAK;AAAA;AAC9E,IAACM,aAAa,GAAGC,OAAA,CAAAC,UAAU,CAAC;EACtCC,SAAS,EAAEC,OAAO;EAClBC,UAAU,EAAE;IACVC,IAAI,EAAEL,OAAA,CAAAM,cAAc,CAAC,CAACC,KAAK,EAAEC,MAAM,EAAEC,MAAM,CAAC,CAAC;IAC7C,WAAS,SAATC,QAAOA,CAAA;MAAA,OAAQ,KAAK,CAAC;IAAA;EACzB,CAAG;EACDC,kBAAkB,EAAE;IAClBN,IAAI,EAAEL,OAAA,CAAAM,cAAc,CAAC,CAACE,MAAM,CAAC,CAAC;IAC9B,WAAS;EACb;AACA,CAAC;AACW,IAACI,aAAa,GAAAC,eAAA,CAAAA,eAAA,KACvBC,KAAA,CAAAC,kBAAkB,EAAGvB,YAAY,GACjCsB,KAAA,CAAAE,YAAY,EAAGxB,YAAY,CAC9B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}