{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.for-each.js\");\nrequire(\"core-js/modules/es.array.reduce.js\");\nrequire(\"core-js/modules/es.iterator.constructor.js\");\nrequire(\"core-js/modules/es.iterator.reduce.js\");\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar shared = require('@vue/shared');\nvar style = require('../../../utils/dom/style.js');\nvar sumReducer = function sumReducer(sum2, num) {\n  return sum2 + num;\n};\nvar sum = function sum(listLike) {\n  return shared.isArray(listLike) ? listLike.reduce(sumReducer, 0) : listLike;\n};\nvar tryCall = function tryCall(fLike, params) {\n  var defaultRet = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return shared.isFunction(fLike) ? fLike(params) : fLike != null ? fLike : defaultRet;\n};\nvar enforceUnit = function enforceUnit(style$1) {\n  [\"width\", \"maxWidth\", \"minWidth\", \"height\"].forEach(function (key) {\n    style$1[key] = style.addUnit(style$1[key]);\n  });\n  return style$1;\n};\nvar componentToSlot = function componentToSlot(ComponentLike) {\n  return vue.isVNode(ComponentLike) ? function (props) {\n    return vue.h(ComponentLike, props);\n  } : ComponentLike;\n};\nexports.componentToSlot = componentToSlot;\nexports.enforceUnit = enforceUnit;\nexports.sum = sum;\nexports.tryCall = tryCall;","map":{"version":3,"names":["sumReducer","sum2","num","sum","listLike","shared","isArray","reduce","tryCall","fLike","params","defaultRet","arguments","length","undefined","isFunction","enforceUnit","style$1","forEach","key","style","addUnit","componentToSlot","ComponentLike","vue","isVNode","props","h"],"sources":["../../../../../../packages/components/table-v2/src/utils.ts"],"sourcesContent":["import { h, isVNode } from 'vue'\nimport { addUnit, isArray, isFunction } from '@element-plus/utils'\n\nimport type { CSSProperties, Component, Slot } from 'vue'\n\nconst sumReducer = (sum: number, num: number) => sum + num\n\nexport const sum = (listLike: number | number[]) => {\n  return isArray(listLike) ? listLike.reduce(sumReducer, 0) : listLike\n}\n\nexport const tryCall = <T>(\n  fLike: T,\n  params: T extends (...args: infer K) => unknown ? K : any,\n  defaultRet = {}\n) => {\n  return isFunction(fLike) ? fLike(params) : fLike ?? defaultRet\n}\n\nexport const enforceUnit = (style: CSSProperties) => {\n  ;(['width', 'maxWidth', 'minWidth', 'height'] as const).forEach((key) => {\n    style[key] = addUnit(style[key])\n  })\n\n  return style\n}\n\nexport const componentToSlot = <T extends object>(\n  ComponentLike: JSX.Element | ((props: T) => Component<T>) | undefined\n) =>\n  isVNode(ComponentLike)\n    ? (props: T) => h(ComponentLike, props)\n    : (ComponentLike as Slot)\n"],"mappings":";;;;;;;;;;;;;;AAEA,IAAMA,UAAU,GAAG,SAAbA,UAAUA,CAAIC,IAAI,EAAEC,GAAG;EAAA,OAAKD,IAAI,GAAGC,GAAG;AAAA;AAChC,IAACC,GAAG,GAAG,SAANA,GAAGA,CAAIC,QAAQ,EAAK;EAC/B,OAAOC,MAAA,CAAAC,OAAO,CAACF,QAAQ,CAAC,GAAGA,QAAQ,CAACG,MAAM,CAACP,UAAU,EAAE,CAAC,CAAC,GAAGI,QAAQ;AACtE;AACY,IAACI,OAAO,GAAG,SAAVA,OAAOA,CAAIC,KAAK,EAAEC,MAAM,EAAsB;EAAA,IAApBC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACpD,OAAOP,MAAA,CAAAU,UAAU,CAACN,KAAK,CAAC,GAAGA,KAAK,CAACC,MAAM,CAAC,GAAGD,KAAK,IAAI,IAAI,GAAGA,KAAK,GAAGE,UAAU;AAC/E;AACY,IAACK,WAAW,GAAG,SAAdA,WAAWA,CAAIC,OAAK,EAAK;EAEpC,CAAC,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,CAAC,CAACC,OAAO,CAAC,UAACC,GAAG,EAAK;IAC3DF,OAAK,CAACE,GAAG,CAAC,GAAGC,KAAA,CAAAC,OAAO,CAACJ,OAAK,CAACE,GAAG,CAAC,CAAC;EACpC,CAAG,CAAC;EACF,OAAOF,OAAK;AACd;AACY,IAACK,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,aAAa;EAAA,OAAKC,GAAA,CAAAC,OAAO,CAACF,aAAa,CAAC,GAAG,UAACG,KAAK;IAAA,OAAKF,GAAA,CAAAG,CAAC,CAACJ,aAAa,EAAEG,KAAK,CAAC;EAAA,IAAGH,aAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}