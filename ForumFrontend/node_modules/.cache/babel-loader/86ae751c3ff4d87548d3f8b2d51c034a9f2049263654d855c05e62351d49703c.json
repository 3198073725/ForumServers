{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"messages-container\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"loading\"\n};\nvar _hoisted_3 = {\n  key: 1,\n  \"class\": \"empty-state\"\n};\nvar _hoisted_4 = {\n  key: 2\n};\nvar _hoisted_5 = {\n  \"class\": \"chat-avatar\"\n};\nvar _hoisted_6 = {\n  \"class\": \"chat-info\"\n};\nvar _hoisted_7 = {\n  \"class\": \"chat-header\"\n};\nvar _hoisted_8 = {\n  \"class\": \"username\"\n};\nvar _hoisted_9 = {\n  \"class\": \"time\"\n};\nvar _hoisted_10 = {\n  \"class\": \"last-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_Loading = _resolveComponent(\"Loading\");\n  var _component_el_icon = _resolveComponent(\"el-icon\");\n  var _component_el_avatar = _resolveComponent(\"el-avatar\");\n  var _component_el_badge = _resolveComponent(\"el-badge\");\n  var _component_el_list_item = _resolveComponent(\"el-list-item\");\n  var _component_el_list = _resolveComponent(\"el-list\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h1\", null, \"我的私信\", -1 /* HOISTED */)), _createVNode(_component_el_card, {\n    shadow: \"never\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [$setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_icon, {\n        \"class\": \"is-loading\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_Loading)];\n        }),\n        _: 1 /* STABLE */\n      }), _cache[0] || (_cache[0] = _createElementVNode(\"span\", null, \"加载中...\", -1 /* HOISTED */))])) : $setup.chatList.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \" 暂无私信 \")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_list, null, {\n        \"default\": _withCtx(function () {\n          return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.chatList, function (chat) {\n            return _openBlock(), _createBlock(_component_el_list_item, {\n              key: chat.userId,\n              onClick: function onClick($event) {\n                return $setup.openChat(chat.userId);\n              },\n              \"class\": \"chat-item\"\n            }, {\n              \"default\": _withCtx(function () {\n                return [_createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_avatar, {\n                  size: 40,\n                  src: chat.avatar\n                }, {\n                  \"default\": _withCtx(function () {\n                    return [_createTextVNode(_toDisplayString(chat.username.substring(0, 1).toUpperCase()), 1 /* TEXT */)];\n                  }),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"src\"])]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"span\", _hoisted_8, _toDisplayString(chat.nickname || chat.username), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_9, _toDisplayString($setup.formatTime(chat.lastMessageTime)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_10, [_createTextVNode(_toDisplayString(chat.lastMessage) + \" \", 1 /* TEXT */), chat.unreadCount > 0 ? (_openBlock(), _createBlock(_component_el_badge, {\n                  key: 0,\n                  value: chat.unreadCount,\n                  \"class\": \"unread-badge\"\n                }, null, 8 /* PROPS */, [\"value\"])) : _createCommentVNode(\"v-if\", true)])])];\n              }),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]);\n          }), 128 /* KEYED_FRAGMENT */))];\n        }),\n        _: 1 /* STABLE */\n      })]))];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_el_card","shadow","_withCtx","$setup","loading","_hoisted_2","_component_el_icon","_component_Loading","_","chatList","length","_hoisted_3","_hoisted_4","_component_el_list","_Fragment","_renderList","chat","_createBlock","_component_el_list_item","userId","onClick","$event","openChat","_hoisted_5","_component_el_avatar","size","src","avatar","_createTextVNode","_toDisplayString","username","substring","toUpperCase","_hoisted_6","_hoisted_7","_hoisted_8","nickname","_hoisted_9","formatTime","lastMessageTime","_hoisted_10","lastMessage","unreadCount","_component_el_badge","value","_createCommentVNode"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\user\\Messages.vue"],"sourcesContent":["<template>\r\n  <div class=\"messages-container\">\r\n    <h1>我的私信</h1>\r\n    <el-card shadow=\"never\">\r\n      <div v-if=\"loading\" class=\"loading\">\r\n        <el-icon class=\"is-loading\"><Loading /></el-icon>\r\n        <span>加载中...</span>\r\n      </div>\r\n      <div v-else-if=\"chatList.length === 0\" class=\"empty-state\">\r\n        暂无私信\r\n      </div>\r\n      <div v-else>\r\n        <el-list>\r\n          <el-list-item\r\n            v-for=\"chat in chatList\"\r\n            :key=\"chat.userId\"\r\n            @click=\"openChat(chat.userId)\"\r\n            class=\"chat-item\"\r\n          >\r\n            <div class=\"chat-avatar\">\r\n              <el-avatar :size=\"40\" :src=\"chat.avatar\">\r\n                {{ chat.username.substring(0, 1).toUpperCase() }}\r\n              </el-avatar>\r\n            </div>\r\n            <div class=\"chat-info\">\r\n              <div class=\"chat-header\">\r\n                <span class=\"username\">{{ chat.nickname || chat.username }}</span>\r\n                <span class=\"time\">{{ formatTime(chat.lastMessageTime) }}</span>\r\n              </div>\r\n              <div class=\"last-message\">\r\n                {{ chat.lastMessage }}\r\n                <el-badge v-if=\"chat.unreadCount > 0\" :value=\"chat.unreadCount\" class=\"unread-badge\" />\r\n              </div>\r\n            </div>\r\n          </el-list-item>\r\n        </el-list>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport { ElIcon, ElList, ElListItem, ElAvatar, ElBadge, ElCard } from 'element-plus';\r\nimport { Loading } from '@element-plus/icons-vue';\r\nimport { getChatList } from '@/api/messages';\r\n\r\nexport default {\r\n  name: 'UserMessages',\r\n  components: {\r\n    ElIcon,\r\n    ElList,\r\n    ElListItem,\r\n    ElAvatar,\r\n    ElBadge,\r\n    ElCard,\r\n    Loading\r\n  },\r\n  setup() {\r\n    const loading = ref(true);\r\n    const chatList = ref([]);\r\n    \r\n    const loadChatList = async () => {\r\n      loading.value = true;\r\n      try {\r\n        const response = await getChatList();\r\n        if (response && response.data) {\r\n          chatList.value = response.data;\r\n        }\r\n      } catch (error) {\r\n        console.error('获取私信列表失败:', error);\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    const openChat = (userId) => {\r\n      // 在父页面打开聊天窗口\r\n      window.chatManager?.openChat(userId);\r\n    };\r\n    \r\n    const formatTime = (timestamp) => {\r\n      if (!timestamp) return '';\r\n      \r\n      const date = new Date(timestamp);\r\n      const now = new Date();\r\n      const diff = now - date;\r\n      \r\n      // 小于1分钟\r\n      if (diff < 60000) {\r\n        return '刚刚';\r\n      }\r\n      // 小于1小时\r\n      else if (diff < 3600000) {\r\n        return `${Math.floor(diff / 60000)}分钟前`;\r\n      }\r\n      // 小于24小时\r\n      else if (diff < 86400000) {\r\n        return `${Math.floor(diff / 3600000)}小时前`;\r\n      }\r\n      // 小于7天\r\n      else if (diff < 604800000) {\r\n        return `${Math.floor(diff / 86400000)}天前`;\r\n      }\r\n      // 今年内\r\n      else if (date.getFullYear() === now.getFullYear()) {\r\n        return `${date.getMonth() + 1}月${date.getDate()}日`;\r\n      }\r\n      // 超过一年\r\n      else {\r\n        return `${date.getFullYear()}年${date.getMonth() + 1}月${date.getDate()}日`;\r\n      }\r\n    };\r\n    \r\n    onMounted(() => {\r\n      loadChatList();\r\n    });\r\n    \r\n    return {\r\n      loading,\r\n      chatList,\r\n      openChat,\r\n      formatTime\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.messages-container {\r\n  padding: 20px;\r\n}\r\n\r\nh1 {\r\n  margin-bottom: 20px;\r\n  font-size: 24px;\r\n  color: #303133;\r\n}\r\n\r\n.loading {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100px;\r\n}\r\n\r\n.loading span {\r\n  margin-left: 10px;\r\n}\r\n\r\n.empty-state {\r\n  text-align: center;\r\n  color: #909399;\r\n  padding: 40px 0;\r\n}\r\n\r\n.chat-item {\r\n  cursor: pointer;\r\n  padding: 15px;\r\n  border-bottom: 1px solid #EBEEF5;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.chat-item:hover {\r\n  background-color: #F5F7FA;\r\n}\r\n\r\n.chat-avatar {\r\n  margin-right: 15px;\r\n}\r\n\r\n.chat-info {\r\n  flex: 1;\r\n  overflow: hidden;\r\n}\r\n\r\n.chat-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.username {\r\n  font-weight: bold;\r\n  color: #303133;\r\n}\r\n\r\n.time {\r\n  color: #909399;\r\n  font-size: 12px;\r\n}\r\n\r\n.last-message {\r\n  color: #606266;\r\n  font-size: 13px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.unread-badge {\r\n  margin-left: auto;\r\n}\r\n</style> "],"mappings":";;EACO,SAAM;AAAoB;;EADjCA,GAAA;EAI0B,SAAM;;;EAJhCA,GAAA;EAQ6C,SAAM;;;EARnDA,GAAA;AAAA;;EAmBiB,SAAM;AAAa;;EAKnB,SAAM;AAAW;;EACf,SAAM;AAAa;;EAChB,SAAM;AAAU;;EAChB,SAAM;AAAM;;EAEf,SAAM;AAAc;;;;;;;;;uBA5BrCC,mBAAA,CAqCM,OArCNC,UAqCM,G,0BApCJC,mBAAA,CAAa,YAAT,MAAI,sBACRC,YAAA,CAkCUC,kBAAA;IAlCDC,MAAM,EAAC;EAAO;IAH3B,WAAAC,QAAA,CAEwD;MAAA,OAEzB,CAAdC,MAAA,CAAAC,OAAO,I,cAAlBR,mBAAA,CAGM,OAHNS,UAGM,GAFJN,YAAA,CAAiDO,kBAAA;QAAxC,SAAM;MAAY;QALnC,WAAAJ,QAAA,CAKoC;UAAA,OAAW,CAAXH,YAAA,CAAWQ,kBAAA,E;;QAL/CC,CAAA;oCAMQV,mBAAA,CAAmB,cAAb,QAAM,qB,KAEEK,MAAA,CAAAM,QAAQ,CAACC,MAAM,U,cAA/Bd,mBAAA,CAEM,OAFNe,UAEM,EAFqD,QAE3D,M,cACAf,mBAAA,CAyBM,OApCZgB,UAAA,GAYQb,YAAA,CAuBUc,kBAAA;QAnClB,WAAAX,QAAA,CAcY;UAAA,OAAwB,E,kBAD1BN,mBAAA,CAqBekB,SAAA,QAlCzBC,WAAA,CAc2BZ,MAAA,CAAAM,QAAQ,EAdnC,UAcmBO,IAAI;iCADbC,YAAA,CAqBeC,uBAAA;cAnBZvB,GAAG,EAAEqB,IAAI,CAACG,MAAM;cAChBC,OAAK,WAALA,OAAKA,CAAAC,MAAA;gBAAA,OAAElB,MAAA,CAAAmB,QAAQ,CAACN,IAAI,CAACG,MAAM;cAAA;cAC5B,SAAM;;cAjBlB,WAAAjB,QAAA,CAmBY;gBAAA,OAIM,CAJNJ,mBAAA,CAIM,OAJNyB,UAIM,GAHJxB,YAAA,CAEYyB,oBAAA;kBAFAC,IAAI,EAAE,EAAE;kBAAGC,GAAG,EAAEV,IAAI,CAACW;;kBApB/C,WAAAzB,QAAA,CAqBgB;oBAAA,OAAiD,CArBjE0B,gBAAA,CAAAC,gBAAA,CAqBmBb,IAAI,CAACc,QAAQ,CAACC,SAAS,OAAOC,WAAW,mB;;kBArB5DxB,CAAA;gEAwBYV,mBAAA,CASM,OATNmC,UASM,GARJnC,mBAAA,CAGM,OAHNoC,UAGM,GAFJpC,mBAAA,CAAkE,QAAlEqC,UAAkE,EAAAN,gBAAA,CAAxCb,IAAI,CAACoB,QAAQ,IAAIpB,IAAI,CAACc,QAAQ,kBACxDhC,mBAAA,CAAgE,QAAhEuC,UAAgE,EAAAR,gBAAA,CAA1C1B,MAAA,CAAAmC,UAAU,CAACtB,IAAI,CAACuB,eAAe,kB,GAEvDzC,mBAAA,CAGM,OAHN0C,WAGM,GAhCpBZ,gBAAA,CAAAC,gBAAA,CA8BmBb,IAAI,CAACyB,WAAW,IAAG,GACtB,iBAAgBzB,IAAI,CAAC0B,WAAW,Q,cAAhCzB,YAAA,CAAuF0B,mBAAA;kBA/BvGhD,GAAA;kBA+BuDiD,KAAK,EAAE5B,IAAI,CAAC0B,WAAW;kBAAE,SAAM;sDA/BtFG,mBAAA,e;;cAAArC,CAAA;;;;QAAAA,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}