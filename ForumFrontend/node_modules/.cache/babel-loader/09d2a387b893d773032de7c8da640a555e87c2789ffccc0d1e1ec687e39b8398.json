{"ast":null,"code":"import _toConsumableArray from \"H:/ForumServers/ForumFrontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, renderList as _renderList } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"post-detail-container\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_3 = {\n  key: 1\n};\nvar _hoisted_4 = {\n  \"class\": \"post-header\"\n};\nvar _hoisted_5 = {\n  key: 0,\n  \"class\": \"post-title\"\n};\nvar _hoisted_6 = {\n  \"class\": \"post-title-edit\"\n};\nvar _hoisted_7 = {\n  \"class\": \"post-meta\"\n};\nvar _hoisted_8 = {\n  \"class\": \"post-author\"\n};\nvar _hoisted_9 = {\n  \"class\": \"author-info\"\n};\nvar _hoisted_10 = {\n  \"class\": \"author-name\"\n};\nvar _hoisted_11 = {\n  \"class\": \"post-time\"\n};\nvar _hoisted_12 = {\n  key: 0,\n  \"class\": \"post-content\"\n};\nvar _hoisted_13 = {\n  \"class\": \"post-content-edit\"\n};\nvar _hoisted_14 = {\n  \"class\": \"edit-actions\"\n};\nvar _hoisted_15 = {\n  \"class\": \"post-footer\"\n};\nvar _hoisted_16 = {\n  \"class\": \"post-stats\"\n};\nvar _hoisted_17 = {\n  \"class\": \"post-actions\"\n};\nvar _hoisted_18 = {\n  slot: \"header\",\n  \"class\": \"clearfix\"\n};\nvar _hoisted_19 = {\n  \"class\": \"comment-form\"\n};\nvar _hoisted_20 = {\n  \"class\": \"comment-form-footer\"\n};\nvar _hoisted_21 = {\n  key: 0,\n  \"class\": \"login-tip\"\n};\nvar _hoisted_22 = {\n  key: 0,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_23 = {\n  key: 1,\n  \"class\": \"empty-comments\"\n};\nvar _hoisted_24 = {\n  key: 2,\n  \"class\": \"comments-list\"\n};\nvar _hoisted_25 = {\n  \"class\": \"comment-header\"\n};\nvar _hoisted_26 = {\n  \"class\": \"comment-author\"\n};\nvar _hoisted_27 = {\n  \"class\": \"author-info\"\n};\nvar _hoisted_28 = {\n  \"class\": \"author-name\"\n};\nvar _hoisted_29 = {\n  \"class\": \"comment-time\"\n};\nvar _hoisted_30 = {\n  \"class\": \"comment-actions\"\n};\nvar _hoisted_31 = {\n  \"class\": \"comment-content\"\n};\nvar _hoisted_32 = {\n  key: 0,\n  \"class\": \"reply-form\"\n};\nvar _hoisted_33 = {\n  \"class\": \"reply-form-footer\"\n};\nvar _hoisted_34 = {\n  key: 1,\n  \"class\": \"replies-list\"\n};\nvar _hoisted_35 = {\n  \"class\": \"reply-header\"\n};\nvar _hoisted_36 = {\n  \"class\": \"reply-author\"\n};\nvar _hoisted_37 = {\n  \"class\": \"author-info\"\n};\nvar _hoisted_38 = {\n  \"class\": \"author-name\"\n};\nvar _hoisted_39 = {\n  \"class\": \"reply-time\"\n};\nvar _hoisted_40 = {\n  \"class\": \"reply-actions\"\n};\nvar _hoisted_41 = {\n  \"class\": \"reply-content\"\n};\nvar _hoisted_42 = {\n  key: 3,\n  \"class\": \"pagination-container\"\n};\nvar _hoisted_43 = {\n  \"class\": \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_avatar = _resolveComponent(\"el-avatar\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_dropdown_item = _resolveComponent(\"el-dropdown-item\");\n  var _component_el_dropdown_menu = _resolveComponent(\"el-dropdown-menu\");\n  var _component_el_dropdown = _resolveComponent(\"el-dropdown\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _component_router_link = _resolveComponent(\"router-link\");\n  var _component_el_pagination = _resolveComponent(\"el-pagination\");\n  var _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 帖子详情卡片 \"), _createVNode(_component_el_card, {\n    \"class\": \"post-detail-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      var _$data$post$user, _$data$post$user4, _$data$post$user5, _$data$post$board;\n      return [$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_skeleton, {\n        rows: 10,\n        animated: \"\"\n      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" 非编辑状态下的标题 \"), !$data.isEditing ? (_openBlock(), _createElementBlock(\"h1\", _hoisted_5, [$data.post.is_pinned ? (_openBlock(), _createBlock(_component_el_tag, {\n        key: 0,\n        size: \"medium\",\n        type: \"danger\"\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[9] || (_cache[9] = [_createTextVNode(\"置顶\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [9]\n      })) : _createCommentVNode(\"v-if\", true), $data.post.is_featured ? (_openBlock(), _createBlock(_component_el_tag, {\n        key: 1,\n        size: \"medium\",\n        type: \"success\"\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[10] || (_cache[10] = [_createTextVNode(\"精华\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [10]\n      })) : _createCommentVNode(\"v-if\", true), _createTextVNode(\" \" + _toDisplayString($data.post.title), 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(_Fragment, {\n        key: 1\n      }, [_createCommentVNode(\" 编辑状态下的标题输入框 \"), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_input, {\n        modelValue: $data.editPostForm.title,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return $data.editPostForm.title = $event;\n        }),\n        placeholder: \"请输入帖子标题\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_el_avatar, {\n        size: 40,\n        src: ((_$data$post$user = $data.post.user) === null || _$data$post$user === void 0 ? void 0 : _$data$post$user.avatar_url) || ''\n      }, {\n        \"default\": _withCtx(function () {\n          var _$data$post$user2, _$data$post$user3;\n          return [_createTextVNode(_toDisplayString(((_$data$post$user2 = $data.post.user) === null || _$data$post$user2 === void 0 || (_$data$post$user2 = _$data$post$user2.nickname) === null || _$data$post$user2 === void 0 ? void 0 : _$data$post$user2.charAt(0)) || ((_$data$post$user3 = $data.post.user) === null || _$data$post$user3 === void 0 || (_$data$post$user3 = _$data$post$user3.username) === null || _$data$post$user3 === void 0 ? void 0 : _$data$post$user3.charAt(0)) || 'U'), 1 /* TEXT */)];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"src\"]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, _toDisplayString(((_$data$post$user4 = $data.post.user) === null || _$data$post$user4 === void 0 ? void 0 : _$data$post$user4.nickname) || ((_$data$post$user5 = $data.post.user) === null || _$data$post$user5 === void 0 ? void 0 : _$data$post$user5.username)), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_11, \"发布于 \" + _toDisplayString($options.formatDate($data.post.created_at)), 1 /* TEXT */)])]), _createElementVNode(\"div\", {\n        \"class\": \"post-board\",\n        onClick: _cache[1] || (_cache[1] = function () {\n          return $options.goToBoard && $options.goToBoard.apply($options, arguments);\n        })\n      }, [_cache[11] || (_cache[11] = _createElementVNode(\"i\", {\n        \"class\": \"el-icon-s-grid\"\n      }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, _toDisplayString((_$data$post$board = $data.post.board) === null || _$data$post$board === void 0 ? void 0 : _$data$post$board.name), 1 /* TEXT */)])])]), _createCommentVNode(\" 非编辑状态下的内容 \"), !$data.isEditing ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, _toDisplayString($data.post.content), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n        key: 1\n      }, [_createCommentVNode(\" 编辑状态下的内容输入框 \"), _createElementVNode(\"div\", _hoisted_13, [_createVNode(_component_el_input, {\n        modelValue: $data.editPostForm.content,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n          return $data.editPostForm.content = $event;\n        }),\n        type: \"textarea\",\n        rows: 10,\n        placeholder: \"请输入帖子内容\"\n      }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 编辑状态下的操作按钮 \"), _createElementVNode(\"div\", _hoisted_14, [_createVNode(_component_el_button, {\n        onClick: $options.cancelEdit\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[12] || (_cache[12] = [_createTextVNode(\"取消\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [12]\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.submitEdit,\n        loading: $data.editPostSubmitting\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[13] || (_cache[13] = [_createTextVNode(\"提交\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [13]\n      }, 8 /* PROPS */, [\"onClick\", \"loading\"])])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"span\", null, [_cache[14] || (_cache[14] = _createElementVNode(\"i\", {\n        \"class\": \"el-icon-view\"\n      }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.post.views), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_cache[15] || (_cache[15] = _createElementVNode(\"i\", {\n        \"class\": \"el-icon-star-on\"\n      }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.post.likes_count), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_cache[16] || (_cache[16] = _createElementVNode(\"i\", {\n        \"class\": \"el-icon-chat-dot-round\"\n      }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.post.comments_count), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_17, [_createCommentVNode(\" 帖子作者可见的操作按钮 \"), $options.isPostAuthor ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 0\n      }, [_createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"small\",\n        icon: \"el-icon-edit\",\n        onClick: $options.handleEditPost\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[17] || (_cache[17] = [_createTextVNode(\" 编辑 \")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [17]\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        type: \"danger\",\n        size: \"small\",\n        icon: \"el-icon-delete\",\n        onClick: $options.handleDeletePost\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[18] || (_cache[18] = [_createTextVNode(\" 删除 \")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [18]\n      }, 8 /* PROPS */, [\"onClick\"])], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n        key: 1\n      }, [_createCommentVNode(\" 非作者可见的操作按钮 \"), _createVNode(_component_el_button, {\n        type: $data.isLiked ? 'primary' : 'default',\n        size: \"small\",\n        icon: \"el-icon-star-on\",\n        onClick: $options.handleLike\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createTextVNode(_toDisplayString($data.isLiked ? '已点赞' : '点赞'), 1 /* TEXT */)];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"type\", \"onClick\"]), _createVNode(_component_el_button, {\n        type: $data.isFavorited ? 'warning' : 'default',\n        size: \"small\",\n        icon: \"el-icon-collection-tag\",\n        onClick: $options.handleFavorite\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createTextVNode(_toDisplayString($data.isFavorited ? '已收藏' : '收藏'), 1 /* TEXT */)];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"type\", \"onClick\"])], 64 /* STABLE_FRAGMENT */)), _createCommentVNode(\" 管理员操作下拉菜单 \"), _ctx.isAdmin ? (_openBlock(), _createBlock(_component_el_dropdown, {\n        key: 2,\n        trigger: \"click\",\n        onCommand: $options.handleCommand\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_button, {\n            size: \"small\",\n            icon: \"el-icon-setting\"\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[19] || (_cache[19] = [_createTextVNode(\" 管理 \")]);\n            }),\n            _: 1 /* STABLE */,\n            __: [19]\n          }), _createVNode(_component_el_dropdown_menu, {\n            slot: \"dropdown\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_dropdown_item, {\n                command: \"pin\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString($data.post.is_pinned ? '取消置顶' : '置顶'), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_dropdown_item, {\n                command: \"feature\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString($data.post.is_featured ? '取消加精' : '加精'), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onCommand\"])) : _createCommentVNode(\"v-if\", true)])])]))];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 评论区 \"), _createVNode(_component_el_card, {\n    \"class\": \"comments-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"span\", null, \"评论区 (\" + _toDisplayString($data.post.comments_count || 0) + \")\", 1 /* TEXT */)]), _createCommentVNode(\" 发表评论 \"), _createElementVNode(\"div\", _hoisted_19, [_createVNode(_component_el_input, {\n        modelValue: $data.commentContent,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n          return $data.commentContent = $event;\n        }),\n        type: \"textarea\",\n        rows: 3,\n        placeholder: \"发表你的评论...\",\n        disabled: !$options.isLogin\n      }, null, 8 /* PROPS */, [\"modelValue\", \"disabled\"]), _createElementVNode(\"div\", _hoisted_20, [_createVNode(_component_el_button, {\n        type: \"primary\",\n        disabled: !$options.isLogin || !$data.commentContent.trim(),\n        onClick: $options.submitComment\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[20] || (_cache[20] = [_createTextVNode(\" 发表评论 \")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [20]\n      }, 8 /* PROPS */, [\"disabled\", \"onClick\"]), !$options.isLogin ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [_cache[22] || (_cache[22] = _createTextVNode(\" 请先 \")), _createVNode(_component_router_link, {\n        to: {\n          name: 'Login',\n          query: {\n            redirect: _ctx.$route.fullPath\n          }\n        }\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[21] || (_cache[21] = [_createTextVNode(\"登录\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [21]\n      }, 8 /* PROPS */, [\"to\"]), _cache[23] || (_cache[23] = _createTextVNode(\" 后发表评论 \"))])) : _createCommentVNode(\"v-if\", true)])]), _createCommentVNode(\" 评论列表 \"), $data.commentsLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [_createVNode(_component_el_skeleton, {\n        rows: 5,\n        animated: \"\"\n      })])) : $data.comments.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, _cache[24] || (_cache[24] = [_createElementVNode(\"i\", {\n        \"class\": \"el-icon-chat-dot-round\"\n      }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"暂无评论，快来发表第一条评论吧！\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, function (comment) {\n        var _comment$user, _comment$user4, _comment$user5;\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: comment.id,\n          \"class\": \"comment-item\"\n        }, [_createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"div\", _hoisted_26, [_createVNode(_component_el_avatar, {\n          size: 32,\n          src: ((_comment$user = comment.user) === null || _comment$user === void 0 ? void 0 : _comment$user.avatar_url) || ''\n        }, {\n          \"default\": _withCtx(function () {\n            var _comment$user2, _comment$user3;\n            return [_createTextVNode(_toDisplayString(((_comment$user2 = comment.user) === null || _comment$user2 === void 0 || (_comment$user2 = _comment$user2.nickname) === null || _comment$user2 === void 0 ? void 0 : _comment$user2.charAt(0)) || ((_comment$user3 = comment.user) === null || _comment$user3 === void 0 || (_comment$user3 = _comment$user3.username) === null || _comment$user3 === void 0 ? void 0 : _comment$user3.charAt(0)) || 'U'), 1 /* TEXT */)];\n          }),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"src\"]), _createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"div\", _hoisted_28, _toDisplayString(((_comment$user4 = comment.user) === null || _comment$user4 === void 0 ? void 0 : _comment$user4.nickname) || ((_comment$user5 = comment.user) === null || _comment$user5 === void 0 ? void 0 : _comment$user5.username)), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_29, _toDisplayString($options.formatDate(comment.created_at)), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_30, [_createVNode(_component_el_button, {\n          text: \"\",\n          size: \"small\",\n          onClick: function onClick($event) {\n            return $options.handleReply(comment);\n          }\n        }, {\n          \"default\": _withCtx(function () {\n            return _toConsumableArray(_cache[25] || (_cache[25] = [_createTextVNode(\"回复\")]));\n          }),\n          _: 2 /* DYNAMIC */,\n          __: [25]\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createCommentVNode(\" 删除评论按钮 \"), $options.canManageComment(comment) ? (_openBlock(), _createBlock(_component_el_button, {\n          key: 0,\n          text: \"\",\n          type: \"danger\",\n          size: \"small\",\n          icon: \"el-icon-delete\",\n          onClick: function onClick($event) {\n            return $options.handleDeleteComment(comment);\n          }\n        }, {\n          \"default\": _withCtx(function () {\n            return _toConsumableArray(_cache[26] || (_cache[26] = [_createTextVNode(\"删除\")]));\n          }),\n          _: 2 /* DYNAMIC */,\n          __: [26]\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_31, _toDisplayString(comment.content), 1 /* TEXT */), _createCommentVNode(\" 回复表单 \"), $data.replyingTo === comment.id ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, [_createVNode(_component_el_input, {\n          modelValue: $data.replyContent,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n            return $data.replyContent = $event;\n          }),\n          type: \"textarea\",\n          rows: 2,\n          placeholder: \"回复评论...\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"div\", _hoisted_33, [_createVNode(_component_el_button, {\n          size: \"small\",\n          onClick: $options.cancelReply\n        }, {\n          \"default\": _withCtx(function () {\n            return _toConsumableArray(_cache[27] || (_cache[27] = [_createTextVNode(\"取消\")]));\n          }),\n          _: 1 /* STABLE */,\n          __: [27]\n        }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n          type: \"primary\",\n          size: \"small\",\n          disabled: !$data.replyContent.trim(),\n          onClick: function onClick($event) {\n            return $options.submitReply(comment);\n          }\n        }, {\n          \"default\": _withCtx(function () {\n            return _toConsumableArray(_cache[28] || (_cache[28] = [_createTextVNode(\" 回复 \")]));\n          }),\n          _: 2 /* DYNAMIC */,\n          __: [28]\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"disabled\", \"onClick\"])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 回复列表 \"), comment.replies && comment.replies.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_34, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(comment.replies, function (reply) {\n          var _reply$user, _reply$user4, _reply$user5;\n          return _openBlock(), _createElementBlock(\"div\", {\n            key: reply.id,\n            \"class\": \"reply-item\"\n          }, [_createElementVNode(\"div\", _hoisted_35, [_createElementVNode(\"div\", _hoisted_36, [_createVNode(_component_el_avatar, {\n            size: 24,\n            src: ((_reply$user = reply.user) === null || _reply$user === void 0 ? void 0 : _reply$user.avatar_url) || ''\n          }, {\n            \"default\": _withCtx(function () {\n              var _reply$user2, _reply$user3;\n              return [_createTextVNode(_toDisplayString(((_reply$user2 = reply.user) === null || _reply$user2 === void 0 || (_reply$user2 = _reply$user2.nickname) === null || _reply$user2 === void 0 ? void 0 : _reply$user2.charAt(0)) || ((_reply$user3 = reply.user) === null || _reply$user3 === void 0 || (_reply$user3 = _reply$user3.username) === null || _reply$user3 === void 0 ? void 0 : _reply$user3.charAt(0)) || 'U'), 1 /* TEXT */)];\n            }),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"src\"]), _createElementVNode(\"div\", _hoisted_37, [_createElementVNode(\"div\", _hoisted_38, _toDisplayString(((_reply$user4 = reply.user) === null || _reply$user4 === void 0 ? void 0 : _reply$user4.nickname) || ((_reply$user5 = reply.user) === null || _reply$user5 === void 0 ? void 0 : _reply$user5.username)), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_39, _toDisplayString($options.formatDate(reply.created_at)), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_40, [_createVNode(_component_el_button, {\n            text: \"\",\n            size: \"small\",\n            onClick: function onClick($event) {\n              return $options.handleReply(comment, reply);\n            }\n          }, {\n            \"default\": _withCtx(function () {\n              return _toConsumableArray(_cache[29] || (_cache[29] = [_createTextVNode(\"回复\")]));\n            }),\n            _: 2 /* DYNAMIC */,\n            __: [29]\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createCommentVNode(\" 删除回复按钮 \"), $options.canManageComment(reply) ? (_openBlock(), _createBlock(_component_el_button, {\n            key: 0,\n            text: \"\",\n            type: \"danger\",\n            size: \"small\",\n            icon: \"el-icon-delete\",\n            onClick: function onClick($event) {\n              return $options.handleDeleteComment(reply);\n            }\n          }, {\n            \"default\": _withCtx(function () {\n              return _toConsumableArray(_cache[30] || (_cache[30] = [_createTextVNode(\"删除\")]));\n            }),\n            _: 2 /* DYNAMIC */,\n            __: [30]\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_41, _toDisplayString(reply.content), 1 /* TEXT */)]);\n        }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]);\n      }), 128 /* KEYED_FRAGMENT */))])), _createCommentVNode(\" 评论分页 \"), $data.comments.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_42, [_createVNode(_component_el_pagination, {\n        background: \"\",\n        layout: \"prev, pager, next\",\n        total: $data.commentsTotal,\n        \"page-size\": $data.commentsQuery.limit,\n        \"current-page\": $data.commentsQuery.page,\n        \"onUpdate:currentPage\": _cache[5] || (_cache[5] = function ($event) {\n          return $data.commentsQuery.page = $event;\n        }),\n        onCurrentChange: $options.handleCommentsPageChange\n      }, null, 8 /* PROPS */, [\"total\", \"page-size\", \"current-page\", \"onCurrentChange\"])])) : _createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 编辑评论对话框 \"), _createVNode(_component_el_dialog, {\n    title: \"编辑评论\",\n    visible: $data.editCommentDialogVisible,\n    \"onUpdate:visible\": _cache[8] || (_cache[8] = function ($event) {\n      return $data.editCommentDialogVisible = $event;\n    }),\n    width: \"500px\"\n  }, {\n    footer: _withCtx(function () {\n      return [_createElementVNode(\"span\", _hoisted_43, [_createVNode(_component_el_button, {\n        onClick: _cache[7] || (_cache[7] = function ($event) {\n          return $data.editCommentDialogVisible = false;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[31] || (_cache[31] = [_createTextVNode(\"取 消\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [31]\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.submitEditComment\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[32] || (_cache[32] = [_createTextVNode(\"确 定\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [32]\n      }, 8 /* PROPS */, [\"onClick\"])])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_input, {\n        modelValue: $data.editCommentContent,\n        \"onUpdate:modelValue\": _cache[6] || (_cache[6] = function ($event) {\n          return $data.editCommentContent = $event;\n        }),\n        type: \"textarea\",\n        rows: 4,\n        placeholder: \"请输入评论内容\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\"])]);\n}","map":{"version":3,"names":["key","slot","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_el_card","_withCtx","_$data$post$user","_$data$post$user4","_$data$post$user5","_$data$post$board","$data","loading","_hoisted_2","_component_el_skeleton","rows","animated","_hoisted_3","_createElementVNode","_hoisted_4","isEditing","_hoisted_5","post","is_pinned","_createBlock","_component_el_tag","size","type","_cache","_createTextVNode","_","__","is_featured","_toDisplayString","title","_Fragment","_hoisted_6","_component_el_input","modelValue","editPostForm","$event","placeholder","_hoisted_7","_hoisted_8","_component_el_avatar","src","user","avatar_url","_$data$post$user2","_$data$post$user3","nickname","charAt","username","_hoisted_9","_hoisted_10","_hoisted_11","$options","formatDate","created_at","onClick","goToBoard","apply","arguments","board","name","_hoisted_12","content","_hoisted_13","_hoisted_14","_component_el_button","cancelEdit","submitEdit","editPostSubmitting","_hoisted_15","_hoisted_16","views","likes_count","comments_count","_hoisted_17","isPostAuthor","icon","handleEditPost","handleDeletePost","isLiked","handleLike","isFavorited","handleFavorite","_ctx","isAdmin","_component_el_dropdown","trigger","onCommand","handleCommand","_component_el_dropdown_menu","_component_el_dropdown_item","command","_hoisted_18","_hoisted_19","commentContent","disabled","isLogin","_hoisted_20","trim","submitComment","_hoisted_21","_component_router_link","to","query","redirect","$route","fullPath","commentsLoading","_hoisted_22","comments","length","_hoisted_23","_hoisted_24","_renderList","comment","_comment$user","_comment$user4","_comment$user5","id","_hoisted_25","_hoisted_26","_comment$user2","_comment$user3","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","text","handleReply","_toConsumableArray","canManageComment","handleDeleteComment","_hoisted_31","replyingTo","_hoisted_32","replyContent","_hoisted_33","cancelReply","submitReply","replies","_hoisted_34","reply","_reply$user","_reply$user4","_reply$user5","_hoisted_35","_hoisted_36","_reply$user2","_reply$user3","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_component_el_pagination","background","layout","total","commentsTotal","commentsQuery","limit","page","onCurrentChange","handleCommentsPageChange","_component_el_dialog","visible","editCommentDialogVisible","width","footer","_hoisted_43","submitEditComment","editCommentContent"],"sources":["H:\\ForumServers\\ForumFrontend\\src\\views\\post\\PostDetail.vue"],"sourcesContent":["<template>\n  <div class=\"post-detail-container\">\n    <!-- 帖子详情卡片 -->\n    <el-card class=\"post-detail-card\">\n      <div v-if=\"loading\" class=\"loading-container\">\n        <el-skeleton :rows=\"10\" animated />\n      </div>\n      <div v-else>\n        <div class=\"post-header\">\n          <!-- 非编辑状态下的标题 -->\n          <h1 v-if=\"!isEditing\" class=\"post-title\">\n            <el-tag v-if=\"post.is_pinned\" size=\"medium\" type=\"danger\">置顶</el-tag>\n            <el-tag v-if=\"post.is_featured\" size=\"medium\" type=\"success\">精华</el-tag>\n            {{ post.title }}\n          </h1>\n          <!-- 编辑状态下的标题输入框 -->\n          <div v-else class=\"post-title-edit\">\n            <el-input v-model=\"editPostForm.title\" placeholder=\"请输入帖子标题\"></el-input>\n          </div>\n\n          <div class=\"post-meta\">\n            <div class=\"post-author\">\n              <el-avatar :size=\"40\" :src=\"post.user?.avatar_url || ''\">\n                {{ post.user?.nickname?.charAt(0) || post.user?.username?.charAt(0) || 'U' }}\n              </el-avatar>\n              <div class=\"author-info\">\n                <div class=\"author-name\">{{ post.user?.nickname || post.user?.username }}</div>\n                <div class=\"post-time\">发布于 {{ formatDate(post.created_at) }}</div>\n              </div>\n            </div>\n            <div class=\"post-board\" @click=\"goToBoard\">\n              <i class=\"el-icon-s-grid\"></i>\n              <span>{{ post.board?.name }}</span>\n            </div>\n          </div>\n        </div>\n\n        <!-- 非编辑状态下的内容 -->\n        <div v-if=\"!isEditing\" class=\"post-content\">\n          {{ post.content }}\n        </div>\n\n        <!-- 编辑状态下的内容输入框 -->\n        <div v-else class=\"post-content-edit\">\n          <el-input\n            v-model=\"editPostForm.content\"\n            type=\"textarea\"\n            :rows=\"10\"\n            placeholder=\"请输入帖子内容\"\n          ></el-input>\n\n          <!-- 编辑状态下的操作按钮 -->\n          <div class=\"edit-actions\">\n            <el-button @click=\"cancelEdit\">取消</el-button>\n            <el-button type=\"primary\" @click=\"submitEdit\" :loading=\"editPostSubmitting\">提交</el-button>\n          </div>\n        </div>\n\n        <div class=\"post-footer\">\n          <div class=\"post-stats\">\n            <span><i class=\"el-icon-view\"></i> {{ post.views }}</span>\n            <span><i class=\"el-icon-star-on\"></i> {{ post.likes_count }}</span>\n            <span><i class=\"el-icon-chat-dot-round\"></i> {{ post.comments_count }}</span>\n          </div>\n          <div class=\"post-actions\">\n            <!-- 帖子作者可见的操作按钮 -->\n            <template v-if=\"isPostAuthor\">\n              <el-button\n                type=\"primary\"\n                size=\"small\"\n                icon=\"el-icon-edit\"\n                @click=\"handleEditPost\"\n              >\n                编辑\n              </el-button>\n              <el-button\n                type=\"danger\"\n                size=\"small\"\n                icon=\"el-icon-delete\"\n                @click=\"handleDeletePost\"\n              >\n                删除\n              </el-button>\n            </template>\n\n            <!-- 非作者可见的操作按钮 -->\n            <template v-else>\n              <el-button\n                :type=\"isLiked ? 'primary' : 'default'\"\n                size=\"small\"\n                icon=\"el-icon-star-on\"\n                @click=\"handleLike\"\n              >\n                {{ isLiked ? '已点赞' : '点赞' }}\n              </el-button>\n              <el-button\n                :type=\"isFavorited ? 'warning' : 'default'\"\n                size=\"small\"\n                icon=\"el-icon-collection-tag\"\n                @click=\"handleFavorite\"\n              >\n                {{ isFavorited ? '已收藏' : '收藏' }}\n              </el-button>\n            </template>\n\n            <!-- 管理员操作下拉菜单 -->\n            <el-dropdown v-if=\"isAdmin\" trigger=\"click\" @command=\"handleCommand\">\n              <el-button size=\"small\" icon=\"el-icon-setting\">\n                管理\n              </el-button>\n              <el-dropdown-menu slot=\"dropdown\">\n                <el-dropdown-item command=\"pin\">\n                  {{ post.is_pinned ? '取消置顶' : '置顶' }}\n                </el-dropdown-item>\n                <el-dropdown-item command=\"feature\">\n                  {{ post.is_featured ? '取消加精' : '加精' }}\n                </el-dropdown-item>\n              </el-dropdown-menu>\n            </el-dropdown>\n          </div>\n        </div>\n      </div>\n    </el-card>\n\n    <!-- 评论区 -->\n    <el-card class=\"comments-card\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span>评论区 ({{ post.comments_count || 0 }})</span>\n      </div>\n\n      <!-- 发表评论 -->\n      <div class=\"comment-form\">\n        <el-input\n          v-model=\"commentContent\"\n          type=\"textarea\"\n          :rows=\"3\"\n          placeholder=\"发表你的评论...\"\n          :disabled=\"!isLogin\"\n        ></el-input>\n        <div class=\"comment-form-footer\">\n          <el-button\n            type=\"primary\"\n            :disabled=\"!isLogin || !commentContent.trim()\"\n            @click=\"submitComment\"\n          >\n            发表评论\n          </el-button>\n          <div v-if=\"!isLogin\" class=\"login-tip\">\n            请先 <router-link :to=\"{ name: 'Login', query: { redirect: $route.fullPath } }\">登录</router-link> 后发表评论\n          </div>\n        </div>\n      </div>\n\n      <!-- 评论列表 -->\n      <div v-if=\"commentsLoading\" class=\"loading-container\">\n        <el-skeleton :rows=\"5\" animated />\n      </div>\n      <div v-else-if=\"comments.length === 0\" class=\"empty-comments\">\n        <i class=\"el-icon-chat-dot-round\"></i>\n        <p>暂无评论，快来发表第一条评论吧！</p>\n      </div>\n      <div v-else class=\"comments-list\">\n        <div\n          v-for=\"comment in comments\"\n          :key=\"comment.id\"\n          class=\"comment-item\"\n        >\n          <div class=\"comment-header\">\n            <div class=\"comment-author\">\n              <el-avatar :size=\"32\" :src=\"comment.user?.avatar_url || ''\">\n                {{ comment.user?.nickname?.charAt(0) || comment.user?.username?.charAt(0) || 'U' }}\n              </el-avatar>\n              <div class=\"author-info\">\n                <div class=\"author-name\">{{ comment.user?.nickname || comment.user?.username }}</div>\n                <div class=\"comment-time\">{{ formatDate(comment.created_at) }}</div>\n              </div>\n            </div>\n            <div class=\"comment-actions\">\n              <el-button text size=\"small\" @click=\"handleReply(comment)\">回复</el-button>\n              <!-- 删除评论按钮 -->\n              <el-button\n                v-if=\"canManageComment(comment)\"\n                text\n                type=\"danger\"\n                size=\"small\"\n                icon=\"el-icon-delete\"\n                @click=\"handleDeleteComment(comment)\"\n              >删除</el-button>\n            </div>\n          </div>\n\n          <div class=\"comment-content\">\n            {{ comment.content }}\n          </div>\n\n          <!-- 回复表单 -->\n          <div v-if=\"replyingTo === comment.id\" class=\"reply-form\">\n            <el-input\n              v-model=\"replyContent\"\n              type=\"textarea\"\n              :rows=\"2\"\n              placeholder=\"回复评论...\"\n            ></el-input>\n            <div class=\"reply-form-footer\">\n              <el-button size=\"small\" @click=\"cancelReply\">取消</el-button>\n              <el-button\n                type=\"primary\"\n                size=\"small\"\n                :disabled=\"!replyContent.trim()\"\n                @click=\"submitReply(comment)\"\n              >\n                回复\n              </el-button>\n            </div>\n          </div>\n\n          <!-- 回复列表 -->\n          <div v-if=\"comment.replies && comment.replies.length > 0\" class=\"replies-list\">\n            <div\n              v-for=\"reply in comment.replies\"\n              :key=\"reply.id\"\n              class=\"reply-item\"\n            >\n              <div class=\"reply-header\">\n                <div class=\"reply-author\">\n                  <el-avatar :size=\"24\" :src=\"reply.user?.avatar_url || ''\">\n                    {{ reply.user?.nickname?.charAt(0) || reply.user?.username?.charAt(0) || 'U' }}\n                  </el-avatar>\n                  <div class=\"author-info\">\n                    <div class=\"author-name\">{{ reply.user?.nickname || reply.user?.username }}</div>\n                    <div class=\"reply-time\">{{ formatDate(reply.created_at) }}</div>\n                  </div>\n                </div>\n                <div class=\"reply-actions\">\n                  <el-button text size=\"small\" @click=\"handleReply(comment, reply)\">回复</el-button>\n                  <!-- 删除回复按钮 -->\n                  <el-button\n                    v-if=\"canManageComment(reply)\"\n                    text\n                    type=\"danger\"\n                    size=\"small\"\n                    icon=\"el-icon-delete\"\n                    @click=\"handleDeleteComment(reply)\"\n                  >删除</el-button>\n                </div>\n              </div>\n\n              <div class=\"reply-content\">\n                {{ reply.content }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 评论分页 -->\n      <div v-if=\"comments.length > 0\" class=\"pagination-container\">\n        <el-pagination\n          background\n          layout=\"prev, pager, next\"\n          :total=\"commentsTotal\"\n          :page-size=\"commentsQuery.limit\"\n          v-model:current-page=\"commentsQuery.page\"\n          @current-change=\"handleCommentsPageChange\"\n        >\n        </el-pagination>\n      </div>\n    </el-card>\n\n    <!-- 编辑评论对话框 -->\n    <el-dialog\n      title=\"编辑评论\"\n      v-model:visible=\"editCommentDialogVisible\"\n      width=\"500px\"\n    >\n      <el-input\n        v-model=\"editCommentContent\"\n        type=\"textarea\"\n        :rows=\"4\"\n        placeholder=\"请输入评论内容\"\n      ></el-input>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"editCommentDialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitEditComment\">确 定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n\n\n  </div>\n</template>\n\n<script>\nimport { getPostDetail, likePost, favoritePost, pinPost, featurePost, deletePost, updatePost } from '@/api/post'\nimport { getPostComments, createComment, replyComment, updateComment, deleteComment } from '@/api/comment'\nimport { formatDateTime } from '@/utils/index'\nimport { mapGetters } from 'vuex'\n\n// 格式化日期函数\nconst formatDate = (date) => {\n  return formatDateTime(date)\n}\n\nexport default {\n  name: 'PostDetail',\n  data() {\n    return {\n      loading: false,\n      commentsLoading: false,\n      post: {},\n      isLiked: false,\n      isFavorited: false,\n      comments: [],\n      commentsTotal: 0,\n      commentsQuery: {\n        page: 1,\n        limit: 10\n      },\n      commentContent: '',\n      replyingTo: null,\n      replyContent: '',\n      editCommentDialogVisible: false,\n      editCommentContent: '',\n      currentEditingComment: null,\n      forceRefresh: false, // 用于强制刷新评论列表的内部标志\n\n      // 编辑帖子相关\n      isEditing: false, // 是否处于编辑状态\n      editPostSubmitting: false,\n      editPostForm: {\n        title: '',\n        content: ''\n      },\n      postRules: {\n        title: [\n          { required: true, message: '请输入帖子标题', trigger: 'blur' },\n          { min: 2, max: 100, message: '标题长度在2到100个字符之间', trigger: 'blur' }\n        ],\n        content: [\n          { required: true, message: '请输入帖子内容', trigger: 'blur' },\n          { min: 5, message: '内容至少5个字符', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'isAuthenticated',\n      'isAdmin',\n      'userId'\n    ]),\n    isLogin() {\n      return this.isAuthenticated\n    },\n    isPostAuthor() {\n      return this.isLogin && this.post.user && this.post.user.id === this.userId\n    },\n    canManagePost() {\n      return this.isLogin && (\n        this.isAdmin ||\n        this.isPostAuthor\n      )\n    }\n  },\n  created() {\n    const postId = this.$route.params.id\n    if (postId) {\n      this.fetchPostDetail(postId)\n      this.fetchComments(postId)\n    } else {\n      this.$router.push({ name: 'PostList' })\n    }\n  },\n  methods: {\n    formatDate,\n\n    // 获取帖子详情\n    async fetchPostDetail(id) {\n      this.loading = true\n      try {\n        console.log('开始获取帖子详情, ID:', id)\n        const response = await getPostDetail(id)\n        console.log('帖子详情响应:', response)\n\n        if (response && response.code === 0 && response.data) {\n          console.log('使用code=0格式处理帖子详情数据')\n          this.post = response.data\n          // 检查是否已点赞和收藏\n          this.checkLikeAndFavorite()\n        } else if (response && response.status === 0 && response.data) {\n          console.log('使用status=0格式处理帖子详情数据')\n          this.post = response.data\n          // 检查是否已点赞和收藏\n          this.checkLikeAndFavorite()\n        } else {\n          console.error('获取帖子详情失败:', response ? response.msg : '未知错误')\n          this.$message.error(response?.msg || '获取帖子详情失败')\n\n          // 如果是从发帖页面跳转过来的，可能是因为帖子还未完全保存到数据库\n          // 添加延时重试\n          if (document.referrer.includes('/post/create') || document.referrer.includes('/post/edit')) {\n            console.log('检测到从发帖页面跳转，将在1秒后重试获取帖子详情')\n            setTimeout(() => {\n              this.fetchPostDetail(id)\n            }, 1000)\n          } else {\n            // 如果不是从发帖页面跳转，则返回帖子列表\n            setTimeout(() => {\n              this.$router.push({ name: 'PostList' })\n            }, 1500)\n          }\n        }\n      } catch (error) {\n        console.error('获取帖子详情失败:', error)\n        this.$message.error('获取帖子详情失败，请稍后再试')\n\n        // 添加延时重试\n        if (document.referrer.includes('/post/create') || document.referrer.includes('/post/edit')) {\n          console.log('检测到从发帖页面跳转，将在1秒后重试获取帖子详情')\n          setTimeout(() => {\n            this.fetchPostDetail(id)\n          }, 1000)\n        } else {\n          // 如果不是从发帖页面跳转，则返回帖子列表\n          setTimeout(() => {\n            this.$router.push({ name: 'PostList' })\n          }, 1500)\n        }\n      } finally {\n        this.loading = false\n      }\n    },\n\n    // 检查是否已点赞和收藏\n    checkLikeAndFavorite() {\n      // 这里需要调用后端API检查是否已点赞和收藏\n      // 由于我们没有实现这个API，这里先模拟一下\n      this.isLiked = false\n      this.isFavorited = false\n    },\n\n    // 获取评论列表\n    async fetchComments(postId) {\n      // 如果已经在加载中，则不重复加载\n      if (this.commentsLoading && !this.forceRefresh) {\n        return Promise.resolve()\n      }\n\n      this.commentsLoading = true\n\n      // 返回Promise以便调用者可以使用then/catch\n      return new Promise((resolve, reject) => {\n        getPostComments(postId)\n          .then(response => {\n            if (response.code === 0) {\n              this.comments = response.data.results || []\n              this.commentsTotal = response.data.count || 0\n\n              // 更新帖子评论数，确保与后端同步\n              if (this.post && typeof response.data.count === 'number') {\n                this.post.comments_count = response.data.count\n              }\n\n              resolve(response.data)\n            } else {\n              this.$message.error(response.msg || '获取评论列表失败')\n              reject(new Error(response.msg || '获取评论列表失败'))\n            }\n          })\n          .catch(error => {\n            console.error('获取评论列表失败:', error)\n            this.$message.error('获取评论列表失败')\n            reject(error)\n          })\n          .finally(() => {\n            this.commentsLoading = false\n            this.forceRefresh = false // 重置强制刷新标志\n          })\n      })\n    },\n\n    // 评论分页变化\n    handleCommentsPageChange(page) {\n      this.commentsQuery.page = page\n      this.fetchComments(this.post.id)\n    },\n\n    // 前往板块页面\n    goToBoard() {\n      if (this.post.board) {\n        this.$router.push({ name: 'BoardDetail', params: { id: this.post.board.id } })\n      }\n    },\n\n    // 点赞帖子\n    async handleLike() {\n      if (!this.isLogin) {\n        this.$message.warning('请先登录')\n        this.$router.push({ name: 'Login', query: { redirect: this.$route.fullPath } })\n        return\n      }\n\n      try {\n        const response = await likePost(this.post.id)\n        if (response.code === 0) {\n          this.isLiked = !this.isLiked\n          // 更新点赞数\n          if (this.isLiked) {\n            this.post.likes_count++\n          } else {\n            this.post.likes_count--\n          }\n          this.$message.success(response.msg || (this.isLiked ? '点赞成功' : '取消点赞成功'))\n        } else {\n          this.$message.error(response.msg || '操作失败')\n        }\n      } catch (error) {\n        console.error('点赞操作失败:', error)\n        this.$message.error('点赞操作失败')\n      }\n    },\n\n    // 收藏帖子\n    async handleFavorite() {\n      if (!this.isLogin) {\n        this.$message.warning('请先登录')\n        this.$router.push({ name: 'Login', query: { redirect: this.$route.fullPath } })\n        return\n      }\n\n      try {\n        const response = await favoritePost(this.post.id)\n        if (response.code === 0) {\n          this.isFavorited = !this.isFavorited\n          this.$message.success(response.msg || (this.isFavorited ? '收藏成功' : '取消收藏成功'))\n        } else {\n          this.$message.error(response.msg || '操作失败')\n        }\n      } catch (error) {\n        console.error('收藏操作失败:', error)\n        this.$message.error('收藏操作失败')\n      }\n    },\n\n    // 帖子管理操作\n    async handleCommand(command) {\n      switch (command) {\n        case 'pin':\n          this.handlePinPost()\n          break\n        case 'feature':\n          this.handleFeaturePost()\n          break\n      }\n    },\n\n    // 编辑帖子\n    handleEditPost() {\n      // 初始化编辑表单数据\n      this.editPostForm.title = this.post.title\n      this.editPostForm.content = this.post.content\n      // 进入编辑状态\n      this.isEditing = true\n    },\n\n    // 取消编辑\n    cancelEdit() {\n      // 退出编辑状态\n      this.isEditing = false\n      // 重置表单数据\n      this.editPostForm.title = this.post.title\n      this.editPostForm.content = this.post.content\n    },\n\n    // 提交编辑\n    async submitEdit() {\n      // 表单验证\n      if (!this.editPostForm.title.trim()) {\n        this.$message.warning('标题不能为空')\n        return\n      }\n\n      if (!this.editPostForm.content.trim()) {\n        this.$message.warning('内容不能为空')\n        return\n      }\n\n      this.editPostSubmitting = true\n      try {\n        // 确保发送正确的数据格式\n        const postData = {\n          title: this.editPostForm.title.trim(),\n          content: this.editPostForm.content.trim(),\n          board: this.post.board.id // 需要包含板块ID\n        }\n\n        console.log('提交更新帖子数据:', postData)\n\n        const response = await updatePost(this.post.id, postData)\n\n        if (response && response.code === 0) {\n          // 更新成功\n          this.$message.success('帖子更新成功')\n\n          // 更新当前页面的帖子数据\n          this.post.title = this.editPostForm.title\n          this.post.content = this.editPostForm.content\n          // 更新帖子的更新时间\n          if (response.data && response.data.updated_at) {\n            this.post.updated_at = response.data.updated_at\n          }\n\n          // 强制退出编辑状态\n          console.log('强制退出编辑状态')\n          // 使用直接赋值和延时双重保险确保状态更新\n          this.isEditing = false\n\n          // 如果直接赋值不起作用，使用延时函数再次尝试\n          setTimeout(() => {\n            if (this.isEditing) {\n              console.log('使用setTimeout再次尝试退出编辑状态')\n              this.isEditing = false\n            }\n            console.log('编辑状态最终设置为:', this.isEditing)\n          }, 100)\n        } else {\n          this.$message.error(response?.msg || '更新失败，请稍后重试')\n          // 失败时也退出编辑状态\n          this.isEditing = false\n          setTimeout(() => {\n            if (this.isEditing) {\n              this.isEditing = false\n            }\n          }, 100)\n        }\n      } catch (error) {\n        console.error('更新帖子失败:', error)\n        this.$message.error('更新帖子失败，请检查网络连接')\n\n        // 出错时也退出编辑状态\n        this.isEditing = false\n        setTimeout(() => {\n          if (this.isEditing) {\n            this.isEditing = false\n          }\n        }, 100)\n      } finally {\n        this.editPostSubmitting = false\n      }\n    },\n\n    // 删除帖子\n    async handleDeletePost() {\n      try {\n        // 更详细的确认提示\n        await this.$confirm(\n          '确定要删除这篇帖子吗？删除后将无法恢复，帖子下的所有评论也将被删除。',\n          '删除确认',\n          {\n            confirmButtonText: '确定删除',\n            cancelButtonText: '取消',\n            type: 'warning',\n            distinguishCancelAndClose: true,\n            closeOnClickModal: false\n          }\n        )\n\n        // 显示加载状态\n        const loading = this.$loading({\n          lock: true,\n          text: '正在删除帖子...',\n          spinner: 'el-icon-loading',\n          background: 'rgba(0, 0, 0, 0.7)'\n        })\n\n        try {\n          const response = await deletePost(this.post.id)\n          loading.close() // 关闭加载状态\n\n          if (response.code === 0) {\n            // 不显示任何提示弹窗，直接返回上一级路由\n            console.log('帖子删除成功，正在返回上一级路由...')\n            // 返回上一级路由\n            this.$router.go(-1)\n          } else {\n            this.$message.error(response.msg || '删除失败，请稍后重试')\n          }\n        } catch (err) {\n          loading.close() // 确保加载状态被关闭\n          console.error('删除帖子请求失败:', err)\n          this.$message.error('删除帖子失败，请检查网络连接')\n        }\n      } catch (error) {\n        // 用户取消删除，不做任何处理\n        if (error !== 'cancel') {\n          console.error('删除帖子操作异常:', error)\n          this.$message.error('操作异常，请刷新页面后重试')\n        }\n      }\n    },\n\n    // 置顶/取消置顶帖子\n    async handlePinPost() {\n      try {\n        const response = await pinPost(this.post.id)\n        if (response.code === 0) {\n          this.post.is_pinned = !this.post.is_pinned\n          this.$message.success(response.msg || (this.post.is_pinned ? '置顶成功' : '取消置顶成功'))\n        } else {\n          this.$message.error(response.msg || '操作失败')\n        }\n      } catch (error) {\n        console.error('置顶操作失败:', error)\n        this.$message.error('置顶操作失败')\n      }\n    },\n\n    // 加精/取消加精帖子\n    async handleFeaturePost() {\n      try {\n        const response = await featurePost(this.post.id)\n        if (response.code === 0) {\n          this.post.is_featured = !this.post.is_featured\n          this.$message.success(response.msg || (this.post.is_featured ? '加精成功' : '取消加精成功'))\n        } else {\n          this.$message.error(response.msg || '操作失败')\n        }\n      } catch (error) {\n        console.error('加精操作失败:', error)\n        this.$message.error('加精操作失败')\n      }\n    },\n\n    // 提交评论\n    async submitComment() {\n      if (!this.isLogin) {\n        this.$message.warning('请先登录')\n        this.$router.push({ name: 'Login', query: { redirect: this.$route.fullPath } })\n        return\n      }\n\n      if (!this.commentContent.trim()) {\n        this.$message.warning('评论内容不能为空')\n        return\n      }\n\n      try {\n        console.log('提交评论数据:', {\n          post: this.post.id,\n          content: this.commentContent\n        })\n\n        const response = await createComment({\n          post: this.post.id,\n          content: this.commentContent\n        })\n\n        console.log('评论提交响应:', response)\n\n        if (response && (response.code === 0 || response.status === 0)) {\n          // 不显示成功消息\n          console.log('评论发表成功，不显示成功消息')\n\n          // 清空评论内容\n          this.commentContent = ''\n\n          // 获取新评论数据并直接添加到评论列表\n          if (response.data) {\n            console.log('获取到新评论数据:', response.data)\n\n            // 获取当前用户信息\n            const userInfo = this.$store.getters.userInfo\n            console.log('当前用户信息:', userInfo)\n\n            // 构建评论对象\n            const newComment = {\n              ...response.data,\n              user: userInfo, // 使用当前用户信息\n              replies: [], // 初始化回复列表为空\n              created_at: response.data.created_at || new Date().toISOString() // 优先使用服务器返回的时间\n            };\n\n            console.log('构建的新评论对象:', newComment)\n\n            // 将新评论添加到评论列表的开头\n            this.comments.unshift(newComment);\n            console.log('更新后的评论列表:', this.comments)\n\n            // 更新评论总数\n            this.commentsTotal++;\n\n            // 更新帖子评论数\n            this.post.comments_count = (this.post.comments_count || 0) + 1;\n          } else {\n            // 如果没有返回评论数据，则刷新评论列表\n            console.log('未获取到评论数据，刷新评论列表')\n            this.fetchComments(this.post.id);\n          }\n        } else {\n          console.error('评论发表失败，响应:', response)\n          this.$message.error(response?.msg || '评论发表失败')\n        }\n      } catch (error) {\n        console.error('评论发表失败:', error)\n        this.$message.error('评论发表失败，请检查网络连接')\n      }\n    },\n\n    // 回复评论\n    handleReply(comment, reply = null) {\n      if (!this.isLogin) {\n        this.$message.warning('请先登录')\n        this.$router.push({ name: 'Login', query: { redirect: this.$route.fullPath } })\n        return\n      }\n\n      this.replyingTo = comment.id\n      this.replyContent = reply ? `@${reply.user.nickname || reply.user.username} ` : ''\n    },\n\n    // 取消回复\n    cancelReply() {\n      this.replyingTo = null\n      this.replyContent = ''\n    },\n\n    // 提交回复\n    async submitReply(comment) {\n      if (!this.isLogin) {\n        this.$message.warning('请先登录')\n        this.$router.push({ name: 'Login', query: { redirect: this.$route.fullPath } })\n        return\n      }\n\n      if (!this.replyContent.trim()) {\n        this.$message.warning('回复内容不能为空')\n        return\n      }\n\n      try {\n        console.log('提交回复数据:', {\n          post: this.post.id,\n          parent: comment.id,\n          content: this.replyContent\n        })\n\n        const response = await replyComment(\n          this.post.id,\n          comment.id,\n          this.replyContent\n        )\n\n        console.log('回复提交响应:', response)\n\n        if (response && (response.code === 0 || response.status === 0)) {\n          // 不显示成功消息\n          console.log('回复发表成功，不显示成功消息')\n\n          // 清空回复状态\n          this.replyingTo = null\n          this.replyContent = ''\n\n          // 获取新回复数据并直接添加到回复列表\n          if (response.data) {\n            console.log('获取到新回复数据:', response.data)\n\n            // 获取当前用户信息\n            const userInfo = this.$store.getters.userInfo\n            console.log('当前用户信息:', userInfo)\n\n            // 构建回复对象\n            const newReply = {\n              ...response.data,\n              user: userInfo, // 使用当前用户信息\n              created_at: response.data.created_at || new Date().toISOString() // 优先使用服务器返回的时间\n            };\n\n            console.log('构建的新回复对象:', newReply)\n\n            // 将新回复添加到对应评论的回复列表\n            if (!comment.replies) {\n              comment.replies = [];\n            }\n            comment.replies.push(newReply);\n            console.log('更新后的回复列表:', comment.replies)\n\n            // 更新帖子评论数\n            this.post.comments_count = (this.post.comments_count || 0) + 1;\n          } else {\n            // 如果没有返回回复数据，则刷新评论列表\n            console.log('未获取到回复数据，刷新评论列表')\n            this.fetchComments(this.post.id);\n          }\n        } else {\n          console.error('回复发表失败，响应:', response)\n          this.$message.error(response?.msg || '回复发表失败')\n        }\n      } catch (error) {\n        console.error('回复发表失败:', error)\n        this.$message.error('回复发表失败，请检查网络连接')\n      }\n    },\n\n    // 判断是否可以管理评论\n    canManageComment(comment) {\n      return this.isLogin && (\n        this.isAdmin ||\n        (comment.user && comment.user.id === this.userId)\n      )\n    },\n\n    // 评论操作方法已直接绑定到按钮上，不再需要此方法\n\n    // 编辑评论\n    handleEditComment(comment) {\n      this.currentEditingComment = comment\n      this.editCommentContent = comment.content\n      this.editCommentDialogVisible = true\n    },\n\n    // 提交编辑评论\n    async submitEditComment() {\n      if (!this.editCommentContent.trim()) {\n        this.$message.warning('评论内容不能为空')\n        return\n      }\n\n      try {\n        const response = await updateComment(this.currentEditingComment.id, {\n          content: this.editCommentContent\n        })\n\n        if (response.code === 0) {\n          this.$message.success(response.msg || '评论更新成功')\n          this.editCommentDialogVisible = false\n          // 刷新评论列表\n          this.fetchComments(this.post.id)\n        } else {\n          this.$message.error(response.msg || '评论更新失败')\n        }\n      } catch (error) {\n        console.error('评论更新失败:', error)\n        this.$message.error('评论更新失败')\n      }\n    },\n\n    // 删除评论\n    async handleDeleteComment(comment) {\n      try {\n        // 判断是否有回复，提供更详细的确认信息\n        const hasReplies = comment.replies && comment.replies.length > 0\n        const confirmMessage = hasReplies\n          ? `确定要删除这条评论吗？删除后将同时删除该评论下的 ${comment.replies.length} 条回复，且无法恢复。`\n          : '确定要删除这条评论吗？删除后将无法恢复。'\n\n        await this.$confirm(confirmMessage, '删除确认', {\n          confirmButtonText: '确定删除',\n          cancelButtonText: '取消',\n          type: 'warning',\n          distinguishCancelAndClose: true,\n          closeOnClickModal: false\n        })\n\n        // 显示加载状态\n        const loading = this.$loading({\n          lock: true,\n          text: '正在删除评论...',\n          spinner: 'el-icon-loading',\n          background: 'rgba(0, 0, 0, 0.7)'\n        })\n\n        try {\n          const response = await deleteComment(comment.id)\n          loading.close() // 关闭加载状态\n\n          if (response.code === 0) {\n            // 不显示任何提示弹窗，只在控制台输出日志\n            console.log('评论删除成功，正在刷新页面...')\n\n            // 计算需要减少的评论数\n            const commentsToDecrease = hasReplies ? (1 + comment.replies.length) : 1\n\n            // 更新帖子评论数\n            this.post.comments_count = Math.max(0, this.post.comments_count - commentsToDecrease)\n\n            // 标记为加载中，防止用户重复操作\n            this.commentsLoading = true\n\n            // 直接从前端状态中移除已删除的评论\n            if (comment.parent) {\n              // 如果是回复，从父评论的回复列表中移除\n              const parentComment = this.comments.find(c => c.id === comment.parent)\n              if (parentComment && parentComment.replies) {\n                parentComment.replies = parentComment.replies.filter(r => r.id !== comment.id)\n              }\n            } else {\n              // 如果是顶级评论，从评论列表中移除\n              this.comments = this.comments.filter(c => c.id !== comment.id)\n              // 更新评论总数\n              this.commentsTotal = Math.max(0, this.commentsTotal - commentsToDecrease)\n            }\n\n            // 增加延迟时间，确保后端有足够时间处理删除操作\n            // 并在回调中显示成功消息\n            setTimeout(() => {\n              // 设置强制刷新标志\n              this.forceRefresh = true\n\n              // 强制刷新评论列表，不显示任何提示弹窗\n              this.fetchComments(this.post.id).then(() => {\n                // 刷新成功，不显示任何提示\n                // console.log('评论删除成功，页面已刷新')\n              }).catch(err => {\n                console.error('刷新评论列表失败:', err)\n                // 如果刷新失败，尝试再次刷新，仍然不显示提示\n                setTimeout(() => {\n                  this.forceRefresh = true\n                  this.fetchComments(this.post.id)\n                }, 1000)\n              }).finally(() => {\n                this.commentsLoading = false\n              })\n            }, 800) // 增加延迟时间到800毫秒\n          } else {\n            this.$message.error(response.msg || '删除失败，请稍后重试')\n          }\n        } catch (err) {\n          loading.close() // 确保加载状态被关闭\n          console.error('删除评论请求失败:', err)\n          this.$message.error('删除评论失败，请检查网络连接')\n        }\n      } catch (error) {\n        // 用户取消删除，不做任何处理\n        if (error !== 'cancel') {\n          console.error('删除评论操作异常:', error)\n          this.$message.error('操作异常，请刷新页面后重试')\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.post-detail-container {\n  padding: 20px;\n}\n\n.post-detail-card,\n.comments-card {\n  margin-bottom: 20px;\n}\n\n.loading-container {\n  padding: 20px 0;\n}\n\n.post-header {\n  margin-bottom: 20px;\n}\n\n.post-title {\n  font-size: 24px;\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n}\n\n.post-title .el-tag {\n  margin-right: 10px;\n}\n\n.post-meta {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.post-author {\n  display: flex;\n  align-items: center;\n}\n\n.author-info {\n  margin-left: 10px;\n}\n\n.author-name {\n  font-weight: bold;\n}\n\n.post-time,\n.comment-time,\n.reply-time {\n  font-size: 12px;\n  color: #909399;\n}\n\n.post-board {\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  color: #409EFF;\n}\n\n.post-board i {\n  margin-right: 5px;\n}\n\n.post-content {\n  line-height: 1.6;\n  margin-bottom: 20px;\n  white-space: pre-wrap;\n}\n\n.post-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 15px;\n  border-top: 1px solid #EBEEF5;\n}\n\n.post-stats {\n  display: flex;\n  color: #909399;\n}\n\n.post-stats span {\n  margin-right: 15px;\n  display: flex;\n  align-items: center;\n}\n\n.post-stats span i {\n  margin-right: 5px;\n}\n\n.post-actions {\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.post-actions .el-button {\n  margin-left: 0;\n}\n\n.comment-form {\n  margin-bottom: 20px;\n}\n\n.comment-form-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 10px;\n}\n\n.login-tip {\n  font-size: 14px;\n  color: #909399;\n}\n\n.login-tip a {\n  color: #409EFF;\n  text-decoration: none;\n}\n\n.empty-comments {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 40px 0;\n  color: #909399;\n}\n\n.empty-comments i {\n  font-size: 48px;\n  margin-bottom: 10px;\n}\n\n.comments-list {\n  margin-bottom: 20px;\n}\n\n.comment-item {\n  padding: 15px 0;\n  border-bottom: 1px solid #EBEEF5;\n}\n\n.comment-item:last-child {\n  border-bottom: none;\n}\n\n.comment-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.comment-author {\n  display: flex;\n  align-items: center;\n}\n\n.comment-actions {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.comment-content {\n  line-height: 1.6;\n  margin-bottom: 10px;\n  white-space: pre-wrap;\n}\n\n.reply-form {\n  margin: 10px 0 10px 40px;\n}\n\n.reply-form-footer {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 10px;\n}\n\n.replies-list {\n  margin-left: 40px;\n  margin-top: 10px;\n  padding: 10px;\n  background-color: #F5F7FA;\n  border-radius: 4px;\n}\n\n.reply-item {\n  padding: 10px 0;\n  border-bottom: 1px solid #EBEEF5;\n}\n\n.reply-item:last-child {\n  border-bottom: none;\n}\n\n.reply-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n}\n\n.reply-author {\n  display: flex;\n  align-items: center;\n}\n\n.reply-actions {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.reply-content {\n  line-height: 1.6;\n  white-space: pre-wrap;\n}\n\n.pagination-container {\n  text-align: center;\n  margin-top: 20px;\n}\n\n/* 编辑相关样式 */\n.post-title-edit {\n  margin-bottom: 15px;\n}\n\n.post-content-edit {\n  margin-bottom: 20px;\n}\n\n.edit-actions {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 15px;\n  gap: 10px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}